// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHeartbeat(args: GetHeartbeatArgs, opts?: pulumi.InvokeOptions): Promise<GetHeartbeatResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opsgenie:index/getHeartbeat:getHeartbeat", {
        "alertMessage": args.alertMessage,
        "alertPriority": args.alertPriority,
        "alertTags": args.alertTags,
        "description": args.description,
        "enabled": args.enabled,
        "id": args.id,
        "interval": args.interval,
        "intervalUnit": args.intervalUnit,
        "name": args.name,
        "ownerTeamId": args.ownerTeamId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHeartbeat.
 */
export interface GetHeartbeatArgs {
    alertMessage?: string;
    alertPriority?: string;
    alertTags?: string[];
    description?: string;
    enabled?: boolean;
    id?: string;
    interval?: number;
    intervalUnit?: string;
    name: string;
    ownerTeamId?: string;
}

/**
 * A collection of values returned by getHeartbeat.
 */
export interface GetHeartbeatResult {
    readonly alertMessage?: string;
    readonly alertPriority?: string;
    readonly alertTags?: string[];
    readonly description?: string;
    readonly enabled?: boolean;
    readonly id: string;
    readonly interval?: number;
    readonly intervalUnit?: string;
    readonly name: string;
    readonly ownerTeamId?: string;
}
export function getHeartbeatOutput(args: GetHeartbeatOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHeartbeatResult> {
    return pulumi.output(args).apply((a: any) => getHeartbeat(a, opts))
}

/**
 * A collection of arguments for invoking getHeartbeat.
 */
export interface GetHeartbeatOutputArgs {
    alertMessage?: pulumi.Input<string>;
    alertPriority?: pulumi.Input<string>;
    alertTags?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    intervalUnit?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    ownerTeamId?: pulumi.Input<string>;
}
