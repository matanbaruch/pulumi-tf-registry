// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessPackageAssignmentPolicyApprovalSettings {
    /**
     * Whether an approval is required
     */
    approvalRequired?: pulumi.Input<boolean>;
    /**
     * Whether an approval is required to grant extension. Same approval settings used to approve initial access will apply
     */
    approvalRequiredForExtension?: pulumi.Input<boolean>;
    /**
     * The process to obtain an approval
     */
    approvalStages?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyApprovalSettingsApprovalStage>[]>;
    /**
     * Whether requestor are required to provide a justification to request an access package. Justification is visible to other approvers and the requestor
     */
    requestorJustificationRequired?: pulumi.Input<boolean>;
}

export interface AccessPackageAssignmentPolicyApprovalSettingsApprovalStage {
    /**
     * If no action taken, forward to alternate approvers?
     */
    alternativeApprovalEnabled?: pulumi.Input<boolean>;
    /**
     * If escalation is enabled and the primary approvers do not respond before the escalation time, the escalationApprovers are the users who will be asked to approve requests. This can be a collection of singleUser, groupMembers, requestorManager, internalSponsors and externalSponsors. When creating or updating a policy, if there are no escalation approvers, or escalation approvers are not required for the stage, the value of this property should be an empty collection
     */
    alternativeApprovers?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyApprovalSettingsApprovalStageAlternativeApprover>[]>;
    /**
     * Decision must be made in how many days? If a request is not approved within this time period after it is made, it will be automatically rejected
     */
    approvalTimeoutInDays: pulumi.Input<number>;
    /**
     * Whether an approver must provide a justification for their decision. Justification is visible to other approvers and the requestor
     */
    approverJustificationRequired?: pulumi.Input<boolean>;
    /**
     * Forward to alternate approver(s) after how many days?
     */
    enableAlternativeApprovalInDays?: pulumi.Input<number>;
    /**
     * The users who will be asked to approve requests. A collection of singleUser, groupMembers, requestorManager, internalSponsors and externalSponsors. When creating or updating a policy, include at least one userSet in this collection
     */
    primaryApprovers?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApprover>[]>;
}

export interface AccessPackageAssignmentPolicyApprovalSettingsApprovalStageAlternativeApprover {
    /**
     * For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     */
    backup?: pulumi.Input<boolean>;
    /**
     * The object ID of the subject
     */
    objectId?: pulumi.Input<string>;
    /**
     * Type of users
     */
    subjectType: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyApprovalSettingsApprovalStagePrimaryApprover {
    /**
     * For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     */
    backup?: pulumi.Input<boolean>;
    /**
     * The object ID of the subject
     */
    objectId?: pulumi.Input<string>;
    /**
     * Type of users
     */
    subjectType: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyAssignmentReviewSettings {
    /**
     * Whether to show Show reviewer decision helpers. If enabled, system recommendations based on users' access information will be shown to the reviewers. The reviewer will be recommended to approve the review if the user has signed-in at least once during the last 30 days. The reviewer will be recommended to deny the review if the user has not signed-in during the last 30 days
     */
    accessRecommendationEnabled?: pulumi.Input<boolean>;
    /**
     * What actions the system takes if reviewers don't respond in time
     */
    accessReviewTimeoutBehavior?: pulumi.Input<string>;
    /**
     * Whether a reviewer need provide a justification for their decision. Justification is visible to other reviewers and the requestor
     */
    approverJustificationRequired?: pulumi.Input<boolean>;
    /**
     * How many days each occurrence of the access review series will run
     */
    durationInDays?: pulumi.Input<number>;
    /**
     * Whether to enable assignment review
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This will determine how often the access review campaign runs
     */
    reviewFrequency?: pulumi.Input<string>;
    /**
     * Self review or specific reviewers
     */
    reviewType?: pulumi.Input<string>;
    /**
     * If the reviewerType is Reviewers, this collection specifies the users who will be reviewers, either by ID or as members of a group, using a collection of singleUser and groupMembers
     */
    reviewers?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyAssignmentReviewSettingsReviewer>[]>;
    /**
     * This is the date the access review campaign will start on, formatted as an RFC3339 date string in UTC(e.g. 2018-01-01T01:02:03Z), default is now. Once an access review has been created, you cannot update its start date
     */
    startingOn?: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyAssignmentReviewSettingsReviewer {
    /**
     * For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     */
    backup?: pulumi.Input<boolean>;
    /**
     * The object ID of the subject
     */
    objectId?: pulumi.Input<string>;
    /**
     * Type of users
     */
    subjectType: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyQuestion {
    /**
     * Configuration of a choice to the question
     */
    choices?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyQuestionChoice>[]>;
    /**
     * Whether this question is required
     */
    required?: pulumi.Input<boolean>;
    /**
     * The sequence number of this question
     */
    sequence?: pulumi.Input<number>;
    /**
     * The content of this question
     */
    text: pulumi.Input<inputs.AccessPackageAssignmentPolicyQuestionText>;
}

export interface AccessPackageAssignmentPolicyQuestionChoice {
    /**
     * The actual value of this choice
     */
    actualValue: pulumi.Input<string>;
    /**
     * The display text of this choice
     */
    displayValue: pulumi.Input<inputs.AccessPackageAssignmentPolicyQuestionChoiceDisplayValue>;
}

export interface AccessPackageAssignmentPolicyQuestionChoiceDisplayValue {
    /**
     * The default text of this question
     */
    defaultText: pulumi.Input<string>;
    /**
     * The localized text of this question
     */
    localizedTexts?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyQuestionChoiceDisplayValueLocalizedText>[]>;
}

export interface AccessPackageAssignmentPolicyQuestionChoiceDisplayValueLocalizedText {
    /**
     * The localized content of this question
     */
    content: pulumi.Input<string>;
    /**
     * The language code of this question content
     */
    languageCode: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyQuestionText {
    /**
     * The default text of this question
     */
    defaultText: pulumi.Input<string>;
    /**
     * The localized text of this question
     */
    localizedTexts?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyQuestionTextLocalizedText>[]>;
}

export interface AccessPackageAssignmentPolicyQuestionTextLocalizedText {
    /**
     * The localized content of this question
     */
    content: pulumi.Input<string>;
    /**
     * The language code of this question content
     */
    languageCode: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyRequestorSettings {
    /**
     * The users who are allowed to request on this policy, which can be singleUser, groupMembers, and connectedOrganizationMembers
     */
    requestors?: pulumi.Input<pulumi.Input<inputs.AccessPackageAssignmentPolicyRequestorSettingsRequestor>[]>;
    /**
     * Whether to accept requests now, when disabled, no new requests can be made using this policy
     */
    requestsAccepted?: pulumi.Input<boolean>;
    /**
     * Specify the scopes of the requestors
     */
    scopeType?: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyRequestorSettingsRequestor {
    /**
     * For a user in an approval stage, this property indicates whether the user is a backup fallback approver
     */
    backup?: pulumi.Input<boolean>;
    /**
     * The object ID of the subject
     */
    objectId?: pulumi.Input<string>;
    /**
     * Type of users
     */
    subjectType: pulumi.Input<string>;
}

export interface AccessPackageAssignmentPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AccessPackageCatalogRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AccessPackageCatalogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AccessPackageResourceCatalogAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AccessPackageResourcePackageAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AccessPackageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AdministrativeUnitMemberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AdministrativeUnitRoleMemberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AdministrativeUnitTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApplicationApi {
    /**
     * Used for bundling consent if you have a solution that contains two parts: a client app and a custom web API app
     */
    knownClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allows an application to use claims mapping without specifying a custom signing key
     */
    mappedClaimsEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `oauth2_permission_scope` blocks to describe delegated permissions exposed by the web API represented by this application
     */
    oauth2PermissionScopes?: pulumi.Input<pulumi.Input<inputs.ApplicationApiOauth2PermissionScope>[]>;
    /**
     * The access token version expected by this resource
     */
    requestedAccessTokenVersion?: pulumi.Input<number>;
}

export interface ApplicationApiAccessTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationApiOauth2PermissionScope {
    /**
     * Delegated permission description that appears in all tenant-wide admin consent experiences, intended to be read by an administrator granting the permission on behalf of all users
     */
    adminConsentDescription?: pulumi.Input<string>;
    /**
     * Display name for the delegated permission, intended to be read by an administrator granting the permission on behalf of all users
     */
    adminConsentDisplayName?: pulumi.Input<string>;
    /**
     * Determines if the permission scope is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The unique identifier of the delegated permission
     */
    id: pulumi.Input<string>;
    /**
     * Whether this delegated permission should be considered safe for non-admin users to consent to on behalf of themselves, or whether an administrator should be required for consent to the permissions
     */
    type?: pulumi.Input<string>;
    /**
     * Delegated permission description that appears in the end user consent experience, intended to be read by a user consenting on their own behalf
     */
    userConsentDescription?: pulumi.Input<string>;
    /**
     * Display name for the delegated permission that appears in the end user consent experience
     */
    userConsentDisplayName?: pulumi.Input<string>;
    /**
     * The value that is used for the `scp` claim in OAuth 2.0 access tokens
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationAppRole {
    /**
     * Specifies whether this app role definition can be assigned to users and groups by setting to `User`, or to other applications (that are accessing this application in a standalone scenario) by setting to `Application`, or to both
     */
    allowedMemberTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the app role that appears when the role is being assigned and, if the role functions as an application permissions, during the consent experiences
     */
    description: pulumi.Input<string>;
    /**
     * Display name for the app role that appears during app role assignment and in consent experiences
     */
    displayName: pulumi.Input<string>;
    /**
     * Determines if the app role is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The unique identifier of the app role
     */
    id: pulumi.Input<string>;
    /**
     * The value that is used for the `roles` claim in ID tokens and OAuth 2.0 access tokens that are authenticating an assigned service or user principal
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationAppRoleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationFallbackPublicClientTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApplicationFeatureTag {
    /**
     * Whether this application represents a custom SAML application for linked service principals
     */
    customSingleSignOn?: pulumi.Input<boolean>;
    /**
     * Whether this application represents an Enterprise Application for linked service principals
     */
    enterprise?: pulumi.Input<boolean>;
    /**
     * Whether this application represents a gallery application for linked service principals
     */
    gallery?: pulumi.Input<boolean>;
    /**
     * Whether this application is invisible to users in My Apps and Office 365 Launcher
     */
    hide?: pulumi.Input<boolean>;
}

export interface ApplicationFederatedIdentityCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationFromTemplateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationIdentifierUriTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApplicationKnownClientsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationOptionalClaims {
    accessTokens?: pulumi.Input<pulumi.Input<inputs.ApplicationOptionalClaimsAccessToken>[]>;
    idTokens?: pulumi.Input<pulumi.Input<inputs.ApplicationOptionalClaimsIdToken>[]>;
    saml2Tokens?: pulumi.Input<pulumi.Input<inputs.ApplicationOptionalClaimsSaml2Token>[]>;
}

export interface ApplicationOptionalClaimsAccessToken {
    /**
     * List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim
     */
    additionalProperties?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the claim specified by the client is necessary to ensure a smooth authorization experience
     */
    essential?: pulumi.Input<boolean>;
    /**
     * The name of the optional claim
     */
    name: pulumi.Input<string>;
    /**
     * The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object
     */
    source?: pulumi.Input<string>;
}

export interface ApplicationOptionalClaimsIdToken {
    /**
     * List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim
     */
    additionalProperties?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the claim specified by the client is necessary to ensure a smooth authorization experience
     */
    essential?: pulumi.Input<boolean>;
    /**
     * The name of the optional claim
     */
    name: pulumi.Input<string>;
    /**
     * The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object
     */
    source?: pulumi.Input<string>;
}

export interface ApplicationOptionalClaimsSaml2Token {
    /**
     * List of additional properties of the claim. If a property exists in this list, it modifies the behaviour of the optional claim
     */
    additionalProperties?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the claim specified by the client is necessary to ensure a smooth authorization experience
     */
    essential?: pulumi.Input<boolean>;
    /**
     * The name of the optional claim
     */
    name: pulumi.Input<string>;
    /**
     * The source of the claim. If `source` is absent, the claim is a predefined optional claim. If `source` is `user`, the value of `name` is the extension property from the user object
     */
    source?: pulumi.Input<string>;
}

export interface ApplicationOptionalClaimsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationOwnerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApplicationPassword {
    /**
     * A display name for the password
     */
    displayName: pulumi.Input<string>;
    /**
     * The end date until which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`)
     */
    endDate?: pulumi.Input<string>;
    /**
     * A UUID used to uniquely identify this password credential
     */
    keyId?: pulumi.Input<string>;
    /**
     * The start date from which the password is valid, formatted as an RFC3339 date string (e.g. `2018-01-01T01:02:03Z`). If this isn't specified, the current date is used
     */
    startDate?: pulumi.Input<string>;
    /**
     * The password for this application, which is generated by Azure Active Directory
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationPasswordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationPermissionScopeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationPreAuthorizedTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationPublicClient {
    /**
     * The URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent
     */
    redirectUris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationRedirectUrisTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationRegistrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationRequiredResourceAccess {
    resourceAccesses: pulumi.Input<pulumi.Input<inputs.ApplicationRequiredResourceAccessResourceAccess>[]>;
    resourceAppId: pulumi.Input<string>;
}

export interface ApplicationRequiredResourceAccessResourceAccess {
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApplicationSinglePageApplication {
    /**
     * The URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent
     */
    redirectUris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationWeb {
    /**
     * Home page or landing page of the application
     */
    homepageUrl?: pulumi.Input<string>;
    implicitGrant?: pulumi.Input<inputs.ApplicationWebImplicitGrant>;
    /**
     * The URL that will be used by Microsoft's authorization service to sign out a user using front-channel, back-channel or SAML logout protocols
     */
    logoutUrl?: pulumi.Input<string>;
    /**
     * The URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent
     */
    redirectUris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationWebImplicitGrant {
    /**
     * Whether this web application can request an access token using OAuth 2.0 implicit flow
     */
    accessTokenIssuanceEnabled?: pulumi.Input<boolean>;
    /**
     * Whether this web application can request an ID token using OAuth 2.0 implicit flow
     */
    idTokenIssuanceEnabled?: pulumi.Input<boolean>;
}

export interface AuthenticationStrengthPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ClaimsMappingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ConditionalAccessPolicyConditions {
    applications: pulumi.Input<inputs.ConditionalAccessPolicyConditionsApplications>;
    clientAppTypes: pulumi.Input<pulumi.Input<string>[]>;
    clientApplications?: pulumi.Input<inputs.ConditionalAccessPolicyConditionsClientApplications>;
    devices?: pulumi.Input<inputs.ConditionalAccessPolicyConditionsDevices>;
    locations?: pulumi.Input<inputs.ConditionalAccessPolicyConditionsLocations>;
    platforms?: pulumi.Input<inputs.ConditionalAccessPolicyConditionsPlatforms>;
    servicePrincipalRiskLevels?: pulumi.Input<pulumi.Input<string>[]>;
    signInRiskLevels?: pulumi.Input<pulumi.Input<string>[]>;
    userRiskLevels?: pulumi.Input<pulumi.Input<string>[]>;
    users: pulumi.Input<inputs.ConditionalAccessPolicyConditionsUsers>;
}

export interface ConditionalAccessPolicyConditionsApplications {
    excludedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    includedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    includedUserActions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicyConditionsClientApplications {
    excludedServicePrincipals?: pulumi.Input<pulumi.Input<string>[]>;
    includedServicePrincipals?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicyConditionsDevices {
    filter?: pulumi.Input<inputs.ConditionalAccessPolicyConditionsDevicesFilter>;
}

export interface ConditionalAccessPolicyConditionsDevicesFilter {
    mode: pulumi.Input<string>;
    rule: pulumi.Input<string>;
}

export interface ConditionalAccessPolicyConditionsLocations {
    excludedLocations?: pulumi.Input<pulumi.Input<string>[]>;
    includedLocations: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicyConditionsPlatforms {
    excludedPlatforms?: pulumi.Input<pulumi.Input<string>[]>;
    includedPlatforms: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicyConditionsUsers {
    excludedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    excludedGuestsOrExternalUsers?: pulumi.Input<pulumi.Input<inputs.ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUser>[]>;
    excludedRoles?: pulumi.Input<pulumi.Input<string>[]>;
    excludedUsers?: pulumi.Input<pulumi.Input<string>[]>;
    includedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    includedGuestsOrExternalUsers?: pulumi.Input<pulumi.Input<inputs.ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser>[]>;
    includedRoles?: pulumi.Input<pulumi.Input<string>[]>;
    includedUsers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUser {
    externalTenants?: pulumi.Input<pulumi.Input<inputs.ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant>[]>;
    guestOrExternalUserTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicyConditionsUsersExcludedGuestsOrExternalUserExternalTenant {
    members?: pulumi.Input<pulumi.Input<string>[]>;
    membershipKind: pulumi.Input<string>;
}

export interface ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUser {
    externalTenants?: pulumi.Input<pulumi.Input<inputs.ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant>[]>;
    guestOrExternalUserTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicyConditionsUsersIncludedGuestsOrExternalUserExternalTenant {
    members?: pulumi.Input<pulumi.Input<string>[]>;
    membershipKind: pulumi.Input<string>;
}

export interface ConditionalAccessPolicyGrantControls {
    authenticationStrengthPolicyId?: pulumi.Input<string>;
    builtInControls?: pulumi.Input<pulumi.Input<string>[]>;
    customAuthenticationFactors?: pulumi.Input<pulumi.Input<string>[]>;
    operator: pulumi.Input<string>;
    termsOfUses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConditionalAccessPolicySessionControls {
    applicationEnforcedRestrictionsEnabled?: pulumi.Input<boolean>;
    cloudAppSecurityPolicy?: pulumi.Input<string>;
    disableResilienceDefaults?: pulumi.Input<boolean>;
    persistentBrowserMode?: pulumi.Input<string>;
    signInFrequency?: pulumi.Input<number>;
    signInFrequencyAuthenticationType?: pulumi.Input<string>;
    signInFrequencyInterval?: pulumi.Input<string>;
    signInFrequencyPeriod?: pulumi.Input<string>;
}

export interface ConditionalAccessPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CustomDirectoryRolePermission {
    /**
     * Set of tasks that can be performed on a resource
     */
    allowedResourceActions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CustomDirectoryRoleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DirectoryRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DirectoryRoleEligibilityScheduleRequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DirectoryRoleMemberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DirectoryRoleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface GetAccessPackageCatalogRoleTimeouts {
    read?: string;
}

export interface GetAccessPackageCatalogRoleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAccessPackageCatalogTimeouts {
    read?: string;
}

export interface GetAccessPackageCatalogTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAccessPackageTimeouts {
    read?: string;
}

export interface GetAccessPackageTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAdministrativeUnitTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface GetAdministrativeUnitTimeoutsArgs {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetApplicationPublishedAppIdsTimeouts {
    read?: string;
}

export interface GetApplicationPublishedAppIdsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApplicationTemplateTimeouts {
    read?: string;
}

export interface GetApplicationTemplateTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApplicationTimeouts {
    read?: string;
}

export interface GetApplicationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetClientConfigTimeouts {
    read?: string;
}

export interface GetClientConfigTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDirectoryObjectTimeouts {
    read?: string;
}

export interface GetDirectoryObjectTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDirectoryRoleTemplatesTimeouts {
    read?: string;
}

export interface GetDirectoryRoleTemplatesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDirectoryRolesTimeouts {
    read?: string;
}

export interface GetDirectoryRolesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDomainsTimeouts {
    read?: string;
}

export interface GetDomainsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetGroupRoleManagementPolicyTimeouts {
    read?: string;
}

export interface GetGroupRoleManagementPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetGroupTimeouts {
    read?: string;
}

export interface GetGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetGroupsTimeouts {
    read?: string;
}

export interface GetGroupsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNamedLocationTimeouts {
    read?: string;
}

export interface GetNamedLocationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicePrincipalTimeouts {
    read?: string;
}

export interface GetServicePrincipalTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicePrincipalsTimeouts {
    read?: string;
}

export interface GetServicePrincipalsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetUserTimeouts {
    read?: string;
}

export interface GetUserTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetUsersTimeouts {
    read?: string;
}

export interface GetUsersTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GroupDynamicMembership {
    enabled: pulumi.Input<boolean>;
    /**
     * Rule to determine members for a dynamic group. Required when `group_types` contains 'DynamicMembership'
     */
    rule: pulumi.Input<string>;
}

export interface GroupMemberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyActivationRules {
    /**
     * The approval stages for the activation
     */
    approvalStage?: pulumi.Input<inputs.GroupRoleManagementPolicyActivationRulesApprovalStage>;
    /**
     * The time after which the an activation can be valid for
     */
    maximumDuration?: pulumi.Input<string>;
    /**
     * Whether an approval is required for activation
     */
    requireApproval?: pulumi.Input<boolean>;
    /**
     * Whether a justification is required during activation
     */
    requireJustification?: pulumi.Input<boolean>;
    /**
     * Whether multi-factor authentication is required during activation
     */
    requireMultifactorAuthentication?: pulumi.Input<boolean>;
    /**
     * Whether ticket information is required during activation
     */
    requireTicketInfo?: pulumi.Input<boolean>;
    /**
     * Whether a conditional access context is required during activation
     */
    requiredConditionalAccessAuthenticationContext?: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyActivationRulesApprovalStage {
    /**
     * The IDs of the users or groups who can approve the activation
     */
    primaryApprovers: pulumi.Input<pulumi.Input<inputs.GroupRoleManagementPolicyActivationRulesApprovalStagePrimaryApprover>[]>;
}

export interface GroupRoleManagementPolicyActivationRulesApprovalStagePrimaryApprover {
    /**
     * The ID of the object to act as an approver
     */
    objectId: pulumi.Input<string>;
    /**
     * The type of object acting as an approver
     */
    type?: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyActiveAssignmentRules {
    /**
     * Must the assignment have an expiry date
     */
    expirationRequired?: pulumi.Input<boolean>;
    /**
     * The duration after which assignments expire
     */
    expireAfter?: pulumi.Input<string>;
    /**
     * Whether a justification is required to make an assignment
     */
    requireJustification?: pulumi.Input<boolean>;
    /**
     * Whether multi-factor authentication is required to make an assignment
     */
    requireMultifactorAuthentication?: pulumi.Input<boolean>;
    /**
     * Whether ticket information is required to make an assignment
     */
    requireTicketInfo?: pulumi.Input<boolean>;
}

export interface GroupRoleManagementPolicyEligibleAssignmentRules {
    /**
     * Must the assignment have an expiry date
     */
    expirationRequired?: pulumi.Input<boolean>;
    /**
     * The duration after which assignments expire
     */
    expireAfter?: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRules {
    /**
     * Notifications about active assignments
     */
    activeAssignments?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesActiveAssignments>;
    /**
     * Notifications about activations of eligible assignments
     */
    eligibleActivations?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleActivations>;
    /**
     * Notifications about eligible assignments
     */
    eligibleAssignments?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleAssignments>;
}

export interface GroupRoleManagementPolicyNotificationRulesActiveAssignments {
    /**
     * Admin notification settings
     */
    adminNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotifications>;
    /**
     * Approver notification settings
     */
    approverNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotifications>;
    /**
     * Assignee notification settings
     */
    assigneeNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotifications>;
}

export interface GroupRoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleActivations {
    /**
     * Admin notification settings
     */
    adminNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications>;
    /**
     * Approver notification settings
     */
    approverNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications>;
    /**
     * Assignee notification settings
     */
    assigneeNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleAssignments {
    /**
     * Admin notification settings
     */
    adminNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications>;
    /**
     * Approver notification settings
     */
    approverNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsApproverNotifications>;
    /**
     * Assignee notification settings
     */
    assigneeNotifications?: pulumi.Input<inputs.GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsAssigneeNotifications>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsApproverNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyNotificationRulesEligibleAssignmentsAssigneeNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface GroupRoleManagementPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InvitationMessage {
    /**
     * Email addresses of additional recipients the invitation message should be sent to
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Customized message body you want to send if you don't want to send the default message
     */
    body?: pulumi.Input<string>;
    /**
     * The language you want to send the default message in
     */
    language?: pulumi.Input<string>;
}

export interface InvitationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NamedLocationCountry {
    countriesAndRegions: pulumi.Input<pulumi.Input<string>[]>;
    includeUnknownCountriesAndRegions?: pulumi.Input<boolean>;
}

export interface NamedLocationIp {
    ipRanges: pulumi.Input<pulumi.Input<string>[]>;
    trusted?: pulumi.Input<boolean>;
}

export interface NamedLocationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivilegedAccessGroupAssignmentScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivilegedAccessGroupEligibilityScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicePrincipalAppRole {
    allowedMemberTypes: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ServicePrincipalCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ServicePrincipalClaimsMappingPolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ServicePrincipalDelegatedPermissionGrantTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicePrincipalFeature {
    /**
     * Whether this service principal represents a custom SAML application
     */
    customSingleSignOnApp?: pulumi.Input<boolean>;
    /**
     * Whether this service principal represents an Enterprise Application
     */
    enterpriseApplication?: pulumi.Input<boolean>;
    /**
     * Whether this service principal represents a gallery application
     */
    galleryApplication?: pulumi.Input<boolean>;
    /**
     * Whether this app is visible to users in My Apps and Office 365 Launcher
     */
    visibleToUsers?: pulumi.Input<boolean>;
}

export interface ServicePrincipalFeatureTag {
    /**
     * Whether this service principal represents a custom SAML application
     */
    customSingleSignOn?: pulumi.Input<boolean>;
    /**
     * Whether this service principal represents an Enterprise Application
     */
    enterprise?: pulumi.Input<boolean>;
    /**
     * Whether this service principal represents a gallery application
     */
    gallery?: pulumi.Input<boolean>;
    /**
     * Whether this app is invisible to users in My Apps and Office 365 Launcher
     */
    hide?: pulumi.Input<boolean>;
}

export interface ServicePrincipalOauth2PermissionScope {
    adminConsentDescription: pulumi.Input<string>;
    adminConsentDisplayName: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
    userConsentDescription: pulumi.Input<string>;
    userConsentDisplayName: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ServicePrincipalPasswordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ServicePrincipalSamlSingleSignOn {
    /**
     * The relative URI the service provider would redirect to after completion of the single sign-on flow
     */
    relayState?: pulumi.Input<string>;
}

export interface ServicePrincipalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicePrincipalTokenSigningCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SynchronizationJobProvisionOnDemandParameter {
    /**
     * The identifier of the synchronization rule to be applied. This rule ID is defined in the schema for a given synchronization job or template.
     */
    ruleId: pulumi.Input<string>;
    /**
     * The identifiers of one or more objects to which a synchronizationJob is to be applied.
     */
    subjects: pulumi.Input<pulumi.Input<inputs.SynchronizationJobProvisionOnDemandParameterSubject>[]>;
}

export interface SynchronizationJobProvisionOnDemandParameterSubject {
    /**
     * The identifier of an object to which a synchronization job is to be applied. Can be one of the following: (1) An onPremisesDistinguishedName for synchronization from Active Directory to Azure AD. (2) The user ID for synchronization from Azure AD to a third-party. (3) The Worker ID of the Workday worker for synchronization from Workday to either Active Directory or Azure AD.
     */
    objectId: pulumi.Input<string>;
    /**
     * The type of the object to which a synchronization job is to be applied. Can be one of the following: `user` for synchronizing between Active Directory and Azure AD, `User` for synchronizing a user between Azure AD and a third-party application, `Worker` for synchronization a user between Workday and either Active Directory or Azure AD, `Group` for synchronizing a group between Azure AD and a third-party application.
     */
    objectTypeName: pulumi.Input<string>;
}

export interface SynchronizationJobProvisionOnDemandTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SynchronizationJobSchedule {
    expiration: pulumi.Input<string>;
    interval: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface SynchronizationJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynchronizationSecretCredential {
    /**
     * Name for this key-value pair.
     */
    key: pulumi.Input<string>;
    /**
     * Value for this key-value pair.
     */
    value: pulumi.Input<string>;
}

export interface SynchronizationSecretTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface UserFlowAttributeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface UserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}
