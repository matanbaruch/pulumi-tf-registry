// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDirectoryRoles(args?: GetDirectoryRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetDirectoryRolesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuread:index/getDirectoryRoles:getDirectoryRoles", {
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDirectoryRoles.
 */
export interface GetDirectoryRolesArgs {
    id?: string;
    timeouts?: inputs.GetDirectoryRolesTimeouts;
}

/**
 * A collection of values returned by getDirectoryRoles.
 */
export interface GetDirectoryRolesResult {
    readonly id: string;
    readonly objectIds: string[];
    readonly roles: outputs.GetDirectoryRolesRole[];
    readonly templateIds: string[];
    readonly timeouts?: outputs.GetDirectoryRolesTimeouts;
}
export function getDirectoryRolesOutput(args?: GetDirectoryRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDirectoryRolesResult> {
    return pulumi.output(args).apply((a: any) => getDirectoryRoles(a, opts))
}

/**
 * A collection of arguments for invoking getDirectoryRoles.
 */
export interface GetDirectoryRolesOutputArgs {
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetDirectoryRolesTimeoutsArgs>;
}
