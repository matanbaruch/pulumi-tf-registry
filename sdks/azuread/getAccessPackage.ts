// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccessPackage(args?: GetAccessPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPackageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuread:index/getAccessPackage:getAccessPackage", {
        "catalogId": args.catalogId,
        "displayName": args.displayName,
        "id": args.id,
        "objectId": args.objectId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessPackage.
 */
export interface GetAccessPackageArgs {
    catalogId?: string;
    displayName?: string;
    id?: string;
    objectId?: string;
    timeouts?: inputs.GetAccessPackageTimeouts;
}

/**
 * A collection of values returned by getAccessPackage.
 */
export interface GetAccessPackageResult {
    readonly catalogId?: string;
    readonly description: string;
    readonly displayName: string;
    readonly hidden: boolean;
    readonly id: string;
    readonly objectId: string;
    readonly timeouts?: outputs.GetAccessPackageTimeouts;
}
export function getAccessPackageOutput(args?: GetAccessPackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPackageResult> {
    return pulumi.output(args).apply((a: any) => getAccessPackage(a, opts))
}

/**
 * A collection of arguments for invoking getAccessPackage.
 */
export interface GetAccessPackageOutputArgs {
    catalogId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetAccessPackageTimeoutsArgs>;
}
