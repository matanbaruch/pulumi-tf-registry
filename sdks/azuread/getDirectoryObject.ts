// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDirectoryObject(args: GetDirectoryObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetDirectoryObjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuread:index/getDirectoryObject:getDirectoryObject", {
        "id": args.id,
        "objectId": args.objectId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDirectoryObject.
 */
export interface GetDirectoryObjectArgs {
    id?: string;
    objectId: string;
    timeouts?: inputs.GetDirectoryObjectTimeouts;
}

/**
 * A collection of values returned by getDirectoryObject.
 */
export interface GetDirectoryObjectResult {
    readonly id: string;
    readonly objectId: string;
    readonly timeouts?: outputs.GetDirectoryObjectTimeouts;
    readonly type: string;
}
export function getDirectoryObjectOutput(args: GetDirectoryObjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDirectoryObjectResult> {
    return pulumi.output(args).apply((a: any) => getDirectoryObject(a, opts))
}

/**
 * A collection of arguments for invoking getDirectoryObject.
 */
export interface GetDirectoryObjectOutputArgs {
    id?: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetDirectoryObjectTimeoutsArgs>;
}
