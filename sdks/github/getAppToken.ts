// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppToken(args: GetAppTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetAppTokenResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getAppToken:getAppToken", {
        "appId": args.appId,
        "id": args.id,
        "installationId": args.installationId,
        "pemFile": args.pemFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppToken.
 */
export interface GetAppTokenArgs {
    appId: string;
    id?: string;
    installationId: string;
    pemFile: string;
}

/**
 * A collection of values returned by getAppToken.
 */
export interface GetAppTokenResult {
    readonly appId: string;
    readonly id: string;
    readonly installationId: string;
    readonly pemFile: string;
    readonly token: string;
}
export function getAppTokenOutput(args: GetAppTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppTokenResult> {
    return pulumi.output(args).apply((a: any) => getAppToken(a, opts))
}

/**
 * A collection of arguments for invoking getAppToken.
 */
export interface GetAppTokenOutputArgs {
    appId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    installationId: pulumi.Input<string>;
    pemFile: pulumi.Input<string>;
}
