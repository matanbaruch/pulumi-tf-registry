// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getActionsSecrets(args?: GetActionsSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetActionsSecretsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getActionsSecrets:getActionsSecrets", {
        "fullName": args.fullName,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getActionsSecrets.
 */
export interface GetActionsSecretsArgs {
    fullName?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getActionsSecrets.
 */
export interface GetActionsSecretsResult {
    readonly fullName: string;
    readonly id: string;
    readonly name: string;
    readonly secrets: outputs.GetActionsSecretsSecret[];
}
export function getActionsSecretsOutput(args?: GetActionsSecretsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActionsSecretsResult> {
    return pulumi.output(args).apply((a: any) => getActionsSecrets(a, opts))
}

/**
 * A collection of arguments for invoking getActionsSecrets.
 */
export interface GetActionsSecretsOutputArgs {
    fullName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
