// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCollaborators(args: GetCollaboratorsArgs, opts?: pulumi.InvokeOptions): Promise<GetCollaboratorsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getCollaborators:getCollaborators", {
        "affiliation": args.affiliation,
        "id": args.id,
        "owner": args.owner,
        "repository": args.repository,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCollaborators.
 */
export interface GetCollaboratorsArgs {
    affiliation?: string;
    id?: string;
    owner: string;
    repository: string;
}

/**
 * A collection of values returned by getCollaborators.
 */
export interface GetCollaboratorsResult {
    readonly affiliation?: string;
    readonly collaborators: outputs.GetCollaboratorsCollaborator[];
    readonly id: string;
    readonly owner: string;
    readonly repository: string;
}
export function getCollaboratorsOutput(args: GetCollaboratorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCollaboratorsResult> {
    return pulumi.output(args).apply((a: any) => getCollaborators(a, opts))
}

/**
 * A collection of arguments for invoking getCollaborators.
 */
export interface GetCollaboratorsOutputArgs {
    affiliation?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    owner: pulumi.Input<string>;
    repository: pulumi.Input<string>;
}
