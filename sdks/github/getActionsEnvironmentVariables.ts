// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getActionsEnvironmentVariables(args: GetActionsEnvironmentVariablesArgs, opts?: pulumi.InvokeOptions): Promise<GetActionsEnvironmentVariablesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getActionsEnvironmentVariables:getActionsEnvironmentVariables", {
        "environment": args.environment,
        "fullName": args.fullName,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getActionsEnvironmentVariables.
 */
export interface GetActionsEnvironmentVariablesArgs {
    environment: string;
    fullName?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getActionsEnvironmentVariables.
 */
export interface GetActionsEnvironmentVariablesResult {
    readonly environment: string;
    readonly fullName: string;
    readonly id: string;
    readonly name: string;
    readonly variables: outputs.GetActionsEnvironmentVariablesVariable[];
}
export function getActionsEnvironmentVariablesOutput(args: GetActionsEnvironmentVariablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActionsEnvironmentVariablesResult> {
    return pulumi.output(args).apply((a: any) => getActionsEnvironmentVariables(a, opts))
}

/**
 * A collection of arguments for invoking getActionsEnvironmentVariables.
 */
export interface GetActionsEnvironmentVariablesOutputArgs {
    environment: pulumi.Input<string>;
    fullName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
