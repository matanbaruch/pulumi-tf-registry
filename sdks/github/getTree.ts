// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTree(args: GetTreeArgs, opts?: pulumi.InvokeOptions): Promise<GetTreeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getTree:getTree", {
        "id": args.id,
        "recursive": args.recursive,
        "repository": args.repository,
        "treeSha": args.treeSha,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTree.
 */
export interface GetTreeArgs {
    id?: string;
    recursive?: boolean;
    repository: string;
    treeSha: string;
}

/**
 * A collection of values returned by getTree.
 */
export interface GetTreeResult {
    readonly entries: outputs.GetTreeEntry[];
    readonly id: string;
    readonly recursive?: boolean;
    readonly repository: string;
    readonly treeSha: string;
}
export function getTreeOutput(args: GetTreeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTreeResult> {
    return pulumi.output(args).apply((a: any) => getTree(a, opts))
}

/**
 * A collection of arguments for invoking getTree.
 */
export interface GetTreeOutputArgs {
    id?: pulumi.Input<string>;
    recursive?: pulumi.Input<boolean>;
    repository: pulumi.Input<string>;
    treeSha: pulumi.Input<string>;
}
