// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRef(args: GetRefArgs, opts?: pulumi.InvokeOptions): Promise<GetRefResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getRef:getRef", {
        "id": args.id,
        "owner": args.owner,
        "ref": args.ref,
        "repository": args.repository,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRef.
 */
export interface GetRefArgs {
    id?: string;
    owner?: string;
    ref: string;
    repository: string;
}

/**
 * A collection of values returned by getRef.
 */
export interface GetRefResult {
    readonly etag: string;
    readonly id: string;
    readonly owner?: string;
    readonly ref: string;
    readonly repository: string;
    readonly sha: string;
}
export function getRefOutput(args: GetRefOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRefResult> {
    return pulumi.output(args).apply((a: any) => getRef(a, opts))
}

/**
 * A collection of arguments for invoking getRef.
 */
export interface GetRefOutputArgs {
    id?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    ref: pulumi.Input<string>;
    repository: pulumi.Input<string>;
}
