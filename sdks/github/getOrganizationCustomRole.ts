// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationCustomRole(args: GetOrganizationCustomRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationCustomRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getOrganizationCustomRole:getOrganizationCustomRole", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationCustomRole.
 */
export interface GetOrganizationCustomRoleArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getOrganizationCustomRole.
 */
export interface GetOrganizationCustomRoleResult {
    readonly baseRole: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly permissions: string[];
}
export function getOrganizationCustomRoleOutput(args: GetOrganizationCustomRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationCustomRoleResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationCustomRole(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationCustomRole.
 */
export interface GetOrganizationCustomRoleOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
