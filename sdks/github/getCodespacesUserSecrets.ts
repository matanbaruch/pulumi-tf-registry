// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCodespacesUserSecrets(args?: GetCodespacesUserSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetCodespacesUserSecretsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getCodespacesUserSecrets:getCodespacesUserSecrets", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCodespacesUserSecrets.
 */
export interface GetCodespacesUserSecretsArgs {
    id?: string;
}

/**
 * A collection of values returned by getCodespacesUserSecrets.
 */
export interface GetCodespacesUserSecretsResult {
    readonly id: string;
    readonly secrets: outputs.GetCodespacesUserSecretsSecret[];
}
export function getCodespacesUserSecretsOutput(args?: GetCodespacesUserSecretsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCodespacesUserSecretsResult> {
    return pulumi.output(args).apply((a: any) => getCodespacesUserSecrets(a, opts))
}

/**
 * A collection of arguments for invoking getCodespacesUserSecrets.
 */
export interface GetCodespacesUserSecretsOutputArgs {
    id?: pulumi.Input<string>;
}
