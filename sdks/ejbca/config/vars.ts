// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("ejbca");

/**
 * The path to the CA certificate file used to validate the EJBCA server's certificate. Certificates must be in PEM format.
 */
export declare const caCertPath: string | undefined;
Object.defineProperty(exports, "caCertPath", {
    get() {
        return __config.get("caCertPath");
    },
    enumerable: true,
});

/**
 * An object containing configuration on where the provider should read the client certificate/private key from. Required
 * if Client Cert Auth is used.
 */
export declare const certAuth: outputs.config.CertAuth | undefined;
Object.defineProperty(exports, "certAuth", {
    get() {
        return __config.getObject<outputs.config.CertAuth>("certAuth");
    },
    enumerable: true,
});

/**
 * Hostname of the EJBCA instance. Hostname can include the port in the format {hostname}:{port}. If not specified, the
 * environment variable EJBCA_HOSTNAME will be used.
 */
export declare const hostname: string | undefined;
Object.defineProperty(exports, "hostname", {
    get() {
        return __config.get("hostname");
    },
    enumerable: true,
});

/**
 * An object containing configuration for OAuth 2.0 authentication. Required if OAuth 2.0 is used.
 */
export declare const oauth: outputs.config.Oauth | undefined;
Object.defineProperty(exports, "oauth", {
    get() {
        return __config.getObject<outputs.config.Oauth>("oauth");
    },
    enumerable: true,
});

