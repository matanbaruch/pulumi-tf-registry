// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { DiscoveryEngineConfigurationArgs, DiscoveryEngineConfigurationState } from "./discoveryEngineConfiguration";
export type DiscoveryEngineConfiguration = import("./discoveryEngineConfiguration").DiscoveryEngineConfiguration;
export const DiscoveryEngineConfiguration: typeof import("./discoveryEngineConfiguration").DiscoveryEngineConfiguration = null as any;
utilities.lazyLoad(exports, ["DiscoveryEngineConfiguration"], () => require("./discoveryEngineConfiguration"));

export { DiscoveryEngineDiscoveredPolicyArgs, DiscoveryEngineDiscoveredPolicyState } from "./discoveryEngineDiscoveredPolicy";
export type DiscoveryEngineDiscoveredPolicy = import("./discoveryEngineDiscoveredPolicy").DiscoveryEngineDiscoveredPolicy;
export const DiscoveryEngineDiscoveredPolicy: typeof import("./discoveryEngineDiscoveredPolicy").DiscoveryEngineDiscoveredPolicy = null as any;
utilities.lazyLoad(exports, ["DiscoveryEngineDiscoveredPolicy"], () => require("./discoveryEngineDiscoveredPolicy"));

export { DiscoveryEngineEnableDiscoveredPolicyArgs, DiscoveryEngineEnableDiscoveredPolicyState } from "./discoveryEngineEnableDiscoveredPolicy";
export type DiscoveryEngineEnableDiscoveredPolicy = import("./discoveryEngineEnableDiscoveredPolicy").DiscoveryEngineEnableDiscoveredPolicy;
export const DiscoveryEngineEnableDiscoveredPolicy: typeof import("./discoveryEngineEnableDiscoveredPolicy").DiscoveryEngineEnableDiscoveredPolicy = null as any;
utilities.lazyLoad(exports, ["DiscoveryEngineEnableDiscoveredPolicy"], () => require("./discoveryEngineEnableDiscoveredPolicy"));

export { GetDiscoveryEngineConfigurationArgs, GetDiscoveryEngineConfigurationResult, GetDiscoveryEngineConfigurationOutputArgs } from "./getDiscoveryEngineConfiguration";
export const getDiscoveryEngineConfiguration: typeof import("./getDiscoveryEngineConfiguration").getDiscoveryEngineConfiguration = null as any;
export const getDiscoveryEngineConfigurationOutput: typeof import("./getDiscoveryEngineConfiguration").getDiscoveryEngineConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getDiscoveryEngineConfiguration","getDiscoveryEngineConfigurationOutput"], () => require("./getDiscoveryEngineConfiguration"));

export { GetDiscoveryEngineDiscoveredPolicyArgs, GetDiscoveryEngineDiscoveredPolicyResult, GetDiscoveryEngineDiscoveredPolicyOutputArgs } from "./getDiscoveryEngineDiscoveredPolicy";
export const getDiscoveryEngineDiscoveredPolicy: typeof import("./getDiscoveryEngineDiscoveredPolicy").getDiscoveryEngineDiscoveredPolicy = null as any;
export const getDiscoveryEngineDiscoveredPolicyOutput: typeof import("./getDiscoveryEngineDiscoveredPolicy").getDiscoveryEngineDiscoveredPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getDiscoveryEngineDiscoveredPolicy","getDiscoveryEngineDiscoveredPolicyOutput"], () => require("./getDiscoveryEngineDiscoveredPolicy"));

export { GetKubearmorConfigurationArgs, GetKubearmorConfigurationResult, GetKubearmorConfigurationOutputArgs } from "./getKubearmorConfiguration";
export const getKubearmorConfiguration: typeof import("./getKubearmorConfiguration").getKubearmorConfiguration = null as any;
export const getKubearmorConfigurationOutput: typeof import("./getKubearmorConfiguration").getKubearmorConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorConfiguration","getKubearmorConfigurationOutput"], () => require("./getKubearmorConfiguration"));

export { GetKubearmorHostSecurityPolicyArgs, GetKubearmorHostSecurityPolicyResult, GetKubearmorHostSecurityPolicyOutputArgs } from "./getKubearmorHostSecurityPolicy";
export const getKubearmorHostSecurityPolicy: typeof import("./getKubearmorHostSecurityPolicy").getKubearmorHostSecurityPolicy = null as any;
export const getKubearmorHostSecurityPolicyOutput: typeof import("./getKubearmorHostSecurityPolicy").getKubearmorHostSecurityPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorHostSecurityPolicy","getKubearmorHostSecurityPolicyOutput"], () => require("./getKubearmorHostSecurityPolicy"));

export { GetKubearmorInstalledVersionArgs, GetKubearmorInstalledVersionResult, GetKubearmorInstalledVersionOutputArgs } from "./getKubearmorInstalledVersion";
export const getKubearmorInstalledVersion: typeof import("./getKubearmorInstalledVersion").getKubearmorInstalledVersion = null as any;
export const getKubearmorInstalledVersionOutput: typeof import("./getKubearmorInstalledVersion").getKubearmorInstalledVersionOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorInstalledVersion","getKubearmorInstalledVersionOutput"], () => require("./getKubearmorInstalledVersion"));

export { GetKubearmorNamespacePostureArgs, GetKubearmorNamespacePostureResult, GetKubearmorNamespacePostureOutputArgs } from "./getKubearmorNamespacePosture";
export const getKubearmorNamespacePosture: typeof import("./getKubearmorNamespacePosture").getKubearmorNamespacePosture = null as any;
export const getKubearmorNamespacePostureOutput: typeof import("./getKubearmorNamespacePosture").getKubearmorNamespacePostureOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorNamespacePosture","getKubearmorNamespacePostureOutput"], () => require("./getKubearmorNamespacePosture"));

export { GetKubearmorNamespaceVisibilityArgs, GetKubearmorNamespaceVisibilityResult, GetKubearmorNamespaceVisibilityOutputArgs } from "./getKubearmorNamespaceVisibility";
export const getKubearmorNamespaceVisibility: typeof import("./getKubearmorNamespaceVisibility").getKubearmorNamespaceVisibility = null as any;
export const getKubearmorNamespaceVisibilityOutput: typeof import("./getKubearmorNamespaceVisibility").getKubearmorNamespaceVisibilityOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorNamespaceVisibility","getKubearmorNamespaceVisibilityOutput"], () => require("./getKubearmorNamespaceVisibility"));

export { GetKubearmorNodeArgs, GetKubearmorNodeResult, GetKubearmorNodeOutputArgs } from "./getKubearmorNode";
export const getKubearmorNode: typeof import("./getKubearmorNode").getKubearmorNode = null as any;
export const getKubearmorNodeOutput: typeof import("./getKubearmorNode").getKubearmorNodeOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorNode","getKubearmorNodeOutput"], () => require("./getKubearmorNode"));

export { GetKubearmorSecurityPolicyArgs, GetKubearmorSecurityPolicyResult, GetKubearmorSecurityPolicyOutputArgs } from "./getKubearmorSecurityPolicy";
export const getKubearmorSecurityPolicy: typeof import("./getKubearmorSecurityPolicy").getKubearmorSecurityPolicy = null as any;
export const getKubearmorSecurityPolicyOutput: typeof import("./getKubearmorSecurityPolicy").getKubearmorSecurityPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorSecurityPolicy","getKubearmorSecurityPolicyOutput"], () => require("./getKubearmorSecurityPolicy"));

export { GetKubearmorStableVersionArgs, GetKubearmorStableVersionResult, GetKubearmorStableVersionOutputArgs } from "./getKubearmorStableVersion";
export const getKubearmorStableVersion: typeof import("./getKubearmorStableVersion").getKubearmorStableVersion = null as any;
export const getKubearmorStableVersionOutput: typeof import("./getKubearmorStableVersion").getKubearmorStableVersionOutput = null as any;
utilities.lazyLoad(exports, ["getKubearmorStableVersion","getKubearmorStableVersionOutput"], () => require("./getKubearmorStableVersion"));

export { KubearmorConfigurationArgs, KubearmorConfigurationState } from "./kubearmorConfiguration";
export type KubearmorConfiguration = import("./kubearmorConfiguration").KubearmorConfiguration;
export const KubearmorConfiguration: typeof import("./kubearmorConfiguration").KubearmorConfiguration = null as any;
utilities.lazyLoad(exports, ["KubearmorConfiguration"], () => require("./kubearmorConfiguration"));

export { KubearmorHostSecurityPolicyArgs, KubearmorHostSecurityPolicyState } from "./kubearmorHostSecurityPolicy";
export type KubearmorHostSecurityPolicy = import("./kubearmorHostSecurityPolicy").KubearmorHostSecurityPolicy;
export const KubearmorHostSecurityPolicy: typeof import("./kubearmorHostSecurityPolicy").KubearmorHostSecurityPolicy = null as any;
utilities.lazyLoad(exports, ["KubearmorHostSecurityPolicy"], () => require("./kubearmorHostSecurityPolicy"));

export { KubearmorNamespacePostureArgs, KubearmorNamespacePostureState } from "./kubearmorNamespacePosture";
export type KubearmorNamespacePosture = import("./kubearmorNamespacePosture").KubearmorNamespacePosture;
export const KubearmorNamespacePosture: typeof import("./kubearmorNamespacePosture").KubearmorNamespacePosture = null as any;
utilities.lazyLoad(exports, ["KubearmorNamespacePosture"], () => require("./kubearmorNamespacePosture"));

export { KubearmorNamespaceVisibilityArgs, KubearmorNamespaceVisibilityState } from "./kubearmorNamespaceVisibility";
export type KubearmorNamespaceVisibility = import("./kubearmorNamespaceVisibility").KubearmorNamespaceVisibility;
export const KubearmorNamespaceVisibility: typeof import("./kubearmorNamespaceVisibility").KubearmorNamespaceVisibility = null as any;
utilities.lazyLoad(exports, ["KubearmorNamespaceVisibility"], () => require("./kubearmorNamespaceVisibility"));

export { KubearmorSecurityPolicyArgs, KubearmorSecurityPolicyState } from "./kubearmorSecurityPolicy";
export type KubearmorSecurityPolicy = import("./kubearmorSecurityPolicy").KubearmorSecurityPolicy;
export const KubearmorSecurityPolicy: typeof import("./kubearmorSecurityPolicy").KubearmorSecurityPolicy = null as any;
utilities.lazyLoad(exports, ["KubearmorSecurityPolicy"], () => require("./kubearmorSecurityPolicy"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as types from "./types";

export {
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "accuknox:index/discoveryEngineConfiguration:DiscoveryEngineConfiguration":
                return new DiscoveryEngineConfiguration(name, <any>undefined, { urn })
            case "accuknox:index/discoveryEngineDiscoveredPolicy:DiscoveryEngineDiscoveredPolicy":
                return new DiscoveryEngineDiscoveredPolicy(name, <any>undefined, { urn })
            case "accuknox:index/discoveryEngineEnableDiscoveredPolicy:DiscoveryEngineEnableDiscoveredPolicy":
                return new DiscoveryEngineEnableDiscoveredPolicy(name, <any>undefined, { urn })
            case "accuknox:index/kubearmorConfiguration:KubearmorConfiguration":
                return new KubearmorConfiguration(name, <any>undefined, { urn })
            case "accuknox:index/kubearmorHostSecurityPolicy:KubearmorHostSecurityPolicy":
                return new KubearmorHostSecurityPolicy(name, <any>undefined, { urn })
            case "accuknox:index/kubearmorNamespacePosture:KubearmorNamespacePosture":
                return new KubearmorNamespacePosture(name, <any>undefined, { urn })
            case "accuknox:index/kubearmorNamespaceVisibility:KubearmorNamespaceVisibility":
                return new KubearmorNamespaceVisibility(name, <any>undefined, { urn })
            case "accuknox:index/kubearmorSecurityPolicy:KubearmorSecurityPolicy":
                return new KubearmorSecurityPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("accuknox", "index/discoveryEngineConfiguration", _module)
pulumi.runtime.registerResourceModule("accuknox", "index/discoveryEngineDiscoveredPolicy", _module)
pulumi.runtime.registerResourceModule("accuknox", "index/discoveryEngineEnableDiscoveredPolicy", _module)
pulumi.runtime.registerResourceModule("accuknox", "index/kubearmorConfiguration", _module)
pulumi.runtime.registerResourceModule("accuknox", "index/kubearmorHostSecurityPolicy", _module)
pulumi.runtime.registerResourceModule("accuknox", "index/kubearmorNamespacePosture", _module)
pulumi.runtime.registerResourceModule("accuknox", "index/kubearmorNamespaceVisibility", _module)
pulumi.runtime.registerResourceModule("accuknox", "index/kubearmorSecurityPolicy", _module)
pulumi.runtime.registerResourcePackage("accuknox", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:accuknox") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
