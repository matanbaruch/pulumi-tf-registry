// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKubearmorNamespaceVisibility(args: GetKubearmorNamespaceVisibilityArgs, opts?: pulumi.InvokeOptions): Promise<GetKubearmorNamespaceVisibilityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("accuknox:index/getKubearmorNamespaceVisibility:getKubearmorNamespaceVisibility", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubearmorNamespaceVisibility.
 */
export interface GetKubearmorNamespaceVisibilityArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getKubearmorNamespaceVisibility.
 */
export interface GetKubearmorNamespaceVisibilityResult {
    readonly id: string;
    readonly name: string;
    readonly visibility: string;
}
export function getKubearmorNamespaceVisibilityOutput(args: GetKubearmorNamespaceVisibilityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubearmorNamespaceVisibilityResult> {
    return pulumi.output(args).apply((a: any) => getKubearmorNamespaceVisibility(a, opts))
}

/**
 * A collection of arguments for invoking getKubearmorNamespaceVisibility.
 */
export interface GetKubearmorNamespaceVisibilityOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
