// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDiscoveryEngineConfiguration(args: GetDiscoveryEngineConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoveryEngineConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("accuknox:index/getDiscoveryEngineConfiguration:getDiscoveryEngineConfiguration", {
        "id": args.id,
        "name": args.name,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDiscoveryEngineConfiguration.
 */
export interface GetDiscoveryEngineConfigurationArgs {
    id?: string;
    name: string;
    namespace: string;
}

/**
 * A collection of values returned by getDiscoveryEngineConfiguration.
 */
export interface GetDiscoveryEngineConfigurationResult {
    readonly data: {[key: string]: string};
    readonly id: string;
    readonly name: string;
    readonly namespace: string;
}
export function getDiscoveryEngineConfigurationOutput(args: GetDiscoveryEngineConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDiscoveryEngineConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getDiscoveryEngineConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getDiscoveryEngineConfiguration.
 */
export interface GetDiscoveryEngineConfigurationOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
