// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KubearmorSecurityPolicy extends pulumi.CustomResource {
    /**
     * Get an existing KubearmorSecurityPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubearmorSecurityPolicyState, opts?: pulumi.CustomResourceOptions): KubearmorSecurityPolicy {
        return new KubearmorSecurityPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'accuknox:index/kubearmorSecurityPolicy:KubearmorSecurityPolicy';

    /**
     * Returns true if the given object is an instance of KubearmorSecurityPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubearmorSecurityPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubearmorSecurityPolicy.__pulumiType;
    }

    public readonly action!: pulumi.Output<string | undefined>;
    public readonly capabilities!: pulumi.Output<outputs.KubearmorSecurityPolicyCapability[] | undefined>;
    public readonly file!: pulumi.Output<outputs.KubearmorSecurityPolicyFile | undefined>;
    public readonly lastUpdated!: pulumi.Output<string>;
    public readonly message!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string | undefined>;
    public readonly networks!: pulumi.Output<outputs.KubearmorSecurityPolicyNetwork[] | undefined>;
    public readonly policy!: pulumi.Output<string | undefined>;
    public readonly processes!: pulumi.Output<outputs.KubearmorSecurityPolicyProcess[] | undefined>;
    public readonly selector!: pulumi.Output<outputs.KubearmorSecurityPolicySelector | undefined>;
    public readonly severity!: pulumi.Output<number | undefined>;
    public readonly syscalls!: pulumi.Output<outputs.KubearmorSecurityPolicySyscall[] | undefined>;
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a KubearmorSecurityPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KubearmorSecurityPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubearmorSecurityPolicyArgs | KubearmorSecurityPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubearmorSecurityPolicyState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["capabilities"] = state ? state.capabilities : undefined;
            resourceInputs["file"] = state ? state.file : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["processes"] = state ? state.processes : undefined;
            resourceInputs["selector"] = state ? state.selector : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["syscalls"] = state ? state.syscalls : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as KubearmorSecurityPolicyArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["capabilities"] = args ? args.capabilities : undefined;
            resourceInputs["file"] = args ? args.file : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["processes"] = args ? args.processes : undefined;
            resourceInputs["selector"] = args ? args.selector : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["syscalls"] = args ? args.syscalls : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubearmorSecurityPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KubearmorSecurityPolicy resources.
 */
export interface KubearmorSecurityPolicyState {
    action?: pulumi.Input<string>;
    capabilities?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicyCapability>[]>;
    file?: pulumi.Input<inputs.KubearmorSecurityPolicyFile>;
    lastUpdated?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    networks?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicyNetwork>[]>;
    policy?: pulumi.Input<string>;
    processes?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicyProcess>[]>;
    selector?: pulumi.Input<inputs.KubearmorSecurityPolicySelector>;
    severity?: pulumi.Input<number>;
    syscalls?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicySyscall>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a KubearmorSecurityPolicy resource.
 */
export interface KubearmorSecurityPolicyArgs {
    action?: pulumi.Input<string>;
    capabilities?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicyCapability>[]>;
    file?: pulumi.Input<inputs.KubearmorSecurityPolicyFile>;
    lastUpdated?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    networks?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicyNetwork>[]>;
    policy?: pulumi.Input<string>;
    processes?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicyProcess>[]>;
    selector?: pulumi.Input<inputs.KubearmorSecurityPolicySelector>;
    severity?: pulumi.Input<number>;
    syscalls?: pulumi.Input<pulumi.Input<inputs.KubearmorSecurityPolicySyscall>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
