// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudprovider(args: GetCloudproviderArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudproviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("crunchybridge:index/getCloudprovider:getCloudprovider", {
        "id": args.id,
        "providerId": args.providerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudprovider.
 */
export interface GetCloudproviderArgs {
    id?: string;
    providerId: string;
}

/**
 * A collection of values returned by getCloudprovider.
 */
export interface GetCloudproviderResult {
    readonly id: string;
    readonly plans: outputs.GetCloudproviderPlan[];
    readonly providerId: string;
    readonly regions: outputs.GetCloudproviderRegion[];
}
export function getCloudproviderOutput(args: GetCloudproviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudproviderResult> {
    return pulumi.output(args).apply((a: any) => getCloudprovider(a, opts))
}

/**
 * A collection of arguments for invoking getCloudprovider.
 */
export interface GetCloudproviderOutputArgs {
    id?: pulumi.Input<string>;
    providerId: pulumi.Input<string>;
}
