// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getS3Object(args: GetS3ObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetS3ObjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("lyvecloud:index/getS3Object:getS3Object", {
        "bucket": args.bucket,
        "id": args.id,
        "key": args.key,
        "tags": args.tags,
        "versionId": args.versionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3Object.
 */
export interface GetS3ObjectArgs {
    bucket: string;
    id?: string;
    key: string;
    tags?: {[key: string]: string};
    versionId?: string;
}

/**
 * A collection of values returned by getS3Object.
 */
export interface GetS3ObjectResult {
    readonly body: string;
    readonly bucket: string;
    readonly cacheControl: string;
    readonly contentDisposition: string;
    readonly contentEncoding: string;
    readonly contentLanguage: string;
    readonly contentLength: number;
    readonly contentType: string;
    readonly etag: string;
    readonly id: string;
    readonly key: string;
    readonly lastModified: string;
    readonly metadata: {[key: string]: string};
    readonly objectLockMode: string;
    readonly objectLockRetainUntilDate: string;
    readonly tags?: {[key: string]: string};
    readonly versionId: string;
}
export function getS3ObjectOutput(args: GetS3ObjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3ObjectResult> {
    return pulumi.output(args).apply((a: any) => getS3Object(a, opts))
}

/**
 * A collection of arguments for invoking getS3Object.
 */
export interface GetS3ObjectOutputArgs {
    bucket: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    versionId?: pulumi.Input<string>;
}
