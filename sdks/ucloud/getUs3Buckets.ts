// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUs3Buckets(args?: GetUs3BucketsArgs, opts?: pulumi.InvokeOptions): Promise<GetUs3BucketsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ucloud:index/getUs3Buckets:getUs3Buckets", {
        "id": args.id,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUs3Buckets.
 */
export interface GetUs3BucketsArgs {
    id?: string;
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getUs3Buckets.
 */
export interface GetUs3BucketsResult {
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    readonly totalCount: number;
    readonly us3Buckets: outputs.GetUs3BucketsUs3Bucket[];
}
export function getUs3BucketsOutput(args?: GetUs3BucketsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUs3BucketsResult> {
    return pulumi.output(args).apply((a: any) => getUs3Buckets(a, opts))
}

/**
 * A collection of arguments for invoking getUs3Buckets.
 */
export interface GetUs3BucketsOutputArgs {
    id?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
