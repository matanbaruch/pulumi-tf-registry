// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AntiDdosInstance extends pulumi.CustomResource {
    /**
     * Get an existing AntiDdosInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntiDdosInstanceState, opts?: pulumi.CustomResourceOptions): AntiDdosInstance {
        return new AntiDdosInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ucloud:index/antiDdosInstance:AntiDdosInstance';

    /**
     * Returns true if the given object is an instance of AntiDdosInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntiDdosInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntiDdosInstance.__pulumiType;
    }

    public readonly area!: pulumi.Output<string>;
    public readonly bandwidth!: pulumi.Output<number>;
    public readonly baseDefenceValue!: pulumi.Output<number>;
    public readonly chargeType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly dataCenter!: pulumi.Output<string>;
    public readonly duration!: pulumi.Output<number | undefined>;
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    public readonly maxDefenceValue!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a AntiDdosInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AntiDdosInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntiDdosInstanceArgs | AntiDdosInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntiDdosInstanceState | undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["baseDefenceValue"] = state ? state.baseDefenceValue : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataCenter"] = state ? state.dataCenter : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["maxDefenceValue"] = state ? state.maxDefenceValue : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AntiDdosInstanceArgs | undefined;
            if ((!args || args.area === undefined) && !opts.urn) {
                throw new Error("Missing required property 'area'");
            }
            if ((!args || args.bandwidth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            if ((!args || args.baseDefenceValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseDefenceValue'");
            }
            if ((!args || args.dataCenter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataCenter'");
            }
            if ((!args || args.maxDefenceValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxDefenceValue'");
            }
            resourceInputs["area"] = args ? args.area : undefined;
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["baseDefenceValue"] = args ? args.baseDefenceValue : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["dataCenter"] = args ? args.dataCenter : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["maxDefenceValue"] = args ? args.maxDefenceValue : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AntiDdosInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AntiDdosInstance resources.
 */
export interface AntiDdosInstanceState {
    area?: pulumi.Input<string>;
    bandwidth?: pulumi.Input<number>;
    baseDefenceValue?: pulumi.Input<number>;
    chargeType?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dataCenter?: pulumi.Input<string>;
    duration?: pulumi.Input<number>;
    expireTime?: pulumi.Input<string>;
    maxDefenceValue?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AntiDdosInstance resource.
 */
export interface AntiDdosInstanceArgs {
    area: pulumi.Input<string>;
    bandwidth: pulumi.Input<number>;
    baseDefenceValue: pulumi.Input<number>;
    chargeType?: pulumi.Input<string>;
    dataCenter: pulumi.Input<string>;
    duration?: pulumi.Input<number>;
    maxDefenceValue: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
