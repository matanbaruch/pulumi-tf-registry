// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbAttachments(args: GetLbAttachmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetLbAttachmentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ucloud:index/getLbAttachments:getLbAttachments", {
        "id": args.id,
        "ids": args.ids,
        "listenerId": args.listenerId,
        "loadBalancerId": args.loadBalancerId,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbAttachments.
 */
export interface GetLbAttachmentsArgs {
    id?: string;
    ids?: string[];
    listenerId: string;
    loadBalancerId: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getLbAttachments.
 */
export interface GetLbAttachmentsResult {
    readonly id: string;
    readonly ids: string[];
    readonly lbAttachments: outputs.GetLbAttachmentsLbAttachment[];
    readonly listenerId: string;
    readonly loadBalancerId: string;
    readonly outputFile?: string;
    readonly totalCount: number;
}
export function getLbAttachmentsOutput(args: GetLbAttachmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbAttachmentsResult> {
    return pulumi.output(args).apply((a: any) => getLbAttachments(a, opts))
}

/**
 * A collection of arguments for invoking getLbAttachments.
 */
export interface GetLbAttachmentsOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    listenerId: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
