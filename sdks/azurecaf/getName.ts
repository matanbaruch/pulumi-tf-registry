// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getName(args?: GetNameArgs, opts?: pulumi.InvokeOptions): Promise<GetNameResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurecaf:index/getName:getName", {
        "cleanInput": args.cleanInput,
        "id": args.id,
        "name": args.name,
        "passthrough": args.passthrough,
        "prefixes": args.prefixes,
        "randomLength": args.randomLength,
        "randomSeed": args.randomSeed,
        "resourceType": args.resourceType,
        "separator": args.separator,
        "suffixes": args.suffixes,
        "useSlug": args.useSlug,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getName.
 */
export interface GetNameArgs {
    cleanInput?: boolean;
    id?: string;
    name?: string;
    passthrough?: boolean;
    prefixes?: string[];
    randomLength?: number;
    randomSeed?: number;
    resourceType?: string;
    separator?: string;
    suffixes?: string[];
    useSlug?: boolean;
}

/**
 * A collection of values returned by getName.
 */
export interface GetNameResult {
    readonly cleanInput?: boolean;
    readonly id: string;
    readonly name?: string;
    readonly passthrough?: boolean;
    readonly prefixes?: string[];
    readonly randomLength?: number;
    readonly randomSeed?: number;
    readonly resourceType?: string;
    readonly result: string;
    readonly separator?: string;
    readonly suffixes?: string[];
    readonly useSlug?: boolean;
}
export function getNameOutput(args?: GetNameOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNameResult> {
    return pulumi.output(args).apply((a: any) => getName(a, opts))
}

/**
 * A collection of arguments for invoking getName.
 */
export interface GetNameOutputArgs {
    cleanInput?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passthrough?: pulumi.Input<boolean>;
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    randomLength?: pulumi.Input<number>;
    randomSeed?: pulumi.Input<number>;
    resourceType?: pulumi.Input<string>;
    separator?: pulumi.Input<string>;
    suffixes?: pulumi.Input<pulumi.Input<string>[]>;
    useSlug?: pulumi.Input<boolean>;
}
