// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetwork(args: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zedcloud:index/getNetwork:getNetwork", {
        "description": args.description,
        "dnsLists": args.dnsLists,
        "enterpriseDefault": args.enterpriseDefault,
        "ips": args.ips,
        "kind": args.kind,
        "name": args.name,
        "projectId": args.projectId,
        "proxies": args.proxies,
        "revisions": args.revisions,
        "title": args.title,
        "wirelesses": args.wirelesses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    description?: string;
    dnsLists?: inputs.GetNetworkDnsList[];
    enterpriseDefault?: boolean;
    ips?: inputs.GetNetworkIp[];
    kind: string;
    name: string;
    projectId: string;
    proxies?: inputs.GetNetworkProxy[];
    revisions?: inputs.GetNetworkRevision[];
    title: string;
    wirelesses?: inputs.GetNetworkWireless[];
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly description?: string;
    readonly dnsLists?: outputs.GetNetworkDnsList[];
    readonly enterpriseDefault?: boolean;
    readonly id: string;
    readonly ips?: outputs.GetNetworkIp[];
    readonly kind: string;
    readonly name: string;
    readonly projectId: string;
    readonly proxies?: outputs.GetNetworkProxy[];
    readonly revisions?: outputs.GetNetworkRevision[];
    readonly title: string;
    readonly wirelesses?: outputs.GetNetworkWireless[];
}
export function getNetworkOutput(args: GetNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    description?: pulumi.Input<string>;
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetNetworkDnsListArgs>[]>;
    enterpriseDefault?: pulumi.Input<boolean>;
    ips?: pulumi.Input<pulumi.Input<inputs.GetNetworkIpArgs>[]>;
    kind: pulumi.Input<string>;
    name: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    proxies?: pulumi.Input<pulumi.Input<inputs.GetNetworkProxyArgs>[]>;
    revisions?: pulumi.Input<pulumi.Input<inputs.GetNetworkRevisionArgs>[]>;
    title: pulumi.Input<string>;
    wirelesses?: pulumi.Input<pulumi.Input<inputs.GetNetworkWirelessArgs>[]>;
}
