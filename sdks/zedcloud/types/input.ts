// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApplicationInstanceCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceCustomConfigVariableGroup>[]>;
}

export interface ApplicationInstanceCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceCustomConfigVariableGroupVariable>[]>;
}

export interface ApplicationInstanceCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApplicationInstanceCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationInstanceCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationInstanceDrife {
    /**
     * If set, don't encrypt the drive. Store in cleartext
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * Type of Drive. Valid Values: UNSPECIFIED, CDROM, HDD, NET, HDD_EMPTY. HDD_EMPTY - is to allocate the empty disk of maxsizebytes specified
     */
    drvtype: pulumi.Input<string>;
    /**
     * don't purge this drive as part of purge command for mutable volumes
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * Name of Image Object used for the drive.
     */
    imagename: pulumi.Input<string>;
    /**
     * immutable Volume for this drive. Only one of imvolname and mvolname must be specified.
     */
    imvolname?: pulumi.Input<string>;
    /**
     * Drive maximum size
     */
    maxsize: pulumi.Input<string>;
    /**
     * Mount Path for the drive in the App Instance
     */
    mountpath?: pulumi.Input<string>;
    /**
     * mutable Volume for this drive. Only one of imvolname and mvolname must be specified.
     */
    mvolname?: pulumi.Input<string>;
    /**
     * Preserve the drive even when all app instances using it are deleted
     */
    preserve: pulumi.Input<boolean>;
    /**
     * Read only flag. If set, drive is mounted as readonly by app instance.
     */
    readonly: pulumi.Input<boolean>;
    /**
     * type of target. Valid values: Disk, Kernel, Initrd, RamDisk
     */
    target: pulumi.Input<string>;
    /**
     * User defined volume to use for this drive
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ApplicationInstanceInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ApplicationInstanceInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ApplicationInstanceInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ApplicationInstanceInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ApplicationInstanceInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationInstanceInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ApplicationInstanceInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ApplicationInstanceInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ApplicationInstanceLog {
    /**
     * Flags to enable / disable sending of logs generated by app instance to zedcloud
     */
    access: pulumi.Input<boolean>;
}

export interface ApplicationInstanceManifestInfo {
    /**
     * Current version of edge application being used
     */
    bundleVersion?: pulumi.Input<string>;
    /**
     * Details for recommended transition action
     */
    details?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceManifestInfoDetail>[]>;
    /**
     * Next version of edge application available
     */
    nextBundleVersion?: pulumi.Input<string>;
    /**
     * Common and Custom parameters for deciding on transition actions
     */
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Recommended transition action
     */
    transitionAction?: pulumi.Input<string>;
}

export interface ApplicationInstanceManifestInfoDetail {
    /**
     * Cause of the transition action
     */
    cause?: pulumi.Input<string>;
    /**
     * Scope of the action (e.g. project, cluster, instance)
     */
    scopes?: pulumi.Input<pulumi.Input<inputs.ApplicationInstanceManifestInfoDetailScope>[]>;
    /**
     * Urgency of the recommended action (ERROR - must take action immediately, WARN - must take action but not immediately, NOTICE - may take action
     */
    severity?: pulumi.Input<string>;
}

export interface ApplicationInstanceManifestInfoDetailScope {
    /**
     * Unique id of the type (e.g. projectId in case of project type)
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the action (e.g. project in case certificate expired at project level)
     */
    type?: pulumi.Input<string>;
}

export interface ApplicationInstancePurge {
    /**
     * counter
     */
    counter?: pulumi.Input<number>;
}

export interface ApplicationInstanceRefresh {
    /**
     * counter
     */
    counter?: pulumi.Input<number>;
}

export interface ApplicationInstanceRestart {
    /**
     * counter
     */
    counter?: pulumi.Input<number>;
}

export interface ApplicationInstanceRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ApplicationInstanceVminfo {
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * CPUs
     */
    cpus: pulumi.Input<number>;
    /**
     * Memory
     */
    memory?: pulumi.Input<number>;
    /**
     * Hardware Virtualization
     */
    mode?: pulumi.Input<string>;
    /**
     * VNC
     */
    vnc: pulumi.Input<boolean>;
    /**
     * VNC display
     */
    vncDisplay?: pulumi.Input<number>;
}

export interface ApplicationManifest {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ApplicationManifestConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestConfigurationCustomConfig>[]>;
}

export interface ApplicationManifestConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestConfigurationCustomConfigVariableGroup>[]>;
}

export interface ApplicationManifestConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ApplicationManifestConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApplicationManifestConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationManifestConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationManifestContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ApplicationManifestDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ApplicationManifestImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ApplicationManifestImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationManifestInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ApplicationManifestInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ApplicationManifestInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ApplicationManifestInterfaceAclActionPortmapto>[]>;
}

export interface ApplicationManifestInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ApplicationManifestInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ApplicationManifestInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationManifestModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ApplicationManifestOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ApplicationManifestPermission {
}

export interface ApplicationManifestResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ApplicationParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ApplicationRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface DatastoreCertificateChain {
    /**
     * List of Certificate object holds the details of certificate like cert block, encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.DatastoreCertificateChainCertificate>[]>;
}

export interface DatastoreCertificateChainCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.DatastoreCertificateChainCertificateEcdsaEncryption>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.DatastoreCertificateChainCertificateIssuer>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.DatastoreCertificateChainCertificateRsaEcryption>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.DatastoreCertificateChainCertificateSanValue>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.DatastoreCertificateChainCertificateSubject>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface DatastoreCertificateChainCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface DatastoreCertificateChainCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface DatastoreCertificateChainCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface DatastoreCertificateChainCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatastoreCertificateChainCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface DatastoreRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface DatastoreSecret {
    /**
     * Datastore access API key in plain-text
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Datastore access API password in plain-text
     */
    apiPasswd?: pulumi.Input<string>;
}

export interface EdgenodeBaseImage {
    /**
     * activation flag
     */
    activate: pulumi.Input<boolean>;
    /**
     * image name
     */
    imageName: pulumi.Input<string>;
    /**
     * immutable Volume for this base image
     */
    imvolId?: pulumi.Input<string>;
    /**
     * system generated unique id for an image
     */
    uuid?: pulumi.Input<string>;
    /**
     * image version
     */
    version: pulumi.Input<string>;
}

export interface EdgenodeConfigItem {
    /**
     * boolean value
     */
    boolValue?: pulumi.Input<boolean>;
    /**
     * float value
     */
    floatValue?: pulumi.Input<number>;
    /**
     * key
     */
    key?: pulumi.Input<string>;
    /**
     * string value
     */
    stringValue?: pulumi.Input<string>;
    /**
     * uint32 value
     */
    uint32Value?: pulumi.Input<number>;
    /**
     * uint64 value in string format
     */
    uint64Value?: pulumi.Input<string>;
    /**
     * value type
     */
    valueType?: pulumi.Input<string>;
}

export interface EdgenodeDebugKnob {
    debugKnob: pulumi.Input<boolean>;
    expired: pulumi.Input<boolean>;
    expiry: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInst {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstDnsList>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstIp>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInstDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInstIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInstIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInstLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstLispSp>[]>;
}

export interface EdgenodeDefaultNetInstLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInstOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInstOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInstOpaqueLispSp>[]>;
}

export interface EdgenodeDefaultNetInstOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface EdgenodeDefaultNetInstRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface EdgenodeDevLocation {
    /**
     * City
     */
    city?: pulumi.Input<string>;
    /**
     * Country code consisting of 2 capital letters as per ISO 3166-1 alpha2 standard
     */
    country?: pulumi.Input<string>;
    /**
     * Free formatted location string
     */
    freeloc?: pulumi.Input<string>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
    /**
     * Deprecated field: comma, separated lat, long
     */
    latlong?: pulumi.Input<string>;
    /**
     * Ordered pair of (latitude, longitude) separated by comma (,). Latitude is the horizontal component used for geographic positioning; it is the angle between 0Â° (the equator) and Â±90Â° (north or south) at the poles measured in decimal degrees. It is the first value in an ordered pair. A negative number denotes a location south of the equator; a positive number is north. Longitude is the vertical component used for geographic positioning; it is the angle between 0Â° (the Prime Meridian) and Â±180Â° (westward or eastward) measured in decimal degrees. It is the second number in an ordered pair. A negative number indicates a location west of Greenwich, England; a positive number east.
     */
    loc?: pulumi.Input<string>;
    /**
     * The name of the recipient, firm, or company at this geographical location.
     */
    org?: pulumi.Input<string>;
    /**
     * Postal code (ZIP code for USA) of the geographical location
     */
    postal?: pulumi.Input<string>;
    /**
     * Region
     */
    region?: pulumi.Input<string>;
    /**
     * Single IP address, either in IPv4 or in IPv6 format
     */
    underlayIp?: pulumi.Input<string>;
}

export interface EdgenodeDlisp {
    /**
     * Client Address
     */
    clientAddr: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * EID allocation prefix
     */
    eidAllocationPrefix: pulumi.Input<string>;
    /**
     * EID allocation prefix length
     */
    eidAllocationPrefixLen: pulumi.Input<number>;
    /**
     * LISP instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * List of Lisp servers
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.EdgenodeDlispLispMapServer>[]>;
    /**
     * TEMP : flag to indicate which version of LISP data plane should be running on the device
     */
    mode: pulumi.Input<string>;
    /**
     * Zed development servers
     */
    zedServers: pulumi.Input<pulumi.Input<inputs.EdgenodeDlispZedServer>[]>;
}

export interface EdgenodeDlispLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface EdgenodeDlispZedServer {
    /**
     * EID
     */
    eIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Hostname for dev zed server
     */
    hostName: pulumi.Input<string>;
}

export interface EdgenodeEdgeviewconfig {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.EdgenodeEdgeviewconfigAppPolicy>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.EdgenodeEdgeviewconfigDevPolicy>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.EdgenodeEdgeviewconfigExtPolicy>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.EdgenodeEdgeviewconfigJwtInfo>[]>;
    token?: pulumi.Input<string>;
}

export interface EdgenodeEdgeviewconfigAppPolicy {
    allowApp?: pulumi.Input<boolean>;
}

export interface EdgenodeEdgeviewconfigDevPolicy {
    allowDev?: pulumi.Input<boolean>;
}

export interface EdgenodeEdgeviewconfigExtPolicy {
    allowExt?: pulumi.Input<boolean>;
}

export interface EdgenodeEdgeviewconfigJwtInfo {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface EdgenodeInterface {
    /**
     * cost of using this interface. Default is 0.
     */
    cost?: pulumi.Input<number>;
    /**
     * Adapter Udage
     */
    intfUsage?: pulumi.Input<string>;
    /**
     * name of interface in the manifest to which this network or adapter maps to
     */
    intfname?: pulumi.Input<string>;
    /**
     * IP address: we will be needing this in cae of static network
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * mac address needs to be over-written in some cases
     */
    macaddr?: pulumi.Input<string>;
    /**
     * network name: if attaching a network use netname
     */
    netname?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface EdgenodeRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetApplicationInstanceCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetApplicationInstanceCustomConfigVariableGroup[];
}

export interface GetApplicationInstanceCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceCustomConfigVariableGroupArgs>[]>;
}

export interface GetApplicationInstanceCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetApplicationInstanceCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetApplicationInstanceCustomConfigVariableGroupVariable[];
}

export interface GetApplicationInstanceCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetApplicationInstanceCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetApplicationInstanceCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationInstanceCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetApplicationInstanceCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetApplicationInstanceCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationInstanceCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetApplicationInstanceCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationInstanceDrife {
    /**
     * If set, don't encrypt the drive. Store in cleartext
     */
    cleartext?: boolean;
    /**
     * Type of Drive. Valid Values: UNSPECIFIED, CDROM, HDD, NET, HDD_EMPTY. HDD_EMPTY - is to allocate the empty disk of maxsizebytes specified
     */
    drvtype: string;
    /**
     * don't purge this drive as part of purge command for mutable volumes
     */
    ignorepurge?: boolean;
    /**
     * Name of Image Object used for the drive.
     */
    imagename: string;
    /**
     * immutable Volume for this drive. Only one of imvolname and mvolname must be specified.
     */
    imvolname?: string;
    /**
     * Drive maximum size
     */
    maxsize: string;
    /**
     * Mount Path for the drive in the App Instance
     */
    mountpath?: string;
    /**
     * mutable Volume for this drive. Only one of imvolname and mvolname must be specified.
     */
    mvolname?: string;
    /**
     * Preserve the drive even when all app instances using it are deleted
     */
    preserve: boolean;
    /**
     * Read only flag. If set, drive is mounted as readonly by app instance.
     */
    readonly: boolean;
    /**
     * type of target. Valid values: Disk, Kernel, Initrd, RamDisk
     */
    target: string;
    /**
     * User defined volume to use for this drive
     */
    volumelabel?: string;
}

export interface GetApplicationInstanceDrifeArgs {
    /**
     * If set, don't encrypt the drive. Store in cleartext
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * Type of Drive. Valid Values: UNSPECIFIED, CDROM, HDD, NET, HDD_EMPTY. HDD_EMPTY - is to allocate the empty disk of maxsizebytes specified
     */
    drvtype: pulumi.Input<string>;
    /**
     * don't purge this drive as part of purge command for mutable volumes
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * Name of Image Object used for the drive.
     */
    imagename: pulumi.Input<string>;
    /**
     * immutable Volume for this drive. Only one of imvolname and mvolname must be specified.
     */
    imvolname?: pulumi.Input<string>;
    /**
     * Drive maximum size
     */
    maxsize: pulumi.Input<string>;
    /**
     * Mount Path for the drive in the App Instance
     */
    mountpath?: pulumi.Input<string>;
    /**
     * mutable Volume for this drive. Only one of imvolname and mvolname must be specified.
     */
    mvolname?: pulumi.Input<string>;
    /**
     * Preserve the drive even when all app instances using it are deleted
     */
    preserve: pulumi.Input<boolean>;
    /**
     * Read only flag. If set, drive is mounted as readonly by app instance.
     */
    readonly: pulumi.Input<boolean>;
    /**
     * type of target. Valid values: Disk, Kernel, Initrd, RamDisk
     */
    target: pulumi.Input<string>;
    /**
     * User defined volume to use for this drive
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetApplicationInstanceInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetApplicationInstanceInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetApplicationInstanceInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetApplicationInstanceInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetApplicationInstanceInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetApplicationInstanceInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetApplicationInstanceInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetApplicationInstanceInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetApplicationInstanceInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetApplicationInstanceInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetApplicationInstanceInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetApplicationInstanceInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetApplicationInstanceInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetApplicationInstanceInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetApplicationInstanceInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetApplicationInstanceInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationInstanceInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetApplicationInstanceInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetApplicationInstanceInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetApplicationInstanceInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetApplicationInstanceInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetApplicationInstanceInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetApplicationInstanceInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetApplicationInstanceLog {
    /**
     * Flags to enable / disable sending of logs generated by app instance to zedcloud
     */
    access: boolean;
}

export interface GetApplicationInstanceLogArgs {
    /**
     * Flags to enable / disable sending of logs generated by app instance to zedcloud
     */
    access: pulumi.Input<boolean>;
}

export interface GetApplicationInstanceManifestInfo {
    /**
     * Current version of edge application being used
     */
    bundleVersion?: string;
    /**
     * Details for recommended transition action
     */
    details?: inputs.GetApplicationInstanceManifestInfoDetail[];
    /**
     * Next version of edge application available
     */
    nextBundleVersion?: string;
    /**
     * Common and Custom parameters for deciding on transition actions
     */
    params?: {[key: string]: string};
    /**
     * Recommended transition action
     */
    transitionAction?: string;
}

export interface GetApplicationInstanceManifestInfoArgs {
    /**
     * Current version of edge application being used
     */
    bundleVersion?: pulumi.Input<string>;
    /**
     * Details for recommended transition action
     */
    details?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceManifestInfoDetailArgs>[]>;
    /**
     * Next version of edge application available
     */
    nextBundleVersion?: pulumi.Input<string>;
    /**
     * Common and Custom parameters for deciding on transition actions
     */
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Recommended transition action
     */
    transitionAction?: pulumi.Input<string>;
}

export interface GetApplicationInstanceManifestInfoDetail {
    /**
     * Cause of the transition action
     */
    cause?: string;
    /**
     * Scope of the action (e.g. project, cluster, instance)
     */
    scopes?: inputs.GetApplicationInstanceManifestInfoDetailScope[];
    /**
     * Urgency of the recommended action (ERROR - must take action immediately, WARN - must take action but not immediately, NOTICE - may take action
     */
    severity?: string;
}

export interface GetApplicationInstanceManifestInfoDetailArgs {
    /**
     * Cause of the transition action
     */
    cause?: pulumi.Input<string>;
    /**
     * Scope of the action (e.g. project, cluster, instance)
     */
    scopes?: pulumi.Input<pulumi.Input<inputs.GetApplicationInstanceManifestInfoDetailScopeArgs>[]>;
    /**
     * Urgency of the recommended action (ERROR - must take action immediately, WARN - must take action but not immediately, NOTICE - may take action
     */
    severity?: pulumi.Input<string>;
}

export interface GetApplicationInstanceManifestInfoDetailScope {
    /**
     * Unique id of the type (e.g. projectId in case of project type)
     */
    id?: string;
    /**
     * Scope of the action (e.g. project in case certificate expired at project level)
     */
    type?: string;
}

export interface GetApplicationInstanceManifestInfoDetailScopeArgs {
    /**
     * Unique id of the type (e.g. projectId in case of project type)
     */
    id?: pulumi.Input<string>;
    /**
     * Scope of the action (e.g. project in case certificate expired at project level)
     */
    type?: pulumi.Input<string>;
}

export interface GetApplicationInstancePurge {
    /**
     * counter
     */
    counter?: number;
}

export interface GetApplicationInstancePurgeArgs {
    /**
     * counter
     */
    counter?: pulumi.Input<number>;
}

export interface GetApplicationInstanceRefresh {
    /**
     * counter
     */
    counter?: number;
}

export interface GetApplicationInstanceRefreshArgs {
    /**
     * counter
     */
    counter?: pulumi.Input<number>;
}

export interface GetApplicationInstanceRestart {
    /**
     * counter
     */
    counter?: number;
}

export interface GetApplicationInstanceRestartArgs {
    /**
     * counter
     */
    counter?: pulumi.Input<number>;
}

export interface GetApplicationInstanceRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetApplicationInstanceRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetApplicationInstanceVminfo {
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * CPUs
     */
    cpus: number;
    /**
     * Memory
     */
    memory?: number;
    /**
     * Hardware Virtualization
     */
    mode?: string;
    /**
     * VNC
     */
    vnc: boolean;
    /**
     * VNC display
     */
    vncDisplay?: number;
}

export interface GetApplicationInstanceVminfoArgs {
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * CPUs
     */
    cpus: pulumi.Input<number>;
    /**
     * Memory
     */
    memory?: pulumi.Input<number>;
    /**
     * Hardware Virtualization
     */
    mode?: pulumi.Input<string>;
    /**
     * VNC
     */
    vnc: pulumi.Input<boolean>;
    /**
     * VNC display
     */
    vncDisplay?: pulumi.Input<number>;
}

export interface GetApplicationManifest {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetApplicationManifestConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetApplicationManifestContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetApplicationManifestDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetApplicationManifestImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetApplicationManifestInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetApplicationManifestModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetApplicationManifestOwner[];
    permissions?: inputs.GetApplicationManifestPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetApplicationManifestResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetApplicationManifestArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetApplicationManifestConfiguration {
    customConfigs?: inputs.GetApplicationManifestConfigurationCustomConfig[];
}

export interface GetApplicationManifestConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestConfigurationCustomConfigArgs>[]>;
}

export interface GetApplicationManifestConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetApplicationManifestConfigurationCustomConfigVariableGroup[];
}

export interface GetApplicationManifestConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetApplicationManifestConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetApplicationManifestConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetApplicationManifestConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetApplicationManifestConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationManifestContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetApplicationManifestContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetApplicationManifestDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetApplicationManifestDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetApplicationManifestImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetApplicationManifestImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetApplicationManifestImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetApplicationManifestImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetApplicationManifestImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationManifestInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetApplicationManifestInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetApplicationManifestInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetApplicationManifestInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetApplicationManifestInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetApplicationManifestInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetApplicationManifestInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetApplicationManifestInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetApplicationManifestInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetApplicationManifestInterfaceAclActionPortmapto[];
}

export interface GetApplicationManifestInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetApplicationManifestInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetApplicationManifestInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetApplicationManifestInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetApplicationManifestInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetApplicationManifestInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetApplicationManifestInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetApplicationManifestInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationManifestModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetApplicationManifestModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetApplicationManifestOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetApplicationManifestOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetApplicationManifestPermission {
}

export interface GetApplicationManifestPermissionArgs {
}

export interface GetApplicationManifestResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetApplicationManifestResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetApplicationParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetApplicationParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetCredentialList {
    currentCred?: string;
    forgot?: boolean;
    id?: string;
    newCred?: string;
    owner?: string;
    salt?: number;
    type?: string;
}

export interface GetCredentialListArgs {
    currentCred?: pulumi.Input<string>;
    forgot?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    newCred?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    salt?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface GetCredentialNext {
    /**
     * OrderBy helps in sorting the list response
     */
    orderBies?: string[];
    /**
     * Page Number
     */
    pageNum?: number;
    /**
     * Defines the page size
     */
    pageSize?: number;
    /**
     * Page Token
     */
    pageToken?: string;
    /**
     * Total number of pages to be fetched.
     */
    totalPages?: number;
}

export interface GetCredentialNextArgs {
    /**
     * OrderBy helps in sorting the list response
     */
    orderBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Page Number
     */
    pageNum?: pulumi.Input<number>;
    /**
     * Defines the page size
     */
    pageSize?: pulumi.Input<number>;
    /**
     * Page Token
     */
    pageToken?: pulumi.Input<string>;
    /**
     * Total number of pages to be fetched.
     */
    totalPages?: pulumi.Input<number>;
}

export interface GetCredentialSummaryByState {
    /**
     * Summary description
     */
    description?: string;
    /**
     * Total
     */
    total?: number;
    /**
     * Values: Map for storing <string, uint32>
     */
    values?: {[key: string]: number};
}

export interface GetCredentialSummaryByStateArgs {
    /**
     * Summary description
     */
    description?: pulumi.Input<string>;
    /**
     * Total
     */
    total?: pulumi.Input<number>;
    /**
     * Values: Map for storing <string, uint32>
     */
    values?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
}

export interface GetDatastoreCertificateChain {
    /**
     * List of Certificate object holds the details of certificate like cert block, encryption type, validity, subject etc
     */
    certificates?: inputs.GetDatastoreCertificateChainCertificate[];
}

export interface GetDatastoreCertificateChainArgs {
    /**
     * List of Certificate object holds the details of certificate like cert block, encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.GetDatastoreCertificateChainCertificateArgs>[]>;
}

export interface GetDatastoreCertificateChainCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: boolean;
    /**
     * base64 string of the parent certificate
     */
    cert?: string;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: string;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: inputs.GetDatastoreCertificateChainCertificateEcdsaEncryption[];
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: boolean;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: string[];
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: inputs.GetDatastoreCertificateChainCertificateIssuer[];
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: number;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: string;
    /**
     * base63 string of the public key
     */
    publicKey?: string;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: string;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: string;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: boolean;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: inputs.GetDatastoreCertificateChainCertificateRsaEcryption[];
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: inputs.GetDatastoreCertificateChainCertificateSanValue[];
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: string;
    signatureAlgorithm?: string;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: inputs.GetDatastoreCertificateChainCertificateSubject[];
    /**
     * Certificate validatity start time
     */
    validFrom?: string;
    /**
     * Certificate validatity start time
     */
    validTill?: string;
}

export interface GetDatastoreCertificateChainCertificateArgs {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.GetDatastoreCertificateChainCertificateEcdsaEncryptionArgs>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.GetDatastoreCertificateChainCertificateIssuerArgs>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.GetDatastoreCertificateChainCertificateRsaEcryptionArgs>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.GetDatastoreCertificateChainCertificateSanValueArgs>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.GetDatastoreCertificateChainCertificateSubjectArgs>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface GetDatastoreCertificateChainCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: string;
}

export interface GetDatastoreCertificateChainCertificateEcdsaEncryptionArgs {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface GetDatastoreCertificateChainCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetDatastoreCertificateChainCertificateIssuerArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetDatastoreCertificateChainCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: string;
}

export interface GetDatastoreCertificateChainCertificateRsaEcryptionArgs {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface GetDatastoreCertificateChainCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: string[];
    /**
     * List of permitted email addresses.
     */
    emaildIds?: string[];
    /**
     * List of permitted hosts.
     */
    hosts?: string[];
    /**
     * List of permitted IP addresses.
     */
    ips?: string[];
    /**
     * List of permitted User principal names.
     */
    upns?: string[];
    /**
     * List of permitted URIs.
     */
    uris?: string[];
}

export interface GetDatastoreCertificateChainCertificateSanValueArgs {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatastoreCertificateChainCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetDatastoreCertificateChainCertificateSubjectArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetDatastoreRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetDatastoreRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetDatastoreSecret {
    /**
     * Datastore access API key in plain-text
     */
    apiKey?: string;
    /**
     * Datastore access API password in plain-text
     */
    apiPasswd?: string;
}

export interface GetDatastoreSecretArgs {
    /**
     * Datastore access API key in plain-text
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Datastore access API password in plain-text
     */
    apiPasswd?: pulumi.Input<string>;
}

export interface GetEdgenodeBaseImage {
    /**
     * activation flag
     */
    activate: boolean;
    /**
     * image name
     */
    imageName: string;
    /**
     * immutable Volume for this base image
     */
    imvolId?: string;
    /**
     * system generated unique id for an image
     */
    uuid?: string;
    /**
     * image version
     */
    version: string;
}

export interface GetEdgenodeBaseImageArgs {
    /**
     * activation flag
     */
    activate: pulumi.Input<boolean>;
    /**
     * image name
     */
    imageName: pulumi.Input<string>;
    /**
     * immutable Volume for this base image
     */
    imvolId?: pulumi.Input<string>;
    /**
     * system generated unique id for an image
     */
    uuid?: pulumi.Input<string>;
    /**
     * image version
     */
    version: pulumi.Input<string>;
}

export interface GetEdgenodeConfigItem {
    /**
     * boolean value
     */
    boolValue?: boolean;
    /**
     * float value
     */
    floatValue?: number;
    /**
     * key
     */
    key?: string;
    /**
     * string value
     */
    stringValue?: string;
    /**
     * uint32 value
     */
    uint32Value?: number;
    /**
     * uint64 value in string format
     */
    uint64Value?: string;
    /**
     * value type
     */
    valueType?: string;
}

export interface GetEdgenodeConfigItemArgs {
    /**
     * boolean value
     */
    boolValue?: pulumi.Input<boolean>;
    /**
     * float value
     */
    floatValue?: pulumi.Input<number>;
    /**
     * key
     */
    key?: pulumi.Input<string>;
    /**
     * string value
     */
    stringValue?: pulumi.Input<string>;
    /**
     * uint32 value
     */
    uint32Value?: pulumi.Input<number>;
    /**
     * uint64 value in string format
     */
    uint64Value?: pulumi.Input<string>;
    /**
     * value type
     */
    valueType?: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInst {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: string;
    /**
     * Detailed description of the network instance
     */
    description?: string;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: boolean;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: string;
    /**
     * Deprecated
     */
    dhcp?: boolean;
    /**
     * List of Static DNS entries
     */
    dnsLists?: inputs.GetEdgenodeDefaultNetInstDnsList[];
    /**
     * System defined universally unique ID of the network instance
     */
    id?: string;
    /**
     * DHCP Server Configuration
     */
    ips?: inputs.GetEdgenodeDefaultNetInstIp[];
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: string;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: inputs.GetEdgenodeDefaultNetInstLisp[];
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: string;
    oconfig?: string;
    /**
     * Service specific Config
     */
    opaques?: inputs.GetEdgenodeDefaultNetInstOpaque[];
    /**
     * name of port mapping in the model
     */
    port?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: {[key: string]: string};
    /**
     * id of the project in which network instance is created
     */
    projectId?: string;
    /**
     * system defined info for the object
     */
    revisions?: inputs.GetEdgenodeDefaultNetInstRevision[];
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: string;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: string;
}

export interface GetEdgenodeDefaultNetInstArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstDnsListArgs>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstIpArgs>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstLispArgs>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstOpaqueArgs>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstRevisionArgs>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInstDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetEdgenodeDefaultNetInstDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInstIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetEdgenodeDefaultNetInstIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetEdgenodeDefaultNetInstIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInstIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetEdgenodeDefaultNetInstIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInstLisp {
    allocate: boolean;
    allocationprefix: string;
    allocationprefixlen: number;
    exportprivate: boolean;
    lispiid: number;
    sps: inputs.GetEdgenodeDefaultNetInstLispSp[];
}

export interface GetEdgenodeDefaultNetInstLispArgs {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstLispSpArgs>[]>;
}

export interface GetEdgenodeDefaultNetInstLispSp {
    credential: string;
    nameOrIp: string;
    type: string;
}

export interface GetEdgenodeDefaultNetInstLispSpArgs {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInstOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetEdgenodeDefaultNetInstOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetEdgenodeDefaultNetInstOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInstOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetEdgenodeDefaultNetInstOpaqueLispSp[];
}

export interface GetEdgenodeDefaultNetInstOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDefaultNetInstOpaqueLispSpArgs>[]>;
}

export interface GetEdgenodeDefaultNetInstOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetEdgenodeDefaultNetInstOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetEdgenodeDefaultNetInstRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetEdgenodeDefaultNetInstRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetEdgenodeDevLocation {
    /**
     * City
     */
    city?: string;
    /**
     * Country code consisting of 2 capital letters as per ISO 3166-1 alpha2 standard
     */
    country?: string;
    /**
     * Free formatted location string
     */
    freeloc?: string;
    /**
     * Host name
     */
    hostname?: string;
    /**
     * Deprecated field: comma, separated lat, long
     */
    latlong?: string;
    /**
     * Ordered pair of (latitude, longitude) separated by comma (,). Latitude is the horizontal component used for geographic positioning; it is the angle between 0Â° (the equator) and Â±90Â° (north or south) at the poles measured in decimal degrees. It is the first value in an ordered pair. A negative number denotes a location south of the equator; a positive number is north. Longitude is the vertical component used for geographic positioning; it is the angle between 0Â° (the Prime Meridian) and Â±180Â° (westward or eastward) measured in decimal degrees. It is the second number in an ordered pair. A negative number indicates a location west of Greenwich, England; a positive number east.
     */
    loc?: string;
    /**
     * The name of the recipient, firm, or company at this geographical location.
     */
    org?: string;
    /**
     * Postal code (ZIP code for USA) of the geographical location
     */
    postal?: string;
    /**
     * Region
     */
    region?: string;
    /**
     * Single IP address, either in IPv4 or in IPv6 format
     */
    underlayIp?: string;
}

export interface GetEdgenodeDevLocationArgs {
    /**
     * City
     */
    city?: pulumi.Input<string>;
    /**
     * Country code consisting of 2 capital letters as per ISO 3166-1 alpha2 standard
     */
    country?: pulumi.Input<string>;
    /**
     * Free formatted location string
     */
    freeloc?: pulumi.Input<string>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
    /**
     * Deprecated field: comma, separated lat, long
     */
    latlong?: pulumi.Input<string>;
    /**
     * Ordered pair of (latitude, longitude) separated by comma (,). Latitude is the horizontal component used for geographic positioning; it is the angle between 0Â° (the equator) and Â±90Â° (north or south) at the poles measured in decimal degrees. It is the first value in an ordered pair. A negative number denotes a location south of the equator; a positive number is north. Longitude is the vertical component used for geographic positioning; it is the angle between 0Â° (the Prime Meridian) and Â±180Â° (westward or eastward) measured in decimal degrees. It is the second number in an ordered pair. A negative number indicates a location west of Greenwich, England; a positive number east.
     */
    loc?: pulumi.Input<string>;
    /**
     * The name of the recipient, firm, or company at this geographical location.
     */
    org?: pulumi.Input<string>;
    /**
     * Postal code (ZIP code for USA) of the geographical location
     */
    postal?: pulumi.Input<string>;
    /**
     * Region
     */
    region?: pulumi.Input<string>;
    /**
     * Single IP address, either in IPv4 or in IPv6 format
     */
    underlayIp?: pulumi.Input<string>;
}

export interface GetEdgenodeDlisp {
    /**
     * Client Address
     */
    clientAddr: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * EID allocation prefix
     */
    eidAllocationPrefix: string;
    /**
     * EID allocation prefix length
     */
    eidAllocationPrefixLen: number;
    /**
     * LISP instance
     */
    lispInstance: number;
    /**
     * List of Lisp servers
     */
    lispMapServers: inputs.GetEdgenodeDlispLispMapServer[];
    /**
     * TEMP : flag to indicate which version of LISP data plane should be running on the device
     */
    mode: string;
    /**
     * Zed development servers
     */
    zedServers: inputs.GetEdgenodeDlispZedServer[];
}

export interface GetEdgenodeDlispArgs {
    /**
     * Client Address
     */
    clientAddr: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * EID allocation prefix
     */
    eidAllocationPrefix: pulumi.Input<string>;
    /**
     * EID allocation prefix length
     */
    eidAllocationPrefixLen: pulumi.Input<number>;
    /**
     * LISP instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * List of Lisp servers
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDlispLispMapServerArgs>[]>;
    /**
     * TEMP : flag to indicate which version of LISP data plane should be running on the device
     */
    mode: pulumi.Input<string>;
    /**
     * Zed development servers
     */
    zedServers: pulumi.Input<pulumi.Input<inputs.GetEdgenodeDlispZedServerArgs>[]>;
}

export interface GetEdgenodeDlispLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetEdgenodeDlispLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetEdgenodeDlispZedServer {
    /**
     * EID
     */
    eIds: string[];
    /**
     * Hostname for dev zed server
     */
    hostName: string;
}

export interface GetEdgenodeDlispZedServerArgs {
    /**
     * EID
     */
    eIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Hostname for dev zed server
     */
    hostName: pulumi.Input<string>;
}

export interface GetEdgenodeEdgeviewconfig {
    appPolicies?: inputs.GetEdgenodeEdgeviewconfigAppPolicy[];
    devPolicies?: inputs.GetEdgenodeEdgeviewconfigDevPolicy[];
    extPolicies?: inputs.GetEdgenodeEdgeviewconfigExtPolicy[];
    generationId?: number;
    jwtInfos?: inputs.GetEdgenodeEdgeviewconfigJwtInfo[];
    token?: string;
}

export interface GetEdgenodeEdgeviewconfigArgs {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeEdgeviewconfigAppPolicyArgs>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeEdgeviewconfigDevPolicyArgs>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeEdgeviewconfigExtPolicyArgs>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.GetEdgenodeEdgeviewconfigJwtInfoArgs>[]>;
    token?: pulumi.Input<string>;
}

export interface GetEdgenodeEdgeviewconfigAppPolicy {
    allowApp?: boolean;
}

export interface GetEdgenodeEdgeviewconfigAppPolicyArgs {
    allowApp?: pulumi.Input<boolean>;
}

export interface GetEdgenodeEdgeviewconfigDevPolicy {
    allowDev?: boolean;
}

export interface GetEdgenodeEdgeviewconfigDevPolicyArgs {
    allowDev?: pulumi.Input<boolean>;
}

export interface GetEdgenodeEdgeviewconfigExtPolicy {
    allowExt?: boolean;
}

export interface GetEdgenodeEdgeviewconfigExtPolicyArgs {
    allowExt?: pulumi.Input<boolean>;
}

export interface GetEdgenodeEdgeviewconfigJwtInfo {
    allowSec?: number;
    dispUrl?: string;
    encrypt?: boolean;
    expireSec?: string;
    numInst?: number;
}

export interface GetEdgenodeEdgeviewconfigJwtInfoArgs {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface GetEdgenodeInterface {
    /**
     * cost of using this interface. Default is 0.
     */
    cost?: number;
    /**
     * Adapter Udage
     */
    intfUsage?: string;
    /**
     * name of interface in the manifest to which this network or adapter maps to
     */
    intfname?: string;
    /**
     * IP address: we will be needing this in cae of static network
     */
    ipaddr?: string;
    /**
     * mac address needs to be over-written in some cases
     */
    macaddr?: string;
    /**
     * network name: if attaching a network use netname
     */
    netname?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
}

export interface GetEdgenodeInterfaceArgs {
    /**
     * cost of using this interface. Default is 0.
     */
    cost?: pulumi.Input<number>;
    /**
     * Adapter Udage
     */
    intfUsage?: pulumi.Input<string>;
    /**
     * name of interface in the manifest to which this network or adapter maps to
     */
    intfname?: pulumi.Input<string>;
    /**
     * IP address: we will be needing this in cae of static network
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * mac address needs to be over-written in some cases
     */
    macaddr?: pulumi.Input<string>;
    /**
     * network name: if attaching a network use netname
     */
    netname?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetEdgenodeRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetEdgenodeRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetNetworkDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetNetworkDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetNetworkInstanceDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetNetworkInstanceDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetNetworkInstanceIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetNetworkInstanceIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetNetworkInstanceIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetNetworkInstanceIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetNetworkInstanceIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetNetworkInstanceIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetNetworkInstanceOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetNetworkInstanceOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetNetworkInstanceOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetNetworkInstanceOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetNetworkInstanceOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetNetworkInstanceOpaqueLispSp[];
}

export interface GetNetworkInstanceOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetNetworkInstanceOpaqueLispSpArgs>[]>;
}

export interface GetNetworkInstanceOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetNetworkInstanceOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetNetworkIp {
    deprecatedDhcp?: boolean;
    /**
     * DHCP type:
     * NETWORK_DHCP_TYPE_STATIC
     * NETWORK_DHCP_TYPE_PASSTHROUGH
     * NETWORK_DHCP_TYPE_CLIENT
     */
    dhcp?: string;
    /**
     * Range of IP addresses to be used for DHCP for IPAM management when dhcp is turned on. If none provided, system will default pool.
     */
    dhcpRanges?: inputs.GetNetworkIpDhcpRange[];
    /**
     * List of IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetNetworkIpArgs {
    deprecatedDhcp?: pulumi.Input<boolean>;
    /**
     * DHCP type:
     * NETWORK_DHCP_TYPE_STATIC
     * NETWORK_DHCP_TYPE_PASSTHROUGH
     * NETWORK_DHCP_TYPE_CLIENT
     */
    dhcp?: pulumi.Input<string>;
    /**
     * Range of IP addresses to be used for DHCP for IPAM management when dhcp is turned on. If none provided, system will default pool.
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetNetworkIpDhcpRangeArgs>[]>;
    /**
     * List of IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetNetworkIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetNetworkIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetNetworkProxy {
    /**
     * Proxy exceptions
     */
    exceptions?: string;
    /**
     * Enable WPAD (Web Proxy Auto Discovery) protocol to discover and download PAC file.
     */
    networkProxy?: boolean;
    /**
     * Network Proxy Certificates
     */
    networkProxyCerts?: string[];
    /**
     * URL for wpad.dat file to be downloaded. Used when network_proxy is set to False.
     */
    networkProxyUrl?: string;
    /**
     * Proxy configuration in a pacfile. Used when network_proxy is set to False.
     */
    pacfile?: string;
    /**
     * Net Proxy: protocol level proxies. Used when network_proxy is set to False.
     */
    proxies?: inputs.GetNetworkProxyProxy[];
}

export interface GetNetworkProxyArgs {
    /**
     * Proxy exceptions
     */
    exceptions?: pulumi.Input<string>;
    /**
     * Enable WPAD (Web Proxy Auto Discovery) protocol to discover and download PAC file.
     */
    networkProxy?: pulumi.Input<boolean>;
    /**
     * Network Proxy Certificates
     */
    networkProxyCerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * URL for wpad.dat file to be downloaded. Used when network_proxy is set to False.
     */
    networkProxyUrl?: pulumi.Input<string>;
    /**
     * Proxy configuration in a pacfile. Used when network_proxy is set to False.
     */
    pacfile?: pulumi.Input<string>;
    /**
     * Net Proxy: protocol level proxies. Used when network_proxy is set to False.
     */
    proxies?: pulumi.Input<pulumi.Input<inputs.GetNetworkProxyProxyArgs>[]>;
}

export interface GetNetworkProxyProxy {
    /**
     * Net Proxy Port
     */
    port?: number;
    /**
     * Net Proxy protocol:
     * NETWORK_PROXY_PROTO_HTTP
     * NETWORK_PROXY_PROTO_HTTPS
     * NETWORK_PROXY_PROTO_SOCKS
     * NETWORK_PROXY_PROTO_FTP
     * NETWORK_PROXY_PROTO_OTHER
     */
    proto?: string;
    /**
     * Net Proxy Server
     */
    server?: string;
}

export interface GetNetworkProxyProxyArgs {
    /**
     * Net Proxy Port
     */
    port?: pulumi.Input<number>;
    /**
     * Net Proxy protocol:
     * NETWORK_PROXY_PROTO_HTTP
     * NETWORK_PROXY_PROTO_HTTPS
     * NETWORK_PROXY_PROTO_SOCKS
     * NETWORK_PROXY_PROTO_FTP
     * NETWORK_PROXY_PROTO_OTHER
     */
    proto?: pulumi.Input<string>;
    /**
     * Net Proxy Server
     */
    server?: pulumi.Input<string>;
}

export interface GetNetworkRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetNetworkRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetNetworkWireless {
    /**
     * Cellular configuration
     */
    cellulars?: inputs.GetNetworkWirelessCellular[];
    /**
     * Type of Wireless Network:
     * NETWORK_WIRELESS_TYPE_WIFI
     * NETWORK_WIRELESS_TYPE_CELLULAR
     */
    type?: string;
    /**
     * Can be multiple APs on a single wlan, e.g. one for 2.5Ghz, other 5Ghz SSIDs
     */
    wifis?: inputs.GetNetworkWirelessWifi[];
}

export interface GetNetworkWirelessArgs {
    /**
     * Cellular configuration
     */
    cellulars?: pulumi.Input<pulumi.Input<inputs.GetNetworkWirelessCellularArgs>[]>;
    /**
     * Type of Wireless Network:
     * NETWORK_WIRELESS_TYPE_WIFI
     * NETWORK_WIRELESS_TYPE_CELLULAR
     */
    type?: pulumi.Input<string>;
    /**
     * Can be multiple APs on a single wlan, e.g. one for 2.5Ghz, other 5Ghz SSIDs
     */
    wifis?: pulumi.Input<pulumi.Input<inputs.GetNetworkWirelessWifiArgs>[]>;
}

export interface GetNetworkWirelessCellular {
    apn?: string;
    locationTracking?: boolean;
}

export interface GetNetworkWirelessCellularArgs {
    apn?: pulumi.Input<string>;
    locationTracking?: pulumi.Input<boolean>;
}

export interface GetNetworkWirelessWifi {
    identity?: string;
    /**
     * Key management scheme:
     * NETWORK_WIFIKEY_SCHEME_WPAPSK
     * NETWORK_WIFIKEY_SCHEME_WPAEAPPSK
     */
    keyScheme?: string;
    /**
     * Priority of connection, default is 0
     */
    priority?: number;
    wifiSsid?: string;
}

export interface GetNetworkWirelessWifiArgs {
    identity?: pulumi.Input<string>;
    /**
     * Key management scheme:
     * NETWORK_WIFIKEY_SCHEME_WPAPSK
     * NETWORK_WIFIKEY_SCHEME_WPAEAPPSK
     */
    keyScheme?: pulumi.Input<string>;
    /**
     * Priority of connection, default is 0
     */
    priority?: pulumi.Input<number>;
    wifiSsid?: pulumi.Input<string>;
}

export interface GetPatchEnvelopeArtifact {
    artifactMetaData?: string;
    base64Artifacts?: inputs.GetPatchEnvelopeArtifactBase64Artifact[];
    binaryArtifacts?: inputs.GetPatchEnvelopeArtifactBinaryArtifact[];
    format?: string;
    /**
     * System defined universally unique Id of the artifact.
     */
    id?: string;
}

export interface GetPatchEnvelopeArtifactArgs {
    artifactMetaData?: pulumi.Input<string>;
    base64Artifacts?: pulumi.Input<pulumi.Input<inputs.GetPatchEnvelopeArtifactBase64ArtifactArgs>[]>;
    binaryArtifacts?: pulumi.Input<pulumi.Input<inputs.GetPatchEnvelopeArtifactBinaryArtifactArgs>[]>;
    format?: pulumi.Input<string>;
    /**
     * System defined universally unique Id of the artifact.
     */
    id?: pulumi.Input<string>;
}

export interface GetPatchEnvelopeArtifactBase64Artifact {
    base64Data: string;
    base64MetaData?: string;
    fileNameToUse: string;
}

export interface GetPatchEnvelopeArtifactBase64ArtifactArgs {
    base64Data: pulumi.Input<string>;
    base64MetaData?: pulumi.Input<string>;
    fileNameToUse: pulumi.Input<string>;
}

export interface GetPatchEnvelopeArtifactBinaryArtifact {
    /**
     * Eve shall use the image name when fileNameToUse is empty
     * optional - this can be image type or size etc encoded into a single string.
     * only the application instance agents will interpret this.
     */
    blobMetaData?: string;
    fileNameToUse: string;
    imageId: string;
    imageName: string;
}

export interface GetPatchEnvelopeArtifactBinaryArtifactArgs {
    /**
     * Eve shall use the image name when fileNameToUse is empty
     * optional - this can be image type or size etc encoded into a single string.
     * only the application instance agents will interpret this.
     */
    blobMetaData?: pulumi.Input<string>;
    fileNameToUse: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    imageName: pulumi.Input<string>;
}

export interface GetProjectAppPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: inputs.GetProjectAppPolicyAppPolicy[];
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: inputs.GetProjectAppPolicyAttestationPolicy[];
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: {[key: string]: string};
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: inputs.GetProjectAppPolicyAzurePolicy[];
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: inputs.GetProjectAppPolicyClusterPolicy[];
    /**
     * Detailed description of the policy
     */
    description?: string;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: inputs.GetProjectAppPolicyEdgeviewPolicy[];
    /**
     * System defined universally unique Id of the policy request
     */
    id?: string;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: inputs.GetProjectAppPolicyLocalOperatorConsolePolicy[];
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: inputs.GetProjectAppPolicyModulePolicy[];
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: inputs.GetProjectAppPolicyNetworkPolicy[];
    /**
     * system defined info
     */
    revisions?: inputs.GetProjectAppPolicyRevision[];
    /**
     * status of the policy
     */
    status?: string;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: string;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: string;
    /**
     * type of policy
     */
    type?: string;
}

export interface GetProjectAppPolicyArgs {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyArgs>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAttestationPolicyArgs>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyArgs>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyClusterPolicyArgs>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyEdgeviewPolicyArgs>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyLocalOperatorConsolePolicyArgs>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyArgs>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyArgs>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyRevisionArgs>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectAppPolicyAppPolicyApp[];
}

export interface GetProjectAppPolicyAppPolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppArgs>[]>;
}

export interface GetProjectAppPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAppPolicyAppPolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAppPolicyAppPolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAppPolicyAppPolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAppPolicyAppPolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAppPolicyAppPolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAppPolicyAppPolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAppPolicyAppPolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAppPolicyAppPolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAppPolicyAppPolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAppPolicyAppPolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAppPolicyAppPolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAppPolicyAppPolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonPermission {
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyAppPolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAppPolicyAppPolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Attestation policy type
     */
    type: string;
}

export interface GetProjectAppPolicyAttestationPolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: string;
    /**
     * app password for rbac
     */
    appPassword: string;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndService[];
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: inputs.GetProjectAppPolicyAzurePolicyCertificate[];
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: string;
    customDeploymentManaged?: boolean;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * tenant id for rbac
     */
    tenantId: string;
}

export interface GetProjectAppPolicyAzurePolicyArgs {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceArgs>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyCertificateArgs>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsService[];
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubService[];
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceResourceGroup[];
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceArgs {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs>[]>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment[];
    serviceDetails?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail[];
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs {
    enrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs>[]>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: string;
    attachedIotHubsNames?: string[];
    certificateEnrollments?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment[];
    enableIotEdgeDevice?: boolean;
    mechanism?: string;
    symmetricKeyEnrollments?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment[];
    tags?: {[key: string]: string};
    tpmEnrollments?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment[];
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs>[]>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment[];
    individualCertificateEnrollment?: string;
    type?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment[];
    individualSymmetricKeyEnrollments?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment[];
    type?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs {
    registrationId?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs {
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail[];
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs>[]>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: string;
    /**
     * resource group region
     */
    region?: string;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: string;
}

export interface GetProjectAppPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: boolean;
    /**
     * base64 string of the parent certificate
     */
    cert?: string;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: string;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: inputs.GetProjectAppPolicyAzurePolicyCertificateEcdsaEncryption[];
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: boolean;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: string[];
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: inputs.GetProjectAppPolicyAzurePolicyCertificateIssuer[];
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: number;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: string;
    /**
     * base63 string of the public key
     */
    publicKey?: string;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: string;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: string;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: boolean;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: inputs.GetProjectAppPolicyAzurePolicyCertificateRsaEcryption[];
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: inputs.GetProjectAppPolicyAzurePolicyCertificateSanValue[];
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: string;
    signatureAlgorithm?: string;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: inputs.GetProjectAppPolicyAzurePolicyCertificateSubject[];
    /**
     * Certificate validatity start time
     */
    validFrom?: string;
    /**
     * Certificate validatity start time
     */
    validTill?: string;
}

export interface GetProjectAppPolicyAzurePolicyCertificateArgs {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyCertificateEcdsaEncryptionArgs>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyCertificateIssuerArgs>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyCertificateRsaEcryptionArgs>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyCertificateSanValueArgs>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyAzurePolicyCertificateSubjectArgs>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: string;
}

export interface GetProjectAppPolicyAzurePolicyCertificateEcdsaEncryptionArgs {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectAppPolicyAzurePolicyCertificateIssuerArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: string;
}

export interface GetProjectAppPolicyAzurePolicyCertificateRsaEcryptionArgs {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: string[];
    /**
     * List of permitted email addresses.
     */
    emaildIds?: string[];
    /**
     * List of permitted hosts.
     */
    hosts?: string[];
    /**
     * List of permitted IP addresses.
     */
    ips?: string[];
    /**
     * List of permitted User principal names.
     */
    upns?: string[];
    /**
     * List of permitted URIs.
     */
    uris?: string[];
}

export interface GetProjectAppPolicyAzurePolicyCertificateSanValueArgs {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProjectAppPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectAppPolicyAzurePolicyCertificateSubjectArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: string;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: inputs.GetProjectAppPolicyClusterPolicyClusterConfig[];
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: string;
    /**
     * Type of cluster
     */
    type: string;
}

export interface GetProjectAppPolicyClusterPolicyArgs {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyClusterPolicyClusterConfigArgs>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface GetProjectAppPolicyClusterPolicyClusterConfig {
    minNodesRequired?: number;
}

export interface GetProjectAppPolicyClusterPolicyClusterConfigArgs {
    minNodesRequired?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: boolean;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: boolean;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfg[];
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: number;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: number;
}

export interface GetProjectAppPolicyEdgeviewPolicyArgs {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgArgs>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgAppPolicy[];
    devPolicies?: inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgDevPolicy[];
    extPolicies?: inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgExtPolicy[];
    generationId?: number;
    jwtInfos?: inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgJwtInfo[];
    token?: string;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgArgs {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs>[]>;
    token?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: boolean;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs {
    allowApp?: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: boolean;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs {
    allowDev?: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: boolean;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs {
    allowExt?: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: number;
    dispUrl?: string;
    encrypt?: boolean;
    expireSec?: string;
    numInst?: number;
}

export interface GetProjectAppPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Local operator console URL
     */
    locUrl: string;
}

export interface GetProjectAppPolicyLocalOperatorConsolePolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectAppPolicyModulePolicyApp[];
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgent[];
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHub[];
    /**
     * etag for deployment
     */
    etag?: string;
    /**
     * unique id for deployment
     */
    id?: string;
    /**
     * Mapping of label variable keys and value
     */
    labels?: {[key: string]: string};
    /**
     * custom metrics for deployment
     */
    metrics?: inputs.GetProjectAppPolicyModulePolicyMetric[];
    /**
     * deployment priority of module manifest
     */
    priority: number;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: {[key: string]: string};
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: string;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: {[key: string]: string};
}

export interface GetProjectAppPolicyModulePolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppArgs>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentArgs>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubArgs>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyMetricArgs>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectAppPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAppPolicyModulePolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAppPolicyModulePolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAppPolicyModulePolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAppPolicyModulePolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAppPolicyModulePolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAppPolicyModulePolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAppPolicyModulePolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAppPolicyModulePolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAppPolicyModulePolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAppPolicyModulePolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAppPolicyModulePolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAppPolicyModulePolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonPermission {
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAppPolicyModulePolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonOwner[];
    permissions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs {
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeAgentParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonOwner[];
    permissions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs {
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAppPolicyModulePolicyAzureEdgeHubParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAppPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: {[key: string]: string};
    /**
     * Mapping of results variable keys and value
     */
    results?: {[key: string]: string};
}

export interface GetProjectAppPolicyModulePolicyMetricArgs {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectAppPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfig[];
}

export interface GetProjectAppPolicyNetworkPolicyArgs {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigArgs>[]>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: string;
    /**
     * Detailed description of the network instance
     */
    description?: string;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: boolean;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: string;
    /**
     * Deprecated
     */
    dhcp?: boolean;
    /**
     * List of Static DNS entries
     */
    dnsLists?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigDnsList[];
    /**
     * System defined universally unique ID of the network instance
     */
    id?: string;
    /**
     * DHCP Server Configuration
     */
    ips?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigIp[];
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: string;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigLisp[];
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: string;
    oconfig?: string;
    /**
     * Service specific Config
     */
    opaques?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaque[];
    /**
     * name of port mapping in the model
     */
    port?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: {[key: string]: string};
    /**
     * id of the project in which network instance is created
     */
    projectId?: string;
    /**
     * system defined info for the object
     */
    revisions?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigRevision[];
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: string;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigDnsListArgs>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigIpArgs>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigLispArgs>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueArgs>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigRevisionArgs>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: boolean;
    allocationprefix: string;
    allocationprefixlen: number;
    exportprivate: boolean;
    lispiid: number;
    sps: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigLispSp[];
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigLispArgs {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigLispSpArgs>[]>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: string;
    nameOrIp: string;
    type: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigLispSpArgs {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp[];
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs>[]>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectAppPolicyNetworkPolicyNetInstanceConfigRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectAppPolicyRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectAppPolicyRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: inputs.GetProjectAttestationPolicyAppPolicy[];
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: inputs.GetProjectAttestationPolicyAttestationPolicy[];
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: {[key: string]: string};
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: inputs.GetProjectAttestationPolicyAzurePolicy[];
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: inputs.GetProjectAttestationPolicyClusterPolicy[];
    /**
     * Detailed description of the policy
     */
    description?: string;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: inputs.GetProjectAttestationPolicyEdgeviewPolicy[];
    /**
     * System defined universally unique Id of the policy request
     */
    id?: string;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: inputs.GetProjectAttestationPolicyLocalOperatorConsolePolicy[];
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: inputs.GetProjectAttestationPolicyModulePolicy[];
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: inputs.GetProjectAttestationPolicyNetworkPolicy[];
    /**
     * system defined info
     */
    revisions?: inputs.GetProjectAttestationPolicyRevision[];
    /**
     * status of the policy
     */
    status?: string;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: string;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: string;
    /**
     * type of policy
     */
    type?: string;
}

export interface GetProjectAttestationPolicyArgs {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyArgs>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAttestationPolicyArgs>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyArgs>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyClusterPolicyArgs>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyEdgeviewPolicyArgs>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyLocalOperatorConsolePolicyArgs>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyArgs>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyArgs>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyRevisionArgs>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectAttestationPolicyAppPolicyApp[];
}

export interface GetProjectAttestationPolicyAppPolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppArgs>[]>;
}

export interface GetProjectAttestationPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAttestationPolicyAppPolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAttestationPolicyAppPolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonPermission {
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyAppPolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAttestationPolicyAppPolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Attestation policy type
     */
    type: string;
}

export interface GetProjectAttestationPolicyAttestationPolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: string;
    /**
     * app password for rbac
     */
    appPassword: string;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndService[];
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: inputs.GetProjectAttestationPolicyAzurePolicyCertificate[];
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: string;
    customDeploymentManaged?: boolean;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * tenant id for rbac
     */
    tenantId: string;
}

export interface GetProjectAttestationPolicyAzurePolicyArgs {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceArgs>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyCertificateArgs>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsService[];
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubService[];
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceResourceGroup[];
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceArgs {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs>[]>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment[];
    serviceDetails?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail[];
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs {
    enrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs>[]>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: string;
    attachedIotHubsNames?: string[];
    certificateEnrollments?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment[];
    enableIotEdgeDevice?: boolean;
    mechanism?: string;
    symmetricKeyEnrollments?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment[];
    tags?: {[key: string]: string};
    tpmEnrollments?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment[];
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs>[]>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment[];
    individualCertificateEnrollment?: string;
    type?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment[];
    individualSymmetricKeyEnrollments?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment[];
    type?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs {
    registrationId?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs {
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail[];
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs>[]>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: string;
    /**
     * resource group region
     */
    region?: string;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: string;
}

export interface GetProjectAttestationPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: boolean;
    /**
     * base64 string of the parent certificate
     */
    cert?: string;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: string;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: inputs.GetProjectAttestationPolicyAzurePolicyCertificateEcdsaEncryption[];
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: boolean;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: string[];
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: inputs.GetProjectAttestationPolicyAzurePolicyCertificateIssuer[];
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: number;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: string;
    /**
     * base63 string of the public key
     */
    publicKey?: string;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: string;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: string;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: boolean;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: inputs.GetProjectAttestationPolicyAzurePolicyCertificateRsaEcryption[];
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: inputs.GetProjectAttestationPolicyAzurePolicyCertificateSanValue[];
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: string;
    signatureAlgorithm?: string;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: inputs.GetProjectAttestationPolicyAzurePolicyCertificateSubject[];
    /**
     * Certificate validatity start time
     */
    validFrom?: string;
    /**
     * Certificate validatity start time
     */
    validTill?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateArgs {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyCertificateEcdsaEncryptionArgs>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyCertificateIssuerArgs>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyCertificateRsaEcryptionArgs>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyCertificateSanValueArgs>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyAzurePolicyCertificateSubjectArgs>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateEcdsaEncryptionArgs {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateIssuerArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateRsaEcryptionArgs {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: string[];
    /**
     * List of permitted email addresses.
     */
    emaildIds?: string[];
    /**
     * List of permitted hosts.
     */
    hosts?: string[];
    /**
     * List of permitted IP addresses.
     */
    ips?: string[];
    /**
     * List of permitted User principal names.
     */
    upns?: string[];
    /**
     * List of permitted URIs.
     */
    uris?: string[];
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateSanValueArgs {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectAttestationPolicyAzurePolicyCertificateSubjectArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: string;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: inputs.GetProjectAttestationPolicyClusterPolicyClusterConfig[];
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: string;
    /**
     * Type of cluster
     */
    type: string;
}

export interface GetProjectAttestationPolicyClusterPolicyArgs {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyClusterPolicyClusterConfigArgs>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyClusterPolicyClusterConfig {
    minNodesRequired?: number;
}

export interface GetProjectAttestationPolicyClusterPolicyClusterConfigArgs {
    minNodesRequired?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: boolean;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: boolean;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfg[];
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: number;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: number;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyArgs {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgArgs>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgAppPolicy[];
    devPolicies?: inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgDevPolicy[];
    extPolicies?: inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgExtPolicy[];
    generationId?: number;
    jwtInfos?: inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgJwtInfo[];
    token?: string;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgArgs {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs>[]>;
    token?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: boolean;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs {
    allowApp?: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: boolean;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs {
    allowDev?: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: boolean;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs {
    allowExt?: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: number;
    dispUrl?: string;
    encrypt?: boolean;
    expireSec?: string;
    numInst?: number;
}

export interface GetProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Local operator console URL
     */
    locUrl: string;
}

export interface GetProjectAttestationPolicyLocalOperatorConsolePolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectAttestationPolicyModulePolicyApp[];
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgent[];
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHub[];
    /**
     * etag for deployment
     */
    etag?: string;
    /**
     * unique id for deployment
     */
    id?: string;
    /**
     * Mapping of label variable keys and value
     */
    labels?: {[key: string]: string};
    /**
     * custom metrics for deployment
     */
    metrics?: inputs.GetProjectAttestationPolicyModulePolicyMetric[];
    /**
     * deployment priority of module manifest
     */
    priority: number;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: {[key: string]: string};
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: string;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: {[key: string]: string};
}

export interface GetProjectAttestationPolicyModulePolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppArgs>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentArgs>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubArgs>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyMetricArgs>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectAttestationPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAttestationPolicyModulePolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAttestationPolicyModulePolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonPermission {
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonOwner[];
    permissions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs {
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeAgentParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonOwner[];
    permissions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs {
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectAttestationPolicyModulePolicyAzureEdgeHubParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectAttestationPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: {[key: string]: string};
    /**
     * Mapping of results variable keys and value
     */
    results?: {[key: string]: string};
}

export interface GetProjectAttestationPolicyModulePolicyMetricArgs {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectAttestationPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfig[];
}

export interface GetProjectAttestationPolicyNetworkPolicyArgs {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigArgs>[]>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: string;
    /**
     * Detailed description of the network instance
     */
    description?: string;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: boolean;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: string;
    /**
     * Deprecated
     */
    dhcp?: boolean;
    /**
     * List of Static DNS entries
     */
    dnsLists?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigDnsList[];
    /**
     * System defined universally unique ID of the network instance
     */
    id?: string;
    /**
     * DHCP Server Configuration
     */
    ips?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIp[];
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: string;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLisp[];
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: string;
    oconfig?: string;
    /**
     * Service specific Config
     */
    opaques?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaque[];
    /**
     * name of port mapping in the model
     */
    port?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: {[key: string]: string};
    /**
     * id of the project in which network instance is created
     */
    projectId?: string;
    /**
     * system defined info for the object
     */
    revisions?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigRevision[];
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: string;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigDnsListArgs>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpArgs>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispArgs>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueArgs>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigRevisionArgs>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: boolean;
    allocationprefix: string;
    allocationprefixlen: number;
    exportprivate: boolean;
    lispiid: number;
    sps: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispSp[];
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispArgs {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispSpArgs>[]>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: string;
    nameOrIp: string;
    type: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispSpArgs {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp[];
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs>[]>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectAttestationPolicyNetworkPolicyNetInstanceConfigRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectAttestationPolicyRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectAttestationPolicyRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectDeployment {
    /**
     * list of app instance policies
     */
    appInstPolicies?: inputs.GetProjectDeploymentAppInstPolicy[];
    /**
     * cluster policy details
     */
    clusterPolicies?: inputs.GetProjectDeploymentClusterPolicy[];
    /**
     * user defined tag for the deployment, which is used while targeting set of devices
     */
    deploymentTag?: string;
    /**
     * list of device policies
     */
    devicePolicies?: inputs.GetProjectDeploymentDevicePolicy[];
    /**
     * system generated unique id for an deployment
     */
    id?: string;
    /**
     * integration policy details
     */
    integrationPolicies?: inputs.GetProjectDeploymentIntegrationPolicy[];
    /**
     * user defined name for the deployment
     */
    name?: string;
    /**
     * list of network instance policies
     */
    networkInstPolicies?: inputs.GetProjectDeploymentNetworkInstPolicy[];
    /**
     * object revision
     */
    revisions?: inputs.GetProjectDeploymentRevision[];
    /**
     * user defined title for the deployment
     */
    title?: string;
    /**
     * list of volume instamce policies
     */
    volumeInstPolicies?: inputs.GetProjectDeploymentVolumeInstPolicy[];
}

export interface GetProjectDeploymentArgs {
    /**
     * list of app instance policies
     */
    appInstPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyArgs>[]>;
    /**
     * cluster policy details
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentClusterPolicyArgs>[]>;
    /**
     * user defined tag for the deployment, which is used while targeting set of devices
     */
    deploymentTag?: pulumi.Input<string>;
    /**
     * list of device policies
     */
    devicePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentDevicePolicyArgs>[]>;
    /**
     * system generated unique id for an deployment
     */
    id?: pulumi.Input<string>;
    /**
     * integration policy details
     */
    integrationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentIntegrationPolicyArgs>[]>;
    /**
     * user defined name for the deployment
     */
    name?: pulumi.Input<string>;
    /**
     * list of network instance policies
     */
    networkInstPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyArgs>[]>;
    /**
     * object revision
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentRevisionArgs>[]>;
    /**
     * user defined title for the deployment
     */
    title?: pulumi.Input<string>;
    /**
     * list of volume instamce policies
     */
    volumeInstPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentVolumeInstPolicyArgs>[]>;
}

export interface GetProjectDeploymentAppInstPolicy {
    /**
     * app instance config for automated deployment
     */
    appInstConfigs?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfig[];
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: inputs.GetProjectDeploymentAppInstPolicyMetaData[];
}

export interface GetProjectDeploymentAppInstPolicyArgs {
    /**
     * app instance config for automated deployment
     */
    appInstConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigArgs>[]>;
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyMetaDataArgs>[]>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfig {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    bundleId?: string;
    /**
     * current bundle version
     */
    bundleVersion?: number;
    /**
     * user defined cpus for bundle
     */
    cpus?: number;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterface[];
    /**
     * App Instance logs
     */
    logs?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigLog[];
    /**
     * user defined manifest in JSON format
     */
    manifestJsons?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory?: number;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks?: number;
    /**
     * this flag denotes whether there is latest bundle available in the marketplace or not
     */
    newBundleVersionAvailable?: boolean;
    /**
     * origin of object
     */
    originType?: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigParentDetail[];
    /**
     * Remote console flag
     */
    remoteConsole?: boolean;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * virtual machine info
     */
    vminfos?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigVminfo[];
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    bundleId?: pulumi.Input<string>;
    /**
     * current bundle version
     */
    bundleVersion?: pulumi.Input<number>;
    /**
     * user defined cpus for bundle
     */
    cpus?: pulumi.Input<number>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceArgs>[]>;
    /**
     * App Instance logs
     */
    logs?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigLogArgs>[]>;
    /**
     * user defined manifest in JSON format
     */
    manifestJsons?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory?: pulumi.Input<number>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks?: pulumi.Input<number>;
    /**
     * this flag denotes whether there is latest bundle available in the marketplace or not
     */
    newBundleVersionAvailable?: pulumi.Input<boolean>;
    /**
     * origin of object
     */
    originType?: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigParentDetailArgs>[]>;
    /**
     * Remote console flag
     */
    remoteConsole?: pulumi.Input<boolean>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * virtual machine info
     */
    vminfos?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigVminfoArgs>[]>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigLog {
    /**
     * Flags to enable / disable sending of logs generated by app instance to zedcloud
     */
    access: boolean;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigLogArgs {
    /**
     * Flags to enable / disable sending of logs generated by app instance to zedcloud
     */
    access: pulumi.Input<boolean>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonOwner[];
    permissions?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonPermission {
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonPermissionArgs {
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigVminfo {
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * CPUs
     */
    cpus: number;
    /**
     * Memory
     */
    memory?: number;
    /**
     * Hardware Virtualization
     */
    mode?: string;
    /**
     * VNC
     */
    vnc: boolean;
    /**
     * VNC display
     */
    vncDisplay?: number;
}

export interface GetProjectDeploymentAppInstPolicyAppInstConfigVminfoArgs {
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * CPUs
     */
    cpus: pulumi.Input<number>;
    /**
     * Memory
     */
    memory?: pulumi.Input<number>;
    /**
     * Hardware Virtualization
     */
    mode?: pulumi.Input<string>;
    /**
     * VNC
     */
    vnc: pulumi.Input<boolean>;
    /**
     * VNC display
     */
    vncDisplay?: pulumi.Input<number>;
}

export interface GetProjectDeploymentAppInstPolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: string;
    /**
     * user defined policy name
     */
    name?: string;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: {[key: string]: string};
    /**
     * object revision details
     */
    revisions?: inputs.GetProjectDeploymentAppInstPolicyMetaDataRevision[];
    /**
     * user defined key-value pairs of a policy
     */
    tags?: {[key: string]: string};
    /**
     * user defined policy title
     */
    title?: string;
}

export interface GetProjectDeploymentAppInstPolicyMetaDataArgs {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentAppInstPolicyMetaDataRevisionArgs>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface GetProjectDeploymentAppInstPolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetProjectDeploymentAppInstPolicyMetaDataRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetProjectDeploymentClusterPolicy {
    id?: string;
    name?: string;
    revisions?: inputs.GetProjectDeploymentClusterPolicyRevision[];
    title?: string;
}

export interface GetProjectDeploymentClusterPolicyArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentClusterPolicyRevisionArgs>[]>;
    title?: pulumi.Input<string>;
}

export interface GetProjectDeploymentClusterPolicyRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetProjectDeploymentClusterPolicyRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetProjectDeploymentDevicePolicy {
    /**
     * device attestation policy
     */
    attestationPolicies?: inputs.GetProjectDeploymentDevicePolicyAttestationPolicy[];
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: inputs.GetProjectDeploymentDevicePolicyMetaData[];
    /**
     * device policy type
     */
    policySubType?: string;
}

export interface GetProjectDeploymentDevicePolicyArgs {
    /**
     * device attestation policy
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentDevicePolicyAttestationPolicyArgs>[]>;
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentDevicePolicyMetaDataArgs>[]>;
    /**
     * device policy type
     */
    policySubType?: pulumi.Input<string>;
}

export interface GetProjectDeploymentDevicePolicyAttestationPolicy {
    /**
     * Attestation policy type
     */
    type: string;
}

export interface GetProjectDeploymentDevicePolicyAttestationPolicyArgs {
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface GetProjectDeploymentDevicePolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: string;
    /**
     * user defined policy name
     */
    name?: string;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: {[key: string]: string};
    /**
     * object revision details
     */
    revisions?: inputs.GetProjectDeploymentDevicePolicyMetaDataRevision[];
    /**
     * user defined key-value pairs of a policy
     */
    tags?: {[key: string]: string};
    /**
     * user defined policy title
     */
    title?: string;
}

export interface GetProjectDeploymentDevicePolicyMetaDataArgs {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentDevicePolicyMetaDataRevisionArgs>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface GetProjectDeploymentDevicePolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetProjectDeploymentDevicePolicyMetaDataRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetProjectDeploymentIntegrationPolicy {
    id?: string;
    name?: string;
    revisions?: inputs.GetProjectDeploymentIntegrationPolicyRevision[];
    title?: string;
}

export interface GetProjectDeploymentIntegrationPolicyArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentIntegrationPolicyRevisionArgs>[]>;
    title?: pulumi.Input<string>;
}

export interface GetProjectDeploymentIntegrationPolicyRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetProjectDeploymentIntegrationPolicyRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicy {
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: inputs.GetProjectDeploymentNetworkInstPolicyMetaData[];
    /**
     * network instance config details
     */
    netInstConfigs?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfig[];
}

export interface GetProjectDeploymentNetworkInstPolicyArgs {
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyMetaDataArgs>[]>;
    /**
     * network instance config details
     */
    netInstConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigArgs>[]>;
}

export interface GetProjectDeploymentNetworkInstPolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: string;
    /**
     * user defined policy name
     */
    name?: string;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: {[key: string]: string};
    /**
     * object revision details
     */
    revisions?: inputs.GetProjectDeploymentNetworkInstPolicyMetaDataRevision[];
    /**
     * user defined key-value pairs of a policy
     */
    tags?: {[key: string]: string};
    /**
     * user defined policy title
     */
    title?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyMetaDataArgs {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyMetaDataRevisionArgs>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyMetaDataRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: string;
    /**
     * Detailed description of the network instance
     */
    description?: string;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: boolean;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: string;
    /**
     * Deprecated
     */
    dhcp?: boolean;
    /**
     * List of Static DNS entries
     */
    dnsLists?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigDnsList[];
    /**
     * System defined universally unique ID of the network instance
     */
    id?: string;
    /**
     * DHCP Server Configuration
     */
    ips?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigIp[];
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: string;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigLisp[];
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: string;
    oconfig?: string;
    /**
     * Service specific Config
     */
    opaques?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaque[];
    /**
     * name of port mapping in the model
     */
    port?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: {[key: string]: string};
    /**
     * id of the project in which network instance is created
     */
    projectId?: string;
    /**
     * system defined info for the object
     */
    revisions?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigRevision[];
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: string;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigDnsListArgs>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigIpArgs>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigLispArgs>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueArgs>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigRevisionArgs>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigLisp {
    allocate: boolean;
    allocationprefix: string;
    allocationprefixlen: number;
    exportprivate: boolean;
    lispiid: number;
    sps: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigLispSp[];
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigLispArgs {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigLispSpArgs>[]>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigLispSp {
    credential: string;
    nameOrIp: string;
    type: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigLispSpArgs {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispSp[];
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispSpArgs>[]>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectDeploymentNetworkInstPolicyNetInstConfigRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectDeploymentRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetProjectDeploymentRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetProjectDeploymentVolumeInstPolicy {
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: inputs.GetProjectDeploymentVolumeInstPolicyMetaData[];
    /**
     * volume instance config details
     */
    volInstConfigs?: inputs.GetProjectDeploymentVolumeInstPolicyVolInstConfig[];
}

export interface GetProjectDeploymentVolumeInstPolicyArgs {
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentVolumeInstPolicyMetaDataArgs>[]>;
    /**
     * volume instance config details
     */
    volInstConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentVolumeInstPolicyVolInstConfigArgs>[]>;
}

export interface GetProjectDeploymentVolumeInstPolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: string;
    /**
     * user defined policy name
     */
    name?: string;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: {[key: string]: string};
    /**
     * object revision details
     */
    revisions?: inputs.GetProjectDeploymentVolumeInstPolicyMetaDataRevision[];
    /**
     * user defined key-value pairs of a policy
     */
    tags?: {[key: string]: string};
    /**
     * user defined policy title
     */
    title?: string;
}

export interface GetProjectDeploymentVolumeInstPolicyMetaDataArgs {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentVolumeInstPolicyMetaDataRevisionArgs>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface GetProjectDeploymentVolumeInstPolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: string;
    /**
     * User data: Created By
     */
    createdBy?: string;
    /**
     * Current Database version of the record
     */
    curr?: string;
    /**
     * Previous
     */
    prev?: string;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: string;
    /**
     * User data: Updated By
     */
    updatedBy?: string;
}

export interface GetProjectDeploymentVolumeInstPolicyMetaDataRevisionArgs {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface GetProjectDeploymentVolumeInstPolicyVolInstConfig {
    /**
     * Access mode
     */
    accessmode?: string;
    /**
     * flag to keep the contents of the volume unencrypted (in clear text)
     */
    cleartext?: boolean;
    /**
     * content tree ID
     */
    contentTreeId?: string;
    /**
     * Detailed description of the volume instance.
     */
    description?: string;
    /**
     * id of the device on which volume instance is created
     */
    deviceId: string;
    /**
     * System defined universally unique Id of the volume instance.
     */
    id?: string;
    /**
     * name of the image
     */
    image?: string;
    /**
     * flag to create implicit volumes
     */
    implicit?: boolean;
    /**
     * label
     */
    label?: string;
    /**
     * flag to enable the volume to be attached to multiple app instances
     */
    multiattach?: boolean;
    /**
     * User defined name of the volume instance, unique across the enterprise. Once object is created, name canâ€™t be changed.
     */
    name: string;
    /**
     * id of the project in which the volume instance is created
     */
    projectId?: string;
    /**
     * system defined Revision info of the object
     */
    revisions?: inputs.GetProjectDeploymentVolumeInstPolicyVolInstConfigRevision[];
    /**
     * size of volume
     */
    sizeBytes?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the volume instance. Title can be changed at any time.
     */
    title: string;
    /**
     * type of Volume Instance
     */
    type: string;
}

export interface GetProjectDeploymentVolumeInstPolicyVolInstConfigArgs {
    /**
     * Access mode
     */
    accessmode?: pulumi.Input<string>;
    /**
     * flag to keep the contents of the volume unencrypted (in clear text)
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * content tree ID
     */
    contentTreeId?: pulumi.Input<string>;
    /**
     * Detailed description of the volume instance.
     */
    description?: pulumi.Input<string>;
    /**
     * id of the device on which volume instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * System defined universally unique Id of the volume instance.
     */
    id?: pulumi.Input<string>;
    /**
     * name of the image
     */
    image?: pulumi.Input<string>;
    /**
     * flag to create implicit volumes
     */
    implicit?: pulumi.Input<boolean>;
    /**
     * label
     */
    label?: pulumi.Input<string>;
    /**
     * flag to enable the volume to be attached to multiple app instances
     */
    multiattach?: pulumi.Input<boolean>;
    /**
     * User defined name of the volume instance, unique across the enterprise. Once object is created, name canâ€™t be changed.
     */
    name: pulumi.Input<string>;
    /**
     * id of the project in which the volume instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined Revision info of the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentVolumeInstPolicyVolInstConfigRevisionArgs>[]>;
    /**
     * size of volume
     */
    sizeBytes?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the volume instance. Title can be changed at any time.
     */
    title: pulumi.Input<string>;
    /**
     * type of Volume Instance
     */
    type: pulumi.Input<string>;
}

export interface GetProjectDeploymentVolumeInstPolicyVolInstConfigRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectDeploymentVolumeInstPolicyVolInstConfigRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: inputs.GetProjectEdgeviewPolicyAppPolicy[];
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: inputs.GetProjectEdgeviewPolicyAttestationPolicy[];
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: {[key: string]: string};
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: inputs.GetProjectEdgeviewPolicyAzurePolicy[];
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: inputs.GetProjectEdgeviewPolicyClusterPolicy[];
    /**
     * Detailed description of the policy
     */
    description?: string;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: inputs.GetProjectEdgeviewPolicyEdgeviewPolicy[];
    /**
     * System defined universally unique Id of the policy request
     */
    id?: string;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: inputs.GetProjectEdgeviewPolicyLocalOperatorConsolePolicy[];
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: inputs.GetProjectEdgeviewPolicyModulePolicy[];
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: inputs.GetProjectEdgeviewPolicyNetworkPolicy[];
    /**
     * system defined info
     */
    revisions?: inputs.GetProjectEdgeviewPolicyRevision[];
    /**
     * status of the policy
     */
    status?: string;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: string;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: string;
    /**
     * type of policy
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyArgs {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyArgs>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAttestationPolicyArgs>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyArgs>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyClusterPolicyArgs>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyEdgeviewPolicyArgs>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyLocalOperatorConsolePolicyArgs>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyArgs>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyArgs>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyRevisionArgs>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectEdgeviewPolicyAppPolicyApp[];
}

export interface GetProjectEdgeviewPolicyAppPolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectEdgeviewPolicyAppPolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonPermission {
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectEdgeviewPolicyAppPolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Attestation policy type
     */
    type: string;
}

export interface GetProjectEdgeviewPolicyAttestationPolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: string;
    /**
     * app password for rbac
     */
    appPassword: string;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndService[];
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: inputs.GetProjectEdgeviewPolicyAzurePolicyCertificate[];
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: string;
    customDeploymentManaged?: boolean;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * tenant id for rbac
     */
    tenantId: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyArgs {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceArgs>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateArgs>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsService[];
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubService[];
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceResourceGroup[];
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceArgs {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment[];
    serviceDetails?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail[];
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs {
    enrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: string;
    attachedIotHubsNames?: string[];
    certificateEnrollments?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment[];
    enableIotEdgeDevice?: boolean;
    mechanism?: string;
    symmetricKeyEnrollments?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment[];
    tags?: {[key: string]: string};
    tpmEnrollments?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment[];
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment[];
    individualCertificateEnrollment?: string;
    type?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment[];
    individualSymmetricKeyEnrollments?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment[];
    type?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs {
    registrationId?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs {
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail[];
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs>[]>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: string;
    /**
     * resource group region
     */
    region?: string;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: boolean;
    /**
     * base64 string of the parent certificate
     */
    cert?: string;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: string;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateEcdsaEncryption[];
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: boolean;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: string[];
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateIssuer[];
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: number;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: string;
    /**
     * base63 string of the public key
     */
    publicKey?: string;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: string;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: string;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: boolean;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateRsaEcryption[];
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateSanValue[];
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: string;
    signatureAlgorithm?: string;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateSubject[];
    /**
     * Certificate validatity start time
     */
    validFrom?: string;
    /**
     * Certificate validatity start time
     */
    validTill?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateArgs {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateEcdsaEncryptionArgs>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateIssuerArgs>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateRsaEcryptionArgs>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateSanValueArgs>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyAzurePolicyCertificateSubjectArgs>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateEcdsaEncryptionArgs {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateIssuerArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateRsaEcryptionArgs {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: string[];
    /**
     * List of permitted email addresses.
     */
    emaildIds?: string[];
    /**
     * List of permitted hosts.
     */
    hosts?: string[];
    /**
     * List of permitted IP addresses.
     */
    ips?: string[];
    /**
     * List of permitted User principal names.
     */
    upns?: string[];
    /**
     * List of permitted URIs.
     */
    uris?: string[];
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateSanValueArgs {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectEdgeviewPolicyAzurePolicyCertificateSubjectArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: string;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: inputs.GetProjectEdgeviewPolicyClusterPolicyClusterConfig[];
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: string;
    /**
     * Type of cluster
     */
    type: string;
}

export interface GetProjectEdgeviewPolicyClusterPolicyArgs {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyClusterPolicyClusterConfigArgs>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyClusterPolicyClusterConfig {
    minNodesRequired?: number;
}

export interface GetProjectEdgeviewPolicyClusterPolicyClusterConfigArgs {
    minNodesRequired?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: boolean;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: boolean;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfg[];
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: number;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: number;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyArgs {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgArgs>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgAppPolicy[];
    devPolicies?: inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgDevPolicy[];
    extPolicies?: inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgExtPolicy[];
    generationId?: number;
    jwtInfos?: inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgJwtInfo[];
    token?: string;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgArgs {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs>[]>;
    token?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: boolean;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs {
    allowApp?: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: boolean;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs {
    allowDev?: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: boolean;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs {
    allowExt?: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: number;
    dispUrl?: string;
    encrypt?: boolean;
    expireSec?: string;
    numInst?: number;
}

export interface GetProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Local operator console URL
     */
    locUrl: string;
}

export interface GetProjectEdgeviewPolicyLocalOperatorConsolePolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectEdgeviewPolicyModulePolicyApp[];
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgent[];
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHub[];
    /**
     * etag for deployment
     */
    etag?: string;
    /**
     * unique id for deployment
     */
    id?: string;
    /**
     * Mapping of label variable keys and value
     */
    labels?: {[key: string]: string};
    /**
     * custom metrics for deployment
     */
    metrics?: inputs.GetProjectEdgeviewPolicyModulePolicyMetric[];
    /**
     * deployment priority of module manifest
     */
    priority: number;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: {[key: string]: string};
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: string;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: {[key: string]: string};
}

export interface GetProjectEdgeviewPolicyModulePolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppArgs>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentArgs>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubArgs>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyMetricArgs>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectEdgeviewPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectEdgeviewPolicyModulePolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonPermission {
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonOwner[];
    permissions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs {
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeAgentParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonOwner[];
    permissions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs {
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectEdgeviewPolicyModulePolicyAzureEdgeHubParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectEdgeviewPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: {[key: string]: string};
    /**
     * Mapping of results variable keys and value
     */
    results?: {[key: string]: string};
}

export interface GetProjectEdgeviewPolicyModulePolicyMetricArgs {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfig[];
}

export interface GetProjectEdgeviewPolicyNetworkPolicyArgs {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigArgs>[]>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: string;
    /**
     * Detailed description of the network instance
     */
    description?: string;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: boolean;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: string;
    /**
     * Deprecated
     */
    dhcp?: boolean;
    /**
     * List of Static DNS entries
     */
    dnsLists?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigDnsList[];
    /**
     * System defined universally unique ID of the network instance
     */
    id?: string;
    /**
     * DHCP Server Configuration
     */
    ips?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIp[];
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: string;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLisp[];
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: string;
    oconfig?: string;
    /**
     * Service specific Config
     */
    opaques?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaque[];
    /**
     * name of port mapping in the model
     */
    port?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: {[key: string]: string};
    /**
     * id of the project in which network instance is created
     */
    projectId?: string;
    /**
     * system defined info for the object
     */
    revisions?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigRevision[];
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: string;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigDnsListArgs>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpArgs>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispArgs>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueArgs>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigRevisionArgs>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: boolean;
    allocationprefix: string;
    allocationprefixlen: number;
    exportprivate: boolean;
    lispiid: number;
    sps: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispSp[];
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispArgs {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispSpArgs>[]>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: string;
    nameOrIp: string;
    type: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispSpArgs {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp[];
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs>[]>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectEdgeviewPolicyRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectEdgeviewPolicyRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicy[];
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: inputs.GetProjectLocalOperatorConsolePolicyAttestationPolicy[];
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: {[key: string]: string};
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicy[];
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: inputs.GetProjectLocalOperatorConsolePolicyClusterPolicy[];
    /**
     * Detailed description of the policy
     */
    description?: string;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicy[];
    /**
     * System defined universally unique Id of the policy request
     */
    id?: string;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: inputs.GetProjectLocalOperatorConsolePolicyLocalOperatorConsolePolicy[];
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicy[];
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicy[];
    /**
     * system defined info
     */
    revisions?: inputs.GetProjectLocalOperatorConsolePolicyRevision[];
    /**
     * status of the policy
     */
    status?: string;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: string;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: string;
    /**
     * type of policy
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyArgs {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyArgs>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAttestationPolicyArgs>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyArgs>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyClusterPolicyArgs>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyArgs>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyLocalOperatorConsolePolicyArgs>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyArgs>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyArgs>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyRevisionArgs>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyApp[];
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonPermission {
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectLocalOperatorConsolePolicyAppPolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Attestation policy type
     */
    type: string;
}

export interface GetProjectLocalOperatorConsolePolicyAttestationPolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: string;
    /**
     * app password for rbac
     */
    appPassword: string;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndService[];
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificate[];
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: string;
    customDeploymentManaged?: boolean;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * tenant id for rbac
     */
    tenantId: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyArgs {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceArgs>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateArgs>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsService[];
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubService[];
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceResourceGroup[];
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceArgs {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment[];
    serviceDetails?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail[];
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs {
    enrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: string;
    attachedIotHubsNames?: string[];
    certificateEnrollments?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment[];
    enableIotEdgeDevice?: boolean;
    mechanism?: string;
    symmetricKeyEnrollments?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment[];
    tags?: {[key: string]: string};
    tpmEnrollments?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment[];
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment[];
    individualCertificateEnrollment?: string;
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment[];
    individualSymmetricKeyEnrollments?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment[];
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs {
    registrationId?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs {
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail[];
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: string;
    /**
     * resource group region
     */
    region?: string;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: boolean;
    /**
     * base64 string of the parent certificate
     */
    cert?: string;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: string;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateEcdsaEncryption[];
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: boolean;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: string[];
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateIssuer[];
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: number;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: string;
    /**
     * base63 string of the public key
     */
    publicKey?: string;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: string;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: string;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: boolean;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateRsaEcryption[];
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSanValue[];
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: string;
    signatureAlgorithm?: string;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSubject[];
    /**
     * Certificate validatity start time
     */
    validFrom?: string;
    /**
     * Certificate validatity start time
     */
    validTill?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateArgs {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateEcdsaEncryptionArgs>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateIssuerArgs>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateRsaEcryptionArgs>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSanValueArgs>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSubjectArgs>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateEcdsaEncryptionArgs {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateIssuerArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateRsaEcryptionArgs {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: string[];
    /**
     * List of permitted email addresses.
     */
    emaildIds?: string[];
    /**
     * List of permitted hosts.
     */
    hosts?: string[];
    /**
     * List of permitted IP addresses.
     */
    ips?: string[];
    /**
     * List of permitted User principal names.
     */
    upns?: string[];
    /**
     * List of permitted URIs.
     */
    uris?: string[];
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSanValueArgs {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectLocalOperatorConsolePolicyAzurePolicyCertificateSubjectArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: string;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: inputs.GetProjectLocalOperatorConsolePolicyClusterPolicyClusterConfig[];
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: string;
    /**
     * Type of cluster
     */
    type: string;
}

export interface GetProjectLocalOperatorConsolePolicyClusterPolicyArgs {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyClusterPolicyClusterConfigArgs>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyClusterPolicyClusterConfig {
    minNodesRequired?: number;
}

export interface GetProjectLocalOperatorConsolePolicyClusterPolicyClusterConfigArgs {
    minNodesRequired?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: boolean;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: boolean;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfg[];
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: number;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: number;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyArgs {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgArgs>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgAppPolicy[];
    devPolicies?: inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgDevPolicy[];
    extPolicies?: inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgExtPolicy[];
    generationId?: number;
    jwtInfos?: inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgJwtInfo[];
    token?: string;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgArgs {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs>[]>;
    token?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs {
    allowApp?: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs {
    allowDev?: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs {
    allowExt?: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: number;
    dispUrl?: string;
    encrypt?: boolean;
    expireSec?: string;
    numInst?: number;
}

export interface GetProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Local operator console URL
     */
    locUrl: string;
}

export interface GetProjectLocalOperatorConsolePolicyLocalOperatorConsolePolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyApp[];
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgent[];
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHub[];
    /**
     * etag for deployment
     */
    etag?: string;
    /**
     * unique id for deployment
     */
    id?: string;
    /**
     * Mapping of label variable keys and value
     */
    labels?: {[key: string]: string};
    /**
     * custom metrics for deployment
     */
    metrics?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyMetric[];
    /**
     * deployment priority of module manifest
     */
    priority: number;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: {[key: string]: string};
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: string;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: {[key: string]: string};
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppArgs>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentArgs>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubArgs>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyMetricArgs>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonPermission {
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonOwner[];
    permissions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs {
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonOwner[];
    permissions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs {
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: {[key: string]: string};
    /**
     * Mapping of results variable keys and value
     */
    results?: {[key: string]: string};
}

export interface GetProjectLocalOperatorConsolePolicyModulePolicyMetricArgs {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfig[];
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyArgs {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: string;
    /**
     * Detailed description of the network instance
     */
    description?: string;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: boolean;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: string;
    /**
     * Deprecated
     */
    dhcp?: boolean;
    /**
     * List of Static DNS entries
     */
    dnsLists?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigDnsList[];
    /**
     * System defined universally unique ID of the network instance
     */
    id?: string;
    /**
     * DHCP Server Configuration
     */
    ips?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIp[];
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: string;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLisp[];
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: string;
    oconfig?: string;
    /**
     * Service specific Config
     */
    opaques?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaque[];
    /**
     * name of port mapping in the model
     */
    port?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: {[key: string]: string};
    /**
     * id of the project in which network instance is created
     */
    projectId?: string;
    /**
     * system defined info for the object
     */
    revisions?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigRevision[];
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: string;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigDnsListArgs>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpArgs>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispArgs>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueArgs>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigRevisionArgs>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: boolean;
    allocationprefix: string;
    allocationprefixlen: number;
    exportprivate: boolean;
    lispiid: number;
    sps: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispSp[];
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispArgs {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispSpArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: string;
    nameOrIp: string;
    type: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispSpArgs {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispSp[];
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs>[]>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectLocalOperatorConsolePolicyRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectLocalOperatorConsolePolicyRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: inputs.GetProjectNetworkPolicyAppPolicy[];
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: inputs.GetProjectNetworkPolicyAttestationPolicy[];
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: {[key: string]: string};
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: inputs.GetProjectNetworkPolicyAzurePolicy[];
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: inputs.GetProjectNetworkPolicyClusterPolicy[];
    /**
     * Detailed description of the policy
     */
    description?: string;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: inputs.GetProjectNetworkPolicyEdgeviewPolicy[];
    /**
     * System defined universally unique Id of the policy request
     */
    id?: string;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: inputs.GetProjectNetworkPolicyLocalOperatorConsolePolicy[];
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: inputs.GetProjectNetworkPolicyModulePolicy[];
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: inputs.GetProjectNetworkPolicyNetworkPolicy[];
    /**
     * system defined info
     */
    revisions?: inputs.GetProjectNetworkPolicyRevision[];
    /**
     * status of the policy
     */
    status?: string;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: string;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: string;
    /**
     * type of policy
     */
    type?: string;
}

export interface GetProjectNetworkPolicyArgs {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyArgs>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAttestationPolicyArgs>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyArgs>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyClusterPolicyArgs>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyEdgeviewPolicyArgs>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyLocalOperatorConsolePolicyArgs>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyArgs>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyArgs>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyRevisionArgs>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectNetworkPolicyAppPolicyApp[];
}

export interface GetProjectNetworkPolicyAppPolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppArgs>[]>;
}

export interface GetProjectNetworkPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectNetworkPolicyAppPolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectNetworkPolicyAppPolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonPermission {
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyAppPolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectNetworkPolicyAppPolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Attestation policy type
     */
    type: string;
}

export interface GetProjectNetworkPolicyAttestationPolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: string;
    /**
     * app password for rbac
     */
    appPassword: string;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndService[];
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: inputs.GetProjectNetworkPolicyAzurePolicyCertificate[];
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: string;
    customDeploymentManaged?: boolean;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * tenant id for rbac
     */
    tenantId: string;
}

export interface GetProjectNetworkPolicyAzurePolicyArgs {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceArgs>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyCertificateArgs>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsService[];
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubService[];
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceResourceGroup[];
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceArgs {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs>[]>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment[];
    serviceDetails?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail[];
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceArgs {
    enrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs>[]>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: string;
    attachedIotHubsNames?: string[];
    certificateEnrollments?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment[];
    enableIotEdgeDevice?: boolean;
    mechanism?: string;
    symmetricKeyEnrollments?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment[];
    tags?: {[key: string]: string};
    tpmEnrollments?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment[];
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentArgs {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs>[]>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment[];
    individualCertificateEnrollment?: string;
    type?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentArgs {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment[];
    individualSymmetricKeyEnrollments?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment[];
    type?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentArgs {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs>[]>;
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollmentArgs {
    groupName?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollmentArgs {
    registrationId?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollmentArgs {
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail[];
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceArgs {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs>[]>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: boolean;
    name?: string;
    region?: string;
    resourceGroupName?: string;
    sKUs?: inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU[];
    subscriptionId?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailArgs {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: string;
    name?: string;
    tier?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKUArgs {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: string;
    /**
     * resource group region
     */
    region?: string;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: string;
}

export interface GetProjectNetworkPolicyAzurePolicyAzureResourceAndServiceResourceGroupArgs {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: boolean;
    /**
     * base64 string of the parent certificate
     */
    cert?: string;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: string;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: inputs.GetProjectNetworkPolicyAzurePolicyCertificateEcdsaEncryption[];
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: {[key: string]: string};
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: boolean;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: string[];
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: inputs.GetProjectNetworkPolicyAzurePolicyCertificateIssuer[];
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: number;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: string;
    /**
     * base63 string of the public key
     */
    publicKey?: string;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: string;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: string;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: boolean;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: inputs.GetProjectNetworkPolicyAzurePolicyCertificateRsaEcryption[];
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: inputs.GetProjectNetworkPolicyAzurePolicyCertificateSanValue[];
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: string;
    signatureAlgorithm?: string;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: inputs.GetProjectNetworkPolicyAzurePolicyCertificateSubject[];
    /**
     * Certificate validatity start time
     */
    validFrom?: string;
    /**
     * Certificate validatity start time
     */
    validTill?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateArgs {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyCertificateEcdsaEncryptionArgs>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyCertificateIssuerArgs>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyCertificateRsaEcryptionArgs>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyCertificateSanValueArgs>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyAzurePolicyCertificateSubjectArgs>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateEcdsaEncryptionArgs {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateIssuerArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateRsaEcryptionArgs {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: string[];
    /**
     * List of permitted email addresses.
     */
    emaildIds?: string[];
    /**
     * List of permitted hosts.
     */
    hosts?: string[];
    /**
     * List of permitted IP addresses.
     */
    ips?: string[];
    /**
     * List of permitted User principal names.
     */
    upns?: string[];
    /**
     * List of permitted URIs.
     */
    uris?: string[];
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateSanValueArgs {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: string;
    /**
     * List of countries.
     */
    countries?: string[];
    /**
     * List of locallity.
     */
    localities?: string[];
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: string[];
    /**
     * List of organization.
     */
    organizations?: string[];
    /**
     * List of Postal codes.
     */
    postalCodes?: string[];
    /**
     * List of List of Prvince.
     */
    provinces?: string[];
    /**
     * Subject cerial number
     */
    serialNumber?: string;
}

export interface GetProjectNetworkPolicyAzurePolicyCertificateSubjectArgs {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: string;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: inputs.GetProjectNetworkPolicyClusterPolicyClusterConfig[];
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: string;
    /**
     * Type of cluster
     */
    type: string;
}

export interface GetProjectNetworkPolicyClusterPolicyArgs {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyClusterPolicyClusterConfigArgs>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyClusterPolicyClusterConfig {
    minNodesRequired?: number;
}

export interface GetProjectNetworkPolicyClusterPolicyClusterConfigArgs {
    minNodesRequired?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: boolean;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: boolean;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfg[];
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: number;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: number;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyArgs {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgArgs>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgAppPolicy[];
    devPolicies?: inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgDevPolicy[];
    extPolicies?: inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgExtPolicy[];
    generationId?: number;
    jwtInfos?: inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgJwtInfo[];
    token?: string;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgArgs {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs>[]>;
    token?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: boolean;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgAppPolicyArgs {
    allowApp?: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: boolean;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgDevPolicyArgs {
    allowDev?: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: boolean;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgExtPolicyArgs {
    allowExt?: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: number;
    dispUrl?: string;
    encrypt?: boolean;
    expireSec?: string;
    numInst?: number;
}

export interface GetProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgJwtInfoArgs {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: string;
    /**
     * Local operator console URL
     */
    locUrl: string;
}

export interface GetProjectNetworkPolicyLocalOperatorConsolePolicyArgs {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: inputs.GetProjectNetworkPolicyModulePolicyApp[];
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgent[];
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHub[];
    /**
     * etag for deployment
     */
    etag?: string;
    /**
     * unique id for deployment
     */
    id?: string;
    /**
     * Mapping of label variable keys and value
     */
    labels?: {[key: string]: string};
    /**
     * custom metrics for deployment
     */
    metrics?: inputs.GetProjectNetworkPolicyModulePolicyMetric[];
    /**
     * deployment priority of module manifest
     */
    priority: number;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: {[key: string]: string};
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: string;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: {[key: string]: string};
}

export interface GetProjectNetworkPolicyModulePolicyArgs {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppArgs>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentArgs>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubArgs>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyMetricArgs>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectNetworkPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectNetworkPolicyModulePolicyAppInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectNetworkPolicyModulePolicyAppParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonOwner[];
    permissions?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonPermission {
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonPermissionArgs {
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAppManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAppParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonOwner[];
    permissions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonPermissionArgs {
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeAgentParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: string;
    /**
     * Current version of the attached bundle
     */
    appVersion?: string;
    /**
     * user defined cpus for bundle
     */
    cpus: number;
    /**
     * Detailed description of the edge application
     */
    description?: string;
    /**
     * user defined drives
     */
    drives?: number;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: string;
    /**
     * application interfaces
     */
    interfaces?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterface[];
    /**
     * Manifest data
     */
    manifestJsons: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJson[];
    /**
     * user defined memory for bundle
     */
    memory: number;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: string;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: string;
    /**
     * app naming scheme
     */
    namingScheme?: string;
    /**
     * user defined network options
     */
    networks: number;
    /**
     * origin of object
     */
    originType: string;
    /**
     * origin and parent related details
     */
    parentDetails?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubParentDetail[];
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: number;
    /**
     * user defined storage for bundle
     */
    storage?: number;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubArgs {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceArgs>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonArgs>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubParentDetailArgs>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: number;
    /**
     * app Acls
     */
    acls?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAcl[];
    /**
     * default instance flag
     */
    defaultNetInstance?: boolean;
    /**
     * direct attach flag
     */
    directattach?: boolean;
    /**
     * EID register details
     */
    eidregisters?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregister[];
    /**
     * intf Name
     */
    intfname: string;
    /**
     * intforder
     */
    intforder?: number;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceIo[];
    /**
     * IP address
     */
    ipaddr?: string;
    /**
     * MAC address
     */
    macaddr?: string;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: string;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: string;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: {[key: string]: string};
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: string;
    /**
     * Private IP flag
     */
    privateip: boolean;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceArgs {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclArgs>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceIoArgs>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclAction[];
    /**
     * app ACE id
     */
    id?: number;
    /**
     * app ACE match
     */
    matches?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclMatch[];
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclArgs {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: boolean;
    /**
     * ACE limit flag
     */
    limit?: boolean;
    /**
     * ACE limit burst
     */
    limitburst?: number;
    /**
     * ACE limit rate
     */
    limitrate?: number;
    /**
     * ACE limit unit
     */
    limitunit?: string;
    /**
     * Application map params
     */
    mapparams?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam[];
    /**
     * application port map flag
     */
    portmap?: boolean;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionArgs {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparamArgs {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: string;
    /**
     * Value
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclMatchArgs {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: string;
    /**
     * App private key
     */
    appPrivateKey?: string;
    /**
     * App public key
     */
    appPublicKey?: string;
    /**
     * Display name
     */
    displayName: string;
    /**
     * EID
     */
    eId: string;
    /**
     * EID hash length
     */
    eIdHashLen: number;
    /**
     * Lisp Instance
     */
    lispInstance: number;
    /**
     * Lisp Map Server
     */
    lispMapServers: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer[];
    /**
     * Lisp Signature
     */
    lispSignature: string;
    /**
     * UUID
     */
    uuid: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterArgs {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: string;
    /**
     * name/IP
     */
    nameOrIp: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServerArgs {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceIoArgs {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: string;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: string;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: string;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration[];
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail[];
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: boolean;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: string;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: string;
    /**
     * Description of the application
     */
    descs?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonDesc[];
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: string;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImage[];
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterface[];
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonModule[];
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: string;
    /**
     * Owner of the application
     */
    owners?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonOwner[];
    permissions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonPermission[];
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonResource[];
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonArgs {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationArgs {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: boolean;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: boolean;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: string;
    /**
     * Name of CustomConfig (Required)
     */
    name?: string;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: boolean;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: string;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigArgs {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition[];
    /**
     * Name of the Variable Group(Required)
     */
    name?: string;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: boolean;
    /**
     * List of variables(Required)
     */
    variables?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupArgs {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: string;
    operator?: string;
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupConditionArgs {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: string;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: string;
    /**
     * Format of the user variable. (Required)
     */
    format: string;
    /**
     * Label for the variable (Required)
     */
    label: string;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: string;
    /**
     * Name of the Variable (Required)
     */
    name: string;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption[];
    processInput?: string;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: boolean;
    type?: string;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableArgs {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: string;
    /**
     * Value of the key to be used
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOptionArgs {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetailArgs {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: {[key: string]: string};
    appCategory: string;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: string;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: {[key: string]: string};
    os?: string;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: {[key: string]: string};
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonDescArgs {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: string;
    params?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageParam[];
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: boolean;
    readonly?: boolean;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: string;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageArgs {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: string;
    /**
     * Value of the parameter (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageParamArgs {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl[];
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: boolean;
    /**
     * Interface name used by the edge application
     */
    name?: string;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: boolean;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: boolean;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceArgs {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction[];
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch[];
    /**
     * Name of the Access Control List
     */
    name?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclArgs {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: boolean;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue[];
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: boolean;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto[];
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionArgs {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs>[]>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: number;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValueArgs {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmaptoArgs {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: string;
    /**
     * Value of match (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatchArgs {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: {[key: string]: string};
    /**
     * Type of modules
     */
    moduleType?: string;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: {[key: string]: string};
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonModuleArgs {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: string;
    group?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: string;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonOwnerArgs {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonPermissionArgs {
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: string;
    /**
     * Value of Resource (Required)
     */
    value?: string;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonResourceArgs {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: string;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: boolean;
    /**
     * Update required flag
     */
    updateAvailable?: boolean;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: number;
}

export interface GetProjectNetworkPolicyModulePolicyAzureEdgeHubParentDetailArgs {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface GetProjectNetworkPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: {[key: string]: string};
    /**
     * Mapping of results variable keys and value
     */
    results?: {[key: string]: string};
}

export interface GetProjectNetworkPolicyModulePolicyMetricArgs {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetProjectNetworkPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfig[];
}

export interface GetProjectNetworkPolicyNetworkPolicyArgs {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigArgs>[]>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: string;
    /**
     * Detailed description of the network instance
     */
    description?: string;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: boolean;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: string;
    /**
     * Deprecated
     */
    dhcp?: boolean;
    /**
     * List of Static DNS entries
     */
    dnsLists?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigDnsList[];
    /**
     * System defined universally unique ID of the network instance
     */
    id?: string;
    /**
     * DHCP Server Configuration
     */
    ips?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIp[];
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: string;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLisp[];
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: string;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: string;
    oconfig?: string;
    /**
     * Service specific Config
     */
    opaques?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaque[];
    /**
     * name of port mapping in the model
     */
    port?: string;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: {[key: string]: string};
    /**
     * id of the project in which network instance is created
     */
    projectId?: string;
    /**
     * system defined info for the object
     */
    revisions?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigRevision[];
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: {[key: string]: string};
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: string;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigDnsListArgs>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpArgs>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispArgs>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueArgs>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigRevisionArgs>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: string[];
    /**
     * Host name
     */
    hostname?: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigDnsListArgs {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpDhcpRange[];
    /**
     * IP Addresses of DNS servers
     */
    dns?: string[];
    /**
     * Network domain
     */
    domain?: string;
    /**
     * IP Address of Network Gateway
     */
    gateway?: string;
    /**
     * Subnet Mask
     */
    mask?: string;
    /**
     * IP Address of NTP Server
     */
    ntp?: string;
    /**
     * Subnet address
     */
    subnet?: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpArgs {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: string;
    /**
     * starting IP
     */
    start?: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpDhcpRangeArgs {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: boolean;
    allocationprefix: string;
    allocationprefixlen: number;
    exportprivate: boolean;
    lispiid: number;
    sps: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispSp[];
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispArgs {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispSpArgs>[]>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: string;
    nameOrIp: string;
    type: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispSpArgs {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLisp[];
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: string;
    /**
     * type of Opaque config
     */
    type?: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueArgs {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: boolean;
    /**
     * Allocation Prefix
     */
    allocationprefix?: string;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: number;
    /**
     * Export Private flag
     */
    exportprivate?: boolean;
    /**
     * lisp id
     */
    lispiid?: number;
    /**
     * Service Point List
     */
    sps?: inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp[];
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispArgs {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs>[]>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: string;
    /**
     * Service name/ service name
     */
    nameOrIp?: string;
    /**
     * Service Point Type
     */
    type?: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispSpArgs {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectNetworkPolicyNetworkPolicyNetInstanceConfigRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetProjectNetworkPolicyRevision {
    createdAt: string;
    createdBy: string;
    curr: string;
    prev: string;
    updatedAt: string;
    updatedBy: string;
}

export interface GetProjectNetworkPolicyRevisionArgs {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface GetRoleScope {
    /**
     * Application access permission, this will be deprecated in further release - please use accessEdgeApp and accessAppInstance for granular permission access scope.
     */
    accessApp?: string;
    /**
     * Application Instance access permission
     */
    accessAppInstance?: string;
    /**
     * Device access permission
     */
    accessDevice?: string;
    /**
     * Edge app access permission
     */
    accessEdgeApp?: string;
    /**
     * Enterprise access permission
     */
    accessEnterprise?: string;
    /**
     * Storage access permission
     */
    accessStorage?: string;
    /**
     * User access permission
     */
    accessUser?: string;
    /**
     * List of enterprise filters
     */
    enterpriseFilters?: string[];
    /**
     * List of project filters
     */
    projectFilters?: string[];
    /**
     * Unique system defined scope ID
     */
    uuid?: string;
}

export interface GetRoleScopeArgs {
    /**
     * Application access permission, this will be deprecated in further release - please use accessEdgeApp and accessAppInstance for granular permission access scope.
     */
    accessApp?: pulumi.Input<string>;
    /**
     * Application Instance access permission
     */
    accessAppInstance?: pulumi.Input<string>;
    /**
     * Device access permission
     */
    accessDevice?: pulumi.Input<string>;
    /**
     * Edge app access permission
     */
    accessEdgeApp?: pulumi.Input<string>;
    /**
     * Enterprise access permission
     */
    accessEnterprise?: pulumi.Input<string>;
    /**
     * Storage access permission
     */
    accessStorage?: pulumi.Input<string>;
    /**
     * User access permission
     */
    accessUser?: pulumi.Input<string>;
    /**
     * List of enterprise filters
     */
    enterpriseFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of project filters
     */
    projectFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique system defined scope ID
     */
    uuid?: pulumi.Input<string>;
}

export interface GetUserAllowedEnterprise {
    id?: string;
    name?: string;
    roleId?: string;
}

export interface GetUserAllowedEnterpriseArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleId?: pulumi.Input<string>;
}

export interface ImageRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface NetworkDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface NetworkInstanceDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface NetworkInstanceIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface NetworkInstanceIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface NetworkInstanceLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.NetworkInstanceLispSp>[]>;
}

export interface NetworkInstanceLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface NetworkInstanceOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface NetworkInstanceOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceOpaqueLispSp>[]>;
}

export interface NetworkInstanceOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface NetworkInstanceRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface NetworkIp {
    deprecatedDhcp?: pulumi.Input<boolean>;
    /**
     * DHCP type:
     * NETWORK_DHCP_TYPE_STATIC
     * NETWORK_DHCP_TYPE_PASSTHROUGH
     * NETWORK_DHCP_TYPE_CLIENT
     */
    dhcp?: pulumi.Input<string>;
    /**
     * Range of IP addresses to be used for DHCP for IPAM management when dhcp is turned on. If none provided, system will default pool.
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.NetworkIpDhcpRange>[]>;
    /**
     * List of IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface NetworkIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface NetworkProxy {
    /**
     * Proxy exceptions
     */
    exceptions?: pulumi.Input<string>;
    /**
     * Enable WPAD (Web Proxy Auto Discovery) protocol to discover and download PAC file.
     */
    networkProxy?: pulumi.Input<boolean>;
    /**
     * Network Proxy Certificates
     */
    networkProxyCerts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * URL for wpad.dat file to be downloaded. Used when network_proxy is set to False.
     */
    networkProxyUrl?: pulumi.Input<string>;
    /**
     * Proxy configuration in a pacfile. Used when network_proxy is set to False.
     */
    pacfile?: pulumi.Input<string>;
    /**
     * Net Proxy: protocol level proxies. Used when network_proxy is set to False.
     */
    proxies?: pulumi.Input<pulumi.Input<inputs.NetworkProxyProxy>[]>;
}

export interface NetworkProxyProxy {
    /**
     * Net Proxy Port
     */
    port?: pulumi.Input<number>;
    /**
     * Net Proxy protocol:
     * NETWORK_PROXY_PROTO_HTTP
     * NETWORK_PROXY_PROTO_HTTPS
     * NETWORK_PROXY_PROTO_SOCKS
     * NETWORK_PROXY_PROTO_FTP
     * NETWORK_PROXY_PROTO_OTHER
     */
    proto?: pulumi.Input<string>;
    /**
     * Net Proxy Server
     */
    server?: pulumi.Input<string>;
}

export interface NetworkRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface NetworkWireless {
    /**
     * Cellular configuration
     */
    cellulars?: pulumi.Input<pulumi.Input<inputs.NetworkWirelessCellular>[]>;
    /**
     * Type of Wireless Network:
     * NETWORK_WIRELESS_TYPE_WIFI
     * NETWORK_WIRELESS_TYPE_CELLULAR
     */
    type?: pulumi.Input<string>;
    /**
     * Can be multiple APs on a single wlan, e.g. one for 2.5Ghz, other 5Ghz SSIDs
     */
    wifis?: pulumi.Input<pulumi.Input<inputs.NetworkWirelessWifi>[]>;
}

export interface NetworkWirelessCellular {
    apn?: pulumi.Input<string>;
    locationTracking?: pulumi.Input<boolean>;
}

export interface NetworkWirelessWifi {
    identity?: pulumi.Input<string>;
    /**
     * Key management scheme:
     * NETWORK_WIFIKEY_SCHEME_WPAPSK
     * NETWORK_WIFIKEY_SCHEME_WPAEAPPSK
     */
    keyScheme?: pulumi.Input<string>;
    /**
     * Priority of connection, default is 0
     */
    priority?: pulumi.Input<number>;
    wifiSsid?: pulumi.Input<string>;
}

export interface PatchEnvelopeArtifact {
    artifactMetaData?: pulumi.Input<string>;
    base64Artifacts?: pulumi.Input<pulumi.Input<inputs.PatchEnvelopeArtifactBase64Artifact>[]>;
    binaryArtifacts?: pulumi.Input<pulumi.Input<inputs.PatchEnvelopeArtifactBinaryArtifact>[]>;
    format?: pulumi.Input<string>;
    /**
     * System defined universally unique Id of the artifact.
     */
    id?: pulumi.Input<string>;
}

export interface PatchEnvelopeArtifactBase64Artifact {
    base64Data: pulumi.Input<string>;
    base64MetaData?: pulumi.Input<string>;
    fileNameToUse: pulumi.Input<string>;
}

export interface PatchEnvelopeArtifactBinaryArtifact {
    /**
     * Eve shall use the image name when fileNameToUse is empty
     * optional - this can be image type or size etc encoded into a single string.
     * only the application instance agents will interpret this.
     */
    blobMetaData?: pulumi.Input<string>;
    fileNameToUse: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
    imageName: pulumi.Input<string>;
}

export interface PatchEnvelopeRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectAppPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicy>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAttestationPolicy>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicy>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyClusterPolicy>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyEdgeviewPolicy>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyLocalOperatorConsolePolicy>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicy>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicy>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyRevision>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyApp>[]>;
}

export interface ProjectAppPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAppPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonPermission {
}

export interface ProjectAppPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAppPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndService>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyCertificate>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsService>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubService>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceResourceGroup>[]>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail>[]>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment>[]>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment>[]>;
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail>[]>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyCertificateEcdsaEncryption>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyCertificateIssuer>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyCertificateRsaEcryption>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyCertificateSanValue>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyAzurePolicyCertificateSubject>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface ProjectAppPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectAppPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectAppPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyClusterPolicyClusterConfig>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface ProjectAppPolicyClusterPolicyClusterConfig {
    minNodesRequired?: pulumi.Input<number>;
}

export interface ProjectAppPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyEdgeviewPolicyEdgeviewcfg>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface ProjectAppPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyEdgeviewPolicyEdgeviewcfgAppPolicy>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyEdgeviewPolicyEdgeviewcfgDevPolicy>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyEdgeviewPolicyEdgeviewcfgExtPolicy>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyEdgeviewPolicyEdgeviewcfgJwtInfo>[]>;
    token?: pulumi.Input<string>;
}

export interface ProjectAppPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface ProjectAppPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyApp>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgent>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHub>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyMetric>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectAppPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonPermission {
}

export interface ProjectAppPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAppPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAppPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectAppPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfig>[]>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigDnsList>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigIp>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigLispSp>[]>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.ProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp>[]>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAppPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectAppPolicyRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectAttestationPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicy>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAttestationPolicy>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicy>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyClusterPolicy>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyEdgeviewPolicy>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyLocalOperatorConsolePolicy>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicy>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicy>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyRevision>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyApp>[]>;
}

export interface ProjectAttestationPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonPermission {
}

export interface ProjectAttestationPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndService>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyCertificate>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsService>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubService>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceResourceGroup>[]>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail>[]>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment>[]>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment>[]>;
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail>[]>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyCertificateEcdsaEncryption>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyCertificateIssuer>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyCertificateRsaEcryption>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyCertificateSanValue>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyAzurePolicyCertificateSubject>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectAttestationPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyClusterPolicyClusterConfig>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyClusterPolicyClusterConfig {
    minNodesRequired?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfg>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgAppPolicy>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgDevPolicy>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgExtPolicy>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgJwtInfo>[]>;
    token?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyApp>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgent>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHub>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyMetric>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectAttestationPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonPermission {
}

export interface ProjectAttestationPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectAttestationPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectAttestationPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfig>[]>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigDnsList>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigIp>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispSp>[]>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.ProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp>[]>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectAttestationPolicyRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectCloudPolicy {
    appPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicy>[]>;
    attestationPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAttestationPolicy>[]>;
    attr: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    azurePolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicy>[]>;
    clusterPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyClusterPolicy>[]>;
    description: pulumi.Input<string>;
    edgeviewPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyEdgeviewPolicy>[]>;
    id: pulumi.Input<string>;
    localOperatorConsolePolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyLocalOperatorConsolePolicy>[]>;
    modulePolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicy>[]>;
    name: pulumi.Input<string>;
    networkPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicy>[]>;
    revisions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyRevision>[]>;
    status: pulumi.Input<string>;
    statusMessage: pulumi.Input<string>;
    title: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicy {
    apps: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyApp>[]>;
}

export interface ProjectCloudPolicyAppPolicyApp {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyAppPolicyAppInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyAppPolicyAppInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectCloudPolicyAppPolicyAppInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonPermission {
}

export interface ProjectCloudPolicyAppPolicyAppManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAppPolicyAppParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectCloudPolicyAttestationPolicy {
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicy {
    appId: pulumi.Input<string>;
    appPassword: pulumi.Input<string>;
    azureResourceAndServices: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndService>[]>;
    certificates: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyCertificate>[]>;
    cryptoKey: pulumi.Input<string>;
    customDeploymentManaged: pulumi.Input<boolean>;
    encryptedSecrets: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndService {
    dpsServices: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsService>[]>;
    iotHubServices: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceIotHubService>[]>;
    resourceGroups: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceResourceGroup>[]>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment>[]>;
    serviceDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail>[]>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy: pulumi.Input<string>;
    attachedIotHubsNames: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment>[]>;
    enableIotEdgeDevice: pulumi.Input<boolean>;
    mechanism: pulumi.Input<string>;
    symmetricKeyEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment>[]>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment>[]>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment>[]>;
    individualCertificateEnrollment: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment>[]>;
    individualSymmetricKeyEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment>[]>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    sKUs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU>[]>;
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail>[]>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    sKUs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU>[]>;
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyCertificate {
    basicContraintsValid: pulumi.Input<boolean>;
    cert: pulumi.Input<string>;
    cryptoKey: pulumi.Input<string>;
    ecdsaEncryptions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyCertificateEcdsaEncryption>[]>;
    encryptedSecrets: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    exportable: pulumi.Input<boolean>;
    extendedKeyUsages: pulumi.Input<pulumi.Input<string>[]>;
    issuers: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyCertificateIssuer>[]>;
    keyUsage: pulumi.Input<number>;
    passPhrase: pulumi.Input<string>;
    publicKey: pulumi.Input<string>;
    publicKeyAlgorithm: pulumi.Input<string>;
    pvtKey: pulumi.Input<string>;
    reuseKey: pulumi.Input<boolean>;
    rsaEcryptions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyCertificateRsaEcryption>[]>;
    sanValues: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyCertificateSanValue>[]>;
    serialNumber: pulumi.Input<string>;
    signatureAlgorithm: pulumi.Input<string>;
    subjects: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyAzurePolicyCertificateSubject>[]>;
    validFrom: pulumi.Input<string>;
    validTill: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyCertificateEcdsaEncryption {
    curve: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyCertificateIssuer {
    commonName: pulumi.Input<string>;
    countries: pulumi.Input<pulumi.Input<string>[]>;
    localities: pulumi.Input<pulumi.Input<string>[]>;
    organizationalUnits: pulumi.Input<pulumi.Input<string>[]>;
    organizations: pulumi.Input<pulumi.Input<string>[]>;
    postalCodes: pulumi.Input<pulumi.Input<string>[]>;
    provinces: pulumi.Input<pulumi.Input<string>[]>;
    serialNumber: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyCertificateRsaEcryption {
    rsaBits: pulumi.Input<string>;
}

export interface ProjectCloudPolicyAzurePolicyCertificateSanValue {
    dns: pulumi.Input<pulumi.Input<string>[]>;
    emaildIds: pulumi.Input<pulumi.Input<string>[]>;
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    ips: pulumi.Input<pulumi.Input<string>[]>;
    upns: pulumi.Input<pulumi.Input<string>[]>;
    uris: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectCloudPolicyAzurePolicyCertificateSubject {
    commonName: pulumi.Input<string>;
    countries: pulumi.Input<pulumi.Input<string>[]>;
    localities: pulumi.Input<pulumi.Input<string>[]>;
    organizationalUnits: pulumi.Input<pulumi.Input<string>[]>;
    organizations: pulumi.Input<pulumi.Input<string>[]>;
    postalCodes: pulumi.Input<pulumi.Input<string>[]>;
    provinces: pulumi.Input<pulumi.Input<string>[]>;
    serialNumber: pulumi.Input<string>;
}

export interface ProjectCloudPolicyClusterPolicy {
    appPolicyId: pulumi.Input<string>;
    clusterConfigs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyClusterPolicyClusterConfig>[]>;
    networkPolicyId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyClusterPolicyClusterConfig {
    minNodesRequired: pulumi.Input<number>;
}

export interface ProjectCloudPolicyEdgeviewPolicy {
    accessAllowChange: pulumi.Input<boolean>;
    edgeviewAllow: pulumi.Input<boolean>;
    edgeviewcfgs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyEdgeviewPolicyEdgeviewcfg>[]>;
    maxExpireSec: pulumi.Input<number>;
    maxInst: pulumi.Input<number>;
}

export interface ProjectCloudPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgAppPolicy>[]>;
    devPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgDevPolicy>[]>;
    extPolicies: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgExtPolicy>[]>;
    generationId: pulumi.Input<number>;
    jwtInfos: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgJwtInfo>[]>;
    token: pulumi.Input<string>;
}

export interface ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec: pulumi.Input<number>;
    dispUrl: pulumi.Input<string>;
    encrypt: pulumi.Input<boolean>;
    expireSec: pulumi.Input<string>;
    numInst: pulumi.Input<number>;
}

export interface ProjectCloudPolicyLocalOperatorConsolePolicy {
    id: pulumi.Input<string>;
    locUrl: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicy {
    apps: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyApp>[]>;
    azureEdgeAgents: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgent>[]>;
    azureEdgeHubs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHub>[]>;
    etag: pulumi.Input<string>;
    id: pulumi.Input<string>;
    labels: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    metrics: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyMetric>[]>;
    priority: pulumi.Input<number>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetCondition: pulumi.Input<string>;
    targetConditionNew: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectCloudPolicyModulePolicyApp {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyModulePolicyAppInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyModulePolicyAppInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAppInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonPermission {
}

export interface ProjectCloudPolicyModulePolicyAppManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAppParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgent {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeAgentParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHub {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectCloudPolicyModulePolicyAzureEdgeHubParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectCloudPolicyModulePolicyMetric {
    queries: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    results: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectCloudPolicyNetworkPolicy {
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfig>[]>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfig {
    clusterId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    deviceDefault: pulumi.Input<boolean>;
    deviceId: pulumi.Input<string>;
    dhcp: pulumi.Input<boolean>;
    dnsLists: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigDnsList>[]>;
    id: pulumi.Input<string>;
    ips: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigIp>[]>;
    kind: pulumi.Input<string>;
    lisps: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigLisp>[]>;
    name: pulumi.Input<string>;
    networkPolicyId: pulumi.Input<string>;
    oconfig: pulumi.Input<string>;
    opaques: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigOpaque>[]>;
    port: pulumi.Input<string>;
    portTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    projectId: pulumi.Input<string>;
    revisions: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigRevision>[]>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigDnsList {
    addrs: pulumi.Input<pulumi.Input<string>[]>;
    hostname: pulumi.Input<string>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigIp {
    dhcpRanges: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigIpDhcpRange>[]>;
    dns: pulumi.Input<pulumi.Input<string>[]>;
    domain: pulumi.Input<string>;
    gateway: pulumi.Input<string>;
    mask: pulumi.Input<string>;
    ntp: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    end: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigLispSp>[]>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigOpaque {
    lisps: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigOpaqueLisp>[]>;
    oconfig: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectCloudPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp>[]>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectCloudPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectCloudPolicyRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectDeployment {
    /**
     * list of app instance policies
     */
    appInstPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicy>[]>;
    /**
     * cluster policy details
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentClusterPolicy>[]>;
    /**
     * user defined tag for the deployment, which is used while targeting set of devices
     */
    deploymentTag?: pulumi.Input<string>;
    /**
     * list of device policies
     */
    devicePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentDevicePolicy>[]>;
    /**
     * system generated unique id for an deployment
     */
    id?: pulumi.Input<string>;
    /**
     * integration policy details
     */
    integrationPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentIntegrationPolicy>[]>;
    /**
     * user defined name for the deployment
     */
    name?: pulumi.Input<string>;
    /**
     * list of network instance policies
     */
    networkInstPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicy>[]>;
    /**
     * object revision
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentRevision>[]>;
    /**
     * user defined title for the deployment
     */
    title?: pulumi.Input<string>;
    /**
     * list of volume instamce policies
     */
    volumeInstPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentVolumeInstPolicy>[]>;
}

export interface ProjectDeploymentAppInstPolicy {
    /**
     * app instance config for automated deployment
     */
    appInstConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfig>[]>;
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyMetaData>[]>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfig {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    bundleId?: pulumi.Input<string>;
    /**
     * current bundle version
     */
    bundleVersion?: pulumi.Input<number>;
    /**
     * user defined cpus for bundle
     */
    cpus?: pulumi.Input<number>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterface>[]>;
    /**
     * App Instance logs
     */
    logs?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigLog>[]>;
    /**
     * user defined manifest in JSON format
     */
    manifestJsons?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory?: pulumi.Input<number>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks?: pulumi.Input<number>;
    /**
     * this flag denotes whether there is latest bundle available in the marketplace or not
     */
    newBundleVersionAvailable?: pulumi.Input<boolean>;
    /**
     * origin of object
     */
    originType?: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigParentDetail>[]>;
    /**
     * Remote console flag
     */
    remoteConsole?: pulumi.Input<boolean>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * virtual machine info
     */
    vminfos?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigVminfo>[]>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigLog {
    /**
     * Flags to enable / disable sending of logs generated by app instance to zedcloud
     */
    access: pulumi.Input<boolean>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonPermission {
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectDeploymentAppInstPolicyAppInstConfigVminfo {
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * CPUs
     */
    cpus: pulumi.Input<number>;
    /**
     * Memory
     */
    memory?: pulumi.Input<number>;
    /**
     * Hardware Virtualization
     */
    mode?: pulumi.Input<string>;
    /**
     * VNC
     */
    vnc: pulumi.Input<boolean>;
    /**
     * VNC display
     */
    vncDisplay?: pulumi.Input<number>;
}

export interface ProjectDeploymentAppInstPolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentAppInstPolicyMetaDataRevision>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface ProjectDeploymentAppInstPolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ProjectDeploymentClusterPolicy {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentClusterPolicyRevision>[]>;
    title?: pulumi.Input<string>;
}

export interface ProjectDeploymentClusterPolicyRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ProjectDeploymentDevicePolicy {
    /**
     * device attestation policy
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentDevicePolicyAttestationPolicy>[]>;
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentDevicePolicyMetaData>[]>;
    /**
     * device policy type
     */
    policySubType?: pulumi.Input<string>;
}

export interface ProjectDeploymentDevicePolicyAttestationPolicy {
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface ProjectDeploymentDevicePolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentDevicePolicyMetaDataRevision>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface ProjectDeploymentDevicePolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ProjectDeploymentIntegrationPolicy {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentIntegrationPolicyRevision>[]>;
    title?: pulumi.Input<string>;
}

export interface ProjectDeploymentIntegrationPolicyRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicy {
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyMetaData>[]>;
    /**
     * network instance config details
     */
    netInstConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfig>[]>;
}

export interface ProjectDeploymentNetworkInstPolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyMetaDataRevision>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigDnsList>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigIp>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigLispSp>[]>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispSp>[]>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface ProjectDeploymentNetworkInstPolicyNetInstConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectDeploymentRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ProjectDeploymentVolumeInstPolicy {
    /**
     * all the required metadata for a policy like id, name, different types of tags
     */
    metaDatas?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentVolumeInstPolicyMetaData>[]>;
    /**
     * volume instance config details
     */
    volInstConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentVolumeInstPolicyVolInstConfig>[]>;
}

export interface ProjectDeploymentVolumeInstPolicyMetaData {
    /**
     * system generated unique id for an policy
     */
    id?: pulumi.Input<string>;
    /**
     * user defined policy name
     */
    name?: pulumi.Input<string>;
    /**
     * user defined key-value pairs of a policy that will be used for targeting by devices
     */
    policyTargetCondition?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentVolumeInstPolicyMetaDataRevision>[]>;
    /**
     * user defined key-value pairs of a policy
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * user defined policy title
     */
    title?: pulumi.Input<string>;
}

export interface ProjectDeploymentVolumeInstPolicyMetaDataRevision {
    /**
     * The time, in milliseconds since the epoch, when the record was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * User data: Created By
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Current Database version of the record
     */
    curr?: pulumi.Input<string>;
    /**
     * Previous
     */
    prev?: pulumi.Input<string>;
    /**
     * The time, in milliseconds since the epoch, when the record was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * User data: Updated By
     */
    updatedBy?: pulumi.Input<string>;
}

export interface ProjectDeploymentVolumeInstPolicyVolInstConfig {
    /**
     * Access mode
     */
    accessmode?: pulumi.Input<string>;
    /**
     * flag to keep the contents of the volume unencrypted (in clear text)
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * content tree ID
     */
    contentTreeId?: pulumi.Input<string>;
    /**
     * Detailed description of the volume instance.
     */
    description?: pulumi.Input<string>;
    /**
     * id of the device on which volume instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * System defined universally unique Id of the volume instance.
     */
    id?: pulumi.Input<string>;
    /**
     * name of the image
     */
    image?: pulumi.Input<string>;
    /**
     * flag to create implicit volumes
     */
    implicit?: pulumi.Input<boolean>;
    /**
     * label
     */
    label?: pulumi.Input<string>;
    /**
     * flag to enable the volume to be attached to multiple app instances
     */
    multiattach?: pulumi.Input<boolean>;
    /**
     * User defined name of the volume instance, unique across the enterprise. Once object is created, name canâ€™t be changed.
     */
    name: pulumi.Input<string>;
    /**
     * id of the project in which the volume instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined Revision info of the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectDeploymentVolumeInstPolicyVolInstConfigRevision>[]>;
    /**
     * size of volume
     */
    sizeBytes?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the volume instance. Title can be changed at any time.
     */
    title: pulumi.Input<string>;
    /**
     * type of Volume Instance
     */
    type: pulumi.Input<string>;
}

export interface ProjectDeploymentVolumeInstPolicyVolInstConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicy>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAttestationPolicy>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicy>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyClusterPolicy>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyEdgeviewPolicy>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyLocalOperatorConsolePolicy>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicy>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicy>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyRevision>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyApp>[]>;
}

export interface ProjectEdgeviewPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonPermission {
}

export interface ProjectEdgeviewPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndService>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyCertificate>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsService>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubService>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceResourceGroup>[]>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail>[]>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment>[]>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment>[]>;
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail>[]>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyCertificateEcdsaEncryption>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyCertificateIssuer>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyCertificateRsaEcryption>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyCertificateSanValue>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyAzurePolicyCertificateSubject>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectEdgeviewPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyClusterPolicyClusterConfig>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyClusterPolicyClusterConfig {
    minNodesRequired?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfg>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgAppPolicy>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgDevPolicy>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgExtPolicy>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgJwtInfo>[]>;
    token?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyApp>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgent>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHub>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyMetric>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectEdgeviewPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonPermission {
}

export interface ProjectEdgeviewPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectEdgeviewPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectEdgeviewPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfig>[]>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigDnsList>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIp>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispSp>[]>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp>[]>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectEdgeviewPolicyRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicy>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAttestationPolicy>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicy>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyClusterPolicy>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyEdgeviewPolicy>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyLocalOperatorConsolePolicy>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicy>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicy>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyRevision>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyApp>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonPermission {
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndService>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyCertificate>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsService>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubService>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceResourceGroup>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment>[]>;
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyCertificateEcdsaEncryption>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyCertificateIssuer>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyCertificateRsaEcryption>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyCertificateSanValue>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyAzurePolicyCertificateSubject>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectLocalOperatorConsolePolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyClusterPolicyClusterConfig>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyClusterPolicyClusterConfig {
    minNodesRequired?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfg>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgAppPolicy>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgDevPolicy>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgExtPolicy>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgJwtInfo>[]>;
    token?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyApp>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgent>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHub>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyMetric>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonPermission {
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectLocalOperatorConsolePolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfig>[]>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigDnsList>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIp>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispSp>[]>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispSp>[]>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectLocalOperatorConsolePolicyRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectModulePolicy {
    appPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicy>[]>;
    attestationPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAttestationPolicy>[]>;
    attr: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    azurePolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicy>[]>;
    clusterPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyClusterPolicy>[]>;
    description: pulumi.Input<string>;
    edgeviewPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyEdgeviewPolicy>[]>;
    id: pulumi.Input<string>;
    localOperatorConsolePolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyLocalOperatorConsolePolicy>[]>;
    modulePolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicy>[]>;
    name: pulumi.Input<string>;
    networkPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicy>[]>;
    revisions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyRevision>[]>;
    status: pulumi.Input<string>;
    statusMessage: pulumi.Input<string>;
    title: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicy {
    apps: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyApp>[]>;
}

export interface ProjectModulePolicyAppPolicyApp {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyAppPolicyAppInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyAppPolicyAppInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectModulePolicyAppPolicyAppInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonPermission {
}

export interface ProjectModulePolicyAppPolicyAppManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyAppPolicyAppParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectModulePolicyAttestationPolicy {
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicy {
    appId: pulumi.Input<string>;
    appPassword: pulumi.Input<string>;
    azureResourceAndServices: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndService>[]>;
    certificates: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyCertificate>[]>;
    cryptoKey: pulumi.Input<string>;
    customDeploymentManaged: pulumi.Input<boolean>;
    encryptedSecrets: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndService {
    dpsServices: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsService>[]>;
    iotHubServices: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceIotHubService>[]>;
    resourceGroups: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceResourceGroup>[]>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment>[]>;
    serviceDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail>[]>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy: pulumi.Input<string>;
    attachedIotHubsNames: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment>[]>;
    enableIotEdgeDevice: pulumi.Input<boolean>;
    mechanism: pulumi.Input<string>;
    symmetricKeyEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment>[]>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment>[]>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment>[]>;
    individualCertificateEnrollment: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment>[]>;
    individualSymmetricKeyEnrollments: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment>[]>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    sKUs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU>[]>;
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail>[]>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    sKUs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU>[]>;
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyCertificate {
    basicContraintsValid: pulumi.Input<boolean>;
    cert: pulumi.Input<string>;
    cryptoKey: pulumi.Input<string>;
    ecdsaEncryptions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyCertificateEcdsaEncryption>[]>;
    encryptedSecrets: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    exportable: pulumi.Input<boolean>;
    extendedKeyUsages: pulumi.Input<pulumi.Input<string>[]>;
    issuers: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyCertificateIssuer>[]>;
    keyUsage: pulumi.Input<number>;
    passPhrase: pulumi.Input<string>;
    publicKey: pulumi.Input<string>;
    publicKeyAlgorithm: pulumi.Input<string>;
    pvtKey: pulumi.Input<string>;
    reuseKey: pulumi.Input<boolean>;
    rsaEcryptions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyCertificateRsaEcryption>[]>;
    sanValues: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyCertificateSanValue>[]>;
    serialNumber: pulumi.Input<string>;
    signatureAlgorithm: pulumi.Input<string>;
    subjects: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyAzurePolicyCertificateSubject>[]>;
    validFrom: pulumi.Input<string>;
    validTill: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyCertificateEcdsaEncryption {
    curve: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyCertificateIssuer {
    commonName: pulumi.Input<string>;
    countries: pulumi.Input<pulumi.Input<string>[]>;
    localities: pulumi.Input<pulumi.Input<string>[]>;
    organizationalUnits: pulumi.Input<pulumi.Input<string>[]>;
    organizations: pulumi.Input<pulumi.Input<string>[]>;
    postalCodes: pulumi.Input<pulumi.Input<string>[]>;
    provinces: pulumi.Input<pulumi.Input<string>[]>;
    serialNumber: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyCertificateRsaEcryption {
    rsaBits: pulumi.Input<string>;
}

export interface ProjectModulePolicyAzurePolicyCertificateSanValue {
    dns: pulumi.Input<pulumi.Input<string>[]>;
    emaildIds: pulumi.Input<pulumi.Input<string>[]>;
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    ips: pulumi.Input<pulumi.Input<string>[]>;
    upns: pulumi.Input<pulumi.Input<string>[]>;
    uris: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectModulePolicyAzurePolicyCertificateSubject {
    commonName: pulumi.Input<string>;
    countries: pulumi.Input<pulumi.Input<string>[]>;
    localities: pulumi.Input<pulumi.Input<string>[]>;
    organizationalUnits: pulumi.Input<pulumi.Input<string>[]>;
    organizations: pulumi.Input<pulumi.Input<string>[]>;
    postalCodes: pulumi.Input<pulumi.Input<string>[]>;
    provinces: pulumi.Input<pulumi.Input<string>[]>;
    serialNumber: pulumi.Input<string>;
}

export interface ProjectModulePolicyClusterPolicy {
    appPolicyId: pulumi.Input<string>;
    clusterConfigs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyClusterPolicyClusterConfig>[]>;
    networkPolicyId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyClusterPolicyClusterConfig {
    minNodesRequired: pulumi.Input<number>;
}

export interface ProjectModulePolicyEdgeviewPolicy {
    accessAllowChange: pulumi.Input<boolean>;
    edgeviewAllow: pulumi.Input<boolean>;
    edgeviewcfgs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyEdgeviewPolicyEdgeviewcfg>[]>;
    maxExpireSec: pulumi.Input<number>;
    maxInst: pulumi.Input<number>;
}

export interface ProjectModulePolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyEdgeviewPolicyEdgeviewcfgAppPolicy>[]>;
    devPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyEdgeviewPolicyEdgeviewcfgDevPolicy>[]>;
    extPolicies: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyEdgeviewPolicyEdgeviewcfgExtPolicy>[]>;
    generationId: pulumi.Input<number>;
    jwtInfos: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyEdgeviewPolicyEdgeviewcfgJwtInfo>[]>;
    token: pulumi.Input<string>;
}

export interface ProjectModulePolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec: pulumi.Input<number>;
    dispUrl: pulumi.Input<string>;
    encrypt: pulumi.Input<boolean>;
    expireSec: pulumi.Input<string>;
    numInst: pulumi.Input<number>;
}

export interface ProjectModulePolicyLocalOperatorConsolePolicy {
    id: pulumi.Input<string>;
    locUrl: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicy {
    apps: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyApp>[]>;
    azureEdgeAgents: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgent>[]>;
    azureEdgeHubs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHub>[]>;
    etag: pulumi.Input<string>;
    id: pulumi.Input<string>;
    labels: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    metrics: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyMetric>[]>;
    priority: pulumi.Input<number>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetCondition: pulumi.Input<string>;
    targetConditionNew: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectModulePolicyModulePolicyApp {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyModulePolicyAppInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyModulePolicyAppInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAppInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonPermission {
}

export interface ProjectModulePolicyModulePolicyAppManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAppParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgent {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeAgentParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHub {
    appId: pulumi.Input<string>;
    appVersion: pulumi.Input<string>;
    cpus: pulumi.Input<number>;
    description: pulumi.Input<string>;
    drives: pulumi.Input<number>;
    id: pulumi.Input<string>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterface>[]>;
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJson>[]>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nameAppPart: pulumi.Input<string>;
    nameProjectPart: pulumi.Input<string>;
    namingScheme: pulumi.Input<string>;
    networks: pulumi.Input<number>;
    originType: pulumi.Input<string>;
    parentDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubParentDetail>[]>;
    startDelayInSeconds: pulumi.Input<number>;
    storage: pulumi.Input<number>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterface {
    accessVlanId: pulumi.Input<number>;
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAcl>[]>;
    defaultNetInstance: pulumi.Input<boolean>;
    directattach: pulumi.Input<boolean>;
    eidregisters: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceEidregister>[]>;
    intfname: pulumi.Input<string>;
    intforder: pulumi.Input<number>;
    ios: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceIo>[]>;
    ipaddr: pulumi.Input<string>;
    macaddr: pulumi.Input<string>;
    netinstid: pulumi.Input<string>;
    netinstname: pulumi.Input<string>;
    netinsttag: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    netname: pulumi.Input<string>;
    privateip: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAclAction>[]>;
    id: pulumi.Input<number>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    mapparams: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam>[]>;
    portmap: pulumi.Input<boolean>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    port: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    appCert: pulumi.Input<string>;
    appPrivateKey: pulumi.Input<string>;
    appPublicKey: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    eId: pulumi.Input<string>;
    eIdHashLen: pulumi.Input<number>;
    lispInstance: pulumi.Input<number>;
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer>[]>;
    lispSignature: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubInterfaceIo {
    name: pulumi.Input<string>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJson {
    acKind: pulumi.Input<string>;
    acVersion: pulumi.Input<string>;
    appType: pulumi.Input<string>;
    configurations: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfiguration>[]>;
    containerDetails: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail>[]>;
    cpuPinningEnabled: pulumi.Input<boolean>;
    deploymentType: pulumi.Input<string>;
    description: pulumi.Input<string>;
    descs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonDesc>[]>;
    displayName: pulumi.Input<string>;
    enablevnc: pulumi.Input<boolean>;
    images: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonImage>[]>;
    interfaces: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterface>[]>;
    modules: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonModule>[]>;
    name: pulumi.Input<string>;
    owners: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonOwner>[]>;
    permissions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonPermission>[]>;
    resources: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonResource>[]>;
    vmmode: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    add: pulumi.Input<boolean>;
    allowStorageResize: pulumi.Input<boolean>;
    fieldDelimiter: pulumi.Input<string>;
    name: pulumi.Input<string>;
    override: pulumi.Input<boolean>;
    template: pulumi.Input<string>;
    variableGroups: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    conditions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    variables: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    default: pulumi.Input<string>;
    encode: pulumi.Input<string>;
    format: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxLength: pulumi.Input<string>;
    name: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    containerCreateOption: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    agreementList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    category: pulumi.Input<string>;
    licenseList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    logo: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os: pulumi.Input<string>;
    screenshotList: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    support: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonImage {
    cleartext: pulumi.Input<boolean>;
    drvtype: pulumi.Input<string>;
    ignorepurge: pulumi.Input<boolean>;
    imageformat: pulumi.Input<string>;
    imageid: pulumi.Input<string>;
    imagename: pulumi.Input<string>;
    maxsize: pulumi.Input<string>;
    mountpath: pulumi.Input<string>;
    params: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonImageParam>[]>;
    preserve: pulumi.Input<boolean>;
    readonly: pulumi.Input<boolean>;
    target: pulumi.Input<string>;
    volumelabel: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    acls: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl>[]>;
    directattach: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    optional: pulumi.Input<boolean>;
    privateip: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    actions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction>[]>;
    matches: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch>[]>;
    name: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    drop: pulumi.Input<boolean>;
    limit: pulumi.Input<boolean>;
    limitValues: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue>[]>;
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
    portmap: pulumi.Input<boolean>;
    portmaptos: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    limitburst: pulumi.Input<number>;
    limitrate: pulumi.Input<number>;
    limitunit: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    appPort: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonModule {
    environment: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    moduleType: pulumi.Input<string>;
    routes: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    twinDetail: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    company: pulumi.Input<string>;
    email: pulumi.Input<string>;
    group: pulumi.Input<string>;
    user: pulumi.Input<string>;
    website: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubManifestJsonResource {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProjectModulePolicyModulePolicyAzureEdgeHubParentDetail {
    idOfParentObject: pulumi.Input<string>;
    referenceExists: pulumi.Input<boolean>;
    updateAvailable: pulumi.Input<boolean>;
    versionOfParentObject: pulumi.Input<number>;
}

export interface ProjectModulePolicyModulePolicyMetric {
    queries: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    results: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectModulePolicyNetworkPolicy {
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfig>[]>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfig {
    clusterId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    deviceDefault: pulumi.Input<boolean>;
    deviceId: pulumi.Input<string>;
    dhcp: pulumi.Input<boolean>;
    dnsLists: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigDnsList>[]>;
    id: pulumi.Input<string>;
    ips: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigIp>[]>;
    kind: pulumi.Input<string>;
    lisps: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigLisp>[]>;
    name: pulumi.Input<string>;
    networkPolicyId: pulumi.Input<string>;
    oconfig: pulumi.Input<string>;
    opaques: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigOpaque>[]>;
    port: pulumi.Input<string>;
    portTags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    projectId: pulumi.Input<string>;
    revisions: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigRevision>[]>;
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    title: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigDnsList {
    addrs: pulumi.Input<pulumi.Input<string>[]>;
    hostname: pulumi.Input<string>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigIp {
    dhcpRanges: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigIpDhcpRange>[]>;
    dns: pulumi.Input<pulumi.Input<string>[]>;
    domain: pulumi.Input<string>;
    gateway: pulumi.Input<string>;
    mask: pulumi.Input<string>;
    ntp: pulumi.Input<string>;
    subnet: pulumi.Input<string>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    end: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigLispSp>[]>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigOpaque {
    lisps: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigOpaqueLisp>[]>;
    oconfig: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectModulePolicyNetworkPolicyNetInstanceConfigOpaqueLispSp>[]>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectModulePolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectModulePolicyRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectNetworkPolicy {
    /**
     * app policy, which is used in auto app instance deployment
     */
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicy>[]>;
    /**
     * attestation policy to enforce on all devices in this project
     */
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAttestationPolicy>[]>;
    /**
     * Mapping of policy  variable keys and policy variable values
     */
    attr?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * azure policy, which is used in configuring azure iot-edge.
     */
    azurePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicy>[]>;
    /**
     * cluster policy to bring up cluster on devices in this project
     */
    clusterPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyClusterPolicy>[]>;
    /**
     * Detailed description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * edgeview policy on devices of this project
     */
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyEdgeviewPolicy>[]>;
    /**
     * System defined universally unique Id of the policy request
     */
    id?: pulumi.Input<string>;
    /**
     * local operator console policy to enforce on all devices in this project
     */
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyLocalOperatorConsolePolicy>[]>;
    /**
     * module policy, which is used in auto module deployment
     */
    modulePolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicy>[]>;
    /**
     * User defined name of the policy request, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * network policy to enforce on all devices in this project
     */
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicy>[]>;
    /**
     * system defined info
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyRevision>[]>;
    /**
     * status of the policy
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed status message of the policy
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * User defined title of the policy. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * type of policy
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyApp>[]>;
}

export interface ProjectNetworkPolicyAppPolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonPermission {
}

export interface ProjectNetworkPolicyAppPolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAppPolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyAttestationPolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Attestation policy type
     */
    type: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicy {
    /**
     * app id for rbac
     */
    appId: pulumi.Input<string>;
    /**
     * app password for rbac
     */
    appPassword: pulumi.Input<string>;
    /**
     * azure resource and service the policy will be interested in
     */
    azureResourceAndServices?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndService>[]>;
    /**
     * Certificate object holds the details of certificate like encryption type, validity, subject etc
     */
    certificates?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyCertificate>[]>;
    /**
     * key to decrypt AppPassword
     */
    cryptoKey?: pulumi.Input<string>;
    customDeploymentManaged?: pulumi.Input<boolean>;
    /**
     * encrypted AppPassword
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * tenant id for rbac
     */
    tenantId: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndService {
    /**
     * dps service attached to cloud policy
     */
    dpsServices: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsService>[]>;
    /**
     * list of iothubs attached to cloud policy
     */
    iotHubServices: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubService>[]>;
    /**
     * list of resource groups attached to cloud policy
     */
    resourceGroups: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceResourceGroup>[]>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsService {
    enrollments?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment>[]>;
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail>[]>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollment {
    allocationPolicy?: pulumi.Input<string>;
    attachedIotHubsNames?: pulumi.Input<pulumi.Input<string>[]>;
    certificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment>[]>;
    enableIotEdgeDevice?: pulumi.Input<boolean>;
    mechanism?: pulumi.Input<string>;
    symmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tpmEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment>[]>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollment {
    groupCertificateEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment>[]>;
    individualCertificateEnrollment?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentCertificateEnrollmentGroupCertificateEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollment {
    groupSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment>[]>;
    individualSymmetricKeyEnrollments?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment>[]>;
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentGroupSymmetricKeyEnrollment {
    groupName?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentSymmetricKeyEnrollmentIndividualSymmetricKeyEnrollment {
    registrationId?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceEnrollmentTpmEnrollment {
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceDpsServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubService {
    serviceDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail>[]>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetail {
    createByDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    sKUs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU>[]>;
    subscriptionId?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceIotHubServiceServiceDetailSKU {
    capacity?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyAzureResourceAndServiceResourceGroup {
    /**
     * resource group name
     */
    name: pulumi.Input<string>;
    /**
     * resource group region
     */
    region?: pulumi.Input<string>;
    /**
     * azure subscription id to which resource group is attached
     */
    subscriptionId: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyCertificate {
    /**
     * This fields tells the basic constraints like isCA are correct.
     */
    basicContraintsValid?: pulumi.Input<boolean>;
    /**
     * base64 string of the parent certificate
     */
    cert?: pulumi.Input<string>;
    /**
     * Crypto Key for decrypting user secret information
     */
    cryptoKey?: pulumi.Input<string>;
    /**
     * ECDSA encryption algorithm of the certificate
     */
    ecdsaEncryptions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyCertificateEcdsaEncryption>[]>;
    /**
     * user encrypted secrets map
     */
    encryptedSecrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if the private key can be exported.
     */
    exportable?: pulumi.Input<boolean>;
    /**
     * Sequence of extended key usages.
     */
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for the issuer of the X509 component of a certificate.
     */
    issuers?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyCertificateIssuer>[]>;
    /**
     * Key usage extensions define the purpose of the public key contained in a certificate.
     */
    keyUsage?: pulumi.Input<number>;
    /**
     * pass phase for the pvt key, this has to be filled if pvt key is encrypted with a pass phrase
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * base63 string of the public key
     */
    publicKey?: pulumi.Input<string>;
    /**
     * Public key algorithm.
     */
    publicKeyAlgorithm?: pulumi.Input<string>;
    /**
     * base64 string of the parent pvt key
     */
    pvtKey?: pulumi.Input<string>;
    /**
     * Indicates if the same key pair will be used on certificate renewal.
     */
    reuseKey?: pulumi.Input<boolean>;
    /**
     * RSA encryption algorithm of the certificate
     */
    rsaEcryptions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyCertificateRsaEcryption>[]>;
    /**
     * This holds the alternative name values like URIs, domain names IPs etc.
     */
    sanValues?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyCertificateSanValue>[]>;
    /**
     * Unique identifier for each Certificate generated by an Certificate Issuer.
     */
    serialNumber?: pulumi.Input<string>;
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Parameters for the subject of the X509 component of a certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyAzurePolicyCertificateSubject>[]>;
    /**
     * Certificate validatity start time
     */
    validFrom?: pulumi.Input<string>;
    /**
     * Certificate validatity start time
     */
    validTill?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyCertificateEcdsaEncryption {
    /**
     * ECDSA curve to be used while signing the certificate.
     */
    curve?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyCertificateIssuer {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyCertificateRsaEcryption {
    /**
     * RSA Encryption Key bit size.
     */
    rsaBits?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyAzurePolicyCertificateSanValue {
    /**
     * List of permitted DNS names.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted email addresses.
     */
    emaildIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted IP addresses.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted User principal names.
     */
    upns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of permitted URIs.
     */
    uris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectNetworkPolicyAzurePolicyCertificateSubject {
    /**
     * Certificate common name.
     */
    commonName?: pulumi.Input<string>;
    /**
     * List of countries.
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of locallity.
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Organizational Unit.
     */
    organizationalUnits?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of organization.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Postal codes.
     */
    postalCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of List of Prvince.
     */
    provinces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subject cerial number
     */
    serialNumber?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyClusterPolicy {
    /**
     * UUID of the app policy linked to this cluster policy
     */
    appPolicyId: pulumi.Input<string>;
    /**
     * Cluster Policy Parameters
     */
    clusterConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyClusterPolicyClusterConfig>[]>;
    /**
     * UUID of the network policy linked to this cluster policy
     */
    networkPolicyId: pulumi.Input<string>;
    /**
     * Type of cluster
     */
    type: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyClusterPolicyClusterConfig {
    minNodesRequired?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyEdgeviewPolicy {
    /**
     * Allow inherit instance to change access policy
     */
    accessAllowChange?: pulumi.Input<boolean>;
    /**
     * Allow device to enable Edgeview in this project
     */
    edgeviewAllow?: pulumi.Input<boolean>;
    /**
     * Edgeview configuration and policies
     */
    edgeviewcfgs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfg>[]>;
    /**
     * Maximum seconds allowed for Edgeview session
     */
    maxExpireSec?: pulumi.Input<number>;
    /**
     * Maximum instances allowed for Edgeview
     */
    maxInst?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfg {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgAppPolicy>[]>;
    devPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgDevPolicy>[]>;
    extPolicies?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgExtPolicy>[]>;
    generationId?: pulumi.Input<number>;
    jwtInfos?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgJwtInfo>[]>;
    token?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgAppPolicy {
    allowApp?: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgDevPolicy {
    allowDev?: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgExtPolicy {
    allowExt?: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyEdgeviewPolicyEdgeviewcfgJwtInfo {
    allowSec?: pulumi.Input<number>;
    dispUrl?: pulumi.Input<string>;
    encrypt?: pulumi.Input<boolean>;
    expireSec?: pulumi.Input<string>;
    numInst?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyLocalOperatorConsolePolicy {
    /**
     * unique policy id
     */
    id?: pulumi.Input<string>;
    /**
     * Local operator console URL
     */
    locUrl: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicy {
    /**
     * list of app details that will be provisioned on all the devices of the project to which this policy is attached
     */
    apps: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyApp>[]>;
    /**
     * app that describes the azure edge agent to be deployed on the Azure runtime
     */
    azureEdgeAgents?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgent>[]>;
    /**
     * app that describes the azure edge hub to be deployed on the Azure runtime
     */
    azureEdgeHubs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHub>[]>;
    /**
     * etag for deployment
     */
    etag?: pulumi.Input<string>;
    /**
     * unique id for deployment
     */
    id?: pulumi.Input<string>;
    /**
     * Mapping of label variable keys and value
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * custom metrics for deployment
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyMetric>[]>;
    /**
     * deployment priority of module manifest
     */
    priority: pulumi.Input<number>;
    /**
     * Mapping of routes variable keys and value
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetCondition?: pulumi.Input<string>;
    /**
     * target condition for deployment that matches single device or group of devices
     */
    targetConditionNew?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectNetworkPolicyModulePolicyApp {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonPermission {
}

export interface ProjectNetworkPolicyModulePolicyAppManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAppParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgent {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonPermission {
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeAgentParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHub {
    /**
     * User defined name of the edge app, unique across the enterprise. Once app name is created, name canâ€™t be changed
     */
    appId?: pulumi.Input<string>;
    /**
     * Current version of the attached bundle
     */
    appVersion?: pulumi.Input<string>;
    /**
     * user defined cpus for bundle
     */
    cpus: pulumi.Input<number>;
    /**
     * Detailed description of the edge application
     */
    description?: pulumi.Input<string>;
    /**
     * user defined drives
     */
    drives?: pulumi.Input<number>;
    /**
     * System defined universally unique Id of the edge application
     */
    id?: pulumi.Input<string>;
    /**
     * application interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterface>[]>;
    /**
     * Manifest data
     */
    manifestJsons: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJson>[]>;
    /**
     * user defined memory for bundle
     */
    memory: pulumi.Input<number>;
    /**
     * User defined name of the edge application, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameAppPart?: pulumi.Input<string>;
    /**
     * User provided name part  for the auto deployed app
     */
    nameProjectPart?: pulumi.Input<string>;
    /**
     * app naming scheme
     */
    namingScheme?: pulumi.Input<string>;
    /**
     * user defined network options
     */
    networks: pulumi.Input<number>;
    /**
     * origin of object
     */
    originType: pulumi.Input<string>;
    /**
     * origin and parent related details
     */
    parentDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubParentDetail>[]>;
    /**
     * start delay is the time in seconds EVE should wait after boot before starting the application instance
     */
    startDelayInSeconds?: pulumi.Input<number>;
    /**
     * user defined storage for bundle
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the edge application. Title can be changed at any time
     */
    title: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterface {
    /**
     * access port VLAN ID, vlan id of zero will be treated as trunk port and vlan id 1 is implicitly used by linux bridges
     */
    accessVlanId?: pulumi.Input<number>;
    /**
     * app Acls
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAcl>[]>;
    /**
     * default instance flag
     */
    defaultNetInstance?: pulumi.Input<boolean>;
    /**
     * direct attach flag
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * EID register details
     */
    eidregisters?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregister>[]>;
    /**
     * intf Name
     */
    intfname: pulumi.Input<string>;
    /**
     * intforder
     */
    intforder?: pulumi.Input<number>;
    /**
     * Physical Adapter to be matched for interface assignment. Applicable only when "direct attach" flag is true
     */
    ios?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceIo>[]>;
    /**
     * IP address
     */
    ipaddr?: pulumi.Input<string>;
    /**
     * MAC address
     */
    macaddr?: pulumi.Input<string>;
    /**
     * Network Instance id to be matched for interface assignment.
     */
    netinstid?: pulumi.Input<string>;
    /**
     * Network Instance name to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinstname: pulumi.Input<string>;
    /**
     * Network Instance tag to be matched for interface assignment. Applicable only when "direct attach" flag is false
     */
    netinsttag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * network name: will be deprecated in future, use netinstname
     */
    netname?: pulumi.Input<string>;
    /**
     * Private IP flag
     */
    privateip: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAcl {
    /**
     * app ACE actions
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclAction>[]>;
    /**
     * app ACE id
     */
    id?: pulumi.Input<number>;
    /**
     * app ACE match
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclMatch>[]>;
    /**
     * User defined name of the app ACE, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclAction {
    /**
     * ACE drop flag
     */
    drop?: pulumi.Input<boolean>;
    /**
     * ACE limit flag
     */
    limit?: pulumi.Input<boolean>;
    /**
     * ACE limit burst
     */
    limitburst?: pulumi.Input<number>;
    /**
     * ACE limit rate
     */
    limitrate?: pulumi.Input<number>;
    /**
     * ACE limit unit
     */
    limitunit?: pulumi.Input<string>;
    /**
     * Application map params
     */
    mapparams?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam>[]>;
    /**
     * application port map flag
     */
    portmap?: pulumi.Input<boolean>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclActionMapparam {
    /**
     * Application port
     */
    port?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceAclMatch {
    /**
     * Type
     */
    type?: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregister {
    /**
     * app certificate
     */
    appCert?: pulumi.Input<string>;
    /**
     * App private key
     */
    appPrivateKey?: pulumi.Input<string>;
    /**
     * App public key
     */
    appPublicKey?: pulumi.Input<string>;
    /**
     * Display name
     */
    displayName: pulumi.Input<string>;
    /**
     * EID
     */
    eId: pulumi.Input<string>;
    /**
     * EID hash length
     */
    eIdHashLen: pulumi.Input<number>;
    /**
     * Lisp Instance
     */
    lispInstance: pulumi.Input<number>;
    /**
     * Lisp Map Server
     */
    lispMapServers: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer>[]>;
    /**
     * Lisp Signature
     */
    lispSignature: pulumi.Input<string>;
    /**
     * UUID
     */
    uuid: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceEidregisterLispMapServer {
    /**
     * lisp credential
     */
    credential: pulumi.Input<string>;
    /**
     * name/IP
     */
    nameOrIp: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubInterfaceIo {
    /**
     * Physical Adapter name
     */
    name?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IoType specifies the type of the Input output of the device
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJson {
    /**
     * UI map: N/A - not exposed to users
     */
    acKind: pulumi.Input<string>;
    /**
     * UI map: N/A - not exposed to users
     */
    acVersion: pulumi.Input<string>;
    /**
     * bundle type, eg: vm, container, module
     */
    appType?: pulumi.Input<string>;
    /**
     * Template for Custom Configuration. Used for Cloud-Init
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration>[]>;
    /**
     * Create options direct the creation of the Docker container
     */
    containerDetails?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail>[]>;
    /**
     * Enable CpuPinning
     */
    cpuPinningEnabled?: pulumi.Input<boolean>;
    /**
     * type of deployment for the app, eg: azure, k3s, standalone
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:IdentityPane:DescriptionField, AppMarketplacePage:AppCard:DescriptionField
     */
    description?: pulumi.Input<string>;
    /**
     * Description of the application
     */
    descs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonDesc>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Title_Field, AppDetailsPage:IdentityPane:Title_Field
     */
    displayName?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:VNC_Field, AppDetailsPage:IdentityPane:VNC_Field
     */
    enablevnc?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane, AppDetailsPage:DrivesPane
     */
    images?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImage>[]>;
    /**
     * UI map: AppEditPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterface>[]>;
    /**
     * Azure module specific details like module twin, environment variable, routes
     */
    modules?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonModule>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:Name_Field, AppDetailsPage:IdentityPane:Name_Field
     */
    name: pulumi.Input<string>;
    /**
     * Owner of the application
     */
    owners?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonOwner>[]>;
    permissions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonPermission>[]>;
    /**
     * UI map: AppEditPage:ResourcesPane, AppDetailsPage:ResourcesPane
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonResource>[]>;
    /**
     * UI map: AppEditPage:IdentityPane:VM_Mode_Field, AppDetailsPage:IdentityPane:VM_Mode_Field
     */
    vmmode?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfiguration {
    customConfigs?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfig {
    /**
     * Add the Custom Config to App Instance (Optional. Default: False)
     */
    add?: pulumi.Input<boolean>;
    /**
     * Allow Appinstance storage to be resized after app instance is created. (Optional. Default: False)
     */
    allowStorageResize?: pulumi.Input<boolean>;
    /**
     * Field delimiter used in specifying variables in template. (Required)
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * Name of CustomConfig (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Override existing custom config from App Bundle Manifest (Optional. Default: False)
     */
    override?: pulumi.Input<boolean>;
    /**
     * base64 encrypted template string. (Optional)
     */
    template?: pulumi.Input<string>;
    /**
     * List of Variable groups. (Required)
     */
    variableGroups?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroup {
    /**
     * Condition to apply the variable group. (Optional. Default: None)
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition>[]>;
    /**
     * Name of the Variable Group(Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the variable group is required to be specified for the App Instance. (Optional. Default:False)
     */
    required?: pulumi.Input<boolean>;
    /**
     * List of variables(Required)
     */
    variables?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupCondition {
    name?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariable {
    /**
     * Default value of the variable. (Optional. Default: <Default value based on type>)
     */
    default?: pulumi.Input<string>;
    /**
     * Encoding of file content. Applicable if format is VARIABLE_FORMAT_FILE
     */
    encode?: pulumi.Input<string>;
    /**
     * Format of the user variable. (Required)
     */
    format: pulumi.Input<string>;
    /**
     * Label for the variable (Required)
     */
    label: pulumi.Input<string>;
    /**
     * Max length of the value of the variable(Optional. Default: 1024)
     */
    maxLength?: pulumi.Input<string>;
    /**
     * Name of the Variable (Required)
     */
    name: pulumi.Input<string>;
    /**
     * Key-Value pair of options. Applicable if format is VARIABLE_FORMAT_DROPDOWN
     */
    options?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption>[]>;
    processInput?: pulumi.Input<string>;
    /**
     * This variable MUST be specified when creating an App Instance. (Optional. Default: False)
     */
    required: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * User-specified value of the variable.(Required if required is true. Optional otherwise)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonConfigurationCustomConfigVariableGroupVariableOption {
    /**
     * Display label of the key in User-Agent
     */
    label?: pulumi.Input<string>;
    /**
     * Value of the key to be used
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonContainerDetail {
    /**
     * Create options direct the creation of the Docker container
     */
    containerCreateOption?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonDesc {
    /**
     * UI map: AppEditPage:DeveloperPane:Developer_Agreement_Field, AppDetailsPage:DeveloperPane:Developer_Agreement_Field
     */
    agreementList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    appCategory: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:DescriptionField, AppEditPage:IdentityPane:CategoryField, AppDetailsPage:IdentityPane:CategoryField
     */
    category?: pulumi.Input<string>;
    /**
     * UI map: AppMarketplacePage:AppCard:License, AppEditPage:IdentityPane:License, AppDetailsPage:IdentityPane:License
     */
    licenseList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:IdentityPane:Logo, AppDetailsPage:IdentityPane:Logo
     */
    logo?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    os?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:IdentityPane:Screenshot_Fields, AppDetailsPage:IdentityPane:Screenshot_Fields
     */
    screenshotList?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * UI map: AppEditPage:DeveloperPane:Support_Description_Field, AppDetailsPage:DeveloperPane:Support_Description_Field
     */
    support?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImage {
    /**
     * UI map: AppEditPage:DrivesPane:Cleartext, AppDetailsPage:DrivesPane:ClearText_Field
     */
    cleartext?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Drive_Type_Field, AppDetailsPage:DrivesPane:Drive_Type_Field
     */
    drvtype?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Ignorepurge, AppDetailsPage:DrivesPane:Ignorepurgee_Field
     */
    ignorepurge?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Format_Field, AppDetailsPage:DrivesPane:Image_Format_Field
     */
    imageformat?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_ID_Field, AppDetailsPage:DrivesPane:Image_ID_Field
     */
    imageid?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Image_Name_Field, AppDetailsPage:DrivesPane:Image_Name_Field
     */
    imagename?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Max_Size_Field, AppDetailsPage:DrivesPane:Max_Size_Field
     */
    maxsize?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Mountpath, AppDetailsPage:DrivesPane:Mountpath_Field
     */
    mountpath?: pulumi.Input<string>;
    params?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageParam>[]>;
    /**
     * UI map: AppEditPage:DrivesPane:Preserve_Field, AppDetailsPage:DrivesPane:Preserve_Field
     */
    preserve?: pulumi.Input<boolean>;
    readonly?: pulumi.Input<boolean>;
    /**
     * UI map: AppEditPage:DrivesPane:Target_Field, AppDetailsPage:DrivesPane:Target_Field
     */
    target?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DrivesPane:Volume_Label, AppDetailsPage:DrivesPane:Volume_Label
     */
    volumelabel?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonImageParam {
    /**
     * Name of the Parameter (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the parameter (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterface {
    /**
     * Traffic access control rules for this interface. Applicable only when "direct attach" flag is false.
     */
    acls?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl>[]>;
    /**
     * If true, a physical adapter is assigned to the edge application directly. If false, a network instance is assigned to the edge application.
     */
    directattach?: pulumi.Input<boolean>;
    /**
     * Interface name used by the edge application
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates if the interface is optional for edge application.
     */
    optional?: pulumi.Input<boolean>;
    /**
     * If true, DHCP network can't be assigned and user needs to provide a static IP address.
     */
    privateip?: pulumi.Input<boolean>;
    /**
     * Physical Adapter type for this interface. Applicable only when "direct attach" flag is true.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAcl {
    /**
     * Chain of actions to be taken on matching network traffic
     */
    actions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction>[]>;
    /**
     * Network traffic matching criteria consistngs of one or more of source IP address, destination IP address, protocol, source port and destination port
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch>[]>;
    /**
     * Name of the Access Control List
     */
    name?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclAction {
    /**
     * Drop the packet
     */
    drop?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limit?: pulumi.Input<boolean>;
    /**
     * Value to be used for limit action (Required if limit is true)
     */
    limitValues?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue>[]>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmap?: pulumi.Input<boolean>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    portmaptos?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto>[]>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionLimitValue {
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitburst?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitrate?: pulumi.Input<number>;
    /**
     * UI map: AppDetailsPage:EnvironmentsPane, AppDetailsPage:EnvironmentsPane
     */
    limitunit?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclActionPortmapto {
    /**
     * Application Port value
     */
    appPort?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonInterfaceAclMatch {
    /**
     * Type of Match (Required)
     */
    type?: pulumi.Input<string>;
    /**
     * Value of match (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonModule {
    /**
     * Extra information to module to make configuration easier
     */
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of modules
     */
    moduleType?: pulumi.Input<string>;
    /**
     * Send messages between modules or send messages from modules to iot hub
     */
    routes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Base64 encoded module twin details, desired properties of the module will be updated to reflect these values
     */
    twinDetail?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonOwner {
    /**
     * UI map: AppEditPage:IdentityPane:Category_Field, AppDetailsPage:IdentityPane:Category_Field
     */
    company?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Email_Field, AppDetailsPage:DeveloperPane:Email_Field
     */
    email?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Name_Field, AppDetailsPage:DeveloperPane:Name_Field
     */
    user?: pulumi.Input<string>;
    /**
     * UI map: AppEditPage:DeveloperPane:Website_Field, AppDetailsPage:DeveloperPane:Website_Field
     */
    website?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonPermission {
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubManifestJsonResource {
    /**
     * Name of the Resource (Required)
     */
    name?: pulumi.Input<string>;
    /**
     * Value of Resource (Required)
     */
    value?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyModulePolicyAzureEdgeHubParentDetail {
    /**
     * system defined unique id of parent object
     */
    idOfParentObject?: pulumi.Input<string>;
    /**
     * Relation with child and parent object exists or not
     */
    referenceExists?: pulumi.Input<boolean>;
    /**
     * Update required flag
     */
    updateAvailable?: pulumi.Input<boolean>;
    /**
     * version of object present in parent
     */
    versionOfParentObject?: pulumi.Input<number>;
}

export interface ProjectNetworkPolicyModulePolicyMetric {
    /**
     * Mapping of queries variable keys and value
     */
    queries?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Mapping of results variable keys and value
     */
    results?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProjectNetworkPolicyNetworkPolicy {
    /**
     * list of network details that will be created on all the devices of the project to which this policy is attached
     */
    netInstanceConfigs: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfig>[]>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfig {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigDnsList>[]>;
    /**
     * System defined universally unique ID of the network instance
     */
    id?: pulumi.Input<string>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigIp>[]>;
    /**
     * Kind of Network Instance:
     * NETWORK_INSTANCE_KIND_UNSPECIFIED
     * NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH
     * NETWORK_INSTANCE_KIND_LOCAL
     * NETWORK_INSTANCE_KIND_CLOUD
     * NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512 and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance:
     * NETWORK_INSTANCE_DHCP_TYPE_V4
     * NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigDnsList {
    /**
     * Addresses
     */
    addrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name
     */
    hostname?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigIp {
    /**
     * Range of IP addresses to be used for DHCP
     */
    dhcpRanges?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpDhcpRange>[]>;
    /**
     * IP Addresses of DNS servers
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network domain
     */
    domain?: pulumi.Input<string>;
    /**
     * IP Address of Network Gateway
     */
    gateway?: pulumi.Input<string>;
    /**
     * Subnet Mask
     */
    mask?: pulumi.Input<string>;
    /**
     * IP Address of NTP Server
     */
    ntp?: pulumi.Input<string>;
    /**
     * Subnet address
     */
    subnet?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigIpDhcpRange {
    /**
     * ending IP
     */
    end?: pulumi.Input<string>;
    /**
     * starting IP
     */
    start?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigLisp {
    allocate: pulumi.Input<boolean>;
    allocationprefix: pulumi.Input<string>;
    allocationprefixlen: pulumi.Input<number>;
    exportprivate: pulumi.Input<boolean>;
    lispiid: pulumi.Input<number>;
    sps: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispSp>[]>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigLispSp {
    credential: pulumi.Input<string>;
    nameOrIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaque {
    /**
     * Deprecated - Lisp config
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLisp>[]>;
    /**
     * base64 encoded string of opaque config
     */
    oconfig?: pulumi.Input<string>;
    /**
     * type of Opaque config
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLisp {
    /**
     * Allocate flag
     */
    allocate?: pulumi.Input<boolean>;
    /**
     * Allocation Prefix
     */
    allocationprefix?: pulumi.Input<string>;
    /**
     * Allocation Prefix Length
     */
    allocationprefixlen?: pulumi.Input<number>;
    /**
     * Export Private flag
     */
    exportprivate?: pulumi.Input<boolean>;
    /**
     * lisp id
     */
    lispiid?: pulumi.Input<number>;
    /**
     * Service Point List
     */
    sps?: pulumi.Input<pulumi.Input<inputs.ProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp>[]>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigOpaqueLispSp {
    /**
     * Service credentials
     */
    credential?: pulumi.Input<string>;
    /**
     * Service name/ service name
     */
    nameOrIp?: pulumi.Input<string>;
    /**
     * Service Point Type
     */
    type?: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyNetworkPolicyNetInstanceConfigRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectNetworkPolicyRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface ProjectRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface RoleRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface RoleScope {
    /**
     * Application access permission, this will be deprecated in further release - please use accessEdgeApp and accessAppInstance for granular permission access scope.
     */
    accessApp?: pulumi.Input<string>;
    /**
     * Application Instance access permission
     */
    accessAppInstance?: pulumi.Input<string>;
    /**
     * Device access permission
     */
    accessDevice?: pulumi.Input<string>;
    /**
     * Edge app access permission
     */
    accessEdgeApp?: pulumi.Input<string>;
    /**
     * Enterprise access permission
     */
    accessEnterprise?: pulumi.Input<string>;
    /**
     * Storage access permission
     */
    accessStorage?: pulumi.Input<string>;
    /**
     * User access permission
     */
    accessUser?: pulumi.Input<string>;
    /**
     * List of enterprise filters
     */
    enterpriseFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of project filters
     */
    projectFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique system defined scope ID
     */
    uuid?: pulumi.Input<string>;
}

export interface UserAllowedEnterprise {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleId?: pulumi.Input<string>;
}

export interface UserRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}

export interface VolumeInstanceRevision {
    createdAt: pulumi.Input<string>;
    createdBy: pulumi.Input<string>;
    curr: pulumi.Input<string>;
    prev: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
    updatedBy: pulumi.Input<string>;
}
