// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImage(args: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zedcloud:index/getImage:getImage", {
        "datastoreId": args.datastoreId,
        "description": args.description,
        "imageArch": args.imageArch,
        "imageFormat": args.imageFormat,
        "imageRelUrl": args.imageRelUrl,
        "imageSha256": args.imageSha256,
        "imageSizeBytes": args.imageSizeBytes,
        "imageType": args.imageType,
        "imageVersion": args.imageVersion,
        "name": args.name,
        "projectAccessLists": args.projectAccessLists,
        "title": args.title,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    datastoreId: string;
    description?: string;
    imageArch: string;
    imageFormat: string;
    imageRelUrl?: string;
    imageSha256?: string;
    imageSizeBytes?: string;
    imageType?: string;
    imageVersion?: string;
    name: string;
    projectAccessLists?: string[];
    title: string;
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    readonly datastoreId: string;
    readonly description?: string;
    readonly id: string;
    readonly imageArch: string;
    readonly imageError: string;
    readonly imageFormat: string;
    readonly imageLocal: string;
    readonly imageRelUrl?: string;
    readonly imageSha256?: string;
    readonly imageSizeBytes?: string;
    readonly imageStatus: string;
    readonly imageType?: string;
    readonly imageVersion?: string;
    readonly name: string;
    readonly originType: string;
    readonly projectAccessLists?: string[];
    readonly revisions: outputs.GetImageRevision[];
    readonly title: string;
}
export function getImageOutput(args: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult> {
    return pulumi.output(args).apply((a: any) => getImage(a, opts))
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    datastoreId: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    imageArch: pulumi.Input<string>;
    imageFormat: pulumi.Input<string>;
    imageRelUrl?: pulumi.Input<string>;
    imageSha256?: pulumi.Input<string>;
    imageSizeBytes?: pulumi.Input<string>;
    imageType?: pulumi.Input<string>;
    imageVersion?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    projectAccessLists?: pulumi.Input<pulumi.Input<string>[]>;
    title: pulumi.Input<string>;
}
