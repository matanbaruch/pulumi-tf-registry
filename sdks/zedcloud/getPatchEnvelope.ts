// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPatchEnvelope(args: GetPatchEnvelopeArgs, opts?: pulumi.InvokeOptions): Promise<GetPatchEnvelopeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zedcloud:index/getPatchEnvelope:getPatchEnvelope", {
        "action": args.action,
        "artifacts": args.artifacts,
        "description": args.description,
        "deviceCount": args.deviceCount,
        "name": args.name,
        "projectId": args.projectId,
        "projectName": args.projectName,
        "title": args.title,
        "userDefinedVersion": args.userDefinedVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPatchEnvelope.
 */
export interface GetPatchEnvelopeArgs {
    action: string;
    artifacts: inputs.GetPatchEnvelopeArtifact[];
    description?: string;
    deviceCount?: number;
    name: string;
    projectId: string;
    projectName: string;
    title: string;
    userDefinedVersion?: string;
}

/**
 * A collection of values returned by getPatchEnvelope.
 */
export interface GetPatchEnvelopeResult {
    readonly action: string;
    readonly artifacts: outputs.GetPatchEnvelopeArtifact[];
    readonly description?: string;
    readonly deviceCount?: number;
    readonly id: string;
    readonly name: string;
    readonly projectId: string;
    readonly projectName: string;
    readonly revisions: outputs.GetPatchEnvelopeRevision[];
    readonly title: string;
    readonly userDefinedVersion?: string;
}
export function getPatchEnvelopeOutput(args: GetPatchEnvelopeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPatchEnvelopeResult> {
    return pulumi.output(args).apply((a: any) => getPatchEnvelope(a, opts))
}

/**
 * A collection of arguments for invoking getPatchEnvelope.
 */
export interface GetPatchEnvelopeOutputArgs {
    action: pulumi.Input<string>;
    artifacts: pulumi.Input<pulumi.Input<inputs.GetPatchEnvelopeArtifactArgs>[]>;
    description?: pulumi.Input<string>;
    deviceCount?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    projectName: pulumi.Input<string>;
    title: pulumi.Input<string>;
    userDefinedVersion?: pulumi.Input<string>;
}
