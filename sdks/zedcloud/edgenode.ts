// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Edgenode extends pulumi.CustomResource {
    /**
     * Get an existing Edgenode resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgenodeState, opts?: pulumi.CustomResourceOptions): Edgenode {
        return new Edgenode(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zedcloud:index/edgenode:Edgenode';

    /**
     * Returns true if the given object is an instance of Edgenode.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Edgenode {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Edgenode.__pulumiType;
    }

    /**
     * administrative state of device
     */
    public readonly adminState!: pulumi.Output<string | undefined>;
    /**
     * Device asset ID
     */
    public readonly assetId!: pulumi.Output<string | undefined>;
    /**
     * base images
     */
    public readonly baseImages!: pulumi.Output<outputs.EdgenodeBaseImage[] | undefined>;
    /**
     * device baseos retry counter
     */
    public readonly baseOsRetryCounter!: pulumi.Output<number | undefined>;
    /**
     * device baseos retry time
     */
    public readonly baseOsRetryTime!: pulumi.Output<string | undefined>;
    /**
     * Client IP
     */
    public readonly clientIp!: pulumi.Output<string | undefined>;
    /**
     * System defined universally unique clusterInstance ID, unique across the enterprise.
     */
    public readonly clusterId!: pulumi.Output<string | undefined>;
    /**
     * ED configurations
     */
    public readonly configItems!: pulumi.Output<outputs.EdgenodeConfigItem[] | undefined>;
    /**
     * CPU (configured values)
     */
    public readonly cpu!: pulumi.Output<number | undefined>;
    /**
     * debug knob details for the device
     */
    public /*out*/ readonly debugKnobs!: pulumi.Output<outputs.EdgenodeDebugKnob[]>;
    /**
     * default network instance details
     */
    public readonly defaultNetInsts!: pulumi.Output<outputs.EdgenodeDefaultNetInst[] | undefined>;
    /**
     * user defined tag for the device, which is used while deploying policies.
     */
    public readonly deploymentTag!: pulumi.Output<string | undefined>;
    /**
     * deprecated field
     */
    public readonly deprecated!: pulumi.Output<string | undefined>;
    /**
     * user specified description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * User specified geo location
     */
    public readonly devLocations!: pulumi.Output<outputs.EdgenodeDevLocation[] | undefined>;
    /**
     * device Lisp
     */
    public readonly dlisps!: pulumi.Output<outputs.EdgenodeDlisp[] | undefined>;
    /**
     * edgeview configuration for device
     */
    public readonly edgeviewconfigs!: pulumi.Output<outputs.EdgenodeEdgeviewconfig[] | undefined>;
    /**
     * indicates whether a soft serial should be generated; it will work ONLY when device is created
     */
    public readonly generateSoftSerial!: pulumi.Output<boolean | undefined>;
    /**
     * Device identity
     */
    public readonly identity!: pulumi.Output<string>;
    /**
     * System Interface list
     */
    public readonly interfaces!: pulumi.Output<outputs.EdgenodeInterface[] | undefined>;
    /**
     * Device location: deprecated
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Device memory in MBs
     */
    public readonly memory!: pulumi.Output<number | undefined>;
    /**
     * device model
     */
    public readonly modelId!: pulumi.Output<string>;
    /**
     * user specified device name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Object key
     */
    public readonly onboardingKey!: pulumi.Output<string>;
    /**
     * prepare poweroff counter
     */
    public readonly preparePowerOffCounter!: pulumi.Output<number | undefined>;
    /**
     * prepare poweroff time
     */
    public readonly preparePowerOffTime!: pulumi.Output<string | undefined>;
    /**
     * project name
     */
    public readonly projectId!: pulumi.Output<string | undefined>;
    /**
     * devicereset counter
     */
    public readonly resetCounter!: pulumi.Output<number>;
    /**
     * device reset time
     */
    public readonly resetTime!: pulumi.Output<string>;
    /**
     * Object revision details
     */
    public readonly revisions!: pulumi.Output<outputs.EdgenodeRevision[] | undefined>;
    /**
     * Device serial number
     */
    public readonly serialno!: pulumi.Output<string | undefined>;
    /**
     * Site captured pictures
     */
    public readonly sitePictures!: pulumi.Output<string[] | undefined>;
    /**
     * Device storage in GBs
     */
    public readonly storage!: pulumi.Output<number | undefined>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Threads
     */
    public readonly thread!: pulumi.Output<number | undefined>;
    /**
     * user specified title
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Single use token
     */
    public readonly token!: pulumi.Output<string | undefined>;
    /**
     * device model arch type
     */
    public readonly utype!: pulumi.Output<string>;

    /**
     * Create a Edgenode resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgenodeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgenodeArgs | EdgenodeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgenodeState | undefined;
            resourceInputs["adminState"] = state ? state.adminState : undefined;
            resourceInputs["assetId"] = state ? state.assetId : undefined;
            resourceInputs["baseImages"] = state ? state.baseImages : undefined;
            resourceInputs["baseOsRetryCounter"] = state ? state.baseOsRetryCounter : undefined;
            resourceInputs["baseOsRetryTime"] = state ? state.baseOsRetryTime : undefined;
            resourceInputs["clientIp"] = state ? state.clientIp : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["configItems"] = state ? state.configItems : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["debugKnobs"] = state ? state.debugKnobs : undefined;
            resourceInputs["defaultNetInsts"] = state ? state.defaultNetInsts : undefined;
            resourceInputs["deploymentTag"] = state ? state.deploymentTag : undefined;
            resourceInputs["deprecated"] = state ? state.deprecated : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["devLocations"] = state ? state.devLocations : undefined;
            resourceInputs["dlisps"] = state ? state.dlisps : undefined;
            resourceInputs["edgeviewconfigs"] = state ? state.edgeviewconfigs : undefined;
            resourceInputs["generateSoftSerial"] = state ? state.generateSoftSerial : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["modelId"] = state ? state.modelId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onboardingKey"] = state ? state.onboardingKey : undefined;
            resourceInputs["preparePowerOffCounter"] = state ? state.preparePowerOffCounter : undefined;
            resourceInputs["preparePowerOffTime"] = state ? state.preparePowerOffTime : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["resetCounter"] = state ? state.resetCounter : undefined;
            resourceInputs["resetTime"] = state ? state.resetTime : undefined;
            resourceInputs["revisions"] = state ? state.revisions : undefined;
            resourceInputs["serialno"] = state ? state.serialno : undefined;
            resourceInputs["sitePictures"] = state ? state.sitePictures : undefined;
            resourceInputs["storage"] = state ? state.storage : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["thread"] = state ? state.thread : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["utype"] = state ? state.utype : undefined;
        } else {
            const args = argsOrState as EdgenodeArgs | undefined;
            if ((!args || args.modelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelId'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["adminState"] = args ? args.adminState : undefined;
            resourceInputs["assetId"] = args ? args.assetId : undefined;
            resourceInputs["baseImages"] = args ? args.baseImages : undefined;
            resourceInputs["baseOsRetryCounter"] = args ? args.baseOsRetryCounter : undefined;
            resourceInputs["baseOsRetryTime"] = args ? args.baseOsRetryTime : undefined;
            resourceInputs["clientIp"] = args ? args.clientIp : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["configItems"] = args ? args.configItems : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["defaultNetInsts"] = args ? args.defaultNetInsts : undefined;
            resourceInputs["deploymentTag"] = args ? args.deploymentTag : undefined;
            resourceInputs["deprecated"] = args ? args.deprecated : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["devLocations"] = args ? args.devLocations : undefined;
            resourceInputs["dlisps"] = args ? args.dlisps : undefined;
            resourceInputs["edgeviewconfigs"] = args ? args.edgeviewconfigs : undefined;
            resourceInputs["generateSoftSerial"] = args ? args.generateSoftSerial : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["modelId"] = args ? args.modelId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onboardingKey"] = args ? args.onboardingKey : undefined;
            resourceInputs["preparePowerOffCounter"] = args ? args.preparePowerOffCounter : undefined;
            resourceInputs["preparePowerOffTime"] = args ? args.preparePowerOffTime : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["resetCounter"] = args ? args.resetCounter : undefined;
            resourceInputs["resetTime"] = args ? args.resetTime : undefined;
            resourceInputs["revisions"] = args ? args.revisions : undefined;
            resourceInputs["serialno"] = args ? args.serialno : undefined;
            resourceInputs["sitePictures"] = args ? args.sitePictures : undefined;
            resourceInputs["storage"] = args ? args.storage : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["thread"] = args ? args.thread : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["token"] = args ? args.token : undefined;
            resourceInputs["utype"] = args ? args.utype : undefined;
            resourceInputs["debugKnobs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["debugKnobs"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Edgenode.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Edgenode resources.
 */
export interface EdgenodeState {
    /**
     * administrative state of device
     */
    adminState?: pulumi.Input<string>;
    /**
     * Device asset ID
     */
    assetId?: pulumi.Input<string>;
    /**
     * base images
     */
    baseImages?: pulumi.Input<pulumi.Input<inputs.EdgenodeBaseImage>[]>;
    /**
     * device baseos retry counter
     */
    baseOsRetryCounter?: pulumi.Input<number>;
    /**
     * device baseos retry time
     */
    baseOsRetryTime?: pulumi.Input<string>;
    /**
     * Client IP
     */
    clientIp?: pulumi.Input<string>;
    /**
     * System defined universally unique clusterInstance ID, unique across the enterprise.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * ED configurations
     */
    configItems?: pulumi.Input<pulumi.Input<inputs.EdgenodeConfigItem>[]>;
    /**
     * CPU (configured values)
     */
    cpu?: pulumi.Input<number>;
    /**
     * debug knob details for the device
     */
    debugKnobs?: pulumi.Input<pulumi.Input<inputs.EdgenodeDebugKnob>[]>;
    /**
     * default network instance details
     */
    defaultNetInsts?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInst>[]>;
    /**
     * user defined tag for the device, which is used while deploying policies.
     */
    deploymentTag?: pulumi.Input<string>;
    /**
     * deprecated field
     */
    deprecated?: pulumi.Input<string>;
    /**
     * user specified description
     */
    description?: pulumi.Input<string>;
    /**
     * User specified geo location
     */
    devLocations?: pulumi.Input<pulumi.Input<inputs.EdgenodeDevLocation>[]>;
    /**
     * device Lisp
     */
    dlisps?: pulumi.Input<pulumi.Input<inputs.EdgenodeDlisp>[]>;
    /**
     * edgeview configuration for device
     */
    edgeviewconfigs?: pulumi.Input<pulumi.Input<inputs.EdgenodeEdgeviewconfig>[]>;
    /**
     * indicates whether a soft serial should be generated; it will work ONLY when device is created
     */
    generateSoftSerial?: pulumi.Input<boolean>;
    /**
     * Device identity
     */
    identity?: pulumi.Input<string>;
    /**
     * System Interface list
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.EdgenodeInterface>[]>;
    /**
     * Device location: deprecated
     */
    location?: pulumi.Input<string>;
    /**
     * Device memory in MBs
     */
    memory?: pulumi.Input<number>;
    /**
     * device model
     */
    modelId?: pulumi.Input<string>;
    /**
     * user specified device name
     */
    name?: pulumi.Input<string>;
    /**
     * Object key
     */
    onboardingKey?: pulumi.Input<string>;
    /**
     * prepare poweroff counter
     */
    preparePowerOffCounter?: pulumi.Input<number>;
    /**
     * prepare poweroff time
     */
    preparePowerOffTime?: pulumi.Input<string>;
    /**
     * project name
     */
    projectId?: pulumi.Input<string>;
    /**
     * devicereset counter
     */
    resetCounter?: pulumi.Input<number>;
    /**
     * device reset time
     */
    resetTime?: pulumi.Input<string>;
    /**
     * Object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.EdgenodeRevision>[]>;
    /**
     * Device serial number
     */
    serialno?: pulumi.Input<string>;
    /**
     * Site captured pictures
     */
    sitePictures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Device storage in GBs
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Threads
     */
    thread?: pulumi.Input<number>;
    /**
     * user specified title
     */
    title?: pulumi.Input<string>;
    /**
     * Single use token
     */
    token?: pulumi.Input<string>;
    /**
     * device model arch type
     */
    utype?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Edgenode resource.
 */
export interface EdgenodeArgs {
    /**
     * administrative state of device
     */
    adminState?: pulumi.Input<string>;
    /**
     * Device asset ID
     */
    assetId?: pulumi.Input<string>;
    /**
     * base images
     */
    baseImages?: pulumi.Input<pulumi.Input<inputs.EdgenodeBaseImage>[]>;
    /**
     * device baseos retry counter
     */
    baseOsRetryCounter?: pulumi.Input<number>;
    /**
     * device baseos retry time
     */
    baseOsRetryTime?: pulumi.Input<string>;
    /**
     * Client IP
     */
    clientIp?: pulumi.Input<string>;
    /**
     * System defined universally unique clusterInstance ID, unique across the enterprise.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * ED configurations
     */
    configItems?: pulumi.Input<pulumi.Input<inputs.EdgenodeConfigItem>[]>;
    /**
     * CPU (configured values)
     */
    cpu?: pulumi.Input<number>;
    /**
     * default network instance details
     */
    defaultNetInsts?: pulumi.Input<pulumi.Input<inputs.EdgenodeDefaultNetInst>[]>;
    /**
     * user defined tag for the device, which is used while deploying policies.
     */
    deploymentTag?: pulumi.Input<string>;
    /**
     * deprecated field
     */
    deprecated?: pulumi.Input<string>;
    /**
     * user specified description
     */
    description?: pulumi.Input<string>;
    /**
     * User specified geo location
     */
    devLocations?: pulumi.Input<pulumi.Input<inputs.EdgenodeDevLocation>[]>;
    /**
     * device Lisp
     */
    dlisps?: pulumi.Input<pulumi.Input<inputs.EdgenodeDlisp>[]>;
    /**
     * edgeview configuration for device
     */
    edgeviewconfigs?: pulumi.Input<pulumi.Input<inputs.EdgenodeEdgeviewconfig>[]>;
    /**
     * indicates whether a soft serial should be generated; it will work ONLY when device is created
     */
    generateSoftSerial?: pulumi.Input<boolean>;
    /**
     * Device identity
     */
    identity?: pulumi.Input<string>;
    /**
     * System Interface list
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.EdgenodeInterface>[]>;
    /**
     * Device location: deprecated
     */
    location?: pulumi.Input<string>;
    /**
     * Device memory in MBs
     */
    memory?: pulumi.Input<number>;
    /**
     * device model
     */
    modelId: pulumi.Input<string>;
    /**
     * user specified device name
     */
    name?: pulumi.Input<string>;
    /**
     * Object key
     */
    onboardingKey?: pulumi.Input<string>;
    /**
     * prepare poweroff counter
     */
    preparePowerOffCounter?: pulumi.Input<number>;
    /**
     * prepare poweroff time
     */
    preparePowerOffTime?: pulumi.Input<string>;
    /**
     * project name
     */
    projectId?: pulumi.Input<string>;
    /**
     * devicereset counter
     */
    resetCounter?: pulumi.Input<number>;
    /**
     * device reset time
     */
    resetTime?: pulumi.Input<string>;
    /**
     * Object revision details
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.EdgenodeRevision>[]>;
    /**
     * Device serial number
     */
    serialno?: pulumi.Input<string>;
    /**
     * Site captured pictures
     */
    sitePictures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Device storage in GBs
     */
    storage?: pulumi.Input<number>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Threads
     */
    thread?: pulumi.Input<number>;
    /**
     * user specified title
     */
    title: pulumi.Input<string>;
    /**
     * Single use token
     */
    token?: pulumi.Input<string>;
    /**
     * device model arch type
     */
    utype?: pulumi.Input<string>;
}
