// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkInstance extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkInstanceState, opts?: pulumi.CustomResourceOptions): NetworkInstance {
        return new NetworkInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zedcloud:index/networkInstance:NetworkInstance';

    /**
     * Returns true if the given object is an instance of NetworkInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInstance.__pulumiType;
    }

    /**
     * ID of the Cluster in which the network instance is configured
     */
    public readonly clusterId!: pulumi.Output<string | undefined>;
    /**
     * Detailed description of the network instance
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    public readonly deviceDefault!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the device on which network instance is created
     */
    public readonly deviceId!: pulumi.Output<string>;
    /**
     * Deprecated
     */
    public readonly dhcp!: pulumi.Output<boolean | undefined>;
    /**
     * List of Static DNS entries
     */
    public readonly dnsLists!: pulumi.Output<outputs.NetworkInstanceDnsList[] | undefined>;
    /**
     * DHCP Server Configuration
     */
    public readonly ips!: pulumi.Output<outputs.NetworkInstanceIp[] | undefined>;
    /**
     * Kind of Network Instance: NETWORK_INSTANCE_KIND_UNSPECIFIED NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH NETWORK_INSTANCE_KIND_LOCAL NETWORK_INSTANCE_KIND_CLOUD NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    public /*out*/ readonly lisps!: pulumi.Output<outputs.NetworkInstanceLisp[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    public readonly networkPolicyId!: pulumi.Output<string | undefined>;
    public readonly oconfig!: pulumi.Output<string | undefined>;
    /**
     * Service specific Config
     */
    public readonly opaques!: pulumi.Output<outputs.NetworkInstanceOpaque[] | undefined>;
    /**
     * name of port mapping in the model
     */
    public readonly port!: pulumi.Output<string | undefined>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    public readonly portTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * id of the project in which network instance is created
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * system defined info for the object
     */
    public /*out*/ readonly revisions!: pulumi.Output<outputs.NetworkInstanceRevision[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Type of DHCP for this Network Instance: NETWORK_INSTANCE_DHCP_TYPE_V4 NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4 NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a NetworkInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkInstanceArgs | NetworkInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkInstanceState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceDefault"] = state ? state.deviceDefault : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["dhcp"] = state ? state.dhcp : undefined;
            resourceInputs["dnsLists"] = state ? state.dnsLists : undefined;
            resourceInputs["ips"] = state ? state.ips : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["lisps"] = state ? state.lisps : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkPolicyId"] = state ? state.networkPolicyId : undefined;
            resourceInputs["oconfig"] = state ? state.oconfig : undefined;
            resourceInputs["opaques"] = state ? state.opaques : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["portTags"] = state ? state.portTags : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["revisions"] = state ? state.revisions : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as NetworkInstanceArgs | undefined;
            if ((!args || args.deviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceId'");
            }
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceDefault"] = args ? args.deviceDefault : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["dhcp"] = args ? args.dhcp : undefined;
            resourceInputs["dnsLists"] = args ? args.dnsLists : undefined;
            resourceInputs["ips"] = args ? args.ips : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkPolicyId"] = args ? args.networkPolicyId : undefined;
            resourceInputs["oconfig"] = args ? args.oconfig : undefined;
            resourceInputs["opaques"] = args ? args.opaques : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["portTags"] = args ? args.portTags : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["lisps"] = undefined /*out*/;
            resourceInputs["revisions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkInstance resources.
 */
export interface NetworkInstanceState {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId?: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceDnsList>[]>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceIp>[]>;
    /**
     * Kind of Network Instance: NETWORK_INSTANCE_KIND_UNSPECIFIED NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH NETWORK_INSTANCE_KIND_LOCAL NETWORK_INSTANCE_KIND_CLOUD NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind?: pulumi.Input<string>;
    /**
     * Lisp Config : read only for now. Deprecated.
     */
    lisps?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceLisp>[]>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * system defined info for the object
     */
    revisions?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceRevision>[]>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title?: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance: NETWORK_INSTANCE_DHCP_TYPE_V4 NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4 NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkInstance resource.
 */
export interface NetworkInstanceArgs {
    /**
     * ID of the Cluster in which the network instance is configured
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Detailed description of the network instance
     */
    description?: pulumi.Input<string>;
    /**
     * Flag to indicate if this is the default network instance for the device
     */
    deviceDefault?: pulumi.Input<boolean>;
    /**
     * ID of the device on which network instance is created
     */
    deviceId: pulumi.Input<string>;
    /**
     * Deprecated
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * List of Static DNS entries
     */
    dnsLists?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceDnsList>[]>;
    /**
     * DHCP Server Configuration
     */
    ips?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceIp>[]>;
    /**
     * Kind of Network Instance: NETWORK_INSTANCE_KIND_UNSPECIFIED NETWORK_INSTANCE_KIND_TRANSPARENT
     * NETWORK_INSTANCE_KIND_SWITCH NETWORK_INSTANCE_KIND_LOCAL NETWORK_INSTANCE_KIND_CLOUD NETWORK_INSTANCE_KIND_MESH
     * NETWORK_INSTANCE_KIND_HONEYPOT
     */
    kind: pulumi.Input<string>;
    /**
     * User defined name of the network instance, unique across the enterprise. Once object is created, name canâ€™t be changed
     */
    name?: pulumi.Input<string>;
    /**
     * id of the network policy to be attached to this network instance
     */
    networkPolicyId?: pulumi.Input<string>;
    oconfig?: pulumi.Input<string>;
    /**
     * Service specific Config
     */
    opaques?: pulumi.Input<pulumi.Input<inputs.NetworkInstanceOpaque>[]>;
    /**
     * name of port mapping in the model
     */
    port?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    portTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * id of the project in which network instance is created
     */
    projectId?: pulumi.Input<string>;
    /**
     * Tags are name/value pairs that enable you to categorize resources. Tag names are case insensitive with max_length 512
     * and min_length 3. Tag values are case sensitive with max_length 256 and min_length 3.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User defined title of the network instance. Title can be changed at any time
     */
    title: pulumi.Input<string>;
    /**
     * Type of DHCP for this Network Instance: NETWORK_INSTANCE_DHCP_TYPE_V4 NETWORK_INSTANCE_DHCP_TYPE_V6
     * NETWORK_INSTANCE_DHCP_TYPE_CRYPTOEID NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV4 NETWORK_INSTANCE_DHCP_TYPE_CRYPTOV6
     */
    type?: pulumi.Input<string>;
}
