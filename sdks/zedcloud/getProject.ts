// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProject(args: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zedcloud:index/getProject:getProject", {
        "appPolicies": args.appPolicies,
        "attestationPolicies": args.attestationPolicies,
        "deployments": args.deployments,
        "description": args.description,
        "edgeviewPolicies": args.edgeviewPolicies,
        "localOperatorConsolePolicies": args.localOperatorConsolePolicies,
        "name": args.name,
        "networkPolicies": args.networkPolicies,
        "title": args.title,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectArgs {
    appPolicies?: inputs.GetProjectAppPolicy[];
    attestationPolicies?: inputs.GetProjectAttestationPolicy[];
    deployments?: inputs.GetProjectDeployment[];
    description?: string;
    edgeviewPolicies?: inputs.GetProjectEdgeviewPolicy[];
    localOperatorConsolePolicies?: inputs.GetProjectLocalOperatorConsolePolicy[];
    name: string;
    networkPolicies?: inputs.GetProjectNetworkPolicy[];
    title: string;
    type: string;
}

/**
 * A collection of values returned by getProject.
 */
export interface GetProjectResult {
    readonly appPolicies?: outputs.GetProjectAppPolicy[];
    readonly attestationPolicies?: outputs.GetProjectAttestationPolicy[];
    readonly attr: {[key: string]: string};
    readonly cloudPolicies: outputs.GetProjectCloudPolicy[];
    readonly deployments?: outputs.GetProjectDeployment[];
    readonly description?: string;
    readonly edgeviewPolicies?: outputs.GetProjectEdgeviewPolicy[];
    readonly id: string;
    readonly localOperatorConsolePolicies?: outputs.GetProjectLocalOperatorConsolePolicy[];
    readonly modulePolicies: outputs.GetProjectModulePolicy[];
    readonly name: string;
    readonly networkPolicies?: outputs.GetProjectNetworkPolicy[];
    readonly numdevices: number;
    readonly revisions: outputs.GetProjectRevision[];
    readonly title: string;
    readonly type: string;
}
export function getProjectOutput(args: GetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectResult> {
    return pulumi.output(args).apply((a: any) => getProject(a, opts))
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectOutputArgs {
    appPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAppPolicyArgs>[]>;
    attestationPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectAttestationPolicyArgs>[]>;
    deployments?: pulumi.Input<pulumi.Input<inputs.GetProjectDeploymentArgs>[]>;
    description?: pulumi.Input<string>;
    edgeviewPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectEdgeviewPolicyArgs>[]>;
    localOperatorConsolePolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectLocalOperatorConsolePolicyArgs>[]>;
    name: pulumi.Input<string>;
    networkPolicies?: pulumi.Input<pulumi.Input<inputs.GetProjectNetworkPolicyArgs>[]>;
    title: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
