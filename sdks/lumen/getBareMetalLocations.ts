// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBareMetalLocations(args?: GetBareMetalLocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetBareMetalLocationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("lumen:index/getBareMetalLocations:getBareMetalLocations", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBareMetalLocations.
 */
export interface GetBareMetalLocationsArgs {
    id?: string;
}

/**
 * A collection of values returned by getBareMetalLocations.
 */
export interface GetBareMetalLocationsResult {
    readonly id: string;
    readonly locations: outputs.GetBareMetalLocationsLocation[];
}
export function getBareMetalLocationsOutput(args?: GetBareMetalLocationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBareMetalLocationsResult> {
    return pulumi.output(args).apply((a: any) => getBareMetalLocations(a, opts))
}

/**
 * A collection of arguments for invoking getBareMetalLocations.
 */
export interface GetBareMetalLocationsOutputArgs {
    id?: pulumi.Input<string>;
}
