// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpsecPops(args?: GetIpsecPopsArgs, opts?: pulumi.InvokeOptions): Promise<GetIpsecPopsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netskope:index/getIpsecPops:getIpsecPops", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpsecPops.
 */
export interface GetIpsecPopsArgs {
    id?: string;
}

/**
 * A collection of values returned by getIpsecPops.
 */
export interface GetIpsecPopsResult {
    readonly id: string;
    readonly ipsecPops: outputs.GetIpsecPopsIpsecPop[];
}
export function getIpsecPopsOutput(args?: GetIpsecPopsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpsecPopsResult> {
    return pulumi.output(args).apply((a: any) => getIpsecPops(a, opts))
}

/**
 * A collection of arguments for invoking getIpsecPops.
 */
export interface GetIpsecPopsOutputArgs {
    id?: pulumi.Input<string>;
}
