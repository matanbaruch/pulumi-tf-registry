// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRemoteFunction(args: GetRemoteFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetRemoteFunctionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("timeplus:index/getRemoteFunction:getRemoteFunction", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRemoteFunction.
 */
export interface GetRemoteFunctionArgs {
    name: string;
}

/**
 * A collection of values returned by getRemoteFunction.
 */
export interface GetRemoteFunctionResult {
    readonly args: outputs.GetRemoteFunctionArg[];
    readonly authHeader: outputs.GetRemoteFunctionAuthHeader;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly returnType: string;
    readonly url: string;
}
export function getRemoteFunctionOutput(args: GetRemoteFunctionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRemoteFunctionResult> {
    return pulumi.output(args).apply((a: any) => getRemoteFunction(a, opts))
}

/**
 * A collection of arguments for invoking getRemoteFunction.
 */
export interface GetRemoteFunctionOutputArgs {
    name: pulumi.Input<string>;
}
