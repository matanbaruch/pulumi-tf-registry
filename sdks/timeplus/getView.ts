// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getView(args: GetViewArgs, opts?: pulumi.InvokeOptions): Promise<GetViewResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("timeplus:index/getView:getView", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getView.
 */
export interface GetViewArgs {
    name: string;
}

/**
 * A collection of values returned by getView.
 */
export interface GetViewResult {
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly query: string;
}
export function getViewOutput(args: GetViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetViewResult> {
    return pulumi.output(args).apply((a: any) => getView(a, opts))
}

/**
 * A collection of arguments for invoking getView.
 */
export interface GetViewOutputArgs {
    name: pulumi.Input<string>;
}
