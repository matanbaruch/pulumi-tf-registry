// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSink(args: GetSinkArgs, opts?: pulumi.InvokeOptions): Promise<GetSinkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("timeplus:index/getSink:getSink", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSink.
 */
export interface GetSinkArgs {
    id: string;
}

/**
 * A collection of values returned by getSink.
 */
export interface GetSinkResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly properties: string;
    readonly query: string;
    readonly type: string;
}
export function getSinkOutput(args: GetSinkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSinkResult> {
    return pulumi.output(args).apply((a: any) => getSink(a, opts))
}

/**
 * A collection of arguments for invoking getSink.
 */
export interface GetSinkOutputArgs {
    id: pulumi.Input<string>;
}
