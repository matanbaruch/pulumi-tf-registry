// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMaterializedView(args: GetMaterializedViewArgs, opts?: pulumi.InvokeOptions): Promise<GetMaterializedViewResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("timeplus:index/getMaterializedView:getMaterializedView", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMaterializedView.
 */
export interface GetMaterializedViewArgs {
    name: string;
}

/**
 * A collection of values returned by getMaterializedView.
 */
export interface GetMaterializedViewResult {
    readonly description: string;
    readonly historyTtl: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly query: string;
    readonly retentionBytes: number;
    readonly retentionMs: number;
    readonly targetStream: string;
}
export function getMaterializedViewOutput(args: GetMaterializedViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMaterializedViewResult> {
    return pulumi.output(args).apply((a: any) => getMaterializedView(a, opts))
}

/**
 * A collection of arguments for invoking getMaterializedView.
 */
export interface GetMaterializedViewOutputArgs {
    name: pulumi.Input<string>;
}
