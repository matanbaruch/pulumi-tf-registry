// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAlert(args: GetAlertArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("timeplus:index/getAlert:getAlert", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAlert.
 */
export interface GetAlertArgs {
    id: string;
}

/**
 * A collection of values returned by getAlert.
 */
export interface GetAlertResult {
    readonly action: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly properties: string;
    readonly resolveSql: string;
    readonly severity: number;
    readonly triggerSql: string;
}
export function getAlertOutput(args: GetAlertOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertResult> {
    return pulumi.output(args).apply((a: any) => getAlert(a, opts))
}

/**
 * A collection of arguments for invoking getAlert.
 */
export interface GetAlertOutputArgs {
    id: pulumi.Input<string>;
}
