// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVolume(args?: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powermax:index/getVolume:getVolume", {
        "filter": args.filter,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    filter?: inputs.GetVolumeFilter;
    timeouts?: inputs.GetVolumeTimeouts;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    readonly filter?: outputs.GetVolumeFilter;
    readonly id: string;
    readonly timeouts?: outputs.GetVolumeTimeouts;
    readonly volumes: outputs.GetVolumeVolume[];
}
export function getVolumeOutput(args?: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeResult> {
    return pulumi.output(args).apply((a: any) => getVolume(a, opts))
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    filter?: pulumi.Input<inputs.GetVolumeFilterArgs>;
    timeouts?: pulumi.Input<inputs.GetVolumeTimeoutsArgs>;
}
