// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProjectRole(args: GetProjectRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getProjectRole:getProjectRole", {
        "id": args.id,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "roleKey": args.roleKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectRole.
 */
export interface GetProjectRoleArgs {
    id?: string;
    orgId: string;
    projectId: string;
    roleKey: string;
}

/**
 * A collection of values returned by getProjectRole.
 */
export interface GetProjectRoleResult {
    readonly displayName: string;
    readonly group: string;
    readonly id: string;
    readonly orgId: string;
    readonly projectId: string;
    readonly roleKey: string;
}
export function getProjectRoleOutput(args: GetProjectRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectRoleResult> {
    return pulumi.output(args).apply((a: any) => getProjectRole(a, opts))
}

/**
 * A collection of arguments for invoking getProjectRole.
 */
export interface GetProjectRoleOutputArgs {
    id?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    roleKey: pulumi.Input<string>;
}
