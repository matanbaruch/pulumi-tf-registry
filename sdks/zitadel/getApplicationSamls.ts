// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApplicationSamls(args: GetApplicationSamlsArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationSamlsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getApplicationSamls:getApplicationSamls", {
        "id": args.id,
        "name": args.name,
        "nameMethod": args.nameMethod,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationSamls.
 */
export interface GetApplicationSamlsArgs {
    id?: string;
    name: string;
    nameMethod?: string;
    orgId?: string;
    projectId: string;
}

/**
 * A collection of values returned by getApplicationSamls.
 */
export interface GetApplicationSamlsResult {
    readonly appIds: string[];
    readonly id: string;
    readonly name: string;
    readonly nameMethod?: string;
    readonly orgId?: string;
    readonly projectId: string;
}
export function getApplicationSamlsOutput(args: GetApplicationSamlsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationSamlsResult> {
    return pulumi.output(args).apply((a: any) => getApplicationSamls(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationSamls.
 */
export interface GetApplicationSamlsOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameMethod?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
