// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgIdpLdap(args: GetOrgIdpLdapArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgIdpLdapResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getOrgIdpLdap:getOrgIdpLdap", {
        "id": args.id,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgIdpLdap.
 */
export interface GetOrgIdpLdapArgs {
    id: string;
    orgId?: string;
}

/**
 * A collection of values returned by getOrgIdpLdap.
 */
export interface GetOrgIdpLdapResult {
    readonly avatarUrlAttribute: string;
    readonly baseDn: string;
    readonly bindDn: string;
    readonly bindPassword: string;
    readonly displayNameAttribute: string;
    readonly emailAttribute: string;
    readonly emailVerifiedAttribute: string;
    readonly firstNameAttribute: string;
    readonly id: string;
    readonly idAttribute: string;
    readonly isAutoCreation: boolean;
    readonly isAutoUpdate: boolean;
    readonly isCreationAllowed: boolean;
    readonly isLinkingAllowed: boolean;
    readonly lastNameAttribute: string;
    readonly name: string;
    readonly nickNameAttribute: string;
    readonly orgId?: string;
    readonly phoneAttribute: string;
    readonly phoneVerifiedAttribute: string;
    readonly preferredLanguageAttribute: string;
    readonly preferredUsernameAttribute: string;
    readonly profileAttribute: string;
    readonly servers: string[];
    readonly startTls: boolean;
    readonly timeout: string;
    readonly userBase: string;
    readonly userFilters: string[];
    readonly userObjectClasses: string[];
}
export function getOrgIdpLdapOutput(args: GetOrgIdpLdapOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgIdpLdapResult> {
    return pulumi.output(args).apply((a: any) => getOrgIdpLdap(a, opts))
}

/**
 * A collection of arguments for invoking getOrgIdpLdap.
 */
export interface GetOrgIdpLdapOutputArgs {
    id: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
}
