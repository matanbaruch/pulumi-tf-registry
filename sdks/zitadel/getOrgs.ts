// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgs(args?: GetOrgsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getOrgs:getOrgs", {
        "domain": args.domain,
        "domainMethod": args.domainMethod,
        "id": args.id,
        "name": args.name,
        "nameMethod": args.nameMethod,
        "state": args.state,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgs.
 */
export interface GetOrgsArgs {
    domain?: string;
    domainMethod?: string;
    id?: string;
    name?: string;
    nameMethod?: string;
    state?: string;
}

/**
 * A collection of values returned by getOrgs.
 */
export interface GetOrgsResult {
    readonly domain?: string;
    readonly domainMethod?: string;
    readonly id: string;
    readonly ids: string[];
    readonly name?: string;
    readonly nameMethod?: string;
    readonly primaryDomain: string;
    readonly state?: string;
}
export function getOrgsOutput(args?: GetOrgsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgsResult> {
    return pulumi.output(args).apply((a: any) => getOrgs(a, opts))
}

/**
 * A collection of arguments for invoking getOrgs.
 */
export interface GetOrgsOutputArgs {
    domain?: pulumi.Input<string>;
    domainMethod?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameMethod?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
