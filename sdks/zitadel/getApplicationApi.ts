// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApplicationApi(args: GetApplicationApiArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationApiResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getApplicationApi:getApplicationApi", {
        "appId": args.appId,
        "id": args.id,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationApi.
 */
export interface GetApplicationApiArgs {
    appId: string;
    id?: string;
    orgId?: string;
    projectId: string;
}

/**
 * A collection of values returned by getApplicationApi.
 */
export interface GetApplicationApiResult {
    readonly appId: string;
    readonly authMethodType: string;
    readonly clientId: string;
    readonly id: string;
    readonly name: string;
    readonly orgId?: string;
    readonly projectId: string;
}
export function getApplicationApiOutput(args: GetApplicationApiOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationApiResult> {
    return pulumi.output(args).apply((a: any) => getApplicationApi(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationApi.
 */
export interface GetApplicationApiOutputArgs {
    appId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
