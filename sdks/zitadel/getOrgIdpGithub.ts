// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgIdpGithub(args: GetOrgIdpGithubArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgIdpGithubResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zitadel:index/getOrgIdpGithub:getOrgIdpGithub", {
        "id": args.id,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgIdpGithub.
 */
export interface GetOrgIdpGithubArgs {
    id: string;
    orgId?: string;
}

/**
 * A collection of values returned by getOrgIdpGithub.
 */
export interface GetOrgIdpGithubResult {
    readonly clientId: string;
    readonly clientSecret: string;
    readonly id: string;
    readonly isAutoCreation: boolean;
    readonly isAutoUpdate: boolean;
    readonly isCreationAllowed: boolean;
    readonly isLinkingAllowed: boolean;
    readonly name: string;
    readonly orgId?: string;
    readonly scopes: string[];
}
export function getOrgIdpGithubOutput(args: GetOrgIdpGithubOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgIdpGithubResult> {
    return pulumi.output(args).apply((a: any) => getOrgIdpGithub(a, opts))
}

/**
 * A collection of arguments for invoking getOrgIdpGithub.
 */
export interface GetOrgIdpGithubOutputArgs {
    id: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
}
