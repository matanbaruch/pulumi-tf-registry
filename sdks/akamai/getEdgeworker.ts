// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEdgeworker(args: GetEdgeworkerArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeworkerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getEdgeworker:getEdgeworker", {
        "edgeworkerId": args.edgeworkerId,
        "id": args.id,
        "localBundle": args.localBundle,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEdgeworker.
 */
export interface GetEdgeworkerArgs {
    edgeworkerId: number;
    id?: string;
    localBundle?: string;
}

/**
 * A collection of values returned by getEdgeworker.
 */
export interface GetEdgeworkerResult {
    readonly edgeworkerId: number;
    readonly groupId: string;
    readonly id: string;
    readonly localBundle?: string;
    readonly localBundleHash: string;
    readonly name: string;
    readonly resourceTierId: number;
    readonly version: string;
    readonly warnings: string[];
}
export function getEdgeworkerOutput(args: GetEdgeworkerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEdgeworkerResult> {
    return pulumi.output(args).apply((a: any) => getEdgeworker(a, opts))
}

/**
 * A collection of arguments for invoking getEdgeworker.
 */
export interface GetEdgeworkerOutputArgs {
    edgeworkerId: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    localBundle?: pulumi.Input<string>;
}
