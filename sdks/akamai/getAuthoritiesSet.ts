// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAuthoritiesSet(args: GetAuthoritiesSetArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthoritiesSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getAuthoritiesSet:getAuthoritiesSet", {
        "contract": args.contract,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthoritiesSet.
 */
export interface GetAuthoritiesSetArgs {
    contract: string;
    id?: string;
}

/**
 * A collection of values returned by getAuthoritiesSet.
 */
export interface GetAuthoritiesSetResult {
    readonly authorities: string[];
    readonly contract: string;
    readonly id: string;
}
export function getAuthoritiesSetOutput(args: GetAuthoritiesSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthoritiesSetResult> {
    return pulumi.output(args).apply((a: any) => getAuthoritiesSet(a, opts))
}

/**
 * A collection of arguments for invoking getAuthoritiesSet.
 */
export interface GetAuthoritiesSetOutputArgs {
    contract: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
