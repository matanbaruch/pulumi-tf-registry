// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCpsEnrollment(args: GetCpsEnrollmentArgs, opts?: pulumi.InvokeOptions): Promise<GetCpsEnrollmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCpsEnrollment:getCpsEnrollment", {
        "enrollmentId": args.enrollmentId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCpsEnrollment.
 */
export interface GetCpsEnrollmentArgs {
    enrollmentId: number;
    id?: string;
}

/**
 * A collection of values returned by getCpsEnrollment.
 */
export interface GetCpsEnrollmentResult {
    readonly adminContacts: outputs.GetCpsEnrollmentAdminContact[];
    readonly assignedSlots: number[];
    readonly certificateChainType: string;
    readonly certificateType: string;
    readonly commonName: string;
    readonly contractId: string;
    readonly csrs: outputs.GetCpsEnrollmentCsr[];
    readonly dnsChallenges: outputs.GetCpsEnrollmentDnsChallenge[];
    readonly enableMultiStackedCertificates: boolean;
    readonly enrollmentId: number;
    readonly httpChallenges: outputs.GetCpsEnrollmentHttpChallenge[];
    readonly id: string;
    readonly networkConfigurations: outputs.GetCpsEnrollmentNetworkConfiguration[];
    readonly orgId: number;
    readonly organizations: outputs.GetCpsEnrollmentOrganization[];
    readonly pendingChanges: boolean;
    readonly productionSlots: number[];
    readonly registrationAuthority: string;
    readonly sans: string[];
    readonly secureNetwork: string;
    readonly signatureAlgorithm: string;
    readonly sniOnly: boolean;
    readonly stagingSlots: number[];
    readonly techContacts: outputs.GetCpsEnrollmentTechContact[];
    readonly validationType: string;
}
export function getCpsEnrollmentOutput(args: GetCpsEnrollmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCpsEnrollmentResult> {
    return pulumi.output(args).apply((a: any) => getCpsEnrollment(a, opts))
}

/**
 * A collection of arguments for invoking getCpsEnrollment.
 */
export interface GetCpsEnrollmentOutputArgs {
    enrollmentId: pulumi.Input<number>;
    id?: pulumi.Input<string>;
}
