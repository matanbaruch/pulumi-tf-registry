// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPropertiesSearch(args: GetPropertiesSearchArgs, opts?: pulumi.InvokeOptions): Promise<GetPropertiesSearchResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getPropertiesSearch:getPropertiesSearch", {
        "id": args.id,
        "key": args.key,
        "value": args.value,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPropertiesSearch.
 */
export interface GetPropertiesSearchArgs {
    id?: string;
    key: string;
    value: string;
}

/**
 * A collection of values returned by getPropertiesSearch.
 */
export interface GetPropertiesSearchResult {
    readonly id: string;
    readonly key: string;
    readonly properties: outputs.GetPropertiesSearchProperty[];
    readonly value: string;
}
export function getPropertiesSearchOutput(args: GetPropertiesSearchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPropertiesSearchResult> {
    return pulumi.output(args).apply((a: any) => getPropertiesSearch(a, opts))
}

/**
 * A collection of arguments for invoking getPropertiesSearch.
 */
export interface GetPropertiesSearchOutputArgs {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}
