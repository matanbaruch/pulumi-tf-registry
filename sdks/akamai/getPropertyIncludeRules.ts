// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPropertyIncludeRules(args: GetPropertyIncludeRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetPropertyIncludeRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getPropertyIncludeRules:getPropertyIncludeRules", {
        "contractId": args.contractId,
        "groupId": args.groupId,
        "id": args.id,
        "includeId": args.includeId,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPropertyIncludeRules.
 */
export interface GetPropertyIncludeRulesArgs {
    contractId: string;
    groupId: string;
    id?: string;
    includeId: string;
    version: number;
}

/**
 * A collection of values returned by getPropertyIncludeRules.
 */
export interface GetPropertyIncludeRulesResult {
    readonly contractId: string;
    readonly groupId: string;
    readonly id: string;
    readonly includeId: string;
    readonly name: string;
    readonly ruleErrors: string;
    readonly ruleFormat: string;
    readonly ruleWarnings: string;
    readonly rules: string;
    readonly type: string;
    readonly version: number;
}
export function getPropertyIncludeRulesOutput(args: GetPropertyIncludeRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPropertyIncludeRulesResult> {
    return pulumi.output(args).apply((a: any) => getPropertyIncludeRules(a, opts))
}

/**
 * A collection of arguments for invoking getPropertyIncludeRules.
 */
export interface GetPropertyIncludeRulesOutputArgs {
    contractId: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includeId: pulumi.Input<string>;
    version: pulumi.Input<number>;
}
