// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppsecSelectableHostnames(args?: GetAppsecSelectableHostnamesArgs, opts?: pulumi.InvokeOptions): Promise<GetAppsecSelectableHostnamesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getAppsecSelectableHostnames:getAppsecSelectableHostnames", {
        "activeInProduction": args.activeInProduction,
        "activeInStaging": args.activeInStaging,
        "configId": args.configId,
        "contractid": args.contractid,
        "groupid": args.groupid,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppsecSelectableHostnames.
 */
export interface GetAppsecSelectableHostnamesArgs {
    activeInProduction?: boolean;
    activeInStaging?: boolean;
    configId?: number;
    contractid?: string;
    groupid?: number;
    id?: string;
}

/**
 * A collection of values returned by getAppsecSelectableHostnames.
 */
export interface GetAppsecSelectableHostnamesResult {
    readonly activeInProduction?: boolean;
    readonly activeInStaging?: boolean;
    readonly configId?: number;
    readonly contractid?: string;
    readonly groupid?: number;
    readonly hostnames: string[];
    readonly hostnamesJson: string;
    readonly id: string;
    readonly outputText: string;
}
export function getAppsecSelectableHostnamesOutput(args?: GetAppsecSelectableHostnamesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppsecSelectableHostnamesResult> {
    return pulumi.output(args).apply((a: any) => getAppsecSelectableHostnames(a, opts))
}

/**
 * A collection of arguments for invoking getAppsecSelectableHostnames.
 */
export interface GetAppsecSelectableHostnamesOutputArgs {
    activeInProduction?: pulumi.Input<boolean>;
    activeInStaging?: pulumi.Input<boolean>;
    configId?: pulumi.Input<number>;
    contractid?: pulumi.Input<string>;
    groupid?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
}
