// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPropertyRuleFormats(args?: GetPropertyRuleFormatsArgs, opts?: pulumi.InvokeOptions): Promise<GetPropertyRuleFormatsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getPropertyRuleFormats:getPropertyRuleFormats", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPropertyRuleFormats.
 */
export interface GetPropertyRuleFormatsArgs {
    id?: string;
}

/**
 * A collection of values returned by getPropertyRuleFormats.
 */
export interface GetPropertyRuleFormatsResult {
    readonly id: string;
    readonly ruleFormats: string[];
}
export function getPropertyRuleFormatsOutput(args?: GetPropertyRuleFormatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPropertyRuleFormatsResult> {
    return pulumi.output(args).apply((a: any) => getPropertyRuleFormats(a, opts))
}

/**
 * A collection of arguments for invoking getPropertyRuleFormats.
 */
export interface GetPropertyRuleFormatsOutputArgs {
    id?: pulumi.Input<string>;
}
