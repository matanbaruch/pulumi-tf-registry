// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamStates(args: GetIamStatesArgs, opts?: pulumi.InvokeOptions): Promise<GetIamStatesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getIamStates:getIamStates", {
        "country": args.country,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamStates.
 */
export interface GetIamStatesArgs {
    country: string;
    id?: string;
}

/**
 * A collection of values returned by getIamStates.
 */
export interface GetIamStatesResult {
    readonly country: string;
    readonly id: string;
    readonly states: string[];
}
export function getIamStatesOutput(args: GetIamStatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamStatesResult> {
    return pulumi.output(args).apply((a: any) => getIamStates(a, opts))
}

/**
 * A collection of arguments for invoking getIamStates.
 */
export interface GetIamStatesOutputArgs {
    country: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
