// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppsecHostnameCoverage(args?: GetAppsecHostnameCoverageArgs, opts?: pulumi.InvokeOptions): Promise<GetAppsecHostnameCoverageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getAppsecHostnameCoverage:getAppsecHostnameCoverage", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppsecHostnameCoverage.
 */
export interface GetAppsecHostnameCoverageArgs {
    id?: string;
}

/**
 * A collection of values returned by getAppsecHostnameCoverage.
 */
export interface GetAppsecHostnameCoverageResult {
    readonly id: string;
    readonly json: string;
    readonly outputText: string;
}
export function getAppsecHostnameCoverageOutput(args?: GetAppsecHostnameCoverageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppsecHostnameCoverageResult> {
    return pulumi.output(args).apply((a: any) => getAppsecHostnameCoverage(a, opts))
}

/**
 * A collection of arguments for invoking getAppsecHostnameCoverage.
 */
export interface GetAppsecHostnameCoverageOutputArgs {
    id?: pulumi.Input<string>;
}
