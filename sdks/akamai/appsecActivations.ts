// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AppsecActivations extends pulumi.CustomResource {
    /**
     * Get an existing AppsecActivations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppsecActivationsState, opts?: pulumi.CustomResourceOptions): AppsecActivations {
        return new AppsecActivations(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appsecActivations:AppsecActivations';

    /**
     * Returns true if the given object is an instance of AppsecActivations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppsecActivations {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppsecActivations.__pulumiType;
    }

    /**
     * Unique identifier of the security configuration to be activated
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * Network on which to activate the configuration version (STAGING or PRODUCTION)
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * Note describing the activation. Will use timestamp if omitted.
     */
    public readonly note!: pulumi.Output<string | undefined>;
    /**
     * List of email addresses to be notified with the results of the activation
     */
    public readonly notificationEmails!: pulumi.Output<string[]>;
    /**
     * The results of the activation
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AppsecActivationsTimeouts | undefined>;
    /**
     * Version of the security configuration to be activated
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a AppsecActivations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppsecActivationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppsecActivationsArgs | AppsecActivationsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppsecActivationsState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["note"] = state ? state.note : undefined;
            resourceInputs["notificationEmails"] = state ? state.notificationEmails : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as AppsecActivationsArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.notificationEmails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationEmails'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["note"] = args ? args.note : undefined;
            resourceInputs["notificationEmails"] = args ? args.notificationEmails : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppsecActivations.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppsecActivations resources.
 */
export interface AppsecActivationsState {
    /**
     * Unique identifier of the security configuration to be activated
     */
    configId?: pulumi.Input<number>;
    /**
     * Network on which to activate the configuration version (STAGING or PRODUCTION)
     */
    network?: pulumi.Input<string>;
    /**
     * Note describing the activation. Will use timestamp if omitted.
     */
    note?: pulumi.Input<string>;
    /**
     * List of email addresses to be notified with the results of the activation
     */
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The results of the activation
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppsecActivationsTimeouts>;
    /**
     * Version of the security configuration to be activated
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppsecActivations resource.
 */
export interface AppsecActivationsArgs {
    /**
     * Unique identifier of the security configuration to be activated
     */
    configId: pulumi.Input<number>;
    /**
     * Network on which to activate the configuration version (STAGING or PRODUCTION)
     */
    network?: pulumi.Input<string>;
    /**
     * Note describing the activation. Will use timestamp if omitted.
     */
    note?: pulumi.Input<string>;
    /**
     * List of email addresses to be notified with the results of the activation
     */
    notificationEmails: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.AppsecActivationsTimeouts>;
    /**
     * Version of the security configuration to be activated
     */
    version: pulumi.Input<number>;
}
