// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppsecConfiguration(args?: GetAppsecConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetAppsecConfigurationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getAppsecConfiguration:getAppsecConfiguration", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppsecConfiguration.
 */
export interface GetAppsecConfigurationArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getAppsecConfiguration.
 */
export interface GetAppsecConfigurationResult {
    readonly configId: number;
    readonly hostNames: string[];
    readonly id: string;
    readonly latestVersion: number;
    readonly name?: string;
    readonly outputText: string;
    readonly productionVersion: number;
    readonly stagingVersion: number;
}
export function getAppsecConfigurationOutput(args?: GetAppsecConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppsecConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getAppsecConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getAppsecConfiguration.
 */
export interface GetAppsecConfigurationOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
