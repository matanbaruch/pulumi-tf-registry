// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCpsCsr(args: GetCpsCsrArgs, opts?: pulumi.InvokeOptions): Promise<GetCpsCsrResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCpsCsr:getCpsCsr", {
        "enrollmentId": args.enrollmentId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCpsCsr.
 */
export interface GetCpsCsrArgs {
    enrollmentId: number;
    id?: string;
}

/**
 * A collection of values returned by getCpsCsr.
 */
export interface GetCpsCsrResult {
    readonly csrEcdsa: string;
    readonly csrRsa: string;
    readonly enrollmentId: number;
    readonly id: string;
}
export function getCpsCsrOutput(args: GetCpsCsrOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCpsCsrResult> {
    return pulumi.output(args).apply((a: any) => getCpsCsr(a, opts))
}

/**
 * A collection of arguments for invoking getCpsCsr.
 */
export interface GetCpsCsrOutputArgs {
    enrollmentId: pulumi.Input<number>;
    id?: pulumi.Input<string>;
}
