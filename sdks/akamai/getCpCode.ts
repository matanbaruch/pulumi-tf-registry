// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCpCode(args: GetCpCodeArgs, opts?: pulumi.InvokeOptions): Promise<GetCpCodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getCpCode:getCpCode", {
        "contractId": args.contractId,
        "groupId": args.groupId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCpCode.
 */
export interface GetCpCodeArgs {
    contractId: string;
    groupId: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getCpCode.
 */
export interface GetCpCodeResult {
    readonly contractId: string;
    readonly groupId: string;
    readonly id: string;
    readonly name: string;
    readonly productIds: string[];
}
export function getCpCodeOutput(args: GetCpCodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCpCodeResult> {
    return pulumi.output(args).apply((a: any) => getCpCode(a, opts))
}

/**
 * A collection of arguments for invoking getCpCode.
 */
export interface GetCpCodeOutputArgs {
    contractId: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
