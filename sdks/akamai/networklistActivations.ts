// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NetworklistActivations extends pulumi.CustomResource {
    /**
     * Get an existing NetworklistActivations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworklistActivationsState, opts?: pulumi.CustomResourceOptions): NetworklistActivations {
        return new NetworklistActivations(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/networklistActivations:NetworklistActivations';

    /**
     * Returns true if the given object is an instance of NetworklistActivations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworklistActivations {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworklistActivations.__pulumiType;
    }

    /**
     * The Akamai network on which the list is activated: STAGING or PRODUCTION
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the network list
     */
    public readonly networkListId!: pulumi.Output<string>;
    /**
     * Descriptive text to accompany the activation
     */
    public readonly notes!: pulumi.Output<string | undefined>;
    /**
     * List of email addresses of Control Center users who receive an email when activation of this list is complete
     */
    public readonly notificationEmails!: pulumi.Output<string[]>;
    /**
     * This network list's current activation status in the environment specified by the "network" attribute
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Identifies the sync point of the network list to be activated
     */
    public readonly syncPoint!: pulumi.Output<number>;

    /**
     * Create a NetworklistActivations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworklistActivationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworklistActivationsArgs | NetworklistActivationsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworklistActivationsState | undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["networkListId"] = state ? state.networkListId : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["notificationEmails"] = state ? state.notificationEmails : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["syncPoint"] = state ? state.syncPoint : undefined;
        } else {
            const args = argsOrState as NetworklistActivationsArgs | undefined;
            if ((!args || args.networkListId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkListId'");
            }
            if ((!args || args.notificationEmails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationEmails'");
            }
            if ((!args || args.syncPoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'syncPoint'");
            }
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["networkListId"] = args ? args.networkListId : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["notificationEmails"] = args ? args.notificationEmails : undefined;
            resourceInputs["syncPoint"] = args ? args.syncPoint : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworklistActivations.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworklistActivations resources.
 */
export interface NetworklistActivationsState {
    /**
     * The Akamai network on which the list is activated: STAGING or PRODUCTION
     */
    network?: pulumi.Input<string>;
    /**
     * Unique identifier of the network list
     */
    networkListId?: pulumi.Input<string>;
    /**
     * Descriptive text to accompany the activation
     */
    notes?: pulumi.Input<string>;
    /**
     * List of email addresses of Control Center users who receive an email when activation of this list is complete
     */
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This network list's current activation status in the environment specified by the "network" attribute
     */
    status?: pulumi.Input<string>;
    /**
     * Identifies the sync point of the network list to be activated
     */
    syncPoint?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NetworklistActivations resource.
 */
export interface NetworklistActivationsArgs {
    /**
     * The Akamai network on which the list is activated: STAGING or PRODUCTION
     */
    network?: pulumi.Input<string>;
    /**
     * Unique identifier of the network list
     */
    networkListId: pulumi.Input<string>;
    /**
     * Descriptive text to accompany the activation
     */
    notes?: pulumi.Input<string>;
    /**
     * List of email addresses of Control Center users who receive an email when activation of this list is complete
     */
    notificationEmails: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifies the sync point of the network list to be activated
     */
    syncPoint: pulumi.Input<number>;
}
