// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EdgeHostname extends pulumi.CustomResource {
    /**
     * Get an existing EdgeHostname resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeHostnameState, opts?: pulumi.CustomResourceOptions): EdgeHostname {
        return new EdgeHostname(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/edgeHostname:EdgeHostname';

    /**
     * Returns true if the given object is an instance of EdgeHostname.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeHostname {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeHostname.__pulumiType;
    }

    public readonly certificate!: pulumi.Output<number | undefined>;
    public readonly contractId!: pulumi.Output<string>;
    public readonly edgeHostname!: pulumi.Output<string>;
    public readonly groupId!: pulumi.Output<string>;
    public readonly ipBehavior!: pulumi.Output<string>;
    public readonly productId!: pulumi.Output<string>;
    /**
     * Email address that should receive updates on the IP behavior update request.
     */
    public readonly statusUpdateEmails!: pulumi.Output<string[] | undefined>;
    /**
     * Enables to set timeout for processing
     */
    public readonly timeouts!: pulumi.Output<outputs.EdgeHostnameTimeouts | undefined>;
    /**
     * The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default
     * value for product is used.
     */
    public readonly ttl!: pulumi.Output<number | undefined>;
    /**
     * A JSON encoded list of use cases
     */
    public readonly useCases!: pulumi.Output<string | undefined>;

    /**
     * Create a EdgeHostname resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeHostnameArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeHostnameArgs | EdgeHostnameState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeHostnameState | undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["contractId"] = state ? state.contractId : undefined;
            resourceInputs["edgeHostname"] = state ? state.edgeHostname : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["ipBehavior"] = state ? state.ipBehavior : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["statusUpdateEmails"] = state ? state.statusUpdateEmails : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["useCases"] = state ? state.useCases : undefined;
        } else {
            const args = argsOrState as EdgeHostnameArgs | undefined;
            if ((!args || args.contractId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contractId'");
            }
            if ((!args || args.edgeHostname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeHostname'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.ipBehavior === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipBehavior'");
            }
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["contractId"] = args ? args.contractId : undefined;
            resourceInputs["edgeHostname"] = args ? args.edgeHostname : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["ipBehavior"] = args ? args.ipBehavior : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["statusUpdateEmails"] = args ? args.statusUpdateEmails : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["useCases"] = args ? args.useCases : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeHostname.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EdgeHostname resources.
 */
export interface EdgeHostnameState {
    certificate?: pulumi.Input<number>;
    contractId?: pulumi.Input<string>;
    edgeHostname?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    ipBehavior?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    /**
     * Email address that should receive updates on the IP behavior update request.
     */
    statusUpdateEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.EdgeHostnameTimeouts>;
    /**
     * The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default
     * value for product is used.
     */
    ttl?: pulumi.Input<number>;
    /**
     * A JSON encoded list of use cases
     */
    useCases?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdgeHostname resource.
 */
export interface EdgeHostnameArgs {
    certificate?: pulumi.Input<number>;
    contractId: pulumi.Input<string>;
    edgeHostname: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    ipBehavior: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    /**
     * Email address that should receive updates on the IP behavior update request.
     */
    statusUpdateEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables to set timeout for processing
     */
    timeouts?: pulumi.Input<inputs.EdgeHostnameTimeouts>;
    /**
     * The time to live, or number of seconds to keep an edge hostname assigned to a map or target. If not provided default
     * value for product is used.
     */
    ttl?: pulumi.Input<number>;
    /**
     * A JSON encoded list of use cases
     */
    useCases?: pulumi.Input<string>;
}
