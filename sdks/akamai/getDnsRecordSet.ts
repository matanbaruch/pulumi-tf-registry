// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDnsRecordSet(args: GetDnsRecordSetArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsRecordSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("akamai:index/getDnsRecordSet:getDnsRecordSet", {
        "host": args.host,
        "id": args.id,
        "recordType": args.recordType,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsRecordSet.
 */
export interface GetDnsRecordSetArgs {
    host: string;
    id?: string;
    recordType: string;
    zone: string;
}

/**
 * A collection of values returned by getDnsRecordSet.
 */
export interface GetDnsRecordSetResult {
    readonly host: string;
    readonly id: string;
    readonly rdatas: string[];
    readonly recordType: string;
    readonly zone: string;
}
export function getDnsRecordSetOutput(args: GetDnsRecordSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsRecordSetResult> {
    return pulumi.output(args).apply((a: any) => getDnsRecordSet(a, opts))
}

/**
 * A collection of arguments for invoking getDnsRecordSet.
 */
export interface GetDnsRecordSetOutputArgs {
    host: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    recordType: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
