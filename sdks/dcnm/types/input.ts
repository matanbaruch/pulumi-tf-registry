// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetNetworkAttachment {
    attach?: boolean;
    dot1Qvlan?: number;
    extensionValues?: string;
    freeFormConfig?: string;
    instanceValues?: string;
    serialNumber?: string;
    switchPorts?: string[];
    untagged?: boolean;
    vlanId?: number;
}

export interface GetNetworkAttachmentArgs {
    attach?: pulumi.Input<boolean>;
    dot1Qvlan?: pulumi.Input<number>;
    extensionValues?: pulumi.Input<string>;
    freeFormConfig?: pulumi.Input<string>;
    instanceValues?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    switchPorts?: pulumi.Input<pulumi.Input<string>[]>;
    untagged?: pulumi.Input<boolean>;
    vlanId?: pulumi.Input<number>;
}

export interface GetRoutePeeringRoute {
    routeParmas?: {[key: string]: string};
    templateName?: string;
    vrfName?: string;
}

export interface GetRoutePeeringRouteArgs {
    routeParmas?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateName?: pulumi.Input<string>;
    vrfName?: pulumi.Input<string>;
}

export interface GetRoutePeeringServiceNetwork {
    gatewayIpAddress?: string;
    networkName?: string;
    networkType?: string;
    templateName?: string;
    vlanId?: number;
    vrfName?: string;
}

export interface GetRoutePeeringServiceNetworkArgs {
    gatewayIpAddress?: pulumi.Input<string>;
    networkName?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    templateName?: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
    vrfName?: pulumi.Input<string>;
}

export interface GetVrfAttachment {
    attach?: boolean;
    serialNumber?: string;
    vlanId?: number;
}

export interface GetVrfAttachmentArgs {
    attach?: pulumi.Input<boolean>;
    serialNumber?: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
}

export interface InventorySwitchConfig {
    ip: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    switchDbId?: pulumi.Input<string>;
    switchName?: pulumi.Input<string>;
}

export interface NetworkAttachment {
    attach?: pulumi.Input<boolean>;
    dot1Qvlan?: pulumi.Input<number>;
    extensionValues?: pulumi.Input<string>;
    freeFormConfig?: pulumi.Input<string>;
    instanceValues?: pulumi.Input<string>;
    serialNumber: pulumi.Input<string>;
    switchPorts?: pulumi.Input<pulumi.Input<string>[]>;
    untagged?: pulumi.Input<boolean>;
    vlanId?: pulumi.Input<number>;
}

export interface RoutePeeringRoute {
    routeParmas?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateName?: pulumi.Input<string>;
    vrfName?: pulumi.Input<string>;
}

export interface RoutePeeringServiceNetwork {
    gatewayIpAddress: pulumi.Input<string>;
    networkName: pulumi.Input<string>;
    networkType: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
    vlanId: pulumi.Input<number>;
    vrfName: pulumi.Input<string>;
}

export interface VrfAttachment {
    attach?: pulumi.Input<boolean>;
    extensionValues?: pulumi.Input<string>;
    freeFormConfig?: pulumi.Input<string>;
    loopbackId?: pulumi.Input<number>;
    loopbackIpv4?: pulumi.Input<string>;
    loopbackIpv6?: pulumi.Input<string>;
    serialNumber: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
    vrfLites?: pulumi.Input<pulumi.Input<inputs.VrfAttachmentVrfLite>[]>;
}

export interface VrfAttachmentVrfLite {
    autoVrfLiteFlag?: pulumi.Input<string>;
    dot1qId?: pulumi.Input<string>;
    interfaceName: pulumi.Input<string>;
    ipMask?: pulumi.Input<string>;
    ipv6Mask?: pulumi.Input<string>;
    ipv6Neighbor?: pulumi.Input<string>;
    neighborAsn?: pulumi.Input<string>;
    neighborIp?: pulumi.Input<string>;
    peerVrfName: pulumi.Input<string>;
}
