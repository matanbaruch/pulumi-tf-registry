// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetNetworkAttachment {
    attach: boolean;
    dot1Qvlan: number;
    extensionValues: string;
    freeFormConfig: string;
    instanceValues: string;
    serialNumber: string;
    switchPorts: string[];
    untagged: boolean;
    vlanId: number;
}

export interface GetRoutePeeringRoute {
    routeParmas?: {[key: string]: string};
    templateName?: string;
    vrfName?: string;
}

export interface GetRoutePeeringServiceNetwork {
    gatewayIpAddress?: string;
    networkName?: string;
    networkType?: string;
    templateName?: string;
    vlanId?: number;
    vrfName?: string;
}

export interface GetVrfAttachment {
    attach: boolean;
    serialNumber: string;
    vlanId: number;
}

export interface InventorySwitchConfig {
    ip: string;
    mode: string;
    model: string;
    role: string;
    serialNumber: string;
    switchDbId: string;
    switchName: string;
}

export interface NetworkAttachment {
    attach?: boolean;
    dot1Qvlan: number;
    extensionValues: string;
    freeFormConfig: string;
    instanceValues: string;
    serialNumber: string;
    switchPorts: string[];
    untagged: boolean;
    vlanId: number;
}

export interface RoutePeeringRoute {
    routeParmas?: {[key: string]: string};
    templateName?: string;
    vrfName?: string;
}

export interface RoutePeeringServiceNetwork {
    gatewayIpAddress: string;
    networkName: string;
    networkType: string;
    templateName: string;
    vlanId: number;
    vrfName: string;
}

export interface VrfAttachment {
    attach?: boolean;
    extensionValues: string;
    freeFormConfig: string;
    loopbackId: number;
    loopbackIpv4: string;
    loopbackIpv6: string;
    serialNumber: string;
    vlanId: number;
    vrfLites?: outputs.VrfAttachmentVrfLite[];
}

export interface VrfAttachmentVrfLite {
    autoVrfLiteFlag?: string;
    dot1qId?: string;
    interfaceName: string;
    ipMask?: string;
    ipv6Mask?: string;
    ipv6Neighbor?: string;
    neighborAsn?: string;
    neighborIp?: string;
    peerVrfName: string;
}

