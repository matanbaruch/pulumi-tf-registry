// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPolicy(args: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dcnm:index/getPolicy:getPolicy", {
        "description": args.description,
        "entityName": args.entityName,
        "entityType": args.entityType,
        "id": args.id,
        "policyId": args.policyId,
        "priority": args.priority,
        "serialNumber": args.serialNumber,
        "source": args.source,
        "templateContentType": args.templateContentType,
        "templateName": args.templateName,
        "templateProps": args.templateProps,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyArgs {
    description?: string;
    entityName?: string;
    entityType?: string;
    id?: string;
    policyId: string;
    priority?: string;
    serialNumber?: string;
    source?: string;
    templateContentType?: string;
    templateName?: string;
    templateProps?: {[key: string]: string};
}

/**
 * A collection of values returned by getPolicy.
 */
export interface GetPolicyResult {
    readonly description?: string;
    readonly entityName?: string;
    readonly entityType?: string;
    readonly id: string;
    readonly policyId: string;
    readonly priority?: string;
    readonly serialNumber?: string;
    readonly source?: string;
    readonly templateContentType?: string;
    readonly templateName?: string;
    readonly templateProps?: {[key: string]: string};
}
export function getPolicyOutput(args: GetPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyOutputArgs {
    description?: pulumi.Input<string>;
    entityName?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    policyId: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    templateContentType?: pulumi.Input<string>;
    templateName?: pulumi.Input<string>;
    templateProps?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
