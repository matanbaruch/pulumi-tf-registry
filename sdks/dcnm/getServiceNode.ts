// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceNode(args: GetServiceNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceNodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dcnm:index/getServiceNode:getServiceNode", {
        "adminState": args.adminState,
        "allowedVlans": args.allowedVlans,
        "attachedFabric": args.attachedFabric,
        "attachedSwitchInterfaceName": args.attachedSwitchInterfaceName,
        "bpduGuardFlag": args.bpduGuardFlag,
        "destFabricName": args.destFabricName,
        "destIfName": args.destIfName,
        "destSerialNumber": args.destSerialNumber,
        "destSwitchName": args.destSwitchName,
        "formFactor": args.formFactor,
        "id": args.id,
        "interfaceName": args.interfaceName,
        "isMetaswitch": args.isMetaswitch,
        "linkTemplateName": args.linkTemplateName,
        "mtu": args.mtu,
        "name": args.name,
        "nodeType": args.nodeType,
        "policyDescription": args.policyDescription,
        "policyId": args.policyId,
        "porttypeFastEnabled": args.porttypeFastEnabled,
        "priority": args.priority,
        "serviceFabric": args.serviceFabric,
        "sourceFabricName": args.sourceFabricName,
        "sourceIfName": args.sourceIfName,
        "sourceSerialNumber": args.sourceSerialNumber,
        "sourceSwitchName": args.sourceSwitchName,
        "speed": args.speed,
        "switches": args.switches,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceNode.
 */
export interface GetServiceNodeArgs {
    adminState?: string;
    allowedVlans?: string;
    attachedFabric?: string;
    attachedSwitchInterfaceName?: string;
    bpduGuardFlag?: string;
    destFabricName?: string;
    destIfName?: string;
    destSerialNumber?: string;
    destSwitchName?: string;
    formFactor?: string;
    id?: string;
    interfaceName?: string;
    isMetaswitch?: string;
    linkTemplateName?: string;
    mtu?: string;
    name: string;
    nodeType?: string;
    policyDescription?: string;
    policyId?: string;
    porttypeFastEnabled?: string;
    priority?: string;
    serviceFabric: string;
    sourceFabricName?: string;
    sourceIfName?: string;
    sourceSerialNumber?: string;
    sourceSwitchName?: string;
    speed?: string;
    switches?: string[];
}

/**
 * A collection of values returned by getServiceNode.
 */
export interface GetServiceNodeResult {
    readonly adminState: string;
    readonly allowedVlans: string;
    readonly attachedFabric: string;
    readonly attachedSwitchInterfaceName: string;
    readonly bpduGuardFlag: string;
    readonly destFabricName: string;
    readonly destIfName: string;
    readonly destSerialNumber: string;
    readonly destSwitchName: string;
    readonly formFactor: string;
    readonly id: string;
    readonly interfaceName: string;
    readonly isMetaswitch: string;
    readonly linkTemplateName: string;
    readonly mtu: string;
    readonly name: string;
    readonly nodeType: string;
    readonly policyDescription: string;
    readonly policyId: string;
    readonly porttypeFastEnabled: string;
    readonly priority: string;
    readonly serviceFabric: string;
    readonly sourceFabricName: string;
    readonly sourceIfName: string;
    readonly sourceSerialNumber: string;
    readonly sourceSwitchName: string;
    readonly speed: string;
    readonly switches?: string[];
}
export function getServiceNodeOutput(args: GetServiceNodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceNodeResult> {
    return pulumi.output(args).apply((a: any) => getServiceNode(a, opts))
}

/**
 * A collection of arguments for invoking getServiceNode.
 */
export interface GetServiceNodeOutputArgs {
    adminState?: pulumi.Input<string>;
    allowedVlans?: pulumi.Input<string>;
    attachedFabric?: pulumi.Input<string>;
    attachedSwitchInterfaceName?: pulumi.Input<string>;
    bpduGuardFlag?: pulumi.Input<string>;
    destFabricName?: pulumi.Input<string>;
    destIfName?: pulumi.Input<string>;
    destSerialNumber?: pulumi.Input<string>;
    destSwitchName?: pulumi.Input<string>;
    formFactor?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    isMetaswitch?: pulumi.Input<string>;
    linkTemplateName?: pulumi.Input<string>;
    mtu?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nodeType?: pulumi.Input<string>;
    policyDescription?: pulumi.Input<string>;
    policyId?: pulumi.Input<string>;
    porttypeFastEnabled?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    serviceFabric: pulumi.Input<string>;
    sourceFabricName?: pulumi.Input<string>;
    sourceIfName?: pulumi.Input<string>;
    sourceSerialNumber?: pulumi.Input<string>;
    sourceSwitchName?: pulumi.Input<string>;
    speed?: pulumi.Input<string>;
    switches?: pulumi.Input<pulumi.Input<string>[]>;
}
