// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getType(args: GetTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("observability:index/getType:getType", {
        "data": args.data,
        "typeName": args.typeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getType.
 */
export interface GetTypeArgs {
    data?: any;
    typeName: string;
}

/**
 * A collection of values returned by getType.
 */
export interface GetTypeResult {
    readonly data: any;
    readonly id: string;
    readonly typeName: string;
}
export function getTypeOutput(args: GetTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTypeResult> {
    return pulumi.output(args).apply((a: any) => getType(a, opts))
}

/**
 * A collection of arguments for invoking getType.
 */
export interface GetTypeOutputArgs {
    data?: any;
    typeName: pulumi.Input<string>;
}
