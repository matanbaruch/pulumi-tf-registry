// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDimensionValues(args: GetDimensionValuesArgs, opts?: pulumi.InvokeOptions): Promise<GetDimensionValuesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("signalfx:index/getDimensionValues:getDimensionValues", {
        "id": args.id,
        "query": args.query,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDimensionValues.
 */
export interface GetDimensionValuesArgs {
    id?: string;
    query: string;
}

/**
 * A collection of values returned by getDimensionValues.
 */
export interface GetDimensionValuesResult {
    readonly id: string;
    readonly query: string;
    readonly values: string[];
}
export function getDimensionValuesOutput(args: GetDimensionValuesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDimensionValuesResult> {
    return pulumi.output(args).apply((a: any) => getDimensionValues(a, opts))
}

/**
 * A collection of arguments for invoking getDimensionValues.
 */
export interface GetDimensionValuesOutputArgs {
    id?: pulumi.Input<string>;
    query: pulumi.Input<string>;
}
