// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CategoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetCategoryTimeouts {
    read?: string;
}

export interface GetCategoryTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMailFolderTimeouts {
    read?: string;
}

export interface GetMailFolderTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface MailFolderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MessageRuleAction {
    assignCategories?: pulumi.Input<pulumi.Input<string>[]>;
    copyToFolder?: pulumi.Input<string>;
    delete?: pulumi.Input<boolean>;
    forwardAsAttachmentTos?: pulumi.Input<pulumi.Input<string>[]>;
    forwardTos?: pulumi.Input<pulumi.Input<string>[]>;
    markAsRead?: pulumi.Input<boolean>;
    markImportance?: pulumi.Input<string>;
    moveToFolder?: pulumi.Input<string>;
    permanentDelete?: pulumi.Input<boolean>;
    redirectTos?: pulumi.Input<pulumi.Input<string>[]>;
    stopProcessingRules?: pulumi.Input<boolean>;
}

export interface MessageRuleCondition {
    bodyContains?: pulumi.Input<pulumi.Input<string>[]>;
    bodyOrSubjectContains?: pulumi.Input<pulumi.Input<string>[]>;
    categories?: pulumi.Input<pulumi.Input<string>[]>;
    fromAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    hasAttachments?: pulumi.Input<boolean>;
    headerContains?: pulumi.Input<pulumi.Input<string>[]>;
    importance?: pulumi.Input<string>;
    isApprovalRequest?: pulumi.Input<boolean>;
    isAutomaticForward?: pulumi.Input<boolean>;
    isAutomaticReply?: pulumi.Input<boolean>;
    isEncrypted?: pulumi.Input<boolean>;
    isMeetingRequest?: pulumi.Input<boolean>;
    isMeetingResponse?: pulumi.Input<boolean>;
    isNonDeliveryReport?: pulumi.Input<boolean>;
    isPermissionControlled?: pulumi.Input<boolean>;
    isReadReceipt?: pulumi.Input<boolean>;
    isSigned?: pulumi.Input<boolean>;
    isVoicemail?: pulumi.Input<boolean>;
    messageActionFlag?: pulumi.Input<string>;
    notSentToMe?: pulumi.Input<boolean>;
    recipientContains?: pulumi.Input<pulumi.Input<string>[]>;
    senderContains?: pulumi.Input<pulumi.Input<string>[]>;
    sensitivity?: pulumi.Input<string>;
    sentCcMe?: pulumi.Input<boolean>;
    sentOnlyToMe?: pulumi.Input<boolean>;
    sentToAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sentToMe?: pulumi.Input<boolean>;
    sentToOrCcMe?: pulumi.Input<boolean>;
    subjectContains?: pulumi.Input<pulumi.Input<string>[]>;
    withinSizeRange?: pulumi.Input<inputs.MessageRuleConditionWithinSizeRange>;
}

export interface MessageRuleConditionWithinSizeRange {
    maxSize: pulumi.Input<number>;
    minSize: pulumi.Input<number>;
}

export interface MessageRuleException {
    bodyContains?: pulumi.Input<pulumi.Input<string>[]>;
    bodyOrSubjectContains?: pulumi.Input<pulumi.Input<string>[]>;
    categories?: pulumi.Input<pulumi.Input<string>[]>;
    fromAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    hasAttachments?: pulumi.Input<boolean>;
    headerContains?: pulumi.Input<pulumi.Input<string>[]>;
    importance?: pulumi.Input<string>;
    isApprovalRequest?: pulumi.Input<boolean>;
    isAutomaticForward?: pulumi.Input<boolean>;
    isAutomaticReply?: pulumi.Input<boolean>;
    isEncrypted?: pulumi.Input<boolean>;
    isMeetingRequest?: pulumi.Input<boolean>;
    isMeetingResponse?: pulumi.Input<boolean>;
    isNonDeliveryReport?: pulumi.Input<boolean>;
    isPermissionControlled?: pulumi.Input<boolean>;
    isReadReceipt?: pulumi.Input<boolean>;
    isSigned?: pulumi.Input<boolean>;
    isVoicemail?: pulumi.Input<boolean>;
    messageActionFlag?: pulumi.Input<string>;
    notSentToMe?: pulumi.Input<boolean>;
    recipientContains?: pulumi.Input<pulumi.Input<string>[]>;
    senderContains?: pulumi.Input<pulumi.Input<string>[]>;
    sensitivity?: pulumi.Input<string>;
    sentCcMe?: pulumi.Input<boolean>;
    sentOnlyToMe?: pulumi.Input<boolean>;
    sentToAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sentToMe?: pulumi.Input<boolean>;
    sentToOrCcMe?: pulumi.Input<boolean>;
    subjectContains?: pulumi.Input<pulumi.Input<string>[]>;
    withinSizeRange?: pulumi.Input<inputs.MessageRuleExceptionWithinSizeRange>;
}

export interface MessageRuleExceptionWithinSizeRange {
    maxSize: pulumi.Input<number>;
    minSize: pulumi.Input<number>;
}

export interface MessageRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProviderFeature {
}
export namespace config {
}
