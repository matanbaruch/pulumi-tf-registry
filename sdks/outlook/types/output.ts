// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CategoryTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface GetCategoryTimeouts {
    read?: string;
}

export interface GetMailFolderTimeouts {
    read?: string;
}

export interface MailFolderTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface MessageRuleAction {
    assignCategories?: string[];
    copyToFolder?: string;
    delete?: boolean;
    forwardAsAttachmentTos?: string[];
    forwardTos?: string[];
    markAsRead?: boolean;
    markImportance?: string;
    moveToFolder?: string;
    permanentDelete?: boolean;
    redirectTos?: string[];
    stopProcessingRules?: boolean;
}

export interface MessageRuleCondition {
    bodyContains?: string[];
    bodyOrSubjectContains?: string[];
    categories?: string[];
    fromAddresses?: string[];
    hasAttachments?: boolean;
    headerContains?: string[];
    importance?: string;
    isApprovalRequest?: boolean;
    isAutomaticForward?: boolean;
    isAutomaticReply?: boolean;
    isEncrypted?: boolean;
    isMeetingRequest?: boolean;
    isMeetingResponse?: boolean;
    isNonDeliveryReport?: boolean;
    isPermissionControlled?: boolean;
    isReadReceipt?: boolean;
    isSigned?: boolean;
    isVoicemail?: boolean;
    messageActionFlag?: string;
    notSentToMe?: boolean;
    recipientContains?: string[];
    senderContains?: string[];
    sensitivity?: string;
    sentCcMe?: boolean;
    sentOnlyToMe?: boolean;
    sentToAddresses?: string[];
    sentToMe?: boolean;
    sentToOrCcMe?: boolean;
    subjectContains?: string[];
    withinSizeRange?: outputs.MessageRuleConditionWithinSizeRange;
}

export interface MessageRuleConditionWithinSizeRange {
    maxSize: number;
    minSize: number;
}

export interface MessageRuleException {
    bodyContains?: string[];
    bodyOrSubjectContains?: string[];
    categories?: string[];
    fromAddresses?: string[];
    hasAttachments?: boolean;
    headerContains?: string[];
    importance?: string;
    isApprovalRequest?: boolean;
    isAutomaticForward?: boolean;
    isAutomaticReply?: boolean;
    isEncrypted?: boolean;
    isMeetingRequest?: boolean;
    isMeetingResponse?: boolean;
    isNonDeliveryReport?: boolean;
    isPermissionControlled?: boolean;
    isReadReceipt?: boolean;
    isSigned?: boolean;
    isVoicemail?: boolean;
    messageActionFlag?: string;
    notSentToMe?: boolean;
    recipientContains?: string[];
    senderContains?: string[];
    sensitivity?: string;
    sentCcMe?: boolean;
    sentOnlyToMe?: boolean;
    sentToAddresses?: string[];
    sentToMe?: boolean;
    sentToOrCcMe?: boolean;
    subjectContains?: string[];
    withinSizeRange?: outputs.MessageRuleExceptionWithinSizeRange;
}

export interface MessageRuleExceptionWithinSizeRange {
    maxSize: number;
    minSize: number;
}

export interface MessageRuleTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export namespace config {
    export interface Feature {
    }

}
