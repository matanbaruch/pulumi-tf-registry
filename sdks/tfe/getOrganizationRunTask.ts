// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationRunTask(args: GetOrganizationRunTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationRunTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getOrganizationRunTask:getOrganizationRunTask", {
        "category": args.category,
        "description": args.description,
        "enabled": args.enabled,
        "name": args.name,
        "organization": args.organization,
        "url": args.url,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationRunTask.
 */
export interface GetOrganizationRunTaskArgs {
    category?: string;
    description?: string;
    enabled?: boolean;
    name: string;
    organization?: string;
    url?: string;
}

/**
 * A collection of values returned by getOrganizationRunTask.
 */
export interface GetOrganizationRunTaskResult {
    readonly category?: string;
    readonly description?: string;
    readonly enabled?: boolean;
    readonly id: string;
    readonly name: string;
    readonly organization?: string;
    readonly url?: string;
}
export function getOrganizationRunTaskOutput(args: GetOrganizationRunTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationRunTaskResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationRunTask(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationRunTask.
 */
export interface GetOrganizationRunTaskOutputArgs {
    category?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}
