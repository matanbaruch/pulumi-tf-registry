// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Workspace extends pulumi.CustomResource {
    /**
     * Get an existing Workspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceState, opts?: pulumi.CustomResourceOptions): Workspace {
        return new Workspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tfe:index/workspace:Workspace';

    /**
     * Returns true if the given object is an instance of Workspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workspace.__pulumiType;
    }

    /**
     * @deprecated Deprecated
     */
    public readonly agentPoolId!: pulumi.Output<string>;
    public readonly allowDestroyPlan!: pulumi.Output<boolean | undefined>;
    public readonly assessmentsEnabled!: pulumi.Output<boolean | undefined>;
    public readonly autoApply!: pulumi.Output<boolean | undefined>;
    public readonly autoApplyRunTrigger!: pulumi.Output<boolean | undefined>;
    public readonly autoDestroyActivityDuration!: pulumi.Output<string | undefined>;
    public readonly autoDestroyAt!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly executionMode!: pulumi.Output<string>;
    public readonly fileTriggersEnabled!: pulumi.Output<boolean | undefined>;
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    public readonly globalRemoteState!: pulumi.Output<boolean>;
    public /*out*/ readonly htmlUrl!: pulumi.Output<string>;
    public readonly ignoreAdditionalTagNames!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly operations!: pulumi.Output<boolean>;
    public readonly organization!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly queueAllRuns!: pulumi.Output<boolean | undefined>;
    public readonly remoteStateConsumerIds!: pulumi.Output<string[]>;
    public /*out*/ readonly resourceCount!: pulumi.Output<number>;
    public readonly sourceName!: pulumi.Output<string | undefined>;
    public readonly sourceUrl!: pulumi.Output<string | undefined>;
    public readonly speculativeEnabled!: pulumi.Output<boolean | undefined>;
    public readonly sshKeyId!: pulumi.Output<string | undefined>;
    public readonly structuredRunOutputEnabled!: pulumi.Output<boolean | undefined>;
    public readonly tagNames!: pulumi.Output<string[]>;
    public readonly terraformVersion!: pulumi.Output<string>;
    public readonly triggerPatterns!: pulumi.Output<string[] | undefined>;
    public readonly triggerPrefixes!: pulumi.Output<string[] | undefined>;
    public readonly vcsRepo!: pulumi.Output<outputs.WorkspaceVcsRepo | undefined>;
    public readonly workingDirectory!: pulumi.Output<string | undefined>;

    /**
     * Create a Workspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceArgs | WorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceState | undefined;
            resourceInputs["agentPoolId"] = state ? state.agentPoolId : undefined;
            resourceInputs["allowDestroyPlan"] = state ? state.allowDestroyPlan : undefined;
            resourceInputs["assessmentsEnabled"] = state ? state.assessmentsEnabled : undefined;
            resourceInputs["autoApply"] = state ? state.autoApply : undefined;
            resourceInputs["autoApplyRunTrigger"] = state ? state.autoApplyRunTrigger : undefined;
            resourceInputs["autoDestroyActivityDuration"] = state ? state.autoDestroyActivityDuration : undefined;
            resourceInputs["autoDestroyAt"] = state ? state.autoDestroyAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["executionMode"] = state ? state.executionMode : undefined;
            resourceInputs["fileTriggersEnabled"] = state ? state.fileTriggersEnabled : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["globalRemoteState"] = state ? state.globalRemoteState : undefined;
            resourceInputs["htmlUrl"] = state ? state.htmlUrl : undefined;
            resourceInputs["ignoreAdditionalTagNames"] = state ? state.ignoreAdditionalTagNames : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["operations"] = state ? state.operations : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["queueAllRuns"] = state ? state.queueAllRuns : undefined;
            resourceInputs["remoteStateConsumerIds"] = state ? state.remoteStateConsumerIds : undefined;
            resourceInputs["resourceCount"] = state ? state.resourceCount : undefined;
            resourceInputs["sourceName"] = state ? state.sourceName : undefined;
            resourceInputs["sourceUrl"] = state ? state.sourceUrl : undefined;
            resourceInputs["speculativeEnabled"] = state ? state.speculativeEnabled : undefined;
            resourceInputs["sshKeyId"] = state ? state.sshKeyId : undefined;
            resourceInputs["structuredRunOutputEnabled"] = state ? state.structuredRunOutputEnabled : undefined;
            resourceInputs["tagNames"] = state ? state.tagNames : undefined;
            resourceInputs["terraformVersion"] = state ? state.terraformVersion : undefined;
            resourceInputs["triggerPatterns"] = state ? state.triggerPatterns : undefined;
            resourceInputs["triggerPrefixes"] = state ? state.triggerPrefixes : undefined;
            resourceInputs["vcsRepo"] = state ? state.vcsRepo : undefined;
            resourceInputs["workingDirectory"] = state ? state.workingDirectory : undefined;
        } else {
            const args = argsOrState as WorkspaceArgs | undefined;
            resourceInputs["agentPoolId"] = args ? args.agentPoolId : undefined;
            resourceInputs["allowDestroyPlan"] = args ? args.allowDestroyPlan : undefined;
            resourceInputs["assessmentsEnabled"] = args ? args.assessmentsEnabled : undefined;
            resourceInputs["autoApply"] = args ? args.autoApply : undefined;
            resourceInputs["autoApplyRunTrigger"] = args ? args.autoApplyRunTrigger : undefined;
            resourceInputs["autoDestroyActivityDuration"] = args ? args.autoDestroyActivityDuration : undefined;
            resourceInputs["autoDestroyAt"] = args ? args.autoDestroyAt : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["executionMode"] = args ? args.executionMode : undefined;
            resourceInputs["fileTriggersEnabled"] = args ? args.fileTriggersEnabled : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["globalRemoteState"] = args ? args.globalRemoteState : undefined;
            resourceInputs["ignoreAdditionalTagNames"] = args ? args.ignoreAdditionalTagNames : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["operations"] = args ? args.operations : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["queueAllRuns"] = args ? args.queueAllRuns : undefined;
            resourceInputs["remoteStateConsumerIds"] = args ? args.remoteStateConsumerIds : undefined;
            resourceInputs["sourceName"] = args ? args.sourceName : undefined;
            resourceInputs["sourceUrl"] = args ? args.sourceUrl : undefined;
            resourceInputs["speculativeEnabled"] = args ? args.speculativeEnabled : undefined;
            resourceInputs["sshKeyId"] = args ? args.sshKeyId : undefined;
            resourceInputs["structuredRunOutputEnabled"] = args ? args.structuredRunOutputEnabled : undefined;
            resourceInputs["tagNames"] = args ? args.tagNames : undefined;
            resourceInputs["terraformVersion"] = args ? args.terraformVersion : undefined;
            resourceInputs["triggerPatterns"] = args ? args.triggerPatterns : undefined;
            resourceInputs["triggerPrefixes"] = args ? args.triggerPrefixes : undefined;
            resourceInputs["vcsRepo"] = args ? args.vcsRepo : undefined;
            resourceInputs["workingDirectory"] = args ? args.workingDirectory : undefined;
            resourceInputs["htmlUrl"] = undefined /*out*/;
            resourceInputs["resourceCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workspace.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Workspace resources.
 */
export interface WorkspaceState {
    /**
     * @deprecated Deprecated
     */
    agentPoolId?: pulumi.Input<string>;
    allowDestroyPlan?: pulumi.Input<boolean>;
    assessmentsEnabled?: pulumi.Input<boolean>;
    autoApply?: pulumi.Input<boolean>;
    autoApplyRunTrigger?: pulumi.Input<boolean>;
    autoDestroyActivityDuration?: pulumi.Input<string>;
    autoDestroyAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    executionMode?: pulumi.Input<string>;
    fileTriggersEnabled?: pulumi.Input<boolean>;
    forceDelete?: pulumi.Input<boolean>;
    globalRemoteState?: pulumi.Input<boolean>;
    htmlUrl?: pulumi.Input<string>;
    ignoreAdditionalTagNames?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    operations?: pulumi.Input<boolean>;
    organization?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    queueAllRuns?: pulumi.Input<boolean>;
    remoteStateConsumerIds?: pulumi.Input<pulumi.Input<string>[]>;
    resourceCount?: pulumi.Input<number>;
    sourceName?: pulumi.Input<string>;
    sourceUrl?: pulumi.Input<string>;
    speculativeEnabled?: pulumi.Input<boolean>;
    sshKeyId?: pulumi.Input<string>;
    structuredRunOutputEnabled?: pulumi.Input<boolean>;
    tagNames?: pulumi.Input<pulumi.Input<string>[]>;
    terraformVersion?: pulumi.Input<string>;
    triggerPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    triggerPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    vcsRepo?: pulumi.Input<inputs.WorkspaceVcsRepo>;
    workingDirectory?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Workspace resource.
 */
export interface WorkspaceArgs {
    /**
     * @deprecated Deprecated
     */
    agentPoolId?: pulumi.Input<string>;
    allowDestroyPlan?: pulumi.Input<boolean>;
    assessmentsEnabled?: pulumi.Input<boolean>;
    autoApply?: pulumi.Input<boolean>;
    autoApplyRunTrigger?: pulumi.Input<boolean>;
    autoDestroyActivityDuration?: pulumi.Input<string>;
    autoDestroyAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    executionMode?: pulumi.Input<string>;
    fileTriggersEnabled?: pulumi.Input<boolean>;
    forceDelete?: pulumi.Input<boolean>;
    globalRemoteState?: pulumi.Input<boolean>;
    ignoreAdditionalTagNames?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    operations?: pulumi.Input<boolean>;
    organization?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    queueAllRuns?: pulumi.Input<boolean>;
    remoteStateConsumerIds?: pulumi.Input<pulumi.Input<string>[]>;
    sourceName?: pulumi.Input<string>;
    sourceUrl?: pulumi.Input<string>;
    speculativeEnabled?: pulumi.Input<boolean>;
    sshKeyId?: pulumi.Input<string>;
    structuredRunOutputEnabled?: pulumi.Input<boolean>;
    tagNames?: pulumi.Input<pulumi.Input<string>[]>;
    terraformVersion?: pulumi.Input<string>;
    triggerPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    triggerPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    vcsRepo?: pulumi.Input<inputs.WorkspaceVcsRepo>;
    workingDirectory?: pulumi.Input<string>;
}
