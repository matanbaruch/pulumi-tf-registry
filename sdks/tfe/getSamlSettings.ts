// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSamlSettings(opts?: pulumi.InvokeOptions): Promise<GetSamlSettingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getSamlSettings:getSamlSettings", {
    }, opts, utilities.getPackage());
}

/**
 * A collection of values returned by getSamlSettings.
 */
export interface GetSamlSettingsResult {
    readonly acsConsumerUrl: string;
    readonly attrGroups: string;
    readonly attrSiteAdmin: string;
    readonly attrUsername: string;
    readonly authnRequestsSigned: boolean;
    readonly certificate: string;
    readonly debug: boolean;
    readonly enabled: boolean;
    readonly id: string;
    readonly idpCert: string;
    readonly metadataUrl: string;
    readonly oldIdpCert: string;
    readonly privateKey: string;
    readonly signatureDigestMethod: string;
    readonly signatureSigningMethod: string;
    readonly siteAdminRole: string;
    readonly sloEndpointUrl: string;
    readonly ssoApiTokenSessionTimeout: number;
    readonly ssoEndpointUrl: string;
    readonly teamManagementEnabled: boolean;
    readonly wantAssertionsSigned: boolean;
}
export function getSamlSettingsOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetSamlSettingsResult> {
    return pulumi.output(getSamlSettings(opts))
}
