// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AdminOrganizationSettings extends pulumi.CustomResource {
    /**
     * Get an existing AdminOrganizationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdminOrganizationSettingsState, opts?: pulumi.CustomResourceOptions): AdminOrganizationSettings {
        return new AdminOrganizationSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tfe:index/adminOrganizationSettings:AdminOrganizationSettings';

    /**
     * Returns true if the given object is an instance of AdminOrganizationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdminOrganizationSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdminOrganizationSettings.__pulumiType;
    }

    public readonly accessBetaTools!: pulumi.Output<boolean | undefined>;
    public readonly globalModuleSharing!: pulumi.Output<boolean | undefined>;
    public readonly moduleSharingConsumerOrganizations!: pulumi.Output<string[]>;
    public readonly organization!: pulumi.Output<string>;
    public /*out*/ readonly ssoEnabled!: pulumi.Output<boolean>;
    public readonly workspaceLimit!: pulumi.Output<number | undefined>;

    /**
     * Create a AdminOrganizationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AdminOrganizationSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdminOrganizationSettingsArgs | AdminOrganizationSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdminOrganizationSettingsState | undefined;
            resourceInputs["accessBetaTools"] = state ? state.accessBetaTools : undefined;
            resourceInputs["globalModuleSharing"] = state ? state.globalModuleSharing : undefined;
            resourceInputs["moduleSharingConsumerOrganizations"] = state ? state.moduleSharingConsumerOrganizations : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["ssoEnabled"] = state ? state.ssoEnabled : undefined;
            resourceInputs["workspaceLimit"] = state ? state.workspaceLimit : undefined;
        } else {
            const args = argsOrState as AdminOrganizationSettingsArgs | undefined;
            resourceInputs["accessBetaTools"] = args ? args.accessBetaTools : undefined;
            resourceInputs["globalModuleSharing"] = args ? args.globalModuleSharing : undefined;
            resourceInputs["moduleSharingConsumerOrganizations"] = args ? args.moduleSharingConsumerOrganizations : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["workspaceLimit"] = args ? args.workspaceLimit : undefined;
            resourceInputs["ssoEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdminOrganizationSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AdminOrganizationSettings resources.
 */
export interface AdminOrganizationSettingsState {
    accessBetaTools?: pulumi.Input<boolean>;
    globalModuleSharing?: pulumi.Input<boolean>;
    moduleSharingConsumerOrganizations?: pulumi.Input<pulumi.Input<string>[]>;
    organization?: pulumi.Input<string>;
    ssoEnabled?: pulumi.Input<boolean>;
    workspaceLimit?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AdminOrganizationSettings resource.
 */
export interface AdminOrganizationSettingsArgs {
    accessBetaTools?: pulumi.Input<boolean>;
    globalModuleSharing?: pulumi.Input<boolean>;
    moduleSharingConsumerOrganizations?: pulumi.Input<pulumi.Input<string>[]>;
    organization?: pulumi.Input<string>;
    workspaceLimit?: pulumi.Input<number>;
}
