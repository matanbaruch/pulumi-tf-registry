// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVariables(args?: GetVariablesArgs, opts?: pulumi.InvokeOptions): Promise<GetVariablesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getVariables:getVariables", {
        "id": args.id,
        "variableSetId": args.variableSetId,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVariables.
 */
export interface GetVariablesArgs {
    id?: string;
    variableSetId?: string;
    workspaceId?: string;
}

/**
 * A collection of values returned by getVariables.
 */
export interface GetVariablesResult {
    readonly envs: outputs.GetVariablesEnv[];
    readonly id: string;
    readonly terraforms: outputs.GetVariablesTerraform[];
    readonly variableSetId?: string;
    readonly variables: outputs.GetVariablesVariable[];
    readonly workspaceId?: string;
}
export function getVariablesOutput(args?: GetVariablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVariablesResult> {
    return pulumi.output(args).apply((a: any) => getVariables(a, opts))
}

/**
 * A collection of arguments for invoking getVariables.
 */
export interface GetVariablesOutputArgs {
    id?: pulumi.Input<string>;
    variableSetId?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}
