// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRegistryGpgKeys(args?: GetRegistryGpgKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryGpgKeysResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getRegistryGpgKeys:getRegistryGpgKeys", {
        "organization": args.organization,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRegistryGpgKeys.
 */
export interface GetRegistryGpgKeysArgs {
    organization?: string;
}

/**
 * A collection of values returned by getRegistryGpgKeys.
 */
export interface GetRegistryGpgKeysResult {
    readonly id: string;
    readonly keys: outputs.GetRegistryGpgKeysKey[];
    readonly organization: string;
}
export function getRegistryGpgKeysOutput(args?: GetRegistryGpgKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryGpgKeysResult> {
    return pulumi.output(args).apply((a: any) => getRegistryGpgKeys(a, opts))
}

/**
 * A collection of arguments for invoking getRegistryGpgKeys.
 */
export interface GetRegistryGpgKeysOutputArgs {
    organization?: pulumi.Input<string>;
}
