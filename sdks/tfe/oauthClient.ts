// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OauthClient extends pulumi.CustomResource {
    /**
     * Get an existing OauthClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OauthClientState, opts?: pulumi.CustomResourceOptions): OauthClient {
        return new OauthClient(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tfe:index/oauthClient:OauthClient';

    /**
     * Returns true if the given object is an instance of OauthClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OauthClient {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OauthClient.__pulumiType;
    }

    public readonly agentPoolId!: pulumi.Output<string>;
    public readonly apiUrl!: pulumi.Output<string>;
    public readonly httpUrl!: pulumi.Output<string>;
    public readonly key!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly oauthToken!: pulumi.Output<string | undefined>;
    public /*out*/ readonly oauthTokenId!: pulumi.Output<string>;
    public readonly organization!: pulumi.Output<string>;
    public readonly organizationScoped!: pulumi.Output<boolean | undefined>;
    public readonly privateKey!: pulumi.Output<string | undefined>;
    public readonly rsaPublicKey!: pulumi.Output<string | undefined>;
    public readonly secret!: pulumi.Output<string | undefined>;
    public readonly serviceProvider!: pulumi.Output<string>;

    /**
     * Create a OauthClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OauthClientArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OauthClientArgs | OauthClientState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OauthClientState | undefined;
            resourceInputs["agentPoolId"] = state ? state.agentPoolId : undefined;
            resourceInputs["apiUrl"] = state ? state.apiUrl : undefined;
            resourceInputs["httpUrl"] = state ? state.httpUrl : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oauthToken"] = state ? state.oauthToken : undefined;
            resourceInputs["oauthTokenId"] = state ? state.oauthTokenId : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["organizationScoped"] = state ? state.organizationScoped : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["rsaPublicKey"] = state ? state.rsaPublicKey : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["serviceProvider"] = state ? state.serviceProvider : undefined;
        } else {
            const args = argsOrState as OauthClientArgs | undefined;
            if ((!args || args.apiUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiUrl'");
            }
            if ((!args || args.httpUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'httpUrl'");
            }
            if ((!args || args.serviceProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceProvider'");
            }
            resourceInputs["agentPoolId"] = args ? args.agentPoolId : undefined;
            resourceInputs["apiUrl"] = args ? args.apiUrl : undefined;
            resourceInputs["httpUrl"] = args ? args.httpUrl : undefined;
            resourceInputs["key"] = args?.key ? pulumi.secret(args.key) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oauthToken"] = args?.oauthToken ? pulumi.secret(args.oauthToken) : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["organizationScoped"] = args ? args.organizationScoped : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["rsaPublicKey"] = args ? args.rsaPublicKey : undefined;
            resourceInputs["secret"] = args?.secret ? pulumi.secret(args.secret) : undefined;
            resourceInputs["serviceProvider"] = args ? args.serviceProvider : undefined;
            resourceInputs["oauthTokenId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["key", "oauthToken", "privateKey", "secret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OauthClient.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OauthClient resources.
 */
export interface OauthClientState {
    agentPoolId?: pulumi.Input<string>;
    apiUrl?: pulumi.Input<string>;
    httpUrl?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    oauthToken?: pulumi.Input<string>;
    oauthTokenId?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    organizationScoped?: pulumi.Input<boolean>;
    privateKey?: pulumi.Input<string>;
    rsaPublicKey?: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    serviceProvider?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OauthClient resource.
 */
export interface OauthClientArgs {
    agentPoolId?: pulumi.Input<string>;
    apiUrl: pulumi.Input<string>;
    httpUrl: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    oauthToken?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    organizationScoped?: pulumi.Input<boolean>;
    privateKey?: pulumi.Input<string>;
    rsaPublicKey?: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    serviceProvider: pulumi.Input<string>;
}
