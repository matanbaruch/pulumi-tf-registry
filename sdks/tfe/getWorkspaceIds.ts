// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWorkspaceIds(args?: GetWorkspaceIdsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceIdsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getWorkspaceIds:getWorkspaceIds", {
        "excludeTags": args.excludeTags,
        "id": args.id,
        "names": args.names,
        "organization": args.organization,
        "tagNames": args.tagNames,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspaceIds.
 */
export interface GetWorkspaceIdsArgs {
    excludeTags?: string[];
    id?: string;
    names?: string[];
    organization?: string;
    tagNames?: string[];
}

/**
 * A collection of values returned by getWorkspaceIds.
 */
export interface GetWorkspaceIdsResult {
    readonly excludeTags?: string[];
    readonly fullNames: {[key: string]: string};
    readonly id: string;
    readonly ids: {[key: string]: string};
    readonly names?: string[];
    readonly organization?: string;
    readonly tagNames?: string[];
}
export function getWorkspaceIdsOutput(args?: GetWorkspaceIdsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceIdsResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceIds(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceIds.
 */
export interface GetWorkspaceIdsOutputArgs {
    excludeTags?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    names?: pulumi.Input<pulumi.Input<string>[]>;
    organization?: pulumi.Input<string>;
    tagNames?: pulumi.Input<pulumi.Input<string>[]>;
}
