// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRegistryProviders(args?: GetRegistryProvidersArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryProvidersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getRegistryProviders:getRegistryProviders", {
        "organization": args.organization,
        "registryName": args.registryName,
        "search": args.search,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRegistryProviders.
 */
export interface GetRegistryProvidersArgs {
    organization?: string;
    registryName?: string;
    search?: string;
}

/**
 * A collection of values returned by getRegistryProviders.
 */
export interface GetRegistryProvidersResult {
    readonly id: string;
    readonly organization: string;
    readonly providers: outputs.GetRegistryProvidersProvider[];
    readonly registryName?: string;
    readonly search?: string;
}
export function getRegistryProvidersOutput(args?: GetRegistryProvidersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryProvidersResult> {
    return pulumi.output(args).apply((a: any) => getRegistryProviders(a, opts))
}

/**
 * A collection of arguments for invoking getRegistryProviders.
 */
export interface GetRegistryProvidersOutputArgs {
    organization?: pulumi.Input<string>;
    registryName?: pulumi.Input<string>;
    search?: pulumi.Input<string>;
}
