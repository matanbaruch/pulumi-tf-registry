// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTeamAccess(args: GetTeamAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamAccessResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getTeamAccess:getTeamAccess", {
        "id": args.id,
        "teamId": args.teamId,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTeamAccess.
 */
export interface GetTeamAccessArgs {
    id?: string;
    teamId: string;
    workspaceId: string;
}

/**
 * A collection of values returned by getTeamAccess.
 */
export interface GetTeamAccessResult {
    readonly access: string;
    readonly id: string;
    readonly permissions: outputs.GetTeamAccessPermission[];
    readonly teamId: string;
    readonly workspaceId: string;
}
export function getTeamAccessOutput(args: GetTeamAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamAccessResult> {
    return pulumi.output(args).apply((a: any) => getTeamAccess(a, opts))
}

/**
 * A collection of arguments for invoking getTeamAccess.
 */
export interface GetTeamAccessOutputArgs {
    id?: pulumi.Input<string>;
    teamId: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
