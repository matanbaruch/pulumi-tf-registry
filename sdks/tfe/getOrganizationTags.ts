// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrganizationTags(args?: GetOrganizationTagsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationTagsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getOrganizationTags:getOrganizationTags", {
        "id": args.id,
        "organization": args.organization,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationTags.
 */
export interface GetOrganizationTagsArgs {
    id?: string;
    organization?: string;
}

/**
 * A collection of values returned by getOrganizationTags.
 */
export interface GetOrganizationTagsResult {
    readonly id: string;
    readonly organization?: string;
    readonly tags: outputs.GetOrganizationTagsTag[];
}
export function getOrganizationTagsOutput(args?: GetOrganizationTagsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationTagsResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationTags(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationTags.
 */
export interface GetOrganizationTagsOutputArgs {
    id?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
}
