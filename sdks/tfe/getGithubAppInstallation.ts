// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGithubAppInstallation(args?: GetGithubAppInstallationArgs, opts?: pulumi.InvokeOptions): Promise<GetGithubAppInstallationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getGithubAppInstallation:getGithubAppInstallation", {
        "installationId": args.installationId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGithubAppInstallation.
 */
export interface GetGithubAppInstallationArgs {
    installationId?: number;
    name?: string;
}

/**
 * A collection of values returned by getGithubAppInstallation.
 */
export interface GetGithubAppInstallationResult {
    readonly id: string;
    readonly installationId?: number;
    readonly name?: string;
}
export function getGithubAppInstallationOutput(args?: GetGithubAppInstallationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGithubAppInstallationResult> {
    return pulumi.output(args).apply((a: any) => getGithubAppInstallation(a, opts))
}

/**
 * A collection of arguments for invoking getGithubAppInstallation.
 */
export interface GetGithubAppInstallationOutputArgs {
    installationId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
