// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOutputs(args: GetOutputsArgs, opts?: pulumi.InvokeOptions): Promise<GetOutputsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getOutputs:getOutputs", {
        "organization": args.organization,
        "values": args.values,
        "workspace": args.workspace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOutputs.
 */
export interface GetOutputsArgs {
    organization?: string;
    values?: any;
    workspace: string;
}

/**
 * A collection of values returned by getOutputs.
 */
export interface GetOutputsResult {
    readonly id: string;
    readonly nonsensitiveValues: any;
    readonly organization?: string;
    readonly values: any;
    readonly workspace: string;
}
export function getOutputsOutput(args: GetOutputsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOutputsResult> {
    return pulumi.output(args).apply((a: any) => getOutputs(a, opts))
}

/**
 * A collection of arguments for invoking getOutputs.
 */
export interface GetOutputsOutputArgs {
    organization?: pulumi.Input<string>;
    values?: any;
    workspace: pulumi.Input<string>;
}
