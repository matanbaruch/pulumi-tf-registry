// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrganizationMembers(args?: GetOrganizationMembersArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationMembersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getOrganizationMembers:getOrganizationMembers", {
        "id": args.id,
        "organization": args.organization,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationMembers.
 */
export interface GetOrganizationMembersArgs {
    id?: string;
    organization?: string;
}

/**
 * A collection of values returned by getOrganizationMembers.
 */
export interface GetOrganizationMembersResult {
    readonly id: string;
    readonly members: outputs.GetOrganizationMembersMember[];
    readonly membersWaitings: outputs.GetOrganizationMembersMembersWaiting[];
    readonly organization?: string;
}
export function getOrganizationMembersOutput(args?: GetOrganizationMembersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationMembersResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationMembers(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationMembers.
 */
export interface GetOrganizationMembersOutputArgs {
    id?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
}
