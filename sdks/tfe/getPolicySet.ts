// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicySet(args: GetPolicySetArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicySetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tfe:index/getPolicySet:getPolicySet", {
        "id": args.id,
        "kind": args.kind,
        "name": args.name,
        "organization": args.organization,
        "overridable": args.overridable,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicySet.
 */
export interface GetPolicySetArgs {
    id?: string;
    kind?: string;
    name: string;
    organization?: string;
    overridable?: boolean;
}

/**
 * A collection of values returned by getPolicySet.
 */
export interface GetPolicySetResult {
    readonly agentEnabled: boolean;
    readonly description: string;
    readonly excludedWorkspaceIds: string[];
    readonly global: boolean;
    readonly id: string;
    readonly kind?: string;
    readonly name: string;
    readonly organization?: string;
    readonly overridable?: boolean;
    readonly policiesPath: string;
    readonly policyIds: string[];
    readonly policyToolVersion: string;
    readonly projectIds: string[];
    readonly vcsRepos: outputs.GetPolicySetVcsRepo[];
    readonly workspaceIds: string[];
}
export function getPolicySetOutput(args: GetPolicySetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicySetResult> {
    return pulumi.output(args).apply((a: any) => getPolicySet(a, opts))
}

/**
 * A collection of arguments for invoking getPolicySet.
 */
export interface GetPolicySetOutputArgs {
    id?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    overridable?: pulumi.Input<boolean>;
}
