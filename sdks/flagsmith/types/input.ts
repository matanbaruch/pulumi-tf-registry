// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface FeatureStateFeatureStateValue {
    /**
     * Boolean value of the feature if the type is `bool`
     */
    booleanValue?: pulumi.Input<boolean>;
    /**
     * Integer value of the feature if the type is `int`
     */
    integerValue?: pulumi.Input<number>;
    /**
     * String value of the feature if the type is `unicode`.
     */
    stringValue?: pulumi.Input<string>;
    /**
     * Type of the feature state value, can be `unicode`, `int` or `bool`
     */
    type: pulumi.Input<string>;
}

export interface SegmentRule {
    /**
     * List of Conditions for the nested Rule
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.SegmentRuleCondition>[]>;
    /**
     * List of Nested Rules
     */
    rules?: pulumi.Input<pulumi.Input<inputs.SegmentRuleRule>[]>;
    /**
     * Type of the rule, can be of: `ALL`, `ANY`, `NONE`
     */
    type: pulumi.Input<string>;
}

export interface SegmentRuleCondition {
    /**
     * Operator of the condition, can be one of `EQUAL`, `GREATER_THAN`, `LESS_THAN`, `LESS_THAN_INCLUSIVE` `CONTAINS`, `GREATER_THAN_INCLUSIVE`, `NOT_CONTAINS`, `NOT_EQUAL`,  `REGEX`, `PERCENTAGE_SPLIT`,  `MODULO`, `IS_SET`, `IS_NOT_SET`, `IN`
     */
    operator: pulumi.Input<string>;
    /**
     * Property of the condition
     */
    property?: pulumi.Input<string>;
    /**
     * Value of the condition
     */
    value?: pulumi.Input<string>;
}

export interface SegmentRuleRule {
    /**
     * List of Conditions for the nested Rule
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.SegmentRuleRuleCondition>[]>;
    /**
     * Type of the rule
     */
    type: pulumi.Input<string>;
}

export interface SegmentRuleRuleCondition {
    /**
     * Operator of the condition, can be one of `EQUAL`, `GREATER_THAN`, `LESS_THAN`, `LESS_THAN_INCLUSIVE` `CONTAINS`, `GREATER_THAN_INCLUSIVE`, `NOT_CONTAINS`, `NOT_EQUAL`,  `REGEX`, `PERCENTAGE_SPLIT`,  `MODULO`, `IS_SET`, `IS_NOT_SET`, `IN`
     */
    operator: pulumi.Input<string>;
    /**
     * Property of the condition
     */
    property?: pulumi.Input<string>;
    /**
     * Value of the condition
     */
    value?: pulumi.Input<string>;
}
