// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccount(args?: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("codefresh:index/getAccount:getAccount", {
        "_id": args._id,
        "admins": args.admins,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    _id?: string;
    admins?: string[];
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    readonly _id?: string;
    readonly admins?: string[];
    readonly id: string;
    readonly name?: string;
}
export function getAccountOutput(args?: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    _id?: pulumi.Input<string>;
    admins?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
