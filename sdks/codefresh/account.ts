// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'codefresh:index/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * Build limits for this account.
     */
    public readonly builds!: pulumi.Output<outputs.AccountBuild[] | undefined>;
    /**
     * Features toggles for this account. Default: * OfflineLogging: true * ssoManagement: true * teamsManagement: true * abac:
     * true * customKubernetesCluster: true
     */
    public readonly features!: pulumi.Output<{[key: string]: boolean} | undefined>;
    /**
     * Limits for this account.
     */
    public readonly limits!: pulumi.Output<outputs.AccountLimit[] | undefined>;
    /**
     * The display name for the account.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["builds"] = state ? state.builds : undefined;
            resourceInputs["features"] = state ? state.features : undefined;
            resourceInputs["limits"] = state ? state.limits : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            resourceInputs["builds"] = args ? args.builds : undefined;
            resourceInputs["features"] = args ? args.features : undefined;
            resourceInputs["limits"] = args ? args.limits : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * Build limits for this account.
     */
    builds?: pulumi.Input<pulumi.Input<inputs.AccountBuild>[]>;
    /**
     * Features toggles for this account. Default: * OfflineLogging: true * ssoManagement: true * teamsManagement: true * abac:
     * true * customKubernetesCluster: true
     */
    features?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    /**
     * Limits for this account.
     */
    limits?: pulumi.Input<pulumi.Input<inputs.AccountLimit>[]>;
    /**
     * The display name for the account.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * Build limits for this account.
     */
    builds?: pulumi.Input<pulumi.Input<inputs.AccountBuild>[]>;
    /**
     * Features toggles for this account. Default: * OfflineLogging: true * ssoManagement: true * teamsManagement: true * abac:
     * true * customKubernetesCluster: true
     */
    features?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    /**
     * Limits for this account.
     */
    limits?: pulumi.Input<pulumi.Input<inputs.AccountLimit>[]>;
    /**
     * The display name for the account.
     */
    name?: pulumi.Input<string>;
}
