// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PipelineState, opts?: pulumi.CustomResourceOptions): Pipeline {
        return new Pipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'codefresh:index/pipeline:Pipeline';

    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pipeline.__pulumiType;
    }

    /**
     * Boolean that specifies if the build logs are publicly accessible (default: `false`).
     */
    public readonly isPublic!: pulumi.Output<boolean | undefined>;
    /**
     * The display name for the pipeline.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A string with original yaml pipeline. For example: <code>original_yaml_string = "version: \\"1.0\\"\nsteps:\n test:\n
     * image: alpine:latest\n commands:\n - echo \\"ACC tests\\"</code> Or: <code>original_yaml_string =
     * file("/path/to/my/codefresh.yml")</code>
     */
    public readonly originalYamlString!: pulumi.Output<string | undefined>;
    /**
     * The ID of the project that the pipeline belongs to.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * The pipeline's revision. Should be added to the **lifecycle/ignore_changes** or incremented mannually each update.
     */
    public /*out*/ readonly revision!: pulumi.Output<number>;
    /**
     * The pipeline's specs.
     */
    public readonly spec!: pulumi.Output<outputs.PipelineSpec | undefined>;
    /**
     * A list of tags to mark a project for easy management and access control.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PipelineArgs | PipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PipelineState | undefined;
            resourceInputs["isPublic"] = state ? state.isPublic : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["originalYamlString"] = state ? state.originalYamlString : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PipelineArgs | undefined;
            resourceInputs["isPublic"] = args ? args.isPublic : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["originalYamlString"] = args ? args.originalYamlString : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Pipeline.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Pipeline resources.
 */
export interface PipelineState {
    /**
     * Boolean that specifies if the build logs are publicly accessible (default: `false`).
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * The display name for the pipeline.
     */
    name?: pulumi.Input<string>;
    /**
     * A string with original yaml pipeline. For example: <code>original_yaml_string = "version: \\"1.0\\"\nsteps:\n test:\n
     * image: alpine:latest\n commands:\n - echo \\"ACC tests\\"</code> Or: <code>original_yaml_string =
     * file("/path/to/my/codefresh.yml")</code>
     */
    originalYamlString?: pulumi.Input<string>;
    /**
     * The ID of the project that the pipeline belongs to.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The pipeline's revision. Should be added to the **lifecycle/ignore_changes** or incremented mannually each update.
     */
    revision?: pulumi.Input<number>;
    /**
     * The pipeline's specs.
     */
    spec?: pulumi.Input<inputs.PipelineSpec>;
    /**
     * A list of tags to mark a project for easy management and access control.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * Boolean that specifies if the build logs are publicly accessible (default: `false`).
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * The display name for the pipeline.
     */
    name?: pulumi.Input<string>;
    /**
     * A string with original yaml pipeline. For example: <code>original_yaml_string = "version: \\"1.0\\"\nsteps:\n test:\n
     * image: alpine:latest\n commands:\n - echo \\"ACC tests\\"</code> Or: <code>original_yaml_string =
     * file("/path/to/my/codefresh.yml")</code>
     */
    originalYamlString?: pulumi.Input<string>;
    /**
     * The pipeline's specs.
     */
    spec?: pulumi.Input<inputs.PipelineSpec>;
    /**
     * A list of tags to mark a project for easy management and access control.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
