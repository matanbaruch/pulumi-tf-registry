// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OceanAwsLaunchSpec extends pulumi.CustomResource {
    /**
     * Get an existing OceanAwsLaunchSpec resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OceanAwsLaunchSpecState, opts?: pulumi.CustomResourceOptions): OceanAwsLaunchSpec {
        return new OceanAwsLaunchSpec(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:index/oceanAwsLaunchSpec:OceanAwsLaunchSpec';

    /**
     * Returns true if the given object is an instance of OceanAwsLaunchSpec.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OceanAwsLaunchSpec {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OceanAwsLaunchSpec.__pulumiType;
    }

    public readonly associatePublicIpAddress!: pulumi.Output<boolean | undefined>;
    public readonly autoscaleDowns!: pulumi.Output<outputs.OceanAwsLaunchSpecAutoscaleDown[] | undefined>;
    public readonly autoscaleHeadrooms!: pulumi.Output<outputs.OceanAwsLaunchSpecAutoscaleHeadroom[] | undefined>;
    public readonly autoscaleHeadroomsAutomatics!: pulumi.Output<outputs.OceanAwsLaunchSpecAutoscaleHeadroomsAutomatic[] | undefined>;
    public readonly blockDeviceMappings!: pulumi.Output<outputs.OceanAwsLaunchSpecBlockDeviceMapping[] | undefined>;
    public readonly createOptions!: pulumi.Output<outputs.OceanAwsLaunchSpecCreateOptions | undefined>;
    public readonly deleteOptions!: pulumi.Output<outputs.OceanAwsLaunchSpecDeleteOptions | undefined>;
    public readonly elasticIpPools!: pulumi.Output<outputs.OceanAwsLaunchSpecElasticIpPool[] | undefined>;
    public readonly ephemeralStorages!: pulumi.Output<outputs.OceanAwsLaunchSpecEphemeralStorage[] | undefined>;
    public readonly iamInstanceProfile!: pulumi.Output<string | undefined>;
    public readonly imageId!: pulumi.Output<string | undefined>;
    public readonly images!: pulumi.Output<outputs.OceanAwsLaunchSpecImage[] | undefined>;
    public readonly instanceMetadataOptions!: pulumi.Output<outputs.OceanAwsLaunchSpecInstanceMetadataOptions | undefined>;
    public readonly instanceTypes!: pulumi.Output<string[] | undefined>;
    public readonly instanceTypesFilters!: pulumi.Output<outputs.OceanAwsLaunchSpecInstanceTypesFilters | undefined>;
    public readonly labels!: pulumi.Output<outputs.OceanAwsLaunchSpecLabel[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly oceanId!: pulumi.Output<string>;
    public readonly preferredOdTypes!: pulumi.Output<string[] | undefined>;
    public readonly preferredSpotTypes!: pulumi.Output<string[] | undefined>;
    public readonly resourceLimits!: pulumi.Output<outputs.OceanAwsLaunchSpecResourceLimit[] | undefined>;
    public readonly restrictScaleDown!: pulumi.Output<boolean | undefined>;
    public readonly rootVolumeSize!: pulumi.Output<number | undefined>;
    public readonly schedulingShutdownHours!: pulumi.Output<outputs.OceanAwsLaunchSpecSchedulingShutdownHours | undefined>;
    public readonly schedulingTasks!: pulumi.Output<outputs.OceanAwsLaunchSpecSchedulingTask[] | undefined>;
    public readonly securityGroups!: pulumi.Output<string[] | undefined>;
    public readonly strategies!: pulumi.Output<outputs.OceanAwsLaunchSpecStrategy[] | undefined>;
    public readonly subnetIds!: pulumi.Output<string[] | undefined>;
    public readonly tags!: pulumi.Output<outputs.OceanAwsLaunchSpecTag[] | undefined>;
    public readonly taints!: pulumi.Output<outputs.OceanAwsLaunchSpecTaint[] | undefined>;
    public readonly updatePolicy!: pulumi.Output<outputs.OceanAwsLaunchSpecUpdatePolicy | undefined>;
    public readonly userData!: pulumi.Output<string | undefined>;

    /**
     * Create a OceanAwsLaunchSpec resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OceanAwsLaunchSpecArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OceanAwsLaunchSpecArgs | OceanAwsLaunchSpecState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OceanAwsLaunchSpecState | undefined;
            resourceInputs["associatePublicIpAddress"] = state ? state.associatePublicIpAddress : undefined;
            resourceInputs["autoscaleDowns"] = state ? state.autoscaleDowns : undefined;
            resourceInputs["autoscaleHeadrooms"] = state ? state.autoscaleHeadrooms : undefined;
            resourceInputs["autoscaleHeadroomsAutomatics"] = state ? state.autoscaleHeadroomsAutomatics : undefined;
            resourceInputs["blockDeviceMappings"] = state ? state.blockDeviceMappings : undefined;
            resourceInputs["createOptions"] = state ? state.createOptions : undefined;
            resourceInputs["deleteOptions"] = state ? state.deleteOptions : undefined;
            resourceInputs["elasticIpPools"] = state ? state.elasticIpPools : undefined;
            resourceInputs["ephemeralStorages"] = state ? state.ephemeralStorages : undefined;
            resourceInputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["images"] = state ? state.images : undefined;
            resourceInputs["instanceMetadataOptions"] = state ? state.instanceMetadataOptions : undefined;
            resourceInputs["instanceTypes"] = state ? state.instanceTypes : undefined;
            resourceInputs["instanceTypesFilters"] = state ? state.instanceTypesFilters : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oceanId"] = state ? state.oceanId : undefined;
            resourceInputs["preferredOdTypes"] = state ? state.preferredOdTypes : undefined;
            resourceInputs["preferredSpotTypes"] = state ? state.preferredSpotTypes : undefined;
            resourceInputs["resourceLimits"] = state ? state.resourceLimits : undefined;
            resourceInputs["restrictScaleDown"] = state ? state.restrictScaleDown : undefined;
            resourceInputs["rootVolumeSize"] = state ? state.rootVolumeSize : undefined;
            resourceInputs["schedulingShutdownHours"] = state ? state.schedulingShutdownHours : undefined;
            resourceInputs["schedulingTasks"] = state ? state.schedulingTasks : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["strategies"] = state ? state.strategies : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taints"] = state ? state.taints : undefined;
            resourceInputs["updatePolicy"] = state ? state.updatePolicy : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
        } else {
            const args = argsOrState as OceanAwsLaunchSpecArgs | undefined;
            if ((!args || args.oceanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oceanId'");
            }
            resourceInputs["associatePublicIpAddress"] = args ? args.associatePublicIpAddress : undefined;
            resourceInputs["autoscaleDowns"] = args ? args.autoscaleDowns : undefined;
            resourceInputs["autoscaleHeadrooms"] = args ? args.autoscaleHeadrooms : undefined;
            resourceInputs["autoscaleHeadroomsAutomatics"] = args ? args.autoscaleHeadroomsAutomatics : undefined;
            resourceInputs["blockDeviceMappings"] = args ? args.blockDeviceMappings : undefined;
            resourceInputs["createOptions"] = args ? args.createOptions : undefined;
            resourceInputs["deleteOptions"] = args ? args.deleteOptions : undefined;
            resourceInputs["elasticIpPools"] = args ? args.elasticIpPools : undefined;
            resourceInputs["ephemeralStorages"] = args ? args.ephemeralStorages : undefined;
            resourceInputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["images"] = args ? args.images : undefined;
            resourceInputs["instanceMetadataOptions"] = args ? args.instanceMetadataOptions : undefined;
            resourceInputs["instanceTypes"] = args ? args.instanceTypes : undefined;
            resourceInputs["instanceTypesFilters"] = args ? args.instanceTypesFilters : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oceanId"] = args ? args.oceanId : undefined;
            resourceInputs["preferredOdTypes"] = args ? args.preferredOdTypes : undefined;
            resourceInputs["preferredSpotTypes"] = args ? args.preferredSpotTypes : undefined;
            resourceInputs["resourceLimits"] = args ? args.resourceLimits : undefined;
            resourceInputs["restrictScaleDown"] = args ? args.restrictScaleDown : undefined;
            resourceInputs["rootVolumeSize"] = args ? args.rootVolumeSize : undefined;
            resourceInputs["schedulingShutdownHours"] = args ? args.schedulingShutdownHours : undefined;
            resourceInputs["schedulingTasks"] = args ? args.schedulingTasks : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["strategies"] = args ? args.strategies : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taints"] = args ? args.taints : undefined;
            resourceInputs["updatePolicy"] = args ? args.updatePolicy : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OceanAwsLaunchSpec.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OceanAwsLaunchSpec resources.
 */
export interface OceanAwsLaunchSpecState {
    associatePublicIpAddress?: pulumi.Input<boolean>;
    autoscaleDowns?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecAutoscaleDown>[]>;
    autoscaleHeadrooms?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecAutoscaleHeadroom>[]>;
    autoscaleHeadroomsAutomatics?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecAutoscaleHeadroomsAutomatic>[]>;
    blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecBlockDeviceMapping>[]>;
    createOptions?: pulumi.Input<inputs.OceanAwsLaunchSpecCreateOptions>;
    deleteOptions?: pulumi.Input<inputs.OceanAwsLaunchSpecDeleteOptions>;
    elasticIpPools?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecElasticIpPool>[]>;
    ephemeralStorages?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecEphemeralStorage>[]>;
    iamInstanceProfile?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    images?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecImage>[]>;
    instanceMetadataOptions?: pulumi.Input<inputs.OceanAwsLaunchSpecInstanceMetadataOptions>;
    instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    instanceTypesFilters?: pulumi.Input<inputs.OceanAwsLaunchSpecInstanceTypesFilters>;
    labels?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecLabel>[]>;
    name?: pulumi.Input<string>;
    oceanId?: pulumi.Input<string>;
    preferredOdTypes?: pulumi.Input<pulumi.Input<string>[]>;
    preferredSpotTypes?: pulumi.Input<pulumi.Input<string>[]>;
    resourceLimits?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecResourceLimit>[]>;
    restrictScaleDown?: pulumi.Input<boolean>;
    rootVolumeSize?: pulumi.Input<number>;
    schedulingShutdownHours?: pulumi.Input<inputs.OceanAwsLaunchSpecSchedulingShutdownHours>;
    schedulingTasks?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecSchedulingTask>[]>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    strategies?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecStrategy>[]>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecTag>[]>;
    taints?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecTaint>[]>;
    updatePolicy?: pulumi.Input<inputs.OceanAwsLaunchSpecUpdatePolicy>;
    userData?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OceanAwsLaunchSpec resource.
 */
export interface OceanAwsLaunchSpecArgs {
    associatePublicIpAddress?: pulumi.Input<boolean>;
    autoscaleDowns?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecAutoscaleDown>[]>;
    autoscaleHeadrooms?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecAutoscaleHeadroom>[]>;
    autoscaleHeadroomsAutomatics?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecAutoscaleHeadroomsAutomatic>[]>;
    blockDeviceMappings?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecBlockDeviceMapping>[]>;
    createOptions?: pulumi.Input<inputs.OceanAwsLaunchSpecCreateOptions>;
    deleteOptions?: pulumi.Input<inputs.OceanAwsLaunchSpecDeleteOptions>;
    elasticIpPools?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecElasticIpPool>[]>;
    ephemeralStorages?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecEphemeralStorage>[]>;
    iamInstanceProfile?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    images?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecImage>[]>;
    instanceMetadataOptions?: pulumi.Input<inputs.OceanAwsLaunchSpecInstanceMetadataOptions>;
    instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    instanceTypesFilters?: pulumi.Input<inputs.OceanAwsLaunchSpecInstanceTypesFilters>;
    labels?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecLabel>[]>;
    name?: pulumi.Input<string>;
    oceanId: pulumi.Input<string>;
    preferredOdTypes?: pulumi.Input<pulumi.Input<string>[]>;
    preferredSpotTypes?: pulumi.Input<pulumi.Input<string>[]>;
    resourceLimits?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecResourceLimit>[]>;
    restrictScaleDown?: pulumi.Input<boolean>;
    rootVolumeSize?: pulumi.Input<number>;
    schedulingShutdownHours?: pulumi.Input<inputs.OceanAwsLaunchSpecSchedulingShutdownHours>;
    schedulingTasks?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecSchedulingTask>[]>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    strategies?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecStrategy>[]>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecTag>[]>;
    taints?: pulumi.Input<pulumi.Input<inputs.OceanAwsLaunchSpecTaint>[]>;
    updatePolicy?: pulumi.Input<inputs.OceanAwsLaunchSpecUpdatePolicy>;
    userData?: pulumi.Input<string>;
}
