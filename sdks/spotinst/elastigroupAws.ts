// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ElastigroupAws extends pulumi.CustomResource {
    /**
     * Get an existing ElastigroupAws resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElastigroupAwsState, opts?: pulumi.CustomResourceOptions): ElastigroupAws {
        return new ElastigroupAws(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spotinst:index/elastigroupAws:ElastigroupAws';

    /**
     * Returns true if the given object is an instance of ElastigroupAws.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElastigroupAws {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElastigroupAws.__pulumiType;
    }

    public readonly autoHealing!: pulumi.Output<boolean | undefined>;
    public readonly availabilityZones!: pulumi.Output<string[] | undefined>;
    public readonly blockDevicesMode!: pulumi.Output<string | undefined>;
    public readonly capacityUnit!: pulumi.Output<string>;
    public readonly considerOdPricing!: pulumi.Output<boolean | undefined>;
    public readonly cpuCredits!: pulumi.Output<string | undefined>;
    public readonly cpuOptions!: pulumi.Output<outputs.ElastigroupAwsCpuOptions | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly desiredCapacity!: pulumi.Output<number | undefined>;
    public readonly drainingTimeout!: pulumi.Output<number>;
    public readonly ebsBlockDevices!: pulumi.Output<outputs.ElastigroupAwsEbsBlockDevice[] | undefined>;
    public readonly ebsOptimized!: pulumi.Output<boolean>;
    public readonly elasticIps!: pulumi.Output<string[] | undefined>;
    public readonly elasticLoadBalancers!: pulumi.Output<string[] | undefined>;
    public readonly enableMonitoring!: pulumi.Output<boolean | undefined>;
    public readonly ephemeralBlockDevices!: pulumi.Output<outputs.ElastigroupAwsEphemeralBlockDevice[] | undefined>;
    public readonly fallbackToOndemand!: pulumi.Output<boolean>;
    public readonly healthCheckGracePeriod!: pulumi.Output<number | undefined>;
    public readonly healthCheckType!: pulumi.Output<string | undefined>;
    public readonly healthCheckUnhealthyDurationBeforeReplacement!: pulumi.Output<number | undefined>;
    public readonly iamInstanceProfile!: pulumi.Output<string | undefined>;
    public readonly imageId!: pulumi.Output<string | undefined>;
    public readonly images!: pulumi.Output<outputs.ElastigroupAwsImage[] | undefined>;
    public readonly immediateOdRecoverThreshold!: pulumi.Output<number | undefined>;
    public readonly instanceTypesOndemand!: pulumi.Output<string | undefined>;
    public readonly instanceTypesPreferredSpots!: pulumi.Output<string[] | undefined>;
    public readonly instanceTypesSpots!: pulumi.Output<string[] | undefined>;
    public readonly instanceTypesWeights!: pulumi.Output<outputs.ElastigroupAwsInstanceTypesWeight[] | undefined>;
    public readonly integrationBeanstalk!: pulumi.Output<outputs.ElastigroupAwsIntegrationBeanstalk | undefined>;
    public readonly integrationCodedeploy!: pulumi.Output<outputs.ElastigroupAwsIntegrationCodedeploy | undefined>;
    public readonly integrationDockerSwarm!: pulumi.Output<outputs.ElastigroupAwsIntegrationDockerSwarm | undefined>;
    public readonly integrationEcs!: pulumi.Output<outputs.ElastigroupAwsIntegrationEcs | undefined>;
    public readonly integrationGitlab!: pulumi.Output<outputs.ElastigroupAwsIntegrationGitlab | undefined>;
    public readonly integrationKubernetes!: pulumi.Output<outputs.ElastigroupAwsIntegrationKubernetes | undefined>;
    public readonly integrationMesosphere!: pulumi.Output<outputs.ElastigroupAwsIntegrationMesosphere | undefined>;
    public readonly integrationNomad!: pulumi.Output<outputs.ElastigroupAwsIntegrationNomad | undefined>;
    public readonly integrationRancher!: pulumi.Output<outputs.ElastigroupAwsIntegrationRancher | undefined>;
    public readonly integrationRoute53!: pulumi.Output<outputs.ElastigroupAwsIntegrationRoute53 | undefined>;
    public readonly itfs!: pulumi.Output<outputs.ElastigroupAwsItf[] | undefined>;
    public readonly keyName!: pulumi.Output<string | undefined>;
    public readonly lifetimePeriod!: pulumi.Output<string | undefined>;
    public readonly logging!: pulumi.Output<outputs.ElastigroupAwsLogging | undefined>;
    public readonly maxSize!: pulumi.Output<number>;
    public readonly metadataOptions!: pulumi.Output<outputs.ElastigroupAwsMetadataOptions | undefined>;
    public readonly minSize!: pulumi.Output<number>;
    public readonly minimumInstanceLifetime!: pulumi.Output<number | undefined>;
    public readonly multipleMetrics!: pulumi.Output<outputs.ElastigroupAwsMultipleMetrics | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkInterfaces!: pulumi.Output<outputs.ElastigroupAwsNetworkInterface[] | undefined>;
    public readonly onDemandTypes!: pulumi.Output<string[] | undefined>;
    public readonly ondemandCount!: pulumi.Output<number | undefined>;
    public readonly orientation!: pulumi.Output<string>;
    public readonly persistBlockDevices!: pulumi.Output<boolean | undefined>;
    public readonly persistPrivateIp!: pulumi.Output<boolean | undefined>;
    public readonly persistRootDevice!: pulumi.Output<boolean | undefined>;
    public readonly placementTenancy!: pulumi.Output<string | undefined>;
    public readonly preferredAvailabilityZones!: pulumi.Output<string[] | undefined>;
    public readonly privateIps!: pulumi.Output<string[] | undefined>;
    public readonly product!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string | undefined>;
    public readonly resourceRequirements!: pulumi.Output<outputs.ElastigroupAwsResourceRequirement[] | undefined>;
    public readonly resourceTagSpecifications!: pulumi.Output<outputs.ElastigroupAwsResourceTagSpecification[] | undefined>;
    public readonly restrictSingleAz!: pulumi.Output<boolean | undefined>;
    public readonly revertToSpot!: pulumi.Output<outputs.ElastigroupAwsRevertToSpot | undefined>;
    public readonly scalingDownPolicies!: pulumi.Output<outputs.ElastigroupAwsScalingDownPolicy[] | undefined>;
    public readonly scalingStrategies!: pulumi.Output<outputs.ElastigroupAwsScalingStrategy[] | undefined>;
    public readonly scalingTargetPolicies!: pulumi.Output<outputs.ElastigroupAwsScalingTargetPolicy[] | undefined>;
    public readonly scalingUpPolicies!: pulumi.Output<outputs.ElastigroupAwsScalingUpPolicy[] | undefined>;
    public readonly scheduledTasks!: pulumi.Output<outputs.ElastigroupAwsScheduledTask[] | undefined>;
    public readonly securityGroups!: pulumi.Output<string[]>;
    public readonly shutdownScript!: pulumi.Output<string | undefined>;
    public readonly signals!: pulumi.Output<outputs.ElastigroupAwsSignal[] | undefined>;
    public readonly spotPercentage!: pulumi.Output<number | undefined>;
    public readonly statefulDeallocation!: pulumi.Output<outputs.ElastigroupAwsStatefulDeallocation | undefined>;
    public readonly statefulInstanceActions!: pulumi.Output<outputs.ElastigroupAwsStatefulInstanceAction[] | undefined>;
    public readonly subnetIds!: pulumi.Output<string[] | undefined>;
    public readonly tags!: pulumi.Output<outputs.ElastigroupAwsTag[] | undefined>;
    public readonly targetGroupArns!: pulumi.Output<string[] | undefined>;
    public readonly updatePolicy!: pulumi.Output<outputs.ElastigroupAwsUpdatePolicy | undefined>;
    public readonly userData!: pulumi.Output<string | undefined>;
    public readonly utilizeCommitments!: pulumi.Output<boolean | undefined>;
    public readonly utilizeReservedInstances!: pulumi.Output<boolean | undefined>;
    public readonly waitForCapacity!: pulumi.Output<number | undefined>;
    public readonly waitForCapacityTimeout!: pulumi.Output<number | undefined>;

    /**
     * Create a ElastigroupAws resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElastigroupAwsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElastigroupAwsArgs | ElastigroupAwsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElastigroupAwsState | undefined;
            resourceInputs["autoHealing"] = state ? state.autoHealing : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["blockDevicesMode"] = state ? state.blockDevicesMode : undefined;
            resourceInputs["capacityUnit"] = state ? state.capacityUnit : undefined;
            resourceInputs["considerOdPricing"] = state ? state.considerOdPricing : undefined;
            resourceInputs["cpuCredits"] = state ? state.cpuCredits : undefined;
            resourceInputs["cpuOptions"] = state ? state.cpuOptions : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["desiredCapacity"] = state ? state.desiredCapacity : undefined;
            resourceInputs["drainingTimeout"] = state ? state.drainingTimeout : undefined;
            resourceInputs["ebsBlockDevices"] = state ? state.ebsBlockDevices : undefined;
            resourceInputs["ebsOptimized"] = state ? state.ebsOptimized : undefined;
            resourceInputs["elasticIps"] = state ? state.elasticIps : undefined;
            resourceInputs["elasticLoadBalancers"] = state ? state.elasticLoadBalancers : undefined;
            resourceInputs["enableMonitoring"] = state ? state.enableMonitoring : undefined;
            resourceInputs["ephemeralBlockDevices"] = state ? state.ephemeralBlockDevices : undefined;
            resourceInputs["fallbackToOndemand"] = state ? state.fallbackToOndemand : undefined;
            resourceInputs["healthCheckGracePeriod"] = state ? state.healthCheckGracePeriod : undefined;
            resourceInputs["healthCheckType"] = state ? state.healthCheckType : undefined;
            resourceInputs["healthCheckUnhealthyDurationBeforeReplacement"] = state ? state.healthCheckUnhealthyDurationBeforeReplacement : undefined;
            resourceInputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["images"] = state ? state.images : undefined;
            resourceInputs["immediateOdRecoverThreshold"] = state ? state.immediateOdRecoverThreshold : undefined;
            resourceInputs["instanceTypesOndemand"] = state ? state.instanceTypesOndemand : undefined;
            resourceInputs["instanceTypesPreferredSpots"] = state ? state.instanceTypesPreferredSpots : undefined;
            resourceInputs["instanceTypesSpots"] = state ? state.instanceTypesSpots : undefined;
            resourceInputs["instanceTypesWeights"] = state ? state.instanceTypesWeights : undefined;
            resourceInputs["integrationBeanstalk"] = state ? state.integrationBeanstalk : undefined;
            resourceInputs["integrationCodedeploy"] = state ? state.integrationCodedeploy : undefined;
            resourceInputs["integrationDockerSwarm"] = state ? state.integrationDockerSwarm : undefined;
            resourceInputs["integrationEcs"] = state ? state.integrationEcs : undefined;
            resourceInputs["integrationGitlab"] = state ? state.integrationGitlab : undefined;
            resourceInputs["integrationKubernetes"] = state ? state.integrationKubernetes : undefined;
            resourceInputs["integrationMesosphere"] = state ? state.integrationMesosphere : undefined;
            resourceInputs["integrationNomad"] = state ? state.integrationNomad : undefined;
            resourceInputs["integrationRancher"] = state ? state.integrationRancher : undefined;
            resourceInputs["integrationRoute53"] = state ? state.integrationRoute53 : undefined;
            resourceInputs["itfs"] = state ? state.itfs : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["lifetimePeriod"] = state ? state.lifetimePeriod : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["maxSize"] = state ? state.maxSize : undefined;
            resourceInputs["metadataOptions"] = state ? state.metadataOptions : undefined;
            resourceInputs["minSize"] = state ? state.minSize : undefined;
            resourceInputs["minimumInstanceLifetime"] = state ? state.minimumInstanceLifetime : undefined;
            resourceInputs["multipleMetrics"] = state ? state.multipleMetrics : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["onDemandTypes"] = state ? state.onDemandTypes : undefined;
            resourceInputs["ondemandCount"] = state ? state.ondemandCount : undefined;
            resourceInputs["orientation"] = state ? state.orientation : undefined;
            resourceInputs["persistBlockDevices"] = state ? state.persistBlockDevices : undefined;
            resourceInputs["persistPrivateIp"] = state ? state.persistPrivateIp : undefined;
            resourceInputs["persistRootDevice"] = state ? state.persistRootDevice : undefined;
            resourceInputs["placementTenancy"] = state ? state.placementTenancy : undefined;
            resourceInputs["preferredAvailabilityZones"] = state ? state.preferredAvailabilityZones : undefined;
            resourceInputs["privateIps"] = state ? state.privateIps : undefined;
            resourceInputs["product"] = state ? state.product : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceRequirements"] = state ? state.resourceRequirements : undefined;
            resourceInputs["resourceTagSpecifications"] = state ? state.resourceTagSpecifications : undefined;
            resourceInputs["restrictSingleAz"] = state ? state.restrictSingleAz : undefined;
            resourceInputs["revertToSpot"] = state ? state.revertToSpot : undefined;
            resourceInputs["scalingDownPolicies"] = state ? state.scalingDownPolicies : undefined;
            resourceInputs["scalingStrategies"] = state ? state.scalingStrategies : undefined;
            resourceInputs["scalingTargetPolicies"] = state ? state.scalingTargetPolicies : undefined;
            resourceInputs["scalingUpPolicies"] = state ? state.scalingUpPolicies : undefined;
            resourceInputs["scheduledTasks"] = state ? state.scheduledTasks : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["shutdownScript"] = state ? state.shutdownScript : undefined;
            resourceInputs["signals"] = state ? state.signals : undefined;
            resourceInputs["spotPercentage"] = state ? state.spotPercentage : undefined;
            resourceInputs["statefulDeallocation"] = state ? state.statefulDeallocation : undefined;
            resourceInputs["statefulInstanceActions"] = state ? state.statefulInstanceActions : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetGroupArns"] = state ? state.targetGroupArns : undefined;
            resourceInputs["updatePolicy"] = state ? state.updatePolicy : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["utilizeCommitments"] = state ? state.utilizeCommitments : undefined;
            resourceInputs["utilizeReservedInstances"] = state ? state.utilizeReservedInstances : undefined;
            resourceInputs["waitForCapacity"] = state ? state.waitForCapacity : undefined;
            resourceInputs["waitForCapacityTimeout"] = state ? state.waitForCapacityTimeout : undefined;
        } else {
            const args = argsOrState as ElastigroupAwsArgs | undefined;
            if ((!args || args.fallbackToOndemand === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fallbackToOndemand'");
            }
            if ((!args || args.orientation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orientation'");
            }
            if ((!args || args.product === undefined) && !opts.urn) {
                throw new Error("Missing required property 'product'");
            }
            if ((!args || args.securityGroups === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroups'");
            }
            resourceInputs["autoHealing"] = args ? args.autoHealing : undefined;
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["blockDevicesMode"] = args ? args.blockDevicesMode : undefined;
            resourceInputs["capacityUnit"] = args ? args.capacityUnit : undefined;
            resourceInputs["considerOdPricing"] = args ? args.considerOdPricing : undefined;
            resourceInputs["cpuCredits"] = args ? args.cpuCredits : undefined;
            resourceInputs["cpuOptions"] = args ? args.cpuOptions : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["desiredCapacity"] = args ? args.desiredCapacity : undefined;
            resourceInputs["drainingTimeout"] = args ? args.drainingTimeout : undefined;
            resourceInputs["ebsBlockDevices"] = args ? args.ebsBlockDevices : undefined;
            resourceInputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            resourceInputs["elasticIps"] = args ? args.elasticIps : undefined;
            resourceInputs["elasticLoadBalancers"] = args ? args.elasticLoadBalancers : undefined;
            resourceInputs["enableMonitoring"] = args ? args.enableMonitoring : undefined;
            resourceInputs["ephemeralBlockDevices"] = args ? args.ephemeralBlockDevices : undefined;
            resourceInputs["fallbackToOndemand"] = args ? args.fallbackToOndemand : undefined;
            resourceInputs["healthCheckGracePeriod"] = args ? args.healthCheckGracePeriod : undefined;
            resourceInputs["healthCheckType"] = args ? args.healthCheckType : undefined;
            resourceInputs["healthCheckUnhealthyDurationBeforeReplacement"] = args ? args.healthCheckUnhealthyDurationBeforeReplacement : undefined;
            resourceInputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["images"] = args ? args.images : undefined;
            resourceInputs["immediateOdRecoverThreshold"] = args ? args.immediateOdRecoverThreshold : undefined;
            resourceInputs["instanceTypesOndemand"] = args ? args.instanceTypesOndemand : undefined;
            resourceInputs["instanceTypesPreferredSpots"] = args ? args.instanceTypesPreferredSpots : undefined;
            resourceInputs["instanceTypesSpots"] = args ? args.instanceTypesSpots : undefined;
            resourceInputs["instanceTypesWeights"] = args ? args.instanceTypesWeights : undefined;
            resourceInputs["integrationBeanstalk"] = args ? args.integrationBeanstalk : undefined;
            resourceInputs["integrationCodedeploy"] = args ? args.integrationCodedeploy : undefined;
            resourceInputs["integrationDockerSwarm"] = args ? args.integrationDockerSwarm : undefined;
            resourceInputs["integrationEcs"] = args ? args.integrationEcs : undefined;
            resourceInputs["integrationGitlab"] = args ? args.integrationGitlab : undefined;
            resourceInputs["integrationKubernetes"] = args ? args.integrationKubernetes : undefined;
            resourceInputs["integrationMesosphere"] = args ? args.integrationMesosphere : undefined;
            resourceInputs["integrationNomad"] = args ? args.integrationNomad : undefined;
            resourceInputs["integrationRancher"] = args ? args.integrationRancher : undefined;
            resourceInputs["integrationRoute53"] = args ? args.integrationRoute53 : undefined;
            resourceInputs["itfs"] = args ? args.itfs : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["lifetimePeriod"] = args ? args.lifetimePeriod : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["maxSize"] = args ? args.maxSize : undefined;
            resourceInputs["metadataOptions"] = args ? args.metadataOptions : undefined;
            resourceInputs["minSize"] = args ? args.minSize : undefined;
            resourceInputs["minimumInstanceLifetime"] = args ? args.minimumInstanceLifetime : undefined;
            resourceInputs["multipleMetrics"] = args ? args.multipleMetrics : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["onDemandTypes"] = args ? args.onDemandTypes : undefined;
            resourceInputs["ondemandCount"] = args ? args.ondemandCount : undefined;
            resourceInputs["orientation"] = args ? args.orientation : undefined;
            resourceInputs["persistBlockDevices"] = args ? args.persistBlockDevices : undefined;
            resourceInputs["persistPrivateIp"] = args ? args.persistPrivateIp : undefined;
            resourceInputs["persistRootDevice"] = args ? args.persistRootDevice : undefined;
            resourceInputs["placementTenancy"] = args ? args.placementTenancy : undefined;
            resourceInputs["preferredAvailabilityZones"] = args ? args.preferredAvailabilityZones : undefined;
            resourceInputs["privateIps"] = args ? args.privateIps : undefined;
            resourceInputs["product"] = args ? args.product : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resourceRequirements"] = args ? args.resourceRequirements : undefined;
            resourceInputs["resourceTagSpecifications"] = args ? args.resourceTagSpecifications : undefined;
            resourceInputs["restrictSingleAz"] = args ? args.restrictSingleAz : undefined;
            resourceInputs["revertToSpot"] = args ? args.revertToSpot : undefined;
            resourceInputs["scalingDownPolicies"] = args ? args.scalingDownPolicies : undefined;
            resourceInputs["scalingStrategies"] = args ? args.scalingStrategies : undefined;
            resourceInputs["scalingTargetPolicies"] = args ? args.scalingTargetPolicies : undefined;
            resourceInputs["scalingUpPolicies"] = args ? args.scalingUpPolicies : undefined;
            resourceInputs["scheduledTasks"] = args ? args.scheduledTasks : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["shutdownScript"] = args ? args.shutdownScript : undefined;
            resourceInputs["signals"] = args ? args.signals : undefined;
            resourceInputs["spotPercentage"] = args ? args.spotPercentage : undefined;
            resourceInputs["statefulDeallocation"] = args ? args.statefulDeallocation : undefined;
            resourceInputs["statefulInstanceActions"] = args ? args.statefulInstanceActions : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetGroupArns"] = args ? args.targetGroupArns : undefined;
            resourceInputs["updatePolicy"] = args ? args.updatePolicy : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["utilizeCommitments"] = args ? args.utilizeCommitments : undefined;
            resourceInputs["utilizeReservedInstances"] = args ? args.utilizeReservedInstances : undefined;
            resourceInputs["waitForCapacity"] = args ? args.waitForCapacity : undefined;
            resourceInputs["waitForCapacityTimeout"] = args ? args.waitForCapacityTimeout : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElastigroupAws.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ElastigroupAws resources.
 */
export interface ElastigroupAwsState {
    autoHealing?: pulumi.Input<boolean>;
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    blockDevicesMode?: pulumi.Input<string>;
    capacityUnit?: pulumi.Input<string>;
    considerOdPricing?: pulumi.Input<boolean>;
    cpuCredits?: pulumi.Input<string>;
    cpuOptions?: pulumi.Input<inputs.ElastigroupAwsCpuOptions>;
    description?: pulumi.Input<string>;
    desiredCapacity?: pulumi.Input<number>;
    drainingTimeout?: pulumi.Input<number>;
    ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsEbsBlockDevice>[]>;
    ebsOptimized?: pulumi.Input<boolean>;
    elasticIps?: pulumi.Input<pulumi.Input<string>[]>;
    elasticLoadBalancers?: pulumi.Input<pulumi.Input<string>[]>;
    enableMonitoring?: pulumi.Input<boolean>;
    ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsEphemeralBlockDevice>[]>;
    fallbackToOndemand?: pulumi.Input<boolean>;
    healthCheckGracePeriod?: pulumi.Input<number>;
    healthCheckType?: pulumi.Input<string>;
    healthCheckUnhealthyDurationBeforeReplacement?: pulumi.Input<number>;
    iamInstanceProfile?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    images?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsImage>[]>;
    immediateOdRecoverThreshold?: pulumi.Input<number>;
    instanceTypesOndemand?: pulumi.Input<string>;
    instanceTypesPreferredSpots?: pulumi.Input<pulumi.Input<string>[]>;
    instanceTypesSpots?: pulumi.Input<pulumi.Input<string>[]>;
    instanceTypesWeights?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsInstanceTypesWeight>[]>;
    integrationBeanstalk?: pulumi.Input<inputs.ElastigroupAwsIntegrationBeanstalk>;
    integrationCodedeploy?: pulumi.Input<inputs.ElastigroupAwsIntegrationCodedeploy>;
    integrationDockerSwarm?: pulumi.Input<inputs.ElastigroupAwsIntegrationDockerSwarm>;
    integrationEcs?: pulumi.Input<inputs.ElastigroupAwsIntegrationEcs>;
    integrationGitlab?: pulumi.Input<inputs.ElastigroupAwsIntegrationGitlab>;
    integrationKubernetes?: pulumi.Input<inputs.ElastigroupAwsIntegrationKubernetes>;
    integrationMesosphere?: pulumi.Input<inputs.ElastigroupAwsIntegrationMesosphere>;
    integrationNomad?: pulumi.Input<inputs.ElastigroupAwsIntegrationNomad>;
    integrationRancher?: pulumi.Input<inputs.ElastigroupAwsIntegrationRancher>;
    integrationRoute53?: pulumi.Input<inputs.ElastigroupAwsIntegrationRoute53>;
    itfs?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsItf>[]>;
    keyName?: pulumi.Input<string>;
    lifetimePeriod?: pulumi.Input<string>;
    logging?: pulumi.Input<inputs.ElastigroupAwsLogging>;
    maxSize?: pulumi.Input<number>;
    metadataOptions?: pulumi.Input<inputs.ElastigroupAwsMetadataOptions>;
    minSize?: pulumi.Input<number>;
    minimumInstanceLifetime?: pulumi.Input<number>;
    multipleMetrics?: pulumi.Input<inputs.ElastigroupAwsMultipleMetrics>;
    name?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsNetworkInterface>[]>;
    onDemandTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ondemandCount?: pulumi.Input<number>;
    orientation?: pulumi.Input<string>;
    persistBlockDevices?: pulumi.Input<boolean>;
    persistPrivateIp?: pulumi.Input<boolean>;
    persistRootDevice?: pulumi.Input<boolean>;
    placementTenancy?: pulumi.Input<string>;
    preferredAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    product?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceRequirements?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsResourceRequirement>[]>;
    resourceTagSpecifications?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsResourceTagSpecification>[]>;
    restrictSingleAz?: pulumi.Input<boolean>;
    revertToSpot?: pulumi.Input<inputs.ElastigroupAwsRevertToSpot>;
    scalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingDownPolicy>[]>;
    scalingStrategies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingStrategy>[]>;
    scalingTargetPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingTargetPolicy>[]>;
    scalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingUpPolicy>[]>;
    scheduledTasks?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScheduledTask>[]>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    shutdownScript?: pulumi.Input<string>;
    signals?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsSignal>[]>;
    spotPercentage?: pulumi.Input<number>;
    statefulDeallocation?: pulumi.Input<inputs.ElastigroupAwsStatefulDeallocation>;
    statefulInstanceActions?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsStatefulInstanceAction>[]>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsTag>[]>;
    targetGroupArns?: pulumi.Input<pulumi.Input<string>[]>;
    updatePolicy?: pulumi.Input<inputs.ElastigroupAwsUpdatePolicy>;
    userData?: pulumi.Input<string>;
    utilizeCommitments?: pulumi.Input<boolean>;
    utilizeReservedInstances?: pulumi.Input<boolean>;
    waitForCapacity?: pulumi.Input<number>;
    waitForCapacityTimeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ElastigroupAws resource.
 */
export interface ElastigroupAwsArgs {
    autoHealing?: pulumi.Input<boolean>;
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    blockDevicesMode?: pulumi.Input<string>;
    capacityUnit?: pulumi.Input<string>;
    considerOdPricing?: pulumi.Input<boolean>;
    cpuCredits?: pulumi.Input<string>;
    cpuOptions?: pulumi.Input<inputs.ElastigroupAwsCpuOptions>;
    description?: pulumi.Input<string>;
    desiredCapacity?: pulumi.Input<number>;
    drainingTimeout?: pulumi.Input<number>;
    ebsBlockDevices?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsEbsBlockDevice>[]>;
    ebsOptimized?: pulumi.Input<boolean>;
    elasticIps?: pulumi.Input<pulumi.Input<string>[]>;
    elasticLoadBalancers?: pulumi.Input<pulumi.Input<string>[]>;
    enableMonitoring?: pulumi.Input<boolean>;
    ephemeralBlockDevices?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsEphemeralBlockDevice>[]>;
    fallbackToOndemand: pulumi.Input<boolean>;
    healthCheckGracePeriod?: pulumi.Input<number>;
    healthCheckType?: pulumi.Input<string>;
    healthCheckUnhealthyDurationBeforeReplacement?: pulumi.Input<number>;
    iamInstanceProfile?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    images?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsImage>[]>;
    immediateOdRecoverThreshold?: pulumi.Input<number>;
    instanceTypesOndemand?: pulumi.Input<string>;
    instanceTypesPreferredSpots?: pulumi.Input<pulumi.Input<string>[]>;
    instanceTypesSpots?: pulumi.Input<pulumi.Input<string>[]>;
    instanceTypesWeights?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsInstanceTypesWeight>[]>;
    integrationBeanstalk?: pulumi.Input<inputs.ElastigroupAwsIntegrationBeanstalk>;
    integrationCodedeploy?: pulumi.Input<inputs.ElastigroupAwsIntegrationCodedeploy>;
    integrationDockerSwarm?: pulumi.Input<inputs.ElastigroupAwsIntegrationDockerSwarm>;
    integrationEcs?: pulumi.Input<inputs.ElastigroupAwsIntegrationEcs>;
    integrationGitlab?: pulumi.Input<inputs.ElastigroupAwsIntegrationGitlab>;
    integrationKubernetes?: pulumi.Input<inputs.ElastigroupAwsIntegrationKubernetes>;
    integrationMesosphere?: pulumi.Input<inputs.ElastigroupAwsIntegrationMesosphere>;
    integrationNomad?: pulumi.Input<inputs.ElastigroupAwsIntegrationNomad>;
    integrationRancher?: pulumi.Input<inputs.ElastigroupAwsIntegrationRancher>;
    integrationRoute53?: pulumi.Input<inputs.ElastigroupAwsIntegrationRoute53>;
    itfs?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsItf>[]>;
    keyName?: pulumi.Input<string>;
    lifetimePeriod?: pulumi.Input<string>;
    logging?: pulumi.Input<inputs.ElastigroupAwsLogging>;
    maxSize?: pulumi.Input<number>;
    metadataOptions?: pulumi.Input<inputs.ElastigroupAwsMetadataOptions>;
    minSize?: pulumi.Input<number>;
    minimumInstanceLifetime?: pulumi.Input<number>;
    multipleMetrics?: pulumi.Input<inputs.ElastigroupAwsMultipleMetrics>;
    name?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsNetworkInterface>[]>;
    onDemandTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ondemandCount?: pulumi.Input<number>;
    orientation: pulumi.Input<string>;
    persistBlockDevices?: pulumi.Input<boolean>;
    persistPrivateIp?: pulumi.Input<boolean>;
    persistRootDevice?: pulumi.Input<boolean>;
    placementTenancy?: pulumi.Input<string>;
    preferredAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    product: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceRequirements?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsResourceRequirement>[]>;
    resourceTagSpecifications?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsResourceTagSpecification>[]>;
    restrictSingleAz?: pulumi.Input<boolean>;
    revertToSpot?: pulumi.Input<inputs.ElastigroupAwsRevertToSpot>;
    scalingDownPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingDownPolicy>[]>;
    scalingStrategies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingStrategy>[]>;
    scalingTargetPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingTargetPolicy>[]>;
    scalingUpPolicies?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScalingUpPolicy>[]>;
    scheduledTasks?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsScheduledTask>[]>;
    securityGroups: pulumi.Input<pulumi.Input<string>[]>;
    shutdownScript?: pulumi.Input<string>;
    signals?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsSignal>[]>;
    spotPercentage?: pulumi.Input<number>;
    statefulDeallocation?: pulumi.Input<inputs.ElastigroupAwsStatefulDeallocation>;
    statefulInstanceActions?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsStatefulInstanceAction>[]>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ElastigroupAwsTag>[]>;
    targetGroupArns?: pulumi.Input<pulumi.Input<string>[]>;
    updatePolicy?: pulumi.Input<inputs.ElastigroupAwsUpdatePolicy>;
    userData?: pulumi.Input<string>;
    utilizeCommitments?: pulumi.Input<boolean>;
    utilizeReservedInstances?: pulumi.Input<boolean>;
    waitForCapacity?: pulumi.Input<number>;
    waitForCapacityTimeout?: pulumi.Input<number>;
}
