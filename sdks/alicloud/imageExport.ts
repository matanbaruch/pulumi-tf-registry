// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ImageExport extends pulumi.CustomResource {
    /**
     * Get an existing ImageExport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageExportState, opts?: pulumi.CustomResourceOptions): ImageExport {
        return new ImageExport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/imageExport:ImageExport';

    /**
     * Returns true if the given object is an instance of ImageExport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImageExport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImageExport.__pulumiType;
    }

    public readonly imageId!: pulumi.Output<string>;
    public readonly ossBucket!: pulumi.Output<string>;
    public readonly ossPrefix!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ImageExportTimeouts | undefined>;

    /**
     * Create a ImageExport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageExportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImageExportArgs | ImageExportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImageExportState | undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["ossBucket"] = state ? state.ossBucket : undefined;
            resourceInputs["ossPrefix"] = state ? state.ossPrefix : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ImageExportArgs | undefined;
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if ((!args || args.ossBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ossBucket'");
            }
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["ossBucket"] = args ? args.ossBucket : undefined;
            resourceInputs["ossPrefix"] = args ? args.ossPrefix : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ImageExport.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ImageExport resources.
 */
export interface ImageExportState {
    imageId?: pulumi.Input<string>;
    ossBucket?: pulumi.Input<string>;
    ossPrefix?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ImageExportTimeouts>;
}

/**
 * The set of arguments for constructing a ImageExport resource.
 */
export interface ImageExportArgs {
    imageId: pulumi.Input<string>;
    ossBucket: pulumi.Input<string>;
    ossPrefix?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ImageExportTimeouts>;
}
