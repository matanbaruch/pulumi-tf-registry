// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OssBucketServerSideEncryption extends pulumi.CustomResource {
    /**
     * Get an existing OssBucketServerSideEncryption resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OssBucketServerSideEncryptionState, opts?: pulumi.CustomResourceOptions): OssBucketServerSideEncryption {
        return new OssBucketServerSideEncryption(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ossBucketServerSideEncryption:OssBucketServerSideEncryption';

    /**
     * Returns true if the given object is an instance of OssBucketServerSideEncryption.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OssBucketServerSideEncryption {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OssBucketServerSideEncryption.__pulumiType;
    }

    public readonly bucket!: pulumi.Output<string>;
    public readonly kmsDataEncryption!: pulumi.Output<string | undefined>;
    public readonly kmsMasterKeyId!: pulumi.Output<string | undefined>;
    public readonly sseAlgorithm!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OssBucketServerSideEncryptionTimeouts | undefined>;

    /**
     * Create a OssBucketServerSideEncryption resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OssBucketServerSideEncryptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OssBucketServerSideEncryptionArgs | OssBucketServerSideEncryptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OssBucketServerSideEncryptionState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["kmsDataEncryption"] = state ? state.kmsDataEncryption : undefined;
            resourceInputs["kmsMasterKeyId"] = state ? state.kmsMasterKeyId : undefined;
            resourceInputs["sseAlgorithm"] = state ? state.sseAlgorithm : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as OssBucketServerSideEncryptionArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.sseAlgorithm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sseAlgorithm'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["kmsDataEncryption"] = args ? args.kmsDataEncryption : undefined;
            resourceInputs["kmsMasterKeyId"] = args ? args.kmsMasterKeyId : undefined;
            resourceInputs["sseAlgorithm"] = args ? args.sseAlgorithm : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OssBucketServerSideEncryption.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OssBucketServerSideEncryption resources.
 */
export interface OssBucketServerSideEncryptionState {
    bucket?: pulumi.Input<string>;
    kmsDataEncryption?: pulumi.Input<string>;
    kmsMasterKeyId?: pulumi.Input<string>;
    sseAlgorithm?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OssBucketServerSideEncryptionTimeouts>;
}

/**
 * The set of arguments for constructing a OssBucketServerSideEncryption resource.
 */
export interface OssBucketServerSideEncryptionArgs {
    bucket: pulumi.Input<string>;
    kmsDataEncryption?: pulumi.Input<string>;
    kmsMasterKeyId?: pulumi.Input<string>;
    sseAlgorithm: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OssBucketServerSideEncryptionTimeouts>;
}
