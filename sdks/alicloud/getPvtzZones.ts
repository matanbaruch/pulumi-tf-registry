// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPvtzZones(args?: GetPvtzZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetPvtzZonesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getPvtzZones:getPvtzZones", {
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "keyword": args.keyword,
        "lang": args.lang,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "queryRegionId": args.queryRegionId,
        "queryVpcId": args.queryVpcId,
        "resourceGroupId": args.resourceGroupId,
        "searchMode": args.searchMode,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPvtzZones.
 */
export interface GetPvtzZonesArgs {
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    keyword?: string;
    lang?: string;
    nameRegex?: string;
    outputFile?: string;
    queryRegionId?: string;
    queryVpcId?: string;
    resourceGroupId?: string;
    searchMode?: string;
}

/**
 * A collection of values returned by getPvtzZones.
 */
export interface GetPvtzZonesResult {
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly keyword?: string;
    readonly lang?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly queryRegionId?: string;
    readonly queryVpcId?: string;
    readonly resourceGroupId?: string;
    readonly searchMode?: string;
    readonly zones: outputs.GetPvtzZonesZone[];
}
export function getPvtzZonesOutput(args?: GetPvtzZonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPvtzZonesResult> {
    return pulumi.output(args).apply((a: any) => getPvtzZones(a, opts))
}

/**
 * A collection of arguments for invoking getPvtzZones.
 */
export interface GetPvtzZonesOutputArgs {
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    keyword?: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    queryRegionId?: pulumi.Input<string>;
    queryVpcId?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    searchMode?: pulumi.Input<string>;
}
