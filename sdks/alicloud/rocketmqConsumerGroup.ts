// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RocketmqConsumerGroup extends pulumi.CustomResource {
    /**
     * Get an existing RocketmqConsumerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RocketmqConsumerGroupState, opts?: pulumi.CustomResourceOptions): RocketmqConsumerGroup {
        return new RocketmqConsumerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/rocketmqConsumerGroup:RocketmqConsumerGroup';

    /**
     * Returns true if the given object is an instance of RocketmqConsumerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RocketmqConsumerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RocketmqConsumerGroup.__pulumiType;
    }

    public readonly consumeRetryPolicy!: pulumi.Output<outputs.RocketmqConsumerGroupConsumeRetryPolicy>;
    public readonly consumerGroupId!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly deliveryOrderType!: pulumi.Output<string | undefined>;
    public readonly instanceId!: pulumi.Output<string>;
    public readonly remark!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.RocketmqConsumerGroupTimeouts | undefined>;

    /**
     * Create a RocketmqConsumerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RocketmqConsumerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RocketmqConsumerGroupArgs | RocketmqConsumerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RocketmqConsumerGroupState | undefined;
            resourceInputs["consumeRetryPolicy"] = state ? state.consumeRetryPolicy : undefined;
            resourceInputs["consumerGroupId"] = state ? state.consumerGroupId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deliveryOrderType"] = state ? state.deliveryOrderType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as RocketmqConsumerGroupArgs | undefined;
            if ((!args || args.consumeRetryPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumeRetryPolicy'");
            }
            if ((!args || args.consumerGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumerGroupId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["consumeRetryPolicy"] = args ? args.consumeRetryPolicy : undefined;
            resourceInputs["consumerGroupId"] = args ? args.consumerGroupId : undefined;
            resourceInputs["deliveryOrderType"] = args ? args.deliveryOrderType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RocketmqConsumerGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RocketmqConsumerGroup resources.
 */
export interface RocketmqConsumerGroupState {
    consumeRetryPolicy?: pulumi.Input<inputs.RocketmqConsumerGroupConsumeRetryPolicy>;
    consumerGroupId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deliveryOrderType?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    remark?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.RocketmqConsumerGroupTimeouts>;
}

/**
 * The set of arguments for constructing a RocketmqConsumerGroup resource.
 */
export interface RocketmqConsumerGroupArgs {
    consumeRetryPolicy: pulumi.Input<inputs.RocketmqConsumerGroupConsumeRetryPolicy>;
    consumerGroupId: pulumi.Input<string>;
    deliveryOrderType?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    remark?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.RocketmqConsumerGroupTimeouts>;
}
