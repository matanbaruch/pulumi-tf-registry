// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Fcv3CustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing Fcv3CustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Fcv3CustomDomainState, opts?: pulumi.CustomResourceOptions): Fcv3CustomDomain {
        return new Fcv3CustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/fcv3CustomDomain:Fcv3CustomDomain';

    /**
     * Returns true if the given object is an instance of Fcv3CustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fcv3CustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fcv3CustomDomain.__pulumiType;
    }

    public readonly authConfig!: pulumi.Output<outputs.Fcv3CustomDomainAuthConfig | undefined>;
    public readonly certConfig!: pulumi.Output<outputs.Fcv3CustomDomainCertConfig | undefined>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly customDomainName!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string | undefined>;
    public readonly routeConfig!: pulumi.Output<outputs.Fcv3CustomDomainRouteConfig | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.Fcv3CustomDomainTimeouts | undefined>;
    public readonly tlsConfig!: pulumi.Output<outputs.Fcv3CustomDomainTlsConfig | undefined>;
    public readonly wafConfig!: pulumi.Output<outputs.Fcv3CustomDomainWafConfig | undefined>;

    /**
     * Create a Fcv3CustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Fcv3CustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Fcv3CustomDomainArgs | Fcv3CustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Fcv3CustomDomainState | undefined;
            resourceInputs["authConfig"] = state ? state.authConfig : undefined;
            resourceInputs["certConfig"] = state ? state.certConfig : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customDomainName"] = state ? state.customDomainName : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["routeConfig"] = state ? state.routeConfig : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["tlsConfig"] = state ? state.tlsConfig : undefined;
            resourceInputs["wafConfig"] = state ? state.wafConfig : undefined;
        } else {
            const args = argsOrState as Fcv3CustomDomainArgs | undefined;
            resourceInputs["authConfig"] = args ? args.authConfig : undefined;
            resourceInputs["certConfig"] = args ? args.certConfig : undefined;
            resourceInputs["customDomainName"] = args ? args.customDomainName : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["routeConfig"] = args ? args.routeConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["tlsConfig"] = args ? args.tlsConfig : undefined;
            resourceInputs["wafConfig"] = args ? args.wafConfig : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fcv3CustomDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Fcv3CustomDomain resources.
 */
export interface Fcv3CustomDomainState {
    authConfig?: pulumi.Input<inputs.Fcv3CustomDomainAuthConfig>;
    certConfig?: pulumi.Input<inputs.Fcv3CustomDomainCertConfig>;
    createTime?: pulumi.Input<string>;
    customDomainName?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    routeConfig?: pulumi.Input<inputs.Fcv3CustomDomainRouteConfig>;
    timeouts?: pulumi.Input<inputs.Fcv3CustomDomainTimeouts>;
    tlsConfig?: pulumi.Input<inputs.Fcv3CustomDomainTlsConfig>;
    wafConfig?: pulumi.Input<inputs.Fcv3CustomDomainWafConfig>;
}

/**
 * The set of arguments for constructing a Fcv3CustomDomain resource.
 */
export interface Fcv3CustomDomainArgs {
    authConfig?: pulumi.Input<inputs.Fcv3CustomDomainAuthConfig>;
    certConfig?: pulumi.Input<inputs.Fcv3CustomDomainCertConfig>;
    customDomainName?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    routeConfig?: pulumi.Input<inputs.Fcv3CustomDomainRouteConfig>;
    timeouts?: pulumi.Input<inputs.Fcv3CustomDomainTimeouts>;
    tlsConfig?: pulumi.Input<inputs.Fcv3CustomDomainTlsConfig>;
    wafConfig?: pulumi.Input<inputs.Fcv3CustomDomainWafConfig>;
}
