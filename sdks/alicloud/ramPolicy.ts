// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RamPolicy extends pulumi.CustomResource {
    /**
     * Get an existing RamPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RamPolicyState, opts?: pulumi.CustomResourceOptions): RamPolicy {
        return new RamPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ramPolicy:RamPolicy';

    /**
     * Returns true if the given object is an instance of RamPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RamPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RamPolicy.__pulumiType;
    }

    public /*out*/ readonly attachmentCount!: pulumi.Output<number>;
    public /*out*/ readonly defaultVersion!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly document!: pulumi.Output<string>;
    public readonly force!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly name!: pulumi.Output<string>;
    public readonly policyDocument!: pulumi.Output<string>;
    public readonly policyName!: pulumi.Output<string>;
    public readonly rotateStrategy!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly statements!: pulumi.Output<outputs.RamPolicyStatement[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.RamPolicyTimeouts | undefined>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly version!: pulumi.Output<string | undefined>;
    public /*out*/ readonly versionId!: pulumi.Output<string>;

    /**
     * Create a RamPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RamPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RamPolicyArgs | RamPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RamPolicyState | undefined;
            resourceInputs["attachmentCount"] = state ? state.attachmentCount : undefined;
            resourceInputs["defaultVersion"] = state ? state.defaultVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["document"] = state ? state.document : undefined;
            resourceInputs["force"] = state ? state.force : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyDocument"] = state ? state.policyDocument : undefined;
            resourceInputs["policyName"] = state ? state.policyName : undefined;
            resourceInputs["rotateStrategy"] = state ? state.rotateStrategy : undefined;
            resourceInputs["statements"] = state ? state.statements : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as RamPolicyArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["document"] = args ? args.document : undefined;
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policyDocument"] = args ? args.policyDocument : undefined;
            resourceInputs["policyName"] = args ? args.policyName : undefined;
            resourceInputs["rotateStrategy"] = args ? args.rotateStrategy : undefined;
            resourceInputs["statements"] = args ? args.statements : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["attachmentCount"] = undefined /*out*/;
            resourceInputs["defaultVersion"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RamPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RamPolicy resources.
 */
export interface RamPolicyState {
    attachmentCount?: pulumi.Input<number>;
    defaultVersion?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    document?: pulumi.Input<string>;
    force?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    policyDocument?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    rotateStrategy?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    statements?: pulumi.Input<pulumi.Input<inputs.RamPolicyStatement>[]>;
    timeouts?: pulumi.Input<inputs.RamPolicyTimeouts>;
    type?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    version?: pulumi.Input<string>;
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RamPolicy resource.
 */
export interface RamPolicyArgs {
    description?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    document?: pulumi.Input<string>;
    force?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    policyDocument?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    rotateStrategy?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    statements?: pulumi.Input<pulumi.Input<inputs.RamPolicyStatement>[]>;
    timeouts?: pulumi.Input<inputs.RamPolicyTimeouts>;
    /**
     * @deprecated Deprecated
     */
    version?: pulumi.Input<string>;
}
