// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSlbs(args?: GetSlbsArgs, opts?: pulumi.InvokeOptions): Promise<GetSlbsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getSlbs:getSlbs", {
        "address": args.address,
        "addressIpVersion": args.addressIpVersion,
        "addressType": args.addressType,
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "internetChargeType": args.internetChargeType,
        "loadBalancerName": args.loadBalancerName,
        "masterAvailabilityZone": args.masterAvailabilityZone,
        "masterZoneId": args.masterZoneId,
        "nameRegex": args.nameRegex,
        "networkType": args.networkType,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "paymentType": args.paymentType,
        "resourceGroupId": args.resourceGroupId,
        "serverId": args.serverId,
        "serverIntranetAddress": args.serverIntranetAddress,
        "slaveAvailabilityZone": args.slaveAvailabilityZone,
        "slaveZoneId": args.slaveZoneId,
        "status": args.status,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vswitchId": args.vswitchId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSlbs.
 */
export interface GetSlbsArgs {
    address?: string;
    addressIpVersion?: string;
    addressType?: string;
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    internetChargeType?: string;
    loadBalancerName?: string;
    masterAvailabilityZone?: string;
    masterZoneId?: string;
    nameRegex?: string;
    networkType?: string;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    paymentType?: string;
    resourceGroupId?: string;
    serverId?: string;
    serverIntranetAddress?: string;
    slaveAvailabilityZone?: string;
    slaveZoneId?: string;
    status?: string;
    tags?: {[key: string]: string};
    vpcId?: string;
    vswitchId?: string;
}

/**
 * A collection of values returned by getSlbs.
 */
export interface GetSlbsResult {
    readonly address?: string;
    readonly addressIpVersion?: string;
    readonly addressType?: string;
    readonly balancers: outputs.GetSlbsBalancer[];
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly internetChargeType?: string;
    readonly loadBalancerName?: string;
    readonly masterAvailabilityZone?: string;
    readonly masterZoneId?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly networkType?: string;
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly paymentType?: string;
    readonly resourceGroupId?: string;
    readonly serverId?: string;
    readonly serverIntranetAddress?: string;
    readonly slaveAvailabilityZone?: string;
    readonly slaveZoneId?: string;
    /**
     * @deprecated Deprecated
     */
    readonly slbs: outputs.GetSlbsSlb[];
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly totalCount: number;
    readonly vpcId?: string;
    readonly vswitchId?: string;
}
export function getSlbsOutput(args?: GetSlbsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSlbsResult> {
    return pulumi.output(args).apply((a: any) => getSlbs(a, opts))
}

/**
 * A collection of arguments for invoking getSlbs.
 */
export interface GetSlbsOutputArgs {
    address?: pulumi.Input<string>;
    addressIpVersion?: pulumi.Input<string>;
    addressType?: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    internetChargeType?: pulumi.Input<string>;
    loadBalancerName?: pulumi.Input<string>;
    masterAvailabilityZone?: pulumi.Input<string>;
    masterZoneId?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    paymentType?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    serverId?: pulumi.Input<string>;
    serverIntranetAddress?: pulumi.Input<string>;
    slaveAvailabilityZone?: pulumi.Input<string>;
    slaveZoneId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}
