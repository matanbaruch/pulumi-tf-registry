// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OosTemplate extends pulumi.CustomResource {
    /**
     * Get an existing OosTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OosTemplateState, opts?: pulumi.CustomResourceOptions): OosTemplate {
        return new OosTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/oosTemplate:OosTemplate';

    /**
     * Returns true if the given object is an instance of OosTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OosTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OosTemplate.__pulumiType;
    }

    public readonly autoDeleteExecutions!: pulumi.Output<boolean | undefined>;
    public readonly content!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    public /*out*/ readonly description!: pulumi.Output<string>;
    public /*out*/ readonly hasTrigger!: pulumi.Output<boolean>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public /*out*/ readonly shareType!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly templateFormat!: pulumi.Output<string>;
    public /*out*/ readonly templateId!: pulumi.Output<string>;
    public readonly templateName!: pulumi.Output<string>;
    public /*out*/ readonly templateType!: pulumi.Output<string>;
    public /*out*/ readonly templateVersion!: pulumi.Output<string>;
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;
    public /*out*/ readonly updatedDate!: pulumi.Output<string>;
    public readonly versionName!: pulumi.Output<string | undefined>;

    /**
     * Create a OosTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OosTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OosTemplateArgs | OosTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OosTemplateState | undefined;
            resourceInputs["autoDeleteExecutions"] = state ? state.autoDeleteExecutions : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hasTrigger"] = state ? state.hasTrigger : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["shareType"] = state ? state.shareType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateFormat"] = state ? state.templateFormat : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
            resourceInputs["templateType"] = state ? state.templateType : undefined;
            resourceInputs["templateVersion"] = state ? state.templateVersion : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["updatedDate"] = state ? state.updatedDate : undefined;
            resourceInputs["versionName"] = state ? state.versionName : undefined;
        } else {
            const args = argsOrState as OosTemplateArgs | undefined;
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            resourceInputs["autoDeleteExecutions"] = args ? args.autoDeleteExecutions : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
            resourceInputs["versionName"] = args ? args.versionName : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["hasTrigger"] = undefined /*out*/;
            resourceInputs["shareType"] = undefined /*out*/;
            resourceInputs["templateFormat"] = undefined /*out*/;
            resourceInputs["templateId"] = undefined /*out*/;
            resourceInputs["templateType"] = undefined /*out*/;
            resourceInputs["templateVersion"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
            resourceInputs["updatedDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OosTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OosTemplate resources.
 */
export interface OosTemplateState {
    autoDeleteExecutions?: pulumi.Input<boolean>;
    content?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    createdDate?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    hasTrigger?: pulumi.Input<boolean>;
    resourceGroupId?: pulumi.Input<string>;
    shareType?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateFormat?: pulumi.Input<string>;
    templateId?: pulumi.Input<string>;
    templateName?: pulumi.Input<string>;
    templateType?: pulumi.Input<string>;
    templateVersion?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    updatedDate?: pulumi.Input<string>;
    versionName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OosTemplate resource.
 */
export interface OosTemplateArgs {
    autoDeleteExecutions?: pulumi.Input<boolean>;
    content: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateName: pulumi.Input<string>;
    versionName?: pulumi.Input<string>;
}
