// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGpdbInstances(args?: GetGpdbInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetGpdbInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getGpdbInstances:getGpdbInstances", {
        "availabilityZone": args.availabilityZone,
        "dbInstanceCategories": args.dbInstanceCategories,
        "dbInstanceModes": args.dbInstanceModes,
        "description": args.description,
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "instanceNetworkType": args.instanceNetworkType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
        "tags": args.tags,
        "vswitchId": args.vswitchId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGpdbInstances.
 */
export interface GetGpdbInstancesArgs {
    availabilityZone?: string;
    dbInstanceCategories?: string;
    dbInstanceModes?: string;
    description?: string;
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    instanceNetworkType?: string;
    nameRegex?: string;
    outputFile?: string;
    resourceGroupId?: string;
    status?: string;
    tags?: {[key: string]: string};
    vswitchId?: string;
}

/**
 * A collection of values returned by getGpdbInstances.
 */
export interface GetGpdbInstancesResult {
    readonly availabilityZone?: string;
    readonly dbInstanceCategories?: string;
    readonly dbInstanceModes?: string;
    readonly description?: string;
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly instanceNetworkType?: string;
    readonly instances: outputs.GetGpdbInstancesInstance[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly resourceGroupId?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly vswitchId?: string;
}
export function getGpdbInstancesOutput(args?: GetGpdbInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGpdbInstancesResult> {
    return pulumi.output(args).apply((a: any) => getGpdbInstances(a, opts))
}

/**
 * A collection of arguments for invoking getGpdbInstances.
 */
export interface GetGpdbInstancesOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    dbInstanceCategories?: pulumi.Input<string>;
    dbInstanceModes?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    instanceNetworkType?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vswitchId?: pulumi.Input<string>;
}
