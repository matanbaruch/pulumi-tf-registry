// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LogMachineGroup extends pulumi.CustomResource {
    /**
     * Get an existing LogMachineGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogMachineGroupState, opts?: pulumi.CustomResourceOptions): LogMachineGroup {
        return new LogMachineGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/logMachineGroup:LogMachineGroup';

    /**
     * Returns true if the given object is an instance of LogMachineGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogMachineGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogMachineGroup.__pulumiType;
    }

    public readonly identifyLists!: pulumi.Output<string[]>;
    public readonly identifyType!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly topic!: pulumi.Output<string | undefined>;

    /**
     * Create a LogMachineGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogMachineGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogMachineGroupArgs | LogMachineGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogMachineGroupState | undefined;
            resourceInputs["identifyLists"] = state ? state.identifyLists : undefined;
            resourceInputs["identifyType"] = state ? state.identifyType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["topic"] = state ? state.topic : undefined;
        } else {
            const args = argsOrState as LogMachineGroupArgs | undefined;
            if ((!args || args.identifyLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifyLists'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            resourceInputs["identifyLists"] = args ? args.identifyLists : undefined;
            resourceInputs["identifyType"] = args ? args.identifyType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["topic"] = args ? args.topic : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogMachineGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogMachineGroup resources.
 */
export interface LogMachineGroupState {
    identifyLists?: pulumi.Input<pulumi.Input<string>[]>;
    identifyType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    topic?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogMachineGroup resource.
 */
export interface LogMachineGroupArgs {
    identifyLists: pulumi.Input<pulumi.Input<string>[]>;
    identifyType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    topic?: pulumi.Input<string>;
}
