// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OtsTable extends pulumi.CustomResource {
    /**
     * Get an existing OtsTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OtsTableState, opts?: pulumi.CustomResourceOptions): OtsTable {
        return new OtsTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/otsTable:OtsTable';

    /**
     * Returns true if the given object is an instance of OtsTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OtsTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OtsTable.__pulumiType;
    }

    public readonly allowUpdate!: pulumi.Output<boolean | undefined>;
    public readonly definedColumns!: pulumi.Output<outputs.OtsTableDefinedColumn[] | undefined>;
    public readonly deviationCellVersionInSec!: pulumi.Output<string | undefined>;
    public readonly enableSse!: pulumi.Output<boolean | undefined>;
    public readonly instanceName!: pulumi.Output<string>;
    public readonly maxVersion!: pulumi.Output<number>;
    public readonly primaryKeys!: pulumi.Output<outputs.OtsTablePrimaryKey[]>;
    public readonly sseKeyId!: pulumi.Output<string | undefined>;
    public readonly sseKeyType!: pulumi.Output<string | undefined>;
    public readonly sseRoleArn!: pulumi.Output<string | undefined>;
    public readonly tableName!: pulumi.Output<string>;
    public readonly timeToLive!: pulumi.Output<number>;

    /**
     * Create a OtsTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OtsTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OtsTableArgs | OtsTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OtsTableState | undefined;
            resourceInputs["allowUpdate"] = state ? state.allowUpdate : undefined;
            resourceInputs["definedColumns"] = state ? state.definedColumns : undefined;
            resourceInputs["deviationCellVersionInSec"] = state ? state.deviationCellVersionInSec : undefined;
            resourceInputs["enableSse"] = state ? state.enableSse : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["maxVersion"] = state ? state.maxVersion : undefined;
            resourceInputs["primaryKeys"] = state ? state.primaryKeys : undefined;
            resourceInputs["sseKeyId"] = state ? state.sseKeyId : undefined;
            resourceInputs["sseKeyType"] = state ? state.sseKeyType : undefined;
            resourceInputs["sseRoleArn"] = state ? state.sseRoleArn : undefined;
            resourceInputs["tableName"] = state ? state.tableName : undefined;
            resourceInputs["timeToLive"] = state ? state.timeToLive : undefined;
        } else {
            const args = argsOrState as OtsTableArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.maxVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxVersion'");
            }
            if ((!args || args.primaryKeys === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryKeys'");
            }
            if ((!args || args.tableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableName'");
            }
            if ((!args || args.timeToLive === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeToLive'");
            }
            resourceInputs["allowUpdate"] = args ? args.allowUpdate : undefined;
            resourceInputs["definedColumns"] = args ? args.definedColumns : undefined;
            resourceInputs["deviationCellVersionInSec"] = args ? args.deviationCellVersionInSec : undefined;
            resourceInputs["enableSse"] = args ? args.enableSse : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["maxVersion"] = args ? args.maxVersion : undefined;
            resourceInputs["primaryKeys"] = args ? args.primaryKeys : undefined;
            resourceInputs["sseKeyId"] = args ? args.sseKeyId : undefined;
            resourceInputs["sseKeyType"] = args ? args.sseKeyType : undefined;
            resourceInputs["sseRoleArn"] = args ? args.sseRoleArn : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
            resourceInputs["timeToLive"] = args ? args.timeToLive : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OtsTable.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OtsTable resources.
 */
export interface OtsTableState {
    allowUpdate?: pulumi.Input<boolean>;
    definedColumns?: pulumi.Input<pulumi.Input<inputs.OtsTableDefinedColumn>[]>;
    deviationCellVersionInSec?: pulumi.Input<string>;
    enableSse?: pulumi.Input<boolean>;
    instanceName?: pulumi.Input<string>;
    maxVersion?: pulumi.Input<number>;
    primaryKeys?: pulumi.Input<pulumi.Input<inputs.OtsTablePrimaryKey>[]>;
    sseKeyId?: pulumi.Input<string>;
    sseKeyType?: pulumi.Input<string>;
    sseRoleArn?: pulumi.Input<string>;
    tableName?: pulumi.Input<string>;
    timeToLive?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a OtsTable resource.
 */
export interface OtsTableArgs {
    allowUpdate?: pulumi.Input<boolean>;
    definedColumns?: pulumi.Input<pulumi.Input<inputs.OtsTableDefinedColumn>[]>;
    deviationCellVersionInSec?: pulumi.Input<string>;
    enableSse?: pulumi.Input<boolean>;
    instanceName: pulumi.Input<string>;
    maxVersion: pulumi.Input<number>;
    primaryKeys: pulumi.Input<pulumi.Input<inputs.OtsTablePrimaryKey>[]>;
    sseKeyId?: pulumi.Input<string>;
    sseKeyType?: pulumi.Input<string>;
    sseRoleArn?: pulumi.Input<string>;
    tableName: pulumi.Input<string>;
    timeToLive: pulumi.Input<number>;
}
