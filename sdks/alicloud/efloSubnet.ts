// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EfloSubnet extends pulumi.CustomResource {
    /**
     * Get an existing EfloSubnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EfloSubnetState, opts?: pulumi.CustomResourceOptions): EfloSubnet {
        return new EfloSubnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/efloSubnet:EfloSubnet';

    /**
     * Returns true if the given object is an instance of EfloSubnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EfloSubnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EfloSubnet.__pulumiType;
    }

    public readonly cidr!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public /*out*/ readonly gmtModified!: pulumi.Output<string>;
    public /*out*/ readonly message!: pulumi.Output<string>;
    public /*out*/ readonly resourceGroupId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly subnetId!: pulumi.Output<string>;
    public readonly subnetName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.EfloSubnetTimeouts | undefined>;
    public readonly type!: pulumi.Output<string | undefined>;
    public readonly vpdId!: pulumi.Output<string>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a EfloSubnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EfloSubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EfloSubnetArgs | EfloSubnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EfloSubnetState | undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["gmtModified"] = state ? state.gmtModified : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["subnetName"] = state ? state.subnetName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vpdId"] = state ? state.vpdId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as EfloSubnetArgs | undefined;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            if ((!args || args.subnetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetName'");
            }
            if ((!args || args.vpdId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpdId'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["subnetName"] = args ? args.subnetName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vpdId"] = args ? args.vpdId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["gmtModified"] = undefined /*out*/;
            resourceInputs["message"] = undefined /*out*/;
            resourceInputs["resourceGroupId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subnetId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EfloSubnet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EfloSubnet resources.
 */
export interface EfloSubnetState {
    cidr?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    gmtModified?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    subnetName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EfloSubnetTimeouts>;
    type?: pulumi.Input<string>;
    vpdId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EfloSubnet resource.
 */
export interface EfloSubnetArgs {
    cidr: pulumi.Input<string>;
    subnetName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EfloSubnetTimeouts>;
    type?: pulumi.Input<string>;
    vpdId: pulumi.Input<string>;
    zoneId: pulumi.Input<string>;
}
