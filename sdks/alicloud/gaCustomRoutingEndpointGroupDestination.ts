// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GaCustomRoutingEndpointGroupDestination extends pulumi.CustomResource {
    /**
     * Get an existing GaCustomRoutingEndpointGroupDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GaCustomRoutingEndpointGroupDestinationState, opts?: pulumi.CustomResourceOptions): GaCustomRoutingEndpointGroupDestination {
        return new GaCustomRoutingEndpointGroupDestination(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/gaCustomRoutingEndpointGroupDestination:GaCustomRoutingEndpointGroupDestination';

    /**
     * Returns true if the given object is an instance of GaCustomRoutingEndpointGroupDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GaCustomRoutingEndpointGroupDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GaCustomRoutingEndpointGroupDestination.__pulumiType;
    }

    public /*out*/ readonly acceleratorId!: pulumi.Output<string>;
    public /*out*/ readonly customRoutingEndpointGroupDestinationId!: pulumi.Output<string>;
    public readonly endpointGroupId!: pulumi.Output<string>;
    public readonly fromPort!: pulumi.Output<number>;
    public /*out*/ readonly listenerId!: pulumi.Output<string>;
    public readonly protocols!: pulumi.Output<string[]>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.GaCustomRoutingEndpointGroupDestinationTimeouts | undefined>;
    public readonly toPort!: pulumi.Output<number>;

    /**
     * Create a GaCustomRoutingEndpointGroupDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GaCustomRoutingEndpointGroupDestinationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GaCustomRoutingEndpointGroupDestinationArgs | GaCustomRoutingEndpointGroupDestinationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GaCustomRoutingEndpointGroupDestinationState | undefined;
            resourceInputs["acceleratorId"] = state ? state.acceleratorId : undefined;
            resourceInputs["customRoutingEndpointGroupDestinationId"] = state ? state.customRoutingEndpointGroupDestinationId : undefined;
            resourceInputs["endpointGroupId"] = state ? state.endpointGroupId : undefined;
            resourceInputs["fromPort"] = state ? state.fromPort : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["toPort"] = state ? state.toPort : undefined;
        } else {
            const args = argsOrState as GaCustomRoutingEndpointGroupDestinationArgs | undefined;
            if ((!args || args.endpointGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointGroupId'");
            }
            if ((!args || args.fromPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fromPort'");
            }
            if ((!args || args.protocols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocols'");
            }
            if ((!args || args.toPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'toPort'");
            }
            resourceInputs["endpointGroupId"] = args ? args.endpointGroupId : undefined;
            resourceInputs["fromPort"] = args ? args.fromPort : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["toPort"] = args ? args.toPort : undefined;
            resourceInputs["acceleratorId"] = undefined /*out*/;
            resourceInputs["customRoutingEndpointGroupDestinationId"] = undefined /*out*/;
            resourceInputs["listenerId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GaCustomRoutingEndpointGroupDestination.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GaCustomRoutingEndpointGroupDestination resources.
 */
export interface GaCustomRoutingEndpointGroupDestinationState {
    acceleratorId?: pulumi.Input<string>;
    customRoutingEndpointGroupDestinationId?: pulumi.Input<string>;
    endpointGroupId?: pulumi.Input<string>;
    fromPort?: pulumi.Input<number>;
    listenerId?: pulumi.Input<string>;
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GaCustomRoutingEndpointGroupDestinationTimeouts>;
    toPort?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GaCustomRoutingEndpointGroupDestination resource.
 */
export interface GaCustomRoutingEndpointGroupDestinationArgs {
    endpointGroupId: pulumi.Input<string>;
    fromPort: pulumi.Input<number>;
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.GaCustomRoutingEndpointGroupDestinationTimeouts>;
    toPort: pulumi.Input<number>;
}
