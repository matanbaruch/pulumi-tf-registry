// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PolardbDatabase extends pulumi.CustomResource {
    /**
     * Get an existing PolardbDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolardbDatabaseState, opts?: pulumi.CustomResourceOptions): PolardbDatabase {
        return new PolardbDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/polardbDatabase:PolardbDatabase';

    /**
     * Returns true if the given object is an instance of PolardbDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolardbDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolardbDatabase.__pulumiType;
    }

    public readonly accountName!: pulumi.Output<string | undefined>;
    public readonly characterSetName!: pulumi.Output<string | undefined>;
    public readonly dbClusterId!: pulumi.Output<string>;
    public readonly dbDescription!: pulumi.Output<string | undefined>;
    public readonly dbName!: pulumi.Output<string>;

    /**
     * Create a PolardbDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolardbDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolardbDatabaseArgs | PolardbDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolardbDatabaseState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["characterSetName"] = state ? state.characterSetName : undefined;
            resourceInputs["dbClusterId"] = state ? state.dbClusterId : undefined;
            resourceInputs["dbDescription"] = state ? state.dbDescription : undefined;
            resourceInputs["dbName"] = state ? state.dbName : undefined;
        } else {
            const args = argsOrState as PolardbDatabaseArgs | undefined;
            if ((!args || args.dbClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbClusterId'");
            }
            if ((!args || args.dbName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbName'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["characterSetName"] = args ? args.characterSetName : undefined;
            resourceInputs["dbClusterId"] = args ? args.dbClusterId : undefined;
            resourceInputs["dbDescription"] = args ? args.dbDescription : undefined;
            resourceInputs["dbName"] = args ? args.dbName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolardbDatabase.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolardbDatabase resources.
 */
export interface PolardbDatabaseState {
    accountName?: pulumi.Input<string>;
    characterSetName?: pulumi.Input<string>;
    dbClusterId?: pulumi.Input<string>;
    dbDescription?: pulumi.Input<string>;
    dbName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolardbDatabase resource.
 */
export interface PolardbDatabaseArgs {
    accountName?: pulumi.Input<string>;
    characterSetName?: pulumi.Input<string>;
    dbClusterId: pulumi.Input<string>;
    dbDescription?: pulumi.Input<string>;
    dbName: pulumi.Input<string>;
}
