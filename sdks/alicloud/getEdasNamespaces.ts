// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEdasNamespaces(args?: GetEdasNamespacesArgs, opts?: pulumi.InvokeOptions): Promise<GetEdasNamespacesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEdasNamespaces:getEdasNamespaces", {
        "id": args.id,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEdasNamespaces.
 */
export interface GetEdasNamespacesArgs {
    id?: string;
    ids?: string[];
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getEdasNamespaces.
 */
export interface GetEdasNamespacesResult {
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly namespaces: outputs.GetEdasNamespacesNamespace[];
    readonly outputFile?: string;
}
export function getEdasNamespacesOutput(args?: GetEdasNamespacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEdasNamespacesResult> {
    return pulumi.output(args).apply((a: any) => getEdasNamespaces(a, opts))
}

/**
 * A collection of arguments for invoking getEdasNamespaces.
 */
export interface GetEdasNamespacesOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
