// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCmsGroupMetricRules(args?: GetCmsGroupMetricRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetCmsGroupMetricRulesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCmsGroupMetricRules:getCmsGroupMetricRules", {
        "dimensions": args.dimensions,
        "enableState": args.enableState,
        "groupId": args.groupId,
        "groupMetricRuleName": args.groupMetricRuleName,
        "id": args.id,
        "ids": args.ids,
        "metricName": args.metricName,
        "nameRegex": args.nameRegex,
        "namespace": args.namespace,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCmsGroupMetricRules.
 */
export interface GetCmsGroupMetricRulesArgs {
    dimensions?: string;
    enableState?: boolean;
    groupId?: string;
    groupMetricRuleName?: string;
    id?: string;
    ids?: string[];
    metricName?: string;
    nameRegex?: string;
    namespace?: string;
    outputFile?: string;
    status?: string;
}

/**
 * A collection of values returned by getCmsGroupMetricRules.
 */
export interface GetCmsGroupMetricRulesResult {
    readonly dimensions?: string;
    readonly enableState?: boolean;
    readonly groupId?: string;
    readonly groupMetricRuleName?: string;
    readonly id: string;
    readonly ids: string[];
    readonly metricName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly namespace?: string;
    readonly outputFile?: string;
    readonly rules: outputs.GetCmsGroupMetricRulesRule[];
    readonly status?: string;
}
export function getCmsGroupMetricRulesOutput(args?: GetCmsGroupMetricRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmsGroupMetricRulesResult> {
    return pulumi.output(args).apply((a: any) => getCmsGroupMetricRules(a, opts))
}

/**
 * A collection of arguments for invoking getCmsGroupMetricRules.
 */
export interface GetCmsGroupMetricRulesOutputArgs {
    dimensions?: pulumi.Input<string>;
    enableState?: pulumi.Input<boolean>;
    groupId?: pulumi.Input<string>;
    groupMetricRuleName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    metricName?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
