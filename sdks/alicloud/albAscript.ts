// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlbAscript extends pulumi.CustomResource {
    /**
     * Get an existing AlbAscript resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlbAscriptState, opts?: pulumi.CustomResourceOptions): AlbAscript {
        return new AlbAscript(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/albAscript:AlbAscript';

    /**
     * Returns true if the given object is an instance of AlbAscript.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlbAscript {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlbAscript.__pulumiType;
    }

    public readonly ascriptName!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<boolean>;
    public readonly extAttributeEnabled!: pulumi.Output<boolean>;
    public readonly extAttributes!: pulumi.Output<outputs.AlbAscriptExtAttribute[] | undefined>;
    public readonly listenerId!: pulumi.Output<string>;
    public /*out*/ readonly loadBalancerId!: pulumi.Output<string>;
    public readonly position!: pulumi.Output<string>;
    public readonly scriptContent!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AlbAscriptTimeouts | undefined>;

    /**
     * Create a AlbAscript resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlbAscriptArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlbAscriptArgs | AlbAscriptState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlbAscriptState | undefined;
            resourceInputs["ascriptName"] = state ? state.ascriptName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["extAttributeEnabled"] = state ? state.extAttributeEnabled : undefined;
            resourceInputs["extAttributes"] = state ? state.extAttributes : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["loadBalancerId"] = state ? state.loadBalancerId : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
            resourceInputs["scriptContent"] = state ? state.scriptContent : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AlbAscriptArgs | undefined;
            if ((!args || args.ascriptName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ascriptName'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.listenerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            if ((!args || args.position === undefined) && !opts.urn) {
                throw new Error("Missing required property 'position'");
            }
            if ((!args || args.scriptContent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scriptContent'");
            }
            resourceInputs["ascriptName"] = args ? args.ascriptName : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["extAttributeEnabled"] = args ? args.extAttributeEnabled : undefined;
            resourceInputs["extAttributes"] = args ? args.extAttributes : undefined;
            resourceInputs["listenerId"] = args ? args.listenerId : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
            resourceInputs["scriptContent"] = args ? args.scriptContent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["loadBalancerId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlbAscript.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlbAscript resources.
 */
export interface AlbAscriptState {
    ascriptName?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    extAttributeEnabled?: pulumi.Input<boolean>;
    extAttributes?: pulumi.Input<pulumi.Input<inputs.AlbAscriptExtAttribute>[]>;
    listenerId?: pulumi.Input<string>;
    loadBalancerId?: pulumi.Input<string>;
    position?: pulumi.Input<string>;
    scriptContent?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AlbAscriptTimeouts>;
}

/**
 * The set of arguments for constructing a AlbAscript resource.
 */
export interface AlbAscriptArgs {
    ascriptName: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    extAttributeEnabled?: pulumi.Input<boolean>;
    extAttributes?: pulumi.Input<pulumi.Input<inputs.AlbAscriptExtAttribute>[]>;
    listenerId: pulumi.Input<string>;
    position: pulumi.Input<string>;
    scriptContent: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AlbAscriptTimeouts>;
}
