// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FcLayerVersion extends pulumi.CustomResource {
    /**
     * Get an existing FcLayerVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FcLayerVersionState, opts?: pulumi.CustomResourceOptions): FcLayerVersion {
        return new FcLayerVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/fcLayerVersion:FcLayerVersion';

    /**
     * Returns true if the given object is an instance of FcLayerVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FcLayerVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FcLayerVersion.__pulumiType;
    }

    public /*out*/ readonly acl!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly codeCheckSum!: pulumi.Output<string>;
    public readonly compatibleRuntimes!: pulumi.Output<string[]>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly layerName!: pulumi.Output<string>;
    public readonly ossBucketName!: pulumi.Output<string | undefined>;
    public readonly ossObjectName!: pulumi.Output<string | undefined>;
    public readonly skipDestroy!: pulumi.Output<boolean | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.FcLayerVersionTimeouts | undefined>;
    public /*out*/ readonly version!: pulumi.Output<string>;
    public readonly zipFile!: pulumi.Output<string | undefined>;

    /**
     * Create a FcLayerVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FcLayerVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FcLayerVersionArgs | FcLayerVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FcLayerVersionState | undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["codeCheckSum"] = state ? state.codeCheckSum : undefined;
            resourceInputs["compatibleRuntimes"] = state ? state.compatibleRuntimes : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["layerName"] = state ? state.layerName : undefined;
            resourceInputs["ossBucketName"] = state ? state.ossBucketName : undefined;
            resourceInputs["ossObjectName"] = state ? state.ossObjectName : undefined;
            resourceInputs["skipDestroy"] = state ? state.skipDestroy : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["zipFile"] = state ? state.zipFile : undefined;
        } else {
            const args = argsOrState as FcLayerVersionArgs | undefined;
            if ((!args || args.compatibleRuntimes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compatibleRuntimes'");
            }
            if ((!args || args.layerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'layerName'");
            }
            resourceInputs["compatibleRuntimes"] = args ? args.compatibleRuntimes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["layerName"] = args ? args.layerName : undefined;
            resourceInputs["ossBucketName"] = args ? args.ossBucketName : undefined;
            resourceInputs["ossObjectName"] = args ? args.ossObjectName : undefined;
            resourceInputs["skipDestroy"] = args ? args.skipDestroy : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zipFile"] = args ? args.zipFile : undefined;
            resourceInputs["acl"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["codeCheckSum"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FcLayerVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FcLayerVersion resources.
 */
export interface FcLayerVersionState {
    acl?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    codeCheckSum?: pulumi.Input<string>;
    compatibleRuntimes?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    layerName?: pulumi.Input<string>;
    ossBucketName?: pulumi.Input<string>;
    ossObjectName?: pulumi.Input<string>;
    skipDestroy?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.FcLayerVersionTimeouts>;
    version?: pulumi.Input<string>;
    zipFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FcLayerVersion resource.
 */
export interface FcLayerVersionArgs {
    compatibleRuntimes: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    layerName: pulumi.Input<string>;
    ossBucketName?: pulumi.Input<string>;
    ossObjectName?: pulumi.Input<string>;
    skipDestroy?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.FcLayerVersionTimeouts>;
    zipFile?: pulumi.Input<string>;
}
