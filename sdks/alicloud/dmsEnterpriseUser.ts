// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DmsEnterpriseUser extends pulumi.CustomResource {
    /**
     * Get an existing DmsEnterpriseUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsEnterpriseUserState, opts?: pulumi.CustomResourceOptions): DmsEnterpriseUser {
        return new DmsEnterpriseUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/dmsEnterpriseUser:DmsEnterpriseUser';

    /**
     * Returns true if the given object is an instance of DmsEnterpriseUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsEnterpriseUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsEnterpriseUser.__pulumiType;
    }

    public readonly maxExecuteCount!: pulumi.Output<number | undefined>;
    public readonly maxResultCount!: pulumi.Output<number | undefined>;
    public readonly mobile!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly nickName!: pulumi.Output<string>;
    public readonly roleNames!: pulumi.Output<string[] | undefined>;
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly tid!: pulumi.Output<number | undefined>;
    public readonly uid!: pulumi.Output<string>;
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a DmsEnterpriseUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsEnterpriseUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsEnterpriseUserArgs | DmsEnterpriseUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsEnterpriseUserState | undefined;
            resourceInputs["maxExecuteCount"] = state ? state.maxExecuteCount : undefined;
            resourceInputs["maxResultCount"] = state ? state.maxResultCount : undefined;
            resourceInputs["mobile"] = state ? state.mobile : undefined;
            resourceInputs["nickName"] = state ? state.nickName : undefined;
            resourceInputs["roleNames"] = state ? state.roleNames : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tid"] = state ? state.tid : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as DmsEnterpriseUserArgs | undefined;
            if ((!args || args.uid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'uid'");
            }
            resourceInputs["maxExecuteCount"] = args ? args.maxExecuteCount : undefined;
            resourceInputs["maxResultCount"] = args ? args.maxResultCount : undefined;
            resourceInputs["mobile"] = args ? args.mobile : undefined;
            resourceInputs["nickName"] = args ? args.nickName : undefined;
            resourceInputs["roleNames"] = args ? args.roleNames : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tid"] = args ? args.tid : undefined;
            resourceInputs["uid"] = args ? args.uid : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmsEnterpriseUser.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DmsEnterpriseUser resources.
 */
export interface DmsEnterpriseUserState {
    maxExecuteCount?: pulumi.Input<number>;
    maxResultCount?: pulumi.Input<number>;
    mobile?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    nickName?: pulumi.Input<string>;
    roleNames?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    tid?: pulumi.Input<number>;
    uid?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DmsEnterpriseUser resource.
 */
export interface DmsEnterpriseUserArgs {
    maxExecuteCount?: pulumi.Input<number>;
    maxResultCount?: pulumi.Input<number>;
    mobile?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    nickName?: pulumi.Input<string>;
    roleNames?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    tid?: pulumi.Input<number>;
    uid: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
