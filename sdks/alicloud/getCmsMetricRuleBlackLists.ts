// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCmsMetricRuleBlackLists(args?: GetCmsMetricRuleBlackListsArgs, opts?: pulumi.InvokeOptions): Promise<GetCmsMetricRuleBlackListsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCmsMetricRuleBlackLists:getCmsMetricRuleBlackLists", {
        "category": args.category,
        "id": args.id,
        "ids": args.ids,
        "metricRuleBlackListId": args.metricRuleBlackListId,
        "nameRegex": args.nameRegex,
        "namespace": args.namespace,
        "order": args.order,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCmsMetricRuleBlackLists.
 */
export interface GetCmsMetricRuleBlackListsArgs {
    category?: string;
    id?: string;
    ids?: string[];
    metricRuleBlackListId?: string;
    nameRegex?: string;
    namespace?: string;
    order?: number;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
}

/**
 * A collection of values returned by getCmsMetricRuleBlackLists.
 */
export interface GetCmsMetricRuleBlackListsResult {
    readonly category?: string;
    readonly id: string;
    readonly ids: string[];
    readonly lists: outputs.GetCmsMetricRuleBlackListsList[];
    readonly metricRuleBlackListId?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly namespace?: string;
    readonly order?: number;
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
}
export function getCmsMetricRuleBlackListsOutput(args?: GetCmsMetricRuleBlackListsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmsMetricRuleBlackListsResult> {
    return pulumi.output(args).apply((a: any) => getCmsMetricRuleBlackLists(a, opts))
}

/**
 * A collection of arguments for invoking getCmsMetricRuleBlackLists.
 */
export interface GetCmsMetricRuleBlackListsOutputArgs {
    category?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    metricRuleBlackListId?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
}
