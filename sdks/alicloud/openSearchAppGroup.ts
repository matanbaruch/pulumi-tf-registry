// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpenSearchAppGroup extends pulumi.CustomResource {
    /**
     * Get an existing OpenSearchAppGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpenSearchAppGroupState, opts?: pulumi.CustomResourceOptions): OpenSearchAppGroup {
        return new OpenSearchAppGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/openSearchAppGroup:OpenSearchAppGroup';

    /**
     * Returns true if the given object is an instance of OpenSearchAppGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpenSearchAppGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpenSearchAppGroup.__pulumiType;
    }

    public readonly appGroupName!: pulumi.Output<string>;
    public readonly chargeWay!: pulumi.Output<string>;
    public readonly currentVersion!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    public readonly orderType!: pulumi.Output<string>;
    public readonly orders!: pulumi.Output<outputs.OpenSearchAppGroupOrder[] | undefined>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly quota!: pulumi.Output<outputs.OpenSearchAppGroupQuota>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a OpenSearchAppGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpenSearchAppGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpenSearchAppGroupArgs | OpenSearchAppGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpenSearchAppGroupState | undefined;
            resourceInputs["appGroupName"] = state ? state.appGroupName : undefined;
            resourceInputs["chargeWay"] = state ? state.chargeWay : undefined;
            resourceInputs["currentVersion"] = state ? state.currentVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["orderType"] = state ? state.orderType : undefined;
            resourceInputs["orders"] = state ? state.orders : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["quota"] = state ? state.quota : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as OpenSearchAppGroupArgs | undefined;
            if ((!args || args.appGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appGroupName'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.quota === undefined) && !opts.urn) {
                throw new Error("Missing required property 'quota'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["appGroupName"] = args ? args.appGroupName : undefined;
            resourceInputs["chargeWay"] = args ? args.chargeWay : undefined;
            resourceInputs["currentVersion"] = args ? args.currentVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["orderType"] = args ? args.orderType : undefined;
            resourceInputs["orders"] = args ? args.orders : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["quota"] = args ? args.quota : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpenSearchAppGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OpenSearchAppGroup resources.
 */
export interface OpenSearchAppGroupState {
    appGroupName?: pulumi.Input<string>;
    chargeWay?: pulumi.Input<string>;
    currentVersion?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    orderType?: pulumi.Input<string>;
    orders?: pulumi.Input<pulumi.Input<inputs.OpenSearchAppGroupOrder>[]>;
    paymentType?: pulumi.Input<string>;
    quota?: pulumi.Input<inputs.OpenSearchAppGroupQuota>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OpenSearchAppGroup resource.
 */
export interface OpenSearchAppGroupArgs {
    appGroupName: pulumi.Input<string>;
    chargeWay?: pulumi.Input<string>;
    currentVersion?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    orderType?: pulumi.Input<string>;
    orders?: pulumi.Input<pulumi.Input<inputs.OpenSearchAppGroupOrder>[]>;
    paymentType: pulumi.Input<string>;
    quota: pulumi.Input<inputs.OpenSearchAppGroupQuota>;
    type: pulumi.Input<string>;
}
