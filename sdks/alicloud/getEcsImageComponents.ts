// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcsImageComponents(args?: GetEcsImageComponentsArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsImageComponentsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEcsImageComponents:getEcsImageComponents", {
        "id": args.id,
        "ids": args.ids,
        "imageComponentName": args.imageComponentName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "owner": args.owner,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcsImageComponents.
 */
export interface GetEcsImageComponentsArgs {
    id?: string;
    ids?: string[];
    imageComponentName?: string;
    nameRegex?: string;
    outputFile?: string;
    owner?: string;
    resourceGroupId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEcsImageComponents.
 */
export interface GetEcsImageComponentsResult {
    readonly components: outputs.GetEcsImageComponentsComponent[];
    readonly id: string;
    readonly ids: string[];
    readonly imageComponentName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly owner?: string;
    readonly resourceGroupId?: string;
    readonly tags?: {[key: string]: string};
}
export function getEcsImageComponentsOutput(args?: GetEcsImageComponentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcsImageComponentsResult> {
    return pulumi.output(args).apply((a: any) => getEcsImageComponents(a, opts))
}

/**
 * A collection of arguments for invoking getEcsImageComponents.
 */
export interface GetEcsImageComponentsOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    imageComponentName?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
