// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCenRouteServices(args: GetCenRouteServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetCenRouteServicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCenRouteServices:getCenRouteServices", {
        "accessRegionId": args.accessRegionId,
        "cenId": args.cenId,
        "host": args.host,
        "hostRegionId": args.hostRegionId,
        "hostVpcId": args.hostVpcId,
        "id": args.id,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCenRouteServices.
 */
export interface GetCenRouteServicesArgs {
    accessRegionId?: string;
    cenId: string;
    host?: string;
    hostRegionId?: string;
    hostVpcId?: string;
    id?: string;
    outputFile?: string;
    status?: string;
}

/**
 * A collection of values returned by getCenRouteServices.
 */
export interface GetCenRouteServicesResult {
    readonly accessRegionId?: string;
    readonly cenId: string;
    readonly host?: string;
    readonly hostRegionId?: string;
    readonly hostVpcId?: string;
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly services: outputs.GetCenRouteServicesService[];
    readonly status?: string;
}
export function getCenRouteServicesOutput(args: GetCenRouteServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCenRouteServicesResult> {
    return pulumi.output(args).apply((a: any) => getCenRouteServices(a, opts))
}

/**
 * A collection of arguments for invoking getCenRouteServices.
 */
export interface GetCenRouteServicesOutputArgs {
    accessRegionId?: pulumi.Input<string>;
    cenId: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    hostRegionId?: pulumi.Input<string>;
    hostVpcId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
