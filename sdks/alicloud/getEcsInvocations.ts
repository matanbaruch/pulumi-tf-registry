// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcsInvocations(args?: GetEcsInvocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsInvocationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEcsInvocations:getEcsInvocations", {
        "commandId": args.commandId,
        "contentEncoding": args.contentEncoding,
        "id": args.id,
        "ids": args.ids,
        "invokeStatus": args.invokeStatus,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcsInvocations.
 */
export interface GetEcsInvocationsArgs {
    commandId?: string;
    contentEncoding?: string;
    id?: string;
    ids?: string[];
    invokeStatus?: string;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
}

/**
 * A collection of values returned by getEcsInvocations.
 */
export interface GetEcsInvocationsResult {
    readonly commandId?: string;
    readonly contentEncoding?: string;
    readonly id: string;
    readonly ids: string[];
    readonly invocations: outputs.GetEcsInvocationsInvocation[];
    readonly invokeStatus?: string;
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
}
export function getEcsInvocationsOutput(args?: GetEcsInvocationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcsInvocationsResult> {
    return pulumi.output(args).apply((a: any) => getEcsInvocations(a, opts))
}

/**
 * A collection of arguments for invoking getEcsInvocations.
 */
export interface GetEcsInvocationsOutputArgs {
    commandId?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    invokeStatus?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
}
