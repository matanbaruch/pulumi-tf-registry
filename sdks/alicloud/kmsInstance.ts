// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KmsInstance extends pulumi.CustomResource {
    /**
     * Get an existing KmsInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KmsInstanceState, opts?: pulumi.CustomResourceOptions): KmsInstance {
        return new KmsInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/kmsInstance:KmsInstance';

    /**
     * Returns true if the given object is an instance of KmsInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KmsInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KmsInstance.__pulumiType;
    }

    public readonly bindVpcs!: pulumi.Output<outputs.KmsInstanceBindVpc[] | undefined>;
    public /*out*/ readonly caCertificateChainPem!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly forceDeleteWithoutBackup!: pulumi.Output<string | undefined>;
    public /*out*/ readonly instanceName!: pulumi.Output<string>;
    public readonly keyNum!: pulumi.Output<number | undefined>;
    public readonly log!: pulumi.Output<string>;
    public readonly logStorage!: pulumi.Output<number>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly productVersion!: pulumi.Output<string | undefined>;
    public readonly renewPeriod!: pulumi.Output<number | undefined>;
    public readonly renewStatus!: pulumi.Output<string | undefined>;
    public readonly secretNum!: pulumi.Output<number | undefined>;
    public readonly spec!: pulumi.Output<number | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.KmsInstanceTimeouts | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vpcNum!: pulumi.Output<number | undefined>;
    public readonly vswitchIds!: pulumi.Output<string[]>;
    public readonly zoneIds!: pulumi.Output<string[]>;

    /**
     * Create a KmsInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KmsInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KmsInstanceArgs | KmsInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KmsInstanceState | undefined;
            resourceInputs["bindVpcs"] = state ? state.bindVpcs : undefined;
            resourceInputs["caCertificateChainPem"] = state ? state.caCertificateChainPem : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["forceDeleteWithoutBackup"] = state ? state.forceDeleteWithoutBackup : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["keyNum"] = state ? state.keyNum : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["logStorage"] = state ? state.logStorage : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["productVersion"] = state ? state.productVersion : undefined;
            resourceInputs["renewPeriod"] = state ? state.renewPeriod : undefined;
            resourceInputs["renewStatus"] = state ? state.renewStatus : undefined;
            resourceInputs["secretNum"] = state ? state.secretNum : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcNum"] = state ? state.vpcNum : undefined;
            resourceInputs["vswitchIds"] = state ? state.vswitchIds : undefined;
            resourceInputs["zoneIds"] = state ? state.zoneIds : undefined;
        } else {
            const args = argsOrState as KmsInstanceArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vswitchIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchIds'");
            }
            if ((!args || args.zoneIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneIds'");
            }
            resourceInputs["bindVpcs"] = args ? args.bindVpcs : undefined;
            resourceInputs["forceDeleteWithoutBackup"] = args ? args.forceDeleteWithoutBackup : undefined;
            resourceInputs["keyNum"] = args ? args.keyNum : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["logStorage"] = args ? args.logStorage : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["productVersion"] = args ? args.productVersion : undefined;
            resourceInputs["renewPeriod"] = args ? args.renewPeriod : undefined;
            resourceInputs["renewStatus"] = args ? args.renewStatus : undefined;
            resourceInputs["secretNum"] = args ? args.secretNum : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcNum"] = args ? args.vpcNum : undefined;
            resourceInputs["vswitchIds"] = args ? args.vswitchIds : undefined;
            resourceInputs["zoneIds"] = args ? args.zoneIds : undefined;
            resourceInputs["caCertificateChainPem"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["instanceName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KmsInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KmsInstance resources.
 */
export interface KmsInstanceState {
    bindVpcs?: pulumi.Input<pulumi.Input<inputs.KmsInstanceBindVpc>[]>;
    caCertificateChainPem?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    forceDeleteWithoutBackup?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    keyNum?: pulumi.Input<number>;
    log?: pulumi.Input<string>;
    logStorage?: pulumi.Input<number>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    productVersion?: pulumi.Input<string>;
    renewPeriod?: pulumi.Input<number>;
    renewStatus?: pulumi.Input<string>;
    secretNum?: pulumi.Input<number>;
    spec?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.KmsInstanceTimeouts>;
    vpcId?: pulumi.Input<string>;
    vpcNum?: pulumi.Input<number>;
    vswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a KmsInstance resource.
 */
export interface KmsInstanceArgs {
    bindVpcs?: pulumi.Input<pulumi.Input<inputs.KmsInstanceBindVpc>[]>;
    forceDeleteWithoutBackup?: pulumi.Input<string>;
    keyNum?: pulumi.Input<number>;
    log?: pulumi.Input<string>;
    logStorage?: pulumi.Input<number>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    productVersion?: pulumi.Input<string>;
    renewPeriod?: pulumi.Input<number>;
    renewStatus?: pulumi.Input<string>;
    secretNum?: pulumi.Input<number>;
    spec?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.KmsInstanceTimeouts>;
    vpcId: pulumi.Input<string>;
    vpcNum?: pulumi.Input<number>;
    vswitchIds: pulumi.Input<pulumi.Input<string>[]>;
    zoneIds: pulumi.Input<pulumi.Input<string>[]>;
}
