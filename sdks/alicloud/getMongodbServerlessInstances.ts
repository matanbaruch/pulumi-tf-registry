// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMongodbServerlessInstances(args?: GetMongodbServerlessInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetMongodbServerlessInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getMongodbServerlessInstances:getMongodbServerlessInstances", {
        "dbInstanceClass": args.dbInstanceClass,
        "dbInstanceDescription": args.dbInstanceDescription,
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "networkType": args.networkType,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vswitchId": args.vswitchId,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMongodbServerlessInstances.
 */
export interface GetMongodbServerlessInstancesArgs {
    dbInstanceClass?: string;
    dbInstanceDescription?: string;
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    networkType?: string;
    outputFile?: string;
    resourceGroupId?: string;
    status?: string;
    tags?: {[key: string]: string};
    vpcId?: string;
    vswitchId?: string;
    zoneId?: string;
}

/**
 * A collection of values returned by getMongodbServerlessInstances.
 */
export interface GetMongodbServerlessInstancesResult {
    readonly dbInstanceClass?: string;
    readonly dbInstanceDescription?: string;
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly instances: outputs.GetMongodbServerlessInstancesInstance[];
    readonly networkType?: string;
    readonly outputFile?: string;
    readonly resourceGroupId?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly vpcId?: string;
    readonly vswitchId?: string;
    readonly zoneId?: string;
}
export function getMongodbServerlessInstancesOutput(args?: GetMongodbServerlessInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMongodbServerlessInstancesResult> {
    return pulumi.output(args).apply((a: any) => getMongodbServerlessInstances(a, opts))
}

/**
 * A collection of arguments for invoking getMongodbServerlessInstances.
 */
export interface GetMongodbServerlessInstancesOutputArgs {
    dbInstanceClass?: pulumi.Input<string>;
    dbInstanceDescription?: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    networkType?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
