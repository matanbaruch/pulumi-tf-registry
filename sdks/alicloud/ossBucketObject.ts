// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OssBucketObject extends pulumi.CustomResource {
    /**
     * Get an existing OssBucketObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OssBucketObjectState, opts?: pulumi.CustomResourceOptions): OssBucketObject {
        return new OssBucketObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ossBucketObject:OssBucketObject';

    /**
     * Returns true if the given object is an instance of OssBucketObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OssBucketObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OssBucketObject.__pulumiType;
    }

    public readonly acl!: pulumi.Output<string | undefined>;
    public readonly bucket!: pulumi.Output<string>;
    public readonly cacheControl!: pulumi.Output<string | undefined>;
    public readonly content!: pulumi.Output<string | undefined>;
    public readonly contentDisposition!: pulumi.Output<string | undefined>;
    public readonly contentEncoding!: pulumi.Output<string | undefined>;
    public /*out*/ readonly contentLength!: pulumi.Output<string>;
    public readonly contentMd5!: pulumi.Output<string | undefined>;
    public readonly contentType!: pulumi.Output<string>;
    public /*out*/ readonly etag!: pulumi.Output<string>;
    public readonly expires!: pulumi.Output<string | undefined>;
    public readonly key!: pulumi.Output<string>;
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    public readonly serverSideEncryption!: pulumi.Output<string | undefined>;
    public readonly source!: pulumi.Output<string | undefined>;
    public /*out*/ readonly versionId!: pulumi.Output<string>;

    /**
     * Create a OssBucketObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OssBucketObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OssBucketObjectArgs | OssBucketObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OssBucketObjectState | undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["cacheControl"] = state ? state.cacheControl : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["contentDisposition"] = state ? state.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = state ? state.contentEncoding : undefined;
            resourceInputs["contentLength"] = state ? state.contentLength : undefined;
            resourceInputs["contentMd5"] = state ? state.contentMd5 : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["expires"] = state ? state.expires : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["serverSideEncryption"] = state ? state.serverSideEncryption : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as OssBucketObjectArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["cacheControl"] = args ? args.cacheControl : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["contentDisposition"] = args ? args.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = args ? args.contentEncoding : undefined;
            resourceInputs["contentMd5"] = args ? args.contentMd5 : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["expires"] = args ? args.expires : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["serverSideEncryption"] = args ? args.serverSideEncryption : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["contentLength"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OssBucketObject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OssBucketObject resources.
 */
export interface OssBucketObjectState {
    acl?: pulumi.Input<string>;
    bucket?: pulumi.Input<string>;
    cacheControl?: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    contentDisposition?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    contentLength?: pulumi.Input<string>;
    contentMd5?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    etag?: pulumi.Input<string>;
    expires?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    serverSideEncryption?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OssBucketObject resource.
 */
export interface OssBucketObjectArgs {
    acl?: pulumi.Input<string>;
    bucket: pulumi.Input<string>;
    cacheControl?: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    contentDisposition?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    contentMd5?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    expires?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    serverSideEncryption?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
}
