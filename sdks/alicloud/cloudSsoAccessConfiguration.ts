// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudSsoAccessConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing CloudSsoAccessConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudSsoAccessConfigurationState, opts?: pulumi.CustomResourceOptions): CloudSsoAccessConfiguration {
        return new CloudSsoAccessConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cloudSsoAccessConfiguration:CloudSsoAccessConfiguration';

    /**
     * Returns true if the given object is an instance of CloudSsoAccessConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudSsoAccessConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudSsoAccessConfiguration.__pulumiType;
    }

    public /*out*/ readonly accessConfigurationId!: pulumi.Output<string>;
    public readonly accessConfigurationName!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly directoryId!: pulumi.Output<string>;
    public readonly forceRemovePermissionPolicies!: pulumi.Output<boolean | undefined>;
    public readonly permissionPolicies!: pulumi.Output<outputs.CloudSsoAccessConfigurationPermissionPolicy[] | undefined>;
    public readonly relayState!: pulumi.Output<string | undefined>;
    public readonly sessionDuration!: pulumi.Output<number>;
    public readonly timeouts!: pulumi.Output<outputs.CloudSsoAccessConfigurationTimeouts | undefined>;

    /**
     * Create a CloudSsoAccessConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudSsoAccessConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudSsoAccessConfigurationArgs | CloudSsoAccessConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudSsoAccessConfigurationState | undefined;
            resourceInputs["accessConfigurationId"] = state ? state.accessConfigurationId : undefined;
            resourceInputs["accessConfigurationName"] = state ? state.accessConfigurationName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["directoryId"] = state ? state.directoryId : undefined;
            resourceInputs["forceRemovePermissionPolicies"] = state ? state.forceRemovePermissionPolicies : undefined;
            resourceInputs["permissionPolicies"] = state ? state.permissionPolicies : undefined;
            resourceInputs["relayState"] = state ? state.relayState : undefined;
            resourceInputs["sessionDuration"] = state ? state.sessionDuration : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CloudSsoAccessConfigurationArgs | undefined;
            if ((!args || args.accessConfigurationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessConfigurationName'");
            }
            if ((!args || args.directoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'directoryId'");
            }
            resourceInputs["accessConfigurationName"] = args ? args.accessConfigurationName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["directoryId"] = args ? args.directoryId : undefined;
            resourceInputs["forceRemovePermissionPolicies"] = args ? args.forceRemovePermissionPolicies : undefined;
            resourceInputs["permissionPolicies"] = args ? args.permissionPolicies : undefined;
            resourceInputs["relayState"] = args ? args.relayState : undefined;
            resourceInputs["sessionDuration"] = args ? args.sessionDuration : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["accessConfigurationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudSsoAccessConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudSsoAccessConfiguration resources.
 */
export interface CloudSsoAccessConfigurationState {
    accessConfigurationId?: pulumi.Input<string>;
    accessConfigurationName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    directoryId?: pulumi.Input<string>;
    forceRemovePermissionPolicies?: pulumi.Input<boolean>;
    permissionPolicies?: pulumi.Input<pulumi.Input<inputs.CloudSsoAccessConfigurationPermissionPolicy>[]>;
    relayState?: pulumi.Input<string>;
    sessionDuration?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.CloudSsoAccessConfigurationTimeouts>;
}

/**
 * The set of arguments for constructing a CloudSsoAccessConfiguration resource.
 */
export interface CloudSsoAccessConfigurationArgs {
    accessConfigurationName: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    directoryId: pulumi.Input<string>;
    forceRemovePermissionPolicies?: pulumi.Input<boolean>;
    permissionPolicies?: pulumi.Input<pulumi.Input<inputs.CloudSsoAccessConfigurationPermissionPolicy>[]>;
    relayState?: pulumi.Input<string>;
    sessionDuration?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.CloudSsoAccessConfigurationTimeouts>;
}
