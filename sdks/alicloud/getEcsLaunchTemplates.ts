// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcsLaunchTemplates(args?: GetEcsLaunchTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsLaunchTemplatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEcsLaunchTemplates:getEcsLaunchTemplates", {
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "launchTemplateName": args.launchTemplateName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "templateResourceGroupId": args.templateResourceGroupId,
        "templateTags": args.templateTags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcsLaunchTemplates.
 */
export interface GetEcsLaunchTemplatesArgs {
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    launchTemplateName?: string;
    nameRegex?: string;
    outputFile?: string;
    templateResourceGroupId?: string;
    templateTags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEcsLaunchTemplates.
 */
export interface GetEcsLaunchTemplatesResult {
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly launchTemplateName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly templateResourceGroupId?: string;
    readonly templateTags?: {[key: string]: string};
    readonly templates: outputs.GetEcsLaunchTemplatesTemplate[];
}
export function getEcsLaunchTemplatesOutput(args?: GetEcsLaunchTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcsLaunchTemplatesResult> {
    return pulumi.output(args).apply((a: any) => getEcsLaunchTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getEcsLaunchTemplates.
 */
export interface GetEcsLaunchTemplatesOutputArgs {
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    launchTemplateName?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    templateResourceGroupId?: pulumi.Input<string>;
    templateTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
