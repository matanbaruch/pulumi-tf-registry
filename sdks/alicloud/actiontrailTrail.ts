// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ActiontrailTrail extends pulumi.CustomResource {
    /**
     * Get an existing ActiontrailTrail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ActiontrailTrailState, opts?: pulumi.CustomResourceOptions): ActiontrailTrail {
        return new ActiontrailTrail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/actiontrailTrail:ActiontrailTrail';

    /**
     * Returns true if the given object is an instance of ActiontrailTrail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ActiontrailTrail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ActiontrailTrail.__pulumiType;
    }

    public readonly eventRw!: pulumi.Output<string | undefined>;
    public readonly isOrganizationTrail!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly mnsTopicArn!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly name!: pulumi.Output<string>;
    public readonly ossBucketName!: pulumi.Output<string | undefined>;
    public readonly ossKeyPrefix!: pulumi.Output<string | undefined>;
    public readonly ossWriteRoleArn!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly roleName!: pulumi.Output<string>;
    public readonly slsProjectArn!: pulumi.Output<string | undefined>;
    public readonly slsWriteRoleArn!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ActiontrailTrailTimeouts | undefined>;
    public readonly trailName!: pulumi.Output<string>;
    public readonly trailRegion!: pulumi.Output<string>;

    /**
     * Create a ActiontrailTrail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ActiontrailTrailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ActiontrailTrailArgs | ActiontrailTrailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ActiontrailTrailState | undefined;
            resourceInputs["eventRw"] = state ? state.eventRw : undefined;
            resourceInputs["isOrganizationTrail"] = state ? state.isOrganizationTrail : undefined;
            resourceInputs["mnsTopicArn"] = state ? state.mnsTopicArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ossBucketName"] = state ? state.ossBucketName : undefined;
            resourceInputs["ossKeyPrefix"] = state ? state.ossKeyPrefix : undefined;
            resourceInputs["ossWriteRoleArn"] = state ? state.ossWriteRoleArn : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["slsProjectArn"] = state ? state.slsProjectArn : undefined;
            resourceInputs["slsWriteRoleArn"] = state ? state.slsWriteRoleArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["trailName"] = state ? state.trailName : undefined;
            resourceInputs["trailRegion"] = state ? state.trailRegion : undefined;
        } else {
            const args = argsOrState as ActiontrailTrailArgs | undefined;
            resourceInputs["eventRw"] = args ? args.eventRw : undefined;
            resourceInputs["isOrganizationTrail"] = args ? args.isOrganizationTrail : undefined;
            resourceInputs["mnsTopicArn"] = args ? args.mnsTopicArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ossBucketName"] = args ? args.ossBucketName : undefined;
            resourceInputs["ossKeyPrefix"] = args ? args.ossKeyPrefix : undefined;
            resourceInputs["ossWriteRoleArn"] = args ? args.ossWriteRoleArn : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["slsProjectArn"] = args ? args.slsProjectArn : undefined;
            resourceInputs["slsWriteRoleArn"] = args ? args.slsWriteRoleArn : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["trailName"] = args ? args.trailName : undefined;
            resourceInputs["trailRegion"] = args ? args.trailRegion : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ActiontrailTrail.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ActiontrailTrail resources.
 */
export interface ActiontrailTrailState {
    eventRw?: pulumi.Input<string>;
    isOrganizationTrail?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    mnsTopicArn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    ossBucketName?: pulumi.Input<string>;
    ossKeyPrefix?: pulumi.Input<string>;
    ossWriteRoleArn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    roleName?: pulumi.Input<string>;
    slsProjectArn?: pulumi.Input<string>;
    slsWriteRoleArn?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ActiontrailTrailTimeouts>;
    trailName?: pulumi.Input<string>;
    trailRegion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ActiontrailTrail resource.
 */
export interface ActiontrailTrailArgs {
    eventRw?: pulumi.Input<string>;
    isOrganizationTrail?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    mnsTopicArn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    ossBucketName?: pulumi.Input<string>;
    ossKeyPrefix?: pulumi.Input<string>;
    ossWriteRoleArn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    roleName?: pulumi.Input<string>;
    slsProjectArn?: pulumi.Input<string>;
    slsWriteRoleArn?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ActiontrailTrailTimeouts>;
    trailName?: pulumi.Input<string>;
    trailRegion?: pulumi.Input<string>;
}
