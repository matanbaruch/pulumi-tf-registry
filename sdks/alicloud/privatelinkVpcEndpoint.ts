// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PrivatelinkVpcEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing PrivatelinkVpcEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivatelinkVpcEndpointState, opts?: pulumi.CustomResourceOptions): PrivatelinkVpcEndpoint {
        return new PrivatelinkVpcEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/privatelinkVpcEndpoint:PrivatelinkVpcEndpoint';

    /**
     * Returns true if the given object is an instance of PrivatelinkVpcEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivatelinkVpcEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivatelinkVpcEndpoint.__pulumiType;
    }

    public /*out*/ readonly bandwidth!: pulumi.Output<number>;
    public /*out*/ readonly connectionStatus!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly endpointBusinessStatus!: pulumi.Output<string>;
    public readonly endpointDescription!: pulumi.Output<string | undefined>;
    public /*out*/ readonly endpointDomain!: pulumi.Output<string>;
    public readonly endpointType!: pulumi.Output<string>;
    public readonly policyDocument!: pulumi.Output<string>;
    public readonly protectedEnabled!: pulumi.Output<boolean | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    public readonly serviceId!: pulumi.Output<string | undefined>;
    public readonly serviceName!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.PrivatelinkVpcEndpointTimeouts | undefined>;
    public readonly vpcEndpointName!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly zonePrivateIpAddressCount!: pulumi.Output<number>;

    /**
     * Create a PrivatelinkVpcEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivatelinkVpcEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivatelinkVpcEndpointArgs | PrivatelinkVpcEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivatelinkVpcEndpointState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["connectionStatus"] = state ? state.connectionStatus : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["endpointBusinessStatus"] = state ? state.endpointBusinessStatus : undefined;
            resourceInputs["endpointDescription"] = state ? state.endpointDescription : undefined;
            resourceInputs["endpointDomain"] = state ? state.endpointDomain : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
            resourceInputs["policyDocument"] = state ? state.policyDocument : undefined;
            resourceInputs["protectedEnabled"] = state ? state.protectedEnabled : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcEndpointName"] = state ? state.vpcEndpointName : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zonePrivateIpAddressCount"] = state ? state.zonePrivateIpAddressCount : undefined;
        } else {
            const args = argsOrState as PrivatelinkVpcEndpointArgs | undefined;
            if ((!args || args.securityGroupIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupIds'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["endpointDescription"] = args ? args.endpointDescription : undefined;
            resourceInputs["endpointType"] = args ? args.endpointType : undefined;
            resourceInputs["policyDocument"] = args ? args.policyDocument : undefined;
            resourceInputs["protectedEnabled"] = args ? args.protectedEnabled : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcEndpointName"] = args ? args.vpcEndpointName : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zonePrivateIpAddressCount"] = args ? args.zonePrivateIpAddressCount : undefined;
            resourceInputs["bandwidth"] = undefined /*out*/;
            resourceInputs["connectionStatus"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["endpointBusinessStatus"] = undefined /*out*/;
            resourceInputs["endpointDomain"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivatelinkVpcEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrivatelinkVpcEndpoint resources.
 */
export interface PrivatelinkVpcEndpointState {
    bandwidth?: pulumi.Input<number>;
    connectionStatus?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    endpointBusinessStatus?: pulumi.Input<string>;
    endpointDescription?: pulumi.Input<string>;
    endpointDomain?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    policyDocument?: pulumi.Input<string>;
    protectedEnabled?: pulumi.Input<boolean>;
    resourceGroupId?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    serviceId?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.PrivatelinkVpcEndpointTimeouts>;
    vpcEndpointName?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    zonePrivateIpAddressCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PrivatelinkVpcEndpoint resource.
 */
export interface PrivatelinkVpcEndpointArgs {
    dryRun?: pulumi.Input<boolean>;
    endpointDescription?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    policyDocument?: pulumi.Input<string>;
    protectedEnabled?: pulumi.Input<boolean>;
    resourceGroupId?: pulumi.Input<string>;
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    serviceId?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.PrivatelinkVpcEndpointTimeouts>;
    vpcEndpointName?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
    zonePrivateIpAddressCount?: pulumi.Input<number>;
}
