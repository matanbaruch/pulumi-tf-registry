// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AdbResourceGroup extends pulumi.CustomResource {
    /**
     * Get an existing AdbResourceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdbResourceGroupState, opts?: pulumi.CustomResourceOptions): AdbResourceGroup {
        return new AdbResourceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/adbResourceGroup:AdbResourceGroup';

    /**
     * Returns true if the given object is an instance of AdbResourceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdbResourceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdbResourceGroup.__pulumiType;
    }

    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly dbClusterId!: pulumi.Output<string>;
    public readonly groupName!: pulumi.Output<string>;
    public readonly groupType!: pulumi.Output<string>;
    public readonly nodeNum!: pulumi.Output<number | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AdbResourceGroupTimeouts | undefined>;
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    public /*out*/ readonly user!: pulumi.Output<string>;
    public readonly users!: pulumi.Output<string[] | undefined>;

    /**
     * Create a AdbResourceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdbResourceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdbResourceGroupArgs | AdbResourceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdbResourceGroupState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dbClusterId"] = state ? state.dbClusterId : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["groupType"] = state ? state.groupType : undefined;
            resourceInputs["nodeNum"] = state ? state.nodeNum : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as AdbResourceGroupArgs | undefined;
            if ((!args || args.dbClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbClusterId'");
            }
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            resourceInputs["dbClusterId"] = args ? args.dbClusterId : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["groupType"] = args ? args.groupType : undefined;
            resourceInputs["nodeNum"] = args ? args.nodeNum : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["user"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdbResourceGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AdbResourceGroup resources.
 */
export interface AdbResourceGroupState {
    createTime?: pulumi.Input<string>;
    dbClusterId?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    groupType?: pulumi.Input<string>;
    nodeNum?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.AdbResourceGroupTimeouts>;
    updateTime?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
    users?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AdbResourceGroup resource.
 */
export interface AdbResourceGroupArgs {
    dbClusterId: pulumi.Input<string>;
    groupName: pulumi.Input<string>;
    groupType?: pulumi.Input<string>;
    nodeNum?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.AdbResourceGroupTimeouts>;
    users?: pulumi.Input<pulumi.Input<string>[]>;
}
