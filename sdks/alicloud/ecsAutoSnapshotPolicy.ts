// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EcsAutoSnapshotPolicy extends pulumi.CustomResource {
    /**
     * Get an existing EcsAutoSnapshotPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsAutoSnapshotPolicyState, opts?: pulumi.CustomResourceOptions): EcsAutoSnapshotPolicy {
        return new EcsAutoSnapshotPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ecsAutoSnapshotPolicy:EcsAutoSnapshotPolicy';

    /**
     * Returns true if the given object is an instance of EcsAutoSnapshotPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsAutoSnapshotPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsAutoSnapshotPolicy.__pulumiType;
    }

    public readonly copiedSnapshotsRetentionDays!: pulumi.Output<number | undefined>;
    public readonly enableCrossRegionCopy!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly repeatWeekdays!: pulumi.Output<string[]>;
    public readonly retentionDays!: pulumi.Output<number>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly targetCopyRegions!: pulumi.Output<string[] | undefined>;
    public readonly timePoints!: pulumi.Output<string[]>;
    public readonly timeouts!: pulumi.Output<outputs.EcsAutoSnapshotPolicyTimeouts | undefined>;

    /**
     * Create a EcsAutoSnapshotPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EcsAutoSnapshotPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsAutoSnapshotPolicyArgs | EcsAutoSnapshotPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsAutoSnapshotPolicyState | undefined;
            resourceInputs["copiedSnapshotsRetentionDays"] = state ? state.copiedSnapshotsRetentionDays : undefined;
            resourceInputs["enableCrossRegionCopy"] = state ? state.enableCrossRegionCopy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["repeatWeekdays"] = state ? state.repeatWeekdays : undefined;
            resourceInputs["retentionDays"] = state ? state.retentionDays : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetCopyRegions"] = state ? state.targetCopyRegions : undefined;
            resourceInputs["timePoints"] = state ? state.timePoints : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as EcsAutoSnapshotPolicyArgs | undefined;
            if ((!args || args.repeatWeekdays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repeatWeekdays'");
            }
            if ((!args || args.retentionDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionDays'");
            }
            if ((!args || args.timePoints === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timePoints'");
            }
            resourceInputs["copiedSnapshotsRetentionDays"] = args ? args.copiedSnapshotsRetentionDays : undefined;
            resourceInputs["enableCrossRegionCopy"] = args ? args.enableCrossRegionCopy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["repeatWeekdays"] = args ? args.repeatWeekdays : undefined;
            resourceInputs["retentionDays"] = args ? args.retentionDays : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetCopyRegions"] = args ? args.targetCopyRegions : undefined;
            resourceInputs["timePoints"] = args ? args.timePoints : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsAutoSnapshotPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EcsAutoSnapshotPolicy resources.
 */
export interface EcsAutoSnapshotPolicyState {
    copiedSnapshotsRetentionDays?: pulumi.Input<number>;
    enableCrossRegionCopy?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    repeatWeekdays?: pulumi.Input<pulumi.Input<string>[]>;
    retentionDays?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetCopyRegions?: pulumi.Input<pulumi.Input<string>[]>;
    timePoints?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.EcsAutoSnapshotPolicyTimeouts>;
}

/**
 * The set of arguments for constructing a EcsAutoSnapshotPolicy resource.
 */
export interface EcsAutoSnapshotPolicyArgs {
    copiedSnapshotsRetentionDays?: pulumi.Input<number>;
    enableCrossRegionCopy?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    repeatWeekdays: pulumi.Input<pulumi.Input<string>[]>;
    retentionDays: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetCopyRegions?: pulumi.Input<pulumi.Input<string>[]>;
    timePoints: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.EcsAutoSnapshotPolicyTimeouts>;
}
