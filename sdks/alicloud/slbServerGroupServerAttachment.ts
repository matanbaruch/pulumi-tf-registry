// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbServerGroupServerAttachment extends pulumi.CustomResource {
    /**
     * Get an existing SlbServerGroupServerAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbServerGroupServerAttachmentState, opts?: pulumi.CustomResourceOptions): SlbServerGroupServerAttachment {
        return new SlbServerGroupServerAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/slbServerGroupServerAttachment:SlbServerGroupServerAttachment';

    /**
     * Returns true if the given object is an instance of SlbServerGroupServerAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbServerGroupServerAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbServerGroupServerAttachment.__pulumiType;
    }

    public readonly description!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<number>;
    public readonly serverGroupId!: pulumi.Output<string>;
    public readonly serverId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SlbServerGroupServerAttachmentTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a SlbServerGroupServerAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SlbServerGroupServerAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbServerGroupServerAttachmentArgs | SlbServerGroupServerAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbServerGroupServerAttachmentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["serverGroupId"] = state ? state.serverGroupId : undefined;
            resourceInputs["serverId"] = state ? state.serverId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as SlbServerGroupServerAttachmentArgs | undefined;
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.serverGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverGroupId'");
            }
            if ((!args || args.serverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["serverGroupId"] = args ? args.serverGroupId : undefined;
            resourceInputs["serverId"] = args ? args.serverId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbServerGroupServerAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbServerGroupServerAttachment resources.
 */
export interface SlbServerGroupServerAttachmentState {
    description?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    serverGroupId?: pulumi.Input<string>;
    serverId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SlbServerGroupServerAttachmentTimeouts>;
    type?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SlbServerGroupServerAttachment resource.
 */
export interface SlbServerGroupServerAttachmentArgs {
    description?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    serverGroupId: pulumi.Input<string>;
    serverId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SlbServerGroupServerAttachmentTimeouts>;
    type?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}
