// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCmsSiteMonitors(args?: GetCmsSiteMonitorsArgs, opts?: pulumi.InvokeOptions): Promise<GetCmsSiteMonitorsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCmsSiteMonitors:getCmsSiteMonitors", {
        "id": args.id,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "taskId": args.taskId,
        "taskType": args.taskType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCmsSiteMonitors.
 */
export interface GetCmsSiteMonitorsArgs {
    id?: string;
    ids?: string[];
    outputFile?: string;
    taskId?: string;
    taskType?: string;
}

/**
 * A collection of values returned by getCmsSiteMonitors.
 */
export interface GetCmsSiteMonitorsResult {
    readonly id: string;
    readonly ids: string[];
    readonly monitors: outputs.GetCmsSiteMonitorsMonitor[];
    readonly outputFile?: string;
    readonly taskId?: string;
    readonly taskType?: string;
}
export function getCmsSiteMonitorsOutput(args?: GetCmsSiteMonitorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmsSiteMonitorsResult> {
    return pulumi.output(args).apply((a: any) => getCmsSiteMonitors(a, opts))
}

/**
 * A collection of arguments for invoking getCmsSiteMonitors.
 */
export interface GetCmsSiteMonitorsOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    taskId?: pulumi.Input<string>;
    taskType?: pulumi.Input<string>;
}
