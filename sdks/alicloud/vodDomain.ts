// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VodDomain extends pulumi.CustomResource {
    /**
     * Get an existing VodDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VodDomainState, opts?: pulumi.CustomResourceOptions): VodDomain {
        return new VodDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/vodDomain:VodDomain';

    /**
     * Returns true if the given object is an instance of VodDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VodDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VodDomain.__pulumiType;
    }

    public /*out*/ readonly certName!: pulumi.Output<string>;
    public readonly checkUrl!: pulumi.Output<string | undefined>;
    public /*out*/ readonly cname!: pulumi.Output<string>;
    public /*out*/ readonly description!: pulumi.Output<string>;
    public readonly domainName!: pulumi.Output<string>;
    public /*out*/ readonly gmtCreated!: pulumi.Output<string>;
    public /*out*/ readonly gmtModified!: pulumi.Output<string>;
    public readonly scope!: pulumi.Output<string | undefined>;
    public readonly sources!: pulumi.Output<outputs.VodDomainSource[]>;
    public /*out*/ readonly sslProtocol!: pulumi.Output<string>;
    public /*out*/ readonly sslPub!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly topLevelDomain!: pulumi.Output<string | undefined>;
    public /*out*/ readonly weight!: pulumi.Output<string>;

    /**
     * Create a VodDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VodDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VodDomainArgs | VodDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VodDomainState | undefined;
            resourceInputs["certName"] = state ? state.certName : undefined;
            resourceInputs["checkUrl"] = state ? state.checkUrl : undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["gmtCreated"] = state ? state.gmtCreated : undefined;
            resourceInputs["gmtModified"] = state ? state.gmtModified : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["sources"] = state ? state.sources : undefined;
            resourceInputs["sslProtocol"] = state ? state.sslProtocol : undefined;
            resourceInputs["sslPub"] = state ? state.sslPub : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["topLevelDomain"] = state ? state.topLevelDomain : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as VodDomainArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.sources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sources'");
            }
            resourceInputs["checkUrl"] = args ? args.checkUrl : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["sources"] = args ? args.sources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["topLevelDomain"] = args ? args.topLevelDomain : undefined;
            resourceInputs["certName"] = undefined /*out*/;
            resourceInputs["cname"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["gmtCreated"] = undefined /*out*/;
            resourceInputs["gmtModified"] = undefined /*out*/;
            resourceInputs["sslProtocol"] = undefined /*out*/;
            resourceInputs["sslPub"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["weight"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VodDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VodDomain resources.
 */
export interface VodDomainState {
    certName?: pulumi.Input<string>;
    checkUrl?: pulumi.Input<string>;
    cname?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    gmtCreated?: pulumi.Input<string>;
    gmtModified?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    sources?: pulumi.Input<pulumi.Input<inputs.VodDomainSource>[]>;
    sslProtocol?: pulumi.Input<string>;
    sslPub?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    topLevelDomain?: pulumi.Input<string>;
    weight?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VodDomain resource.
 */
export interface VodDomainArgs {
    checkUrl?: pulumi.Input<string>;
    domainName: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    sources: pulumi.Input<pulumi.Input<inputs.VodDomainSource>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    topLevelDomain?: pulumi.Input<string>;
}
