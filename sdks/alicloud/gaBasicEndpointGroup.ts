// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GaBasicEndpointGroup extends pulumi.CustomResource {
    /**
     * Get an existing GaBasicEndpointGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GaBasicEndpointGroupState, opts?: pulumi.CustomResourceOptions): GaBasicEndpointGroup {
        return new GaBasicEndpointGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/gaBasicEndpointGroup:GaBasicEndpointGroup';

    /**
     * Returns true if the given object is an instance of GaBasicEndpointGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GaBasicEndpointGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GaBasicEndpointGroup.__pulumiType;
    }

    public readonly acceleratorId!: pulumi.Output<string>;
    public readonly basicEndpointGroupName!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly endpointAddress!: pulumi.Output<string>;
    public readonly endpointGroupRegion!: pulumi.Output<string>;
    public readonly endpointSubAddress!: pulumi.Output<string>;
    public readonly endpointType!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.GaBasicEndpointGroupTimeouts | undefined>;

    /**
     * Create a GaBasicEndpointGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GaBasicEndpointGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GaBasicEndpointGroupArgs | GaBasicEndpointGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GaBasicEndpointGroupState | undefined;
            resourceInputs["acceleratorId"] = state ? state.acceleratorId : undefined;
            resourceInputs["basicEndpointGroupName"] = state ? state.basicEndpointGroupName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endpointAddress"] = state ? state.endpointAddress : undefined;
            resourceInputs["endpointGroupRegion"] = state ? state.endpointGroupRegion : undefined;
            resourceInputs["endpointSubAddress"] = state ? state.endpointSubAddress : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as GaBasicEndpointGroupArgs | undefined;
            if ((!args || args.acceleratorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceleratorId'");
            }
            if ((!args || args.endpointGroupRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointGroupRegion'");
            }
            resourceInputs["acceleratorId"] = args ? args.acceleratorId : undefined;
            resourceInputs["basicEndpointGroupName"] = args ? args.basicEndpointGroupName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["endpointAddress"] = args ? args.endpointAddress : undefined;
            resourceInputs["endpointGroupRegion"] = args ? args.endpointGroupRegion : undefined;
            resourceInputs["endpointSubAddress"] = args ? args.endpointSubAddress : undefined;
            resourceInputs["endpointType"] = args ? args.endpointType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GaBasicEndpointGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GaBasicEndpointGroup resources.
 */
export interface GaBasicEndpointGroupState {
    acceleratorId?: pulumi.Input<string>;
    basicEndpointGroupName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endpointAddress?: pulumi.Input<string>;
    endpointGroupRegion?: pulumi.Input<string>;
    endpointSubAddress?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GaBasicEndpointGroupTimeouts>;
}

/**
 * The set of arguments for constructing a GaBasicEndpointGroup resource.
 */
export interface GaBasicEndpointGroupArgs {
    acceleratorId: pulumi.Input<string>;
    basicEndpointGroupName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endpointAddress?: pulumi.Input<string>;
    endpointGroupRegion: pulumi.Input<string>;
    endpointSubAddress?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GaBasicEndpointGroupTimeouts>;
}
