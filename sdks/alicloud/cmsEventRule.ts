// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CmsEventRule extends pulumi.CustomResource {
    /**
     * Get an existing CmsEventRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CmsEventRuleState, opts?: pulumi.CustomResourceOptions): CmsEventRule {
        return new CmsEventRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cmsEventRule:CmsEventRule';

    /**
     * Returns true if the given object is an instance of CmsEventRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CmsEventRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CmsEventRule.__pulumiType;
    }

    public readonly contactParameters!: pulumi.Output<outputs.CmsEventRuleContactParameter[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly eventPattern!: pulumi.Output<outputs.CmsEventRuleEventPattern>;
    public readonly fcParameters!: pulumi.Output<outputs.CmsEventRuleFcParameter[] | undefined>;
    public readonly groupId!: pulumi.Output<string | undefined>;
    public readonly mnsParameters!: pulumi.Output<outputs.CmsEventRuleMnsParameter[] | undefined>;
    public readonly openApiParameters!: pulumi.Output<outputs.CmsEventRuleOpenApiParameter[] | undefined>;
    public readonly ruleName!: pulumi.Output<string>;
    public readonly silenceTime!: pulumi.Output<number | undefined>;
    public readonly slsParameters!: pulumi.Output<outputs.CmsEventRuleSlsParameter[] | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CmsEventRuleTimeouts | undefined>;
    public readonly webhookParameters!: pulumi.Output<outputs.CmsEventRuleWebhookParameter[] | undefined>;

    /**
     * Create a CmsEventRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CmsEventRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CmsEventRuleArgs | CmsEventRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CmsEventRuleState | undefined;
            resourceInputs["contactParameters"] = state ? state.contactParameters : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["eventPattern"] = state ? state.eventPattern : undefined;
            resourceInputs["fcParameters"] = state ? state.fcParameters : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["mnsParameters"] = state ? state.mnsParameters : undefined;
            resourceInputs["openApiParameters"] = state ? state.openApiParameters : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["silenceTime"] = state ? state.silenceTime : undefined;
            resourceInputs["slsParameters"] = state ? state.slsParameters : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["webhookParameters"] = state ? state.webhookParameters : undefined;
        } else {
            const args = argsOrState as CmsEventRuleArgs | undefined;
            if ((!args || args.eventPattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventPattern'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["contactParameters"] = args ? args.contactParameters : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["eventPattern"] = args ? args.eventPattern : undefined;
            resourceInputs["fcParameters"] = args ? args.fcParameters : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["mnsParameters"] = args ? args.mnsParameters : undefined;
            resourceInputs["openApiParameters"] = args ? args.openApiParameters : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["silenceTime"] = args ? args.silenceTime : undefined;
            resourceInputs["slsParameters"] = args ? args.slsParameters : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["webhookParameters"] = args ? args.webhookParameters : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CmsEventRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CmsEventRule resources.
 */
export interface CmsEventRuleState {
    contactParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleContactParameter>[]>;
    description?: pulumi.Input<string>;
    eventPattern?: pulumi.Input<inputs.CmsEventRuleEventPattern>;
    fcParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleFcParameter>[]>;
    groupId?: pulumi.Input<string>;
    mnsParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleMnsParameter>[]>;
    openApiParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleOpenApiParameter>[]>;
    ruleName?: pulumi.Input<string>;
    silenceTime?: pulumi.Input<number>;
    slsParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleSlsParameter>[]>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CmsEventRuleTimeouts>;
    webhookParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleWebhookParameter>[]>;
}

/**
 * The set of arguments for constructing a CmsEventRule resource.
 */
export interface CmsEventRuleArgs {
    contactParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleContactParameter>[]>;
    description?: pulumi.Input<string>;
    eventPattern: pulumi.Input<inputs.CmsEventRuleEventPattern>;
    fcParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleFcParameter>[]>;
    groupId?: pulumi.Input<string>;
    mnsParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleMnsParameter>[]>;
    openApiParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleOpenApiParameter>[]>;
    ruleName: pulumi.Input<string>;
    silenceTime?: pulumi.Input<number>;
    slsParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleSlsParameter>[]>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CmsEventRuleTimeouts>;
    webhookParameters?: pulumi.Input<pulumi.Input<inputs.CmsEventRuleWebhookParameter>[]>;
}
