// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EcsLaunchTemplate extends pulumi.CustomResource {
    /**
     * Get an existing EcsLaunchTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsLaunchTemplateState, opts?: pulumi.CustomResourceOptions): EcsLaunchTemplate {
        return new EcsLaunchTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ecsLaunchTemplate:EcsLaunchTemplate';

    /**
     * Returns true if the given object is an instance of EcsLaunchTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsLaunchTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsLaunchTemplate.__pulumiType;
    }

    public readonly autoReleaseTime!: pulumi.Output<string | undefined>;
    public readonly autoRenew!: pulumi.Output<boolean>;
    public readonly autoRenewPeriod!: pulumi.Output<number>;
    public readonly dataDisks!: pulumi.Output<outputs.EcsLaunchTemplateDataDisk[] | undefined>;
    public readonly deploymentSetId!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enableVmOsConfig!: pulumi.Output<boolean | undefined>;
    public readonly hostName!: pulumi.Output<string | undefined>;
    public readonly imageId!: pulumi.Output<string | undefined>;
    public readonly imageOwnerAlias!: pulumi.Output<string | undefined>;
    public readonly instanceChargeType!: pulumi.Output<string | undefined>;
    public readonly instanceName!: pulumi.Output<string | undefined>;
    public readonly instanceType!: pulumi.Output<string | undefined>;
    public readonly internetChargeType!: pulumi.Output<string | undefined>;
    public readonly internetMaxBandwidthIn!: pulumi.Output<number>;
    public readonly internetMaxBandwidthOut!: pulumi.Output<number | undefined>;
    public readonly ioOptimized!: pulumi.Output<string | undefined>;
    public readonly keyPairName!: pulumi.Output<string | undefined>;
    public readonly launchTemplateName!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly name!: pulumi.Output<string>;
    public readonly networkInterfaces!: pulumi.Output<outputs.EcsLaunchTemplateNetworkInterfaces | undefined>;
    public readonly networkType!: pulumi.Output<string | undefined>;
    public readonly passwordInherit!: pulumi.Output<boolean | undefined>;
    public readonly period!: pulumi.Output<number>;
    public readonly periodUnit!: pulumi.Output<string>;
    public readonly privateIpAddress!: pulumi.Output<string | undefined>;
    public readonly ramRoleName!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    public readonly securityEnhancementStrategy!: pulumi.Output<string | undefined>;
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    public readonly spotDuration!: pulumi.Output<string | undefined>;
    public readonly spotPriceLimit!: pulumi.Output<number | undefined>;
    public readonly spotStrategy!: pulumi.Output<string | undefined>;
    public readonly systemDisk!: pulumi.Output<outputs.EcsLaunchTemplateSystemDisk | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly systemDiskCategory!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly systemDiskDescription!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly systemDiskName!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly systemDiskSize!: pulumi.Output<number>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly templateResourceGroupId!: pulumi.Output<string | undefined>;
    public readonly templateTags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly userData!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly userdata!: pulumi.Output<string>;
    public readonly versionDescription!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string | undefined>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a EcsLaunchTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EcsLaunchTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsLaunchTemplateArgs | EcsLaunchTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsLaunchTemplateState | undefined;
            resourceInputs["autoReleaseTime"] = state ? state.autoReleaseTime : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["autoRenewPeriod"] = state ? state.autoRenewPeriod : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["deploymentSetId"] = state ? state.deploymentSetId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableVmOsConfig"] = state ? state.enableVmOsConfig : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["imageOwnerAlias"] = state ? state.imageOwnerAlias : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthIn"] = state ? state.internetMaxBandwidthIn : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["ioOptimized"] = state ? state.ioOptimized : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
            resourceInputs["launchTemplateName"] = state ? state.launchTemplateName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["passwordInherit"] = state ? state.passwordInherit : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["privateIpAddress"] = state ? state.privateIpAddress : undefined;
            resourceInputs["ramRoleName"] = state ? state.ramRoleName : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["securityEnhancementStrategy"] = state ? state.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["spotDuration"] = state ? state.spotDuration : undefined;
            resourceInputs["spotPriceLimit"] = state ? state.spotPriceLimit : undefined;
            resourceInputs["spotStrategy"] = state ? state.spotStrategy : undefined;
            resourceInputs["systemDisk"] = state ? state.systemDisk : undefined;
            resourceInputs["systemDiskCategory"] = state ? state.systemDiskCategory : undefined;
            resourceInputs["systemDiskDescription"] = state ? state.systemDiskDescription : undefined;
            resourceInputs["systemDiskName"] = state ? state.systemDiskName : undefined;
            resourceInputs["systemDiskSize"] = state ? state.systemDiskSize : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateResourceGroupId"] = state ? state.templateResourceGroupId : undefined;
            resourceInputs["templateTags"] = state ? state.templateTags : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["userdata"] = state ? state.userdata : undefined;
            resourceInputs["versionDescription"] = state ? state.versionDescription : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as EcsLaunchTemplateArgs | undefined;
            resourceInputs["autoReleaseTime"] = args ? args.autoReleaseTime : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["autoRenewPeriod"] = args ? args.autoRenewPeriod : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["deploymentSetId"] = args ? args.deploymentSetId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableVmOsConfig"] = args ? args.enableVmOsConfig : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["imageOwnerAlias"] = args ? args.imageOwnerAlias : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthIn"] = args ? args.internetMaxBandwidthIn : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["ioOptimized"] = args ? args.ioOptimized : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
            resourceInputs["launchTemplateName"] = args ? args.launchTemplateName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["passwordInherit"] = args ? args.passwordInherit : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["privateIpAddress"] = args ? args.privateIpAddress : undefined;
            resourceInputs["ramRoleName"] = args ? args.ramRoleName : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["securityEnhancementStrategy"] = args ? args.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["spotDuration"] = args ? args.spotDuration : undefined;
            resourceInputs["spotPriceLimit"] = args ? args.spotPriceLimit : undefined;
            resourceInputs["spotStrategy"] = args ? args.spotStrategy : undefined;
            resourceInputs["systemDisk"] = args ? args.systemDisk : undefined;
            resourceInputs["systemDiskCategory"] = args ? args.systemDiskCategory : undefined;
            resourceInputs["systemDiskDescription"] = args ? args.systemDiskDescription : undefined;
            resourceInputs["systemDiskName"] = args ? args.systemDiskName : undefined;
            resourceInputs["systemDiskSize"] = args ? args.systemDiskSize : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateResourceGroupId"] = args ? args.templateResourceGroupId : undefined;
            resourceInputs["templateTags"] = args ? args.templateTags : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["userdata"] = args ? args.userdata : undefined;
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsLaunchTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EcsLaunchTemplate resources.
 */
export interface EcsLaunchTemplateState {
    autoReleaseTime?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<boolean>;
    autoRenewPeriod?: pulumi.Input<number>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.EcsLaunchTemplateDataDisk>[]>;
    deploymentSetId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableVmOsConfig?: pulumi.Input<boolean>;
    hostName?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    imageOwnerAlias?: pulumi.Input<string>;
    instanceChargeType?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    internetChargeType?: pulumi.Input<string>;
    internetMaxBandwidthIn?: pulumi.Input<number>;
    internetMaxBandwidthOut?: pulumi.Input<number>;
    ioOptimized?: pulumi.Input<string>;
    keyPairName?: pulumi.Input<string>;
    launchTemplateName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<inputs.EcsLaunchTemplateNetworkInterfaces>;
    networkType?: pulumi.Input<string>;
    passwordInherit?: pulumi.Input<boolean>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    privateIpAddress?: pulumi.Input<string>;
    ramRoleName?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    securityEnhancementStrategy?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    spotDuration?: pulumi.Input<string>;
    spotPriceLimit?: pulumi.Input<number>;
    spotStrategy?: pulumi.Input<string>;
    systemDisk?: pulumi.Input<inputs.EcsLaunchTemplateSystemDisk>;
    /**
     * @deprecated Deprecated
     */
    systemDiskCategory?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    systemDiskDescription?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    systemDiskName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    systemDiskSize?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateResourceGroupId?: pulumi.Input<string>;
    templateTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    userData?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    userdata?: pulumi.Input<string>;
    versionDescription?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EcsLaunchTemplate resource.
 */
export interface EcsLaunchTemplateArgs {
    autoReleaseTime?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<boolean>;
    autoRenewPeriod?: pulumi.Input<number>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.EcsLaunchTemplateDataDisk>[]>;
    deploymentSetId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableVmOsConfig?: pulumi.Input<boolean>;
    hostName?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    imageOwnerAlias?: pulumi.Input<string>;
    instanceChargeType?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    internetChargeType?: pulumi.Input<string>;
    internetMaxBandwidthIn?: pulumi.Input<number>;
    internetMaxBandwidthOut?: pulumi.Input<number>;
    ioOptimized?: pulumi.Input<string>;
    keyPairName?: pulumi.Input<string>;
    launchTemplateName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<inputs.EcsLaunchTemplateNetworkInterfaces>;
    networkType?: pulumi.Input<string>;
    passwordInherit?: pulumi.Input<boolean>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    privateIpAddress?: pulumi.Input<string>;
    ramRoleName?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    securityEnhancementStrategy?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    spotDuration?: pulumi.Input<string>;
    spotPriceLimit?: pulumi.Input<number>;
    spotStrategy?: pulumi.Input<string>;
    systemDisk?: pulumi.Input<inputs.EcsLaunchTemplateSystemDisk>;
    /**
     * @deprecated Deprecated
     */
    systemDiskCategory?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    systemDiskDescription?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    systemDiskName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    systemDiskSize?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateResourceGroupId?: pulumi.Input<string>;
    templateTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    userData?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    userdata?: pulumi.Input<string>;
    versionDescription?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
