// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getForwardEntries(args: GetForwardEntriesArgs, opts?: pulumi.InvokeOptions): Promise<GetForwardEntriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getForwardEntries:getForwardEntries", {
        "externalIp": args.externalIp,
        "externalPort": args.externalPort,
        "forwardEntryName": args.forwardEntryName,
        "forwardTableId": args.forwardTableId,
        "id": args.id,
        "ids": args.ids,
        "internalIp": args.internalIp,
        "internalPort": args.internalPort,
        "ipProtocol": args.ipProtocol,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getForwardEntries.
 */
export interface GetForwardEntriesArgs {
    externalIp?: string;
    externalPort?: string;
    forwardEntryName?: string;
    forwardTableId: string;
    id?: string;
    ids?: string[];
    internalIp?: string;
    internalPort?: string;
    ipProtocol?: string;
    nameRegex?: string;
    outputFile?: string;
    status?: string;
}

/**
 * A collection of values returned by getForwardEntries.
 */
export interface GetForwardEntriesResult {
    readonly entries: outputs.GetForwardEntriesEntry[];
    readonly externalIp?: string;
    readonly externalPort?: string;
    readonly forwardEntryName?: string;
    readonly forwardTableId: string;
    readonly id: string;
    readonly ids: string[];
    readonly internalIp?: string;
    readonly internalPort?: string;
    readonly ipProtocol?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly status?: string;
}
export function getForwardEntriesOutput(args: GetForwardEntriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetForwardEntriesResult> {
    return pulumi.output(args).apply((a: any) => getForwardEntries(a, opts))
}

/**
 * A collection of arguments for invoking getForwardEntries.
 */
export interface GetForwardEntriesOutputArgs {
    externalIp?: pulumi.Input<string>;
    externalPort?: pulumi.Input<string>;
    forwardEntryName?: pulumi.Input<string>;
    forwardTableId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    internalIp?: pulumi.Input<string>;
    internalPort?: pulumi.Input<string>;
    ipProtocol?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
