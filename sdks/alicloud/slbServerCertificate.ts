// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SlbServerCertificate extends pulumi.CustomResource {
    /**
     * Get an existing SlbServerCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbServerCertificateState, opts?: pulumi.CustomResourceOptions): SlbServerCertificate {
        return new SlbServerCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/slbServerCertificate:SlbServerCertificate';

    /**
     * Returns true if the given object is an instance of SlbServerCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbServerCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbServerCertificate.__pulumiType;
    }

    /**
     * @deprecated Deprecated
     */
    public readonly alicloudCertifacteId!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly alicloudCertifacteName!: pulumi.Output<string | undefined>;
    public readonly alicloudCertificateId!: pulumi.Output<string | undefined>;
    public readonly alicloudCertificateName!: pulumi.Output<string | undefined>;
    public readonly alicloudCertificateRegionId!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly privateKey!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly serverCertificate!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a SlbServerCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbServerCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbServerCertificateArgs | SlbServerCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbServerCertificateState | undefined;
            resourceInputs["alicloudCertifacteId"] = state ? state.alicloudCertifacteId : undefined;
            resourceInputs["alicloudCertifacteName"] = state ? state.alicloudCertifacteName : undefined;
            resourceInputs["alicloudCertificateId"] = state ? state.alicloudCertificateId : undefined;
            resourceInputs["alicloudCertificateName"] = state ? state.alicloudCertificateName : undefined;
            resourceInputs["alicloudCertificateRegionId"] = state ? state.alicloudCertificateRegionId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["serverCertificate"] = state ? state.serverCertificate : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SlbServerCertificateArgs | undefined;
            resourceInputs["alicloudCertifacteId"] = args ? args.alicloudCertifacteId : undefined;
            resourceInputs["alicloudCertifacteName"] = args ? args.alicloudCertifacteName : undefined;
            resourceInputs["alicloudCertificateId"] = args ? args.alicloudCertificateId : undefined;
            resourceInputs["alicloudCertificateName"] = args ? args.alicloudCertificateName : undefined;
            resourceInputs["alicloudCertificateRegionId"] = args ? args.alicloudCertificateRegionId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["serverCertificate"] = args ? args.serverCertificate : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbServerCertificate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbServerCertificate resources.
 */
export interface SlbServerCertificateState {
    /**
     * @deprecated Deprecated
     */
    alicloudCertifacteId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    alicloudCertifacteName?: pulumi.Input<string>;
    alicloudCertificateId?: pulumi.Input<string>;
    alicloudCertificateName?: pulumi.Input<string>;
    alicloudCertificateRegionId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    serverCertificate?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a SlbServerCertificate resource.
 */
export interface SlbServerCertificateArgs {
    /**
     * @deprecated Deprecated
     */
    alicloudCertifacteId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    alicloudCertifacteName?: pulumi.Input<string>;
    alicloudCertificateId?: pulumi.Input<string>;
    alicloudCertificateName?: pulumi.Input<string>;
    alicloudCertificateRegionId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    serverCertificate?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
