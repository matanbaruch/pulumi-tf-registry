// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EnsLoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing EnsLoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnsLoadBalancerState, opts?: pulumi.CustomResourceOptions): EnsLoadBalancer {
        return new EnsLoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ensLoadBalancer:EnsLoadBalancer';

    /**
     * Returns true if the given object is an instance of EnsLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnsLoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnsLoadBalancer.__pulumiType;
    }

    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly ensRegionId!: pulumi.Output<string>;
    public readonly loadBalancerName!: pulumi.Output<string | undefined>;
    public readonly loadBalancerSpec!: pulumi.Output<string>;
    public readonly networkId!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.EnsLoadBalancerTimeouts | undefined>;
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a EnsLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnsLoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnsLoadBalancerArgs | EnsLoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnsLoadBalancerState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["ensRegionId"] = state ? state.ensRegionId : undefined;
            resourceInputs["loadBalancerName"] = state ? state.loadBalancerName : undefined;
            resourceInputs["loadBalancerSpec"] = state ? state.loadBalancerSpec : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as EnsLoadBalancerArgs | undefined;
            if ((!args || args.ensRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ensRegionId'");
            }
            if ((!args || args.loadBalancerSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerSpec'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["ensRegionId"] = args ? args.ensRegionId : undefined;
            resourceInputs["loadBalancerName"] = args ? args.loadBalancerName : undefined;
            resourceInputs["loadBalancerSpec"] = args ? args.loadBalancerSpec : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnsLoadBalancer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EnsLoadBalancer resources.
 */
export interface EnsLoadBalancerState {
    createTime?: pulumi.Input<string>;
    ensRegionId?: pulumi.Input<string>;
    loadBalancerName?: pulumi.Input<string>;
    loadBalancerSpec?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EnsLoadBalancerTimeouts>;
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EnsLoadBalancer resource.
 */
export interface EnsLoadBalancerArgs {
    ensRegionId: pulumi.Input<string>;
    loadBalancerName?: pulumi.Input<string>;
    loadBalancerSpec: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    paymentType: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EnsLoadBalancerTimeouts>;
    vswitchId: pulumi.Input<string>;
}
