// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getThreatDetectionLogShipper(args?: GetThreatDetectionLogShipperArgs, opts?: pulumi.InvokeOptions): Promise<GetThreatDetectionLogShipperResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getThreatDetectionLogShipper:getThreatDetectionLogShipper", {
        "enable": args.enable,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getThreatDetectionLogShipper.
 */
export interface GetThreatDetectionLogShipperArgs {
    enable?: string;
    id?: string;
}

/**
 * A collection of values returned by getThreatDetectionLogShipper.
 */
export interface GetThreatDetectionLogShipperResult {
    readonly authStatus: string;
    readonly buyStatus: string;
    readonly enable?: string;
    readonly id: string;
    readonly openStatus: string;
    readonly slsProjectStatus: string;
    readonly slsServiceStatus: string;
    readonly status: string;
}
export function getThreatDetectionLogShipperOutput(args?: GetThreatDetectionLogShipperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetThreatDetectionLogShipperResult> {
    return pulumi.output(args).apply((a: any) => getThreatDetectionLogShipper(a, opts))
}

/**
 * A collection of arguments for invoking getThreatDetectionLogShipper.
 */
export interface GetThreatDetectionLogShipperOutputArgs {
    enable?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
