// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AdbDbCluster extends pulumi.CustomResource {
    /**
     * Get an existing AdbDbCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdbDbClusterState, opts?: pulumi.CustomResourceOptions): AdbDbCluster {
        return new AdbDbCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/adbDbCluster:AdbDbCluster';

    /**
     * Returns true if the given object is an instance of AdbDbCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdbDbCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdbDbCluster.__pulumiType;
    }

    public readonly autoRenewPeriod!: pulumi.Output<number>;
    public readonly computeResource!: pulumi.Output<string | undefined>;
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    public readonly dbClusterCategory!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly dbClusterClass!: pulumi.Output<string | undefined>;
    public readonly dbClusterVersion!: pulumi.Output<string | undefined>;
    public readonly dbNodeClass!: pulumi.Output<string>;
    public readonly dbNodeCount!: pulumi.Output<number>;
    public readonly dbNodeStorage!: pulumi.Output<number>;
    public readonly description!: pulumi.Output<string>;
    public readonly diskEncryption!: pulumi.Output<boolean | undefined>;
    public readonly diskPerformanceLevel!: pulumi.Output<string>;
    public readonly elasticIoResource!: pulumi.Output<number>;
    public readonly elasticIoResourceSize!: pulumi.Output<string>;
    public readonly kmsId!: pulumi.Output<string | undefined>;
    public readonly maintainTime!: pulumi.Output<string>;
    public readonly mode!: pulumi.Output<string>;
    public readonly modifyType!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly payType!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<number | undefined>;
    public /*out*/ readonly port!: pulumi.Output<string>;
    public readonly renewalStatus!: pulumi.Output<string>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly securityIps!: pulumi.Output<string[]>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AdbDbClusterTimeouts | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string | undefined>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a AdbDbCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdbDbClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdbDbClusterArgs | AdbDbClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdbDbClusterState | undefined;
            resourceInputs["autoRenewPeriod"] = state ? state.autoRenewPeriod : undefined;
            resourceInputs["computeResource"] = state ? state.computeResource : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["dbClusterCategory"] = state ? state.dbClusterCategory : undefined;
            resourceInputs["dbClusterClass"] = state ? state.dbClusterClass : undefined;
            resourceInputs["dbClusterVersion"] = state ? state.dbClusterVersion : undefined;
            resourceInputs["dbNodeClass"] = state ? state.dbNodeClass : undefined;
            resourceInputs["dbNodeCount"] = state ? state.dbNodeCount : undefined;
            resourceInputs["dbNodeStorage"] = state ? state.dbNodeStorage : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diskEncryption"] = state ? state.diskEncryption : undefined;
            resourceInputs["diskPerformanceLevel"] = state ? state.diskPerformanceLevel : undefined;
            resourceInputs["elasticIoResource"] = state ? state.elasticIoResource : undefined;
            resourceInputs["elasticIoResourceSize"] = state ? state.elasticIoResourceSize : undefined;
            resourceInputs["kmsId"] = state ? state.kmsId : undefined;
            resourceInputs["maintainTime"] = state ? state.maintainTime : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["modifyType"] = state ? state.modifyType : undefined;
            resourceInputs["payType"] = state ? state.payType : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["renewalStatus"] = state ? state.renewalStatus : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["securityIps"] = state ? state.securityIps : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as AdbDbClusterArgs | undefined;
            if ((!args || args.dbClusterCategory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbClusterCategory'");
            }
            if ((!args || args.mode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mode'");
            }
            resourceInputs["autoRenewPeriod"] = args ? args.autoRenewPeriod : undefined;
            resourceInputs["computeResource"] = args ? args.computeResource : undefined;
            resourceInputs["dbClusterCategory"] = args ? args.dbClusterCategory : undefined;
            resourceInputs["dbClusterClass"] = args ? args.dbClusterClass : undefined;
            resourceInputs["dbClusterVersion"] = args ? args.dbClusterVersion : undefined;
            resourceInputs["dbNodeClass"] = args ? args.dbNodeClass : undefined;
            resourceInputs["dbNodeCount"] = args ? args.dbNodeCount : undefined;
            resourceInputs["dbNodeStorage"] = args ? args.dbNodeStorage : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diskEncryption"] = args ? args.diskEncryption : undefined;
            resourceInputs["diskPerformanceLevel"] = args ? args.diskPerformanceLevel : undefined;
            resourceInputs["elasticIoResource"] = args ? args.elasticIoResource : undefined;
            resourceInputs["elasticIoResourceSize"] = args ? args.elasticIoResourceSize : undefined;
            resourceInputs["kmsId"] = args ? args.kmsId : undefined;
            resourceInputs["maintainTime"] = args ? args.maintainTime : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["modifyType"] = args ? args.modifyType : undefined;
            resourceInputs["payType"] = args ? args.payType : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["renewalStatus"] = args ? args.renewalStatus : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["securityIps"] = args ? args.securityIps : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdbDbCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AdbDbCluster resources.
 */
export interface AdbDbClusterState {
    autoRenewPeriod?: pulumi.Input<number>;
    computeResource?: pulumi.Input<string>;
    connectionString?: pulumi.Input<string>;
    dbClusterCategory?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    dbClusterClass?: pulumi.Input<string>;
    dbClusterVersion?: pulumi.Input<string>;
    dbNodeClass?: pulumi.Input<string>;
    dbNodeCount?: pulumi.Input<number>;
    dbNodeStorage?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    diskEncryption?: pulumi.Input<boolean>;
    diskPerformanceLevel?: pulumi.Input<string>;
    elasticIoResource?: pulumi.Input<number>;
    elasticIoResourceSize?: pulumi.Input<string>;
    kmsId?: pulumi.Input<string>;
    maintainTime?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    modifyType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    payType?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    port?: pulumi.Input<string>;
    renewalStatus?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    securityIps?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AdbDbClusterTimeouts>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AdbDbCluster resource.
 */
export interface AdbDbClusterArgs {
    autoRenewPeriod?: pulumi.Input<number>;
    computeResource?: pulumi.Input<string>;
    dbClusterCategory: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    dbClusterClass?: pulumi.Input<string>;
    dbClusterVersion?: pulumi.Input<string>;
    dbNodeClass?: pulumi.Input<string>;
    dbNodeCount?: pulumi.Input<number>;
    dbNodeStorage?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    diskEncryption?: pulumi.Input<boolean>;
    diskPerformanceLevel?: pulumi.Input<string>;
    elasticIoResource?: pulumi.Input<number>;
    elasticIoResourceSize?: pulumi.Input<string>;
    kmsId?: pulumi.Input<string>;
    maintainTime?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
    modifyType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    payType?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    renewalStatus?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    securityIps?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AdbDbClusterTimeouts>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
