// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SaeLoadBalancerInternet extends pulumi.CustomResource {
    /**
     * Get an existing SaeLoadBalancerInternet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SaeLoadBalancerInternetState, opts?: pulumi.CustomResourceOptions): SaeLoadBalancerInternet {
        return new SaeLoadBalancerInternet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/saeLoadBalancerInternet:SaeLoadBalancerInternet';

    /**
     * Returns true if the given object is an instance of SaeLoadBalancerInternet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SaeLoadBalancerInternet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SaeLoadBalancerInternet.__pulumiType;
    }

    public readonly appId!: pulumi.Output<string>;
    public /*out*/ readonly internetIp!: pulumi.Output<string>;
    public readonly internetSlbId!: pulumi.Output<string | undefined>;
    public readonly internets!: pulumi.Output<outputs.SaeLoadBalancerInternetInternet[]>;

    /**
     * Create a SaeLoadBalancerInternet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SaeLoadBalancerInternetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SaeLoadBalancerInternetArgs | SaeLoadBalancerInternetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SaeLoadBalancerInternetState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["internetIp"] = state ? state.internetIp : undefined;
            resourceInputs["internetSlbId"] = state ? state.internetSlbId : undefined;
            resourceInputs["internets"] = state ? state.internets : undefined;
        } else {
            const args = argsOrState as SaeLoadBalancerInternetArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.internets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internets'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["internetSlbId"] = args ? args.internetSlbId : undefined;
            resourceInputs["internets"] = args ? args.internets : undefined;
            resourceInputs["internetIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SaeLoadBalancerInternet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SaeLoadBalancerInternet resources.
 */
export interface SaeLoadBalancerInternetState {
    appId?: pulumi.Input<string>;
    internetIp?: pulumi.Input<string>;
    internetSlbId?: pulumi.Input<string>;
    internets?: pulumi.Input<pulumi.Input<inputs.SaeLoadBalancerInternetInternet>[]>;
}

/**
 * The set of arguments for constructing a SaeLoadBalancerInternet resource.
 */
export interface SaeLoadBalancerInternetArgs {
    appId: pulumi.Input<string>;
    internetSlbId?: pulumi.Input<string>;
    internets: pulumi.Input<pulumi.Input<inputs.SaeLoadBalancerInternetInternet>[]>;
}
