// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcIpv6InternetBandwidth extends pulumi.CustomResource {
    /**
     * Get an existing VpcIpv6InternetBandwidth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcIpv6InternetBandwidthState, opts?: pulumi.CustomResourceOptions): VpcIpv6InternetBandwidth {
        return new VpcIpv6InternetBandwidth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/vpcIpv6InternetBandwidth:VpcIpv6InternetBandwidth';

    /**
     * Returns true if the given object is an instance of VpcIpv6InternetBandwidth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcIpv6InternetBandwidth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcIpv6InternetBandwidth.__pulumiType;
    }

    public readonly bandwidth!: pulumi.Output<number>;
    public readonly internetChargeType!: pulumi.Output<string>;
    public readonly ipv6AddressId!: pulumi.Output<string>;
    public readonly ipv6GatewayId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.VpcIpv6InternetBandwidthTimeouts | undefined>;

    /**
     * Create a VpcIpv6InternetBandwidth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcIpv6InternetBandwidthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcIpv6InternetBandwidthArgs | VpcIpv6InternetBandwidthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcIpv6InternetBandwidthState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["ipv6AddressId"] = state ? state.ipv6AddressId : undefined;
            resourceInputs["ipv6GatewayId"] = state ? state.ipv6GatewayId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as VpcIpv6InternetBandwidthArgs | undefined;
            if ((!args || args.bandwidth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            if ((!args || args.ipv6AddressId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv6AddressId'");
            }
            if ((!args || args.ipv6GatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv6GatewayId'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["ipv6AddressId"] = args ? args.ipv6AddressId : undefined;
            resourceInputs["ipv6GatewayId"] = args ? args.ipv6GatewayId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcIpv6InternetBandwidth.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpcIpv6InternetBandwidth resources.
 */
export interface VpcIpv6InternetBandwidthState {
    bandwidth?: pulumi.Input<number>;
    internetChargeType?: pulumi.Input<string>;
    ipv6AddressId?: pulumi.Input<string>;
    ipv6GatewayId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VpcIpv6InternetBandwidthTimeouts>;
}

/**
 * The set of arguments for constructing a VpcIpv6InternetBandwidth resource.
 */
export interface VpcIpv6InternetBandwidthArgs {
    bandwidth: pulumi.Input<number>;
    internetChargeType?: pulumi.Input<string>;
    ipv6AddressId: pulumi.Input<string>;
    ipv6GatewayId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VpcIpv6InternetBandwidthTimeouts>;
}
