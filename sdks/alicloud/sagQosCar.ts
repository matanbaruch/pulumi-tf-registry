// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SagQosCar extends pulumi.CustomResource {
    /**
     * Get an existing SagQosCar resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagQosCarState, opts?: pulumi.CustomResourceOptions): SagQosCar {
        return new SagQosCar(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/sagQosCar:SagQosCar';

    /**
     * Returns true if the given object is an instance of SagQosCar.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagQosCar {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagQosCar.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly limitType!: pulumi.Output<string>;
    public readonly maxBandwidthAbs!: pulumi.Output<number | undefined>;
    public readonly maxBandwidthPercent!: pulumi.Output<number | undefined>;
    public readonly minBandwidthAbs!: pulumi.Output<number | undefined>;
    public readonly minBandwidthPercent!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly percentSourceType!: pulumi.Output<string | undefined>;
    public readonly priority!: pulumi.Output<number>;
    public readonly qosId!: pulumi.Output<string>;

    /**
     * Create a SagQosCar resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagQosCarArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagQosCarArgs | SagQosCarState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagQosCarState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["limitType"] = state ? state.limitType : undefined;
            resourceInputs["maxBandwidthAbs"] = state ? state.maxBandwidthAbs : undefined;
            resourceInputs["maxBandwidthPercent"] = state ? state.maxBandwidthPercent : undefined;
            resourceInputs["minBandwidthAbs"] = state ? state.minBandwidthAbs : undefined;
            resourceInputs["minBandwidthPercent"] = state ? state.minBandwidthPercent : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["percentSourceType"] = state ? state.percentSourceType : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["qosId"] = state ? state.qosId : undefined;
        } else {
            const args = argsOrState as SagQosCarArgs | undefined;
            if ((!args || args.limitType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'limitType'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.qosId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'qosId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["limitType"] = args ? args.limitType : undefined;
            resourceInputs["maxBandwidthAbs"] = args ? args.maxBandwidthAbs : undefined;
            resourceInputs["maxBandwidthPercent"] = args ? args.maxBandwidthPercent : undefined;
            resourceInputs["minBandwidthAbs"] = args ? args.minBandwidthAbs : undefined;
            resourceInputs["minBandwidthPercent"] = args ? args.minBandwidthPercent : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["percentSourceType"] = args ? args.percentSourceType : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["qosId"] = args ? args.qosId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagQosCar.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagQosCar resources.
 */
export interface SagQosCarState {
    description?: pulumi.Input<string>;
    limitType?: pulumi.Input<string>;
    maxBandwidthAbs?: pulumi.Input<number>;
    maxBandwidthPercent?: pulumi.Input<number>;
    minBandwidthAbs?: pulumi.Input<number>;
    minBandwidthPercent?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    percentSourceType?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    qosId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SagQosCar resource.
 */
export interface SagQosCarArgs {
    description?: pulumi.Input<string>;
    limitType: pulumi.Input<string>;
    maxBandwidthAbs?: pulumi.Input<number>;
    maxBandwidthPercent?: pulumi.Input<number>;
    minBandwidthAbs?: pulumi.Input<number>;
    minBandwidthPercent?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    percentSourceType?: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    qosId: pulumi.Input<string>;
}
