// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SaeLoadBalancerIntranet extends pulumi.CustomResource {
    /**
     * Get an existing SaeLoadBalancerIntranet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SaeLoadBalancerIntranetState, opts?: pulumi.CustomResourceOptions): SaeLoadBalancerIntranet {
        return new SaeLoadBalancerIntranet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/saeLoadBalancerIntranet:SaeLoadBalancerIntranet';

    /**
     * Returns true if the given object is an instance of SaeLoadBalancerIntranet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SaeLoadBalancerIntranet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SaeLoadBalancerIntranet.__pulumiType;
    }

    public readonly appId!: pulumi.Output<string>;
    public /*out*/ readonly intranetIp!: pulumi.Output<string>;
    public readonly intranetSlbId!: pulumi.Output<string | undefined>;
    public readonly intranets!: pulumi.Output<outputs.SaeLoadBalancerIntranetIntranet[]>;

    /**
     * Create a SaeLoadBalancerIntranet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SaeLoadBalancerIntranetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SaeLoadBalancerIntranetArgs | SaeLoadBalancerIntranetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SaeLoadBalancerIntranetState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["intranetIp"] = state ? state.intranetIp : undefined;
            resourceInputs["intranetSlbId"] = state ? state.intranetSlbId : undefined;
            resourceInputs["intranets"] = state ? state.intranets : undefined;
        } else {
            const args = argsOrState as SaeLoadBalancerIntranetArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.intranets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'intranets'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["intranetSlbId"] = args ? args.intranetSlbId : undefined;
            resourceInputs["intranets"] = args ? args.intranets : undefined;
            resourceInputs["intranetIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SaeLoadBalancerIntranet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SaeLoadBalancerIntranet resources.
 */
export interface SaeLoadBalancerIntranetState {
    appId?: pulumi.Input<string>;
    intranetIp?: pulumi.Input<string>;
    intranetSlbId?: pulumi.Input<string>;
    intranets?: pulumi.Input<pulumi.Input<inputs.SaeLoadBalancerIntranetIntranet>[]>;
}

/**
 * The set of arguments for constructing a SaeLoadBalancerIntranet resource.
 */
export interface SaeLoadBalancerIntranetArgs {
    appId: pulumi.Input<string>;
    intranetSlbId?: pulumi.Input<string>;
    intranets: pulumi.Input<pulumi.Input<inputs.SaeLoadBalancerIntranetIntranet>[]>;
}
