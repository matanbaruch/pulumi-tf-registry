// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArmsPrometheusAlertRules(args: GetArmsPrometheusAlertRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetArmsPrometheusAlertRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getArmsPrometheusAlertRules:getArmsPrometheusAlertRules", {
        "clusterId": args.clusterId,
        "id": args.id,
        "ids": args.ids,
        "matchExpressions": args.matchExpressions,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "status": args.status,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArmsPrometheusAlertRules.
 */
export interface GetArmsPrometheusAlertRulesArgs {
    clusterId: string;
    id?: string;
    ids?: string[];
    matchExpressions?: string;
    nameRegex?: string;
    outputFile?: string;
    status?: number;
    type?: string;
}

/**
 * A collection of values returned by getArmsPrometheusAlertRules.
 */
export interface GetArmsPrometheusAlertRulesResult {
    readonly clusterId: string;
    readonly id: string;
    readonly ids: string[];
    readonly matchExpressions?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly rules: outputs.GetArmsPrometheusAlertRulesRule[];
    readonly status?: number;
    readonly type?: string;
}
export function getArmsPrometheusAlertRulesOutput(args: GetArmsPrometheusAlertRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArmsPrometheusAlertRulesResult> {
    return pulumi.output(args).apply((a: any) => getArmsPrometheusAlertRules(a, opts))
}

/**
 * A collection of arguments for invoking getArmsPrometheusAlertRules.
 */
export interface GetArmsPrometheusAlertRulesOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    matchExpressions?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    status?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}
