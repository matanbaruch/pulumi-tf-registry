// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EssScalingGroup extends pulumi.CustomResource {
    /**
     * Get an existing EssScalingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EssScalingGroupState, opts?: pulumi.CustomResourceOptions): EssScalingGroup {
        return new EssScalingGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/essScalingGroup:EssScalingGroup';

    /**
     * Returns true if the given object is an instance of EssScalingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EssScalingGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EssScalingGroup.__pulumiType;
    }

    public readonly albServerGroups!: pulumi.Output<outputs.EssScalingGroupAlbServerGroup[] | undefined>;
    public readonly allocationStrategy!: pulumi.Output<string>;
    public readonly azBalance!: pulumi.Output<boolean | undefined>;
    public readonly dbInstanceIds!: pulumi.Output<string[] | undefined>;
    public readonly defaultCooldown!: pulumi.Output<number | undefined>;
    public readonly desiredCapacity!: pulumi.Output<number | undefined>;
    public readonly groupDeletionProtection!: pulumi.Output<boolean | undefined>;
    public readonly groupType!: pulumi.Output<string>;
    public readonly healthCheckType!: pulumi.Output<string>;
    public readonly healthCheckTypes!: pulumi.Output<string[] | undefined>;
    public readonly instanceId!: pulumi.Output<string | undefined>;
    public readonly launchTemplateId!: pulumi.Output<string | undefined>;
    public readonly launchTemplateOverrides!: pulumi.Output<outputs.EssScalingGroupLaunchTemplateOverride[] | undefined>;
    public readonly launchTemplateVersion!: pulumi.Output<string | undefined>;
    public readonly loadbalancerIds!: pulumi.Output<string[] | undefined>;
    public readonly maxInstanceLifetime!: pulumi.Output<number | undefined>;
    public readonly maxSize!: pulumi.Output<number>;
    public readonly minSize!: pulumi.Output<number>;
    public readonly multiAzPolicy!: pulumi.Output<string | undefined>;
    public readonly onDemandBaseCapacity!: pulumi.Output<number>;
    public readonly onDemandPercentageAboveBaseCapacity!: pulumi.Output<number>;
    public readonly protectedInstances!: pulumi.Output<string[] | undefined>;
    public readonly removalPolicies!: pulumi.Output<string[]>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly scalingGroupName!: pulumi.Output<string | undefined>;
    public readonly scalingPolicy!: pulumi.Output<string>;
    public readonly spotAllocationStrategy!: pulumi.Output<string>;
    public readonly spotInstancePools!: pulumi.Output<number>;
    public readonly spotInstanceRemedy!: pulumi.Output<boolean>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly vswitchId!: pulumi.Output<string | undefined>;
    public readonly vswitchIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a EssScalingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EssScalingGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EssScalingGroupArgs | EssScalingGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EssScalingGroupState | undefined;
            resourceInputs["albServerGroups"] = state ? state.albServerGroups : undefined;
            resourceInputs["allocationStrategy"] = state ? state.allocationStrategy : undefined;
            resourceInputs["azBalance"] = state ? state.azBalance : undefined;
            resourceInputs["dbInstanceIds"] = state ? state.dbInstanceIds : undefined;
            resourceInputs["defaultCooldown"] = state ? state.defaultCooldown : undefined;
            resourceInputs["desiredCapacity"] = state ? state.desiredCapacity : undefined;
            resourceInputs["groupDeletionProtection"] = state ? state.groupDeletionProtection : undefined;
            resourceInputs["groupType"] = state ? state.groupType : undefined;
            resourceInputs["healthCheckType"] = state ? state.healthCheckType : undefined;
            resourceInputs["healthCheckTypes"] = state ? state.healthCheckTypes : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["launchTemplateId"] = state ? state.launchTemplateId : undefined;
            resourceInputs["launchTemplateOverrides"] = state ? state.launchTemplateOverrides : undefined;
            resourceInputs["launchTemplateVersion"] = state ? state.launchTemplateVersion : undefined;
            resourceInputs["loadbalancerIds"] = state ? state.loadbalancerIds : undefined;
            resourceInputs["maxInstanceLifetime"] = state ? state.maxInstanceLifetime : undefined;
            resourceInputs["maxSize"] = state ? state.maxSize : undefined;
            resourceInputs["minSize"] = state ? state.minSize : undefined;
            resourceInputs["multiAzPolicy"] = state ? state.multiAzPolicy : undefined;
            resourceInputs["onDemandBaseCapacity"] = state ? state.onDemandBaseCapacity : undefined;
            resourceInputs["onDemandPercentageAboveBaseCapacity"] = state ? state.onDemandPercentageAboveBaseCapacity : undefined;
            resourceInputs["protectedInstances"] = state ? state.protectedInstances : undefined;
            resourceInputs["removalPolicies"] = state ? state.removalPolicies : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["scalingGroupName"] = state ? state.scalingGroupName : undefined;
            resourceInputs["scalingPolicy"] = state ? state.scalingPolicy : undefined;
            resourceInputs["spotAllocationStrategy"] = state ? state.spotAllocationStrategy : undefined;
            resourceInputs["spotInstancePools"] = state ? state.spotInstancePools : undefined;
            resourceInputs["spotInstanceRemedy"] = state ? state.spotInstanceRemedy : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["vswitchIds"] = state ? state.vswitchIds : undefined;
        } else {
            const args = argsOrState as EssScalingGroupArgs | undefined;
            if ((!args || args.maxSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxSize'");
            }
            if ((!args || args.minSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minSize'");
            }
            resourceInputs["albServerGroups"] = args ? args.albServerGroups : undefined;
            resourceInputs["allocationStrategy"] = args ? args.allocationStrategy : undefined;
            resourceInputs["azBalance"] = args ? args.azBalance : undefined;
            resourceInputs["dbInstanceIds"] = args ? args.dbInstanceIds : undefined;
            resourceInputs["defaultCooldown"] = args ? args.defaultCooldown : undefined;
            resourceInputs["desiredCapacity"] = args ? args.desiredCapacity : undefined;
            resourceInputs["groupDeletionProtection"] = args ? args.groupDeletionProtection : undefined;
            resourceInputs["groupType"] = args ? args.groupType : undefined;
            resourceInputs["healthCheckType"] = args ? args.healthCheckType : undefined;
            resourceInputs["healthCheckTypes"] = args ? args.healthCheckTypes : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["launchTemplateId"] = args ? args.launchTemplateId : undefined;
            resourceInputs["launchTemplateOverrides"] = args ? args.launchTemplateOverrides : undefined;
            resourceInputs["launchTemplateVersion"] = args ? args.launchTemplateVersion : undefined;
            resourceInputs["loadbalancerIds"] = args ? args.loadbalancerIds : undefined;
            resourceInputs["maxInstanceLifetime"] = args ? args.maxInstanceLifetime : undefined;
            resourceInputs["maxSize"] = args ? args.maxSize : undefined;
            resourceInputs["minSize"] = args ? args.minSize : undefined;
            resourceInputs["multiAzPolicy"] = args ? args.multiAzPolicy : undefined;
            resourceInputs["onDemandBaseCapacity"] = args ? args.onDemandBaseCapacity : undefined;
            resourceInputs["onDemandPercentageAboveBaseCapacity"] = args ? args.onDemandPercentageAboveBaseCapacity : undefined;
            resourceInputs["protectedInstances"] = args ? args.protectedInstances : undefined;
            resourceInputs["removalPolicies"] = args ? args.removalPolicies : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["scalingGroupName"] = args ? args.scalingGroupName : undefined;
            resourceInputs["scalingPolicy"] = args ? args.scalingPolicy : undefined;
            resourceInputs["spotAllocationStrategy"] = args ? args.spotAllocationStrategy : undefined;
            resourceInputs["spotInstancePools"] = args ? args.spotInstancePools : undefined;
            resourceInputs["spotInstanceRemedy"] = args ? args.spotInstanceRemedy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["vswitchIds"] = args ? args.vswitchIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EssScalingGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EssScalingGroup resources.
 */
export interface EssScalingGroupState {
    albServerGroups?: pulumi.Input<pulumi.Input<inputs.EssScalingGroupAlbServerGroup>[]>;
    allocationStrategy?: pulumi.Input<string>;
    azBalance?: pulumi.Input<boolean>;
    dbInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    defaultCooldown?: pulumi.Input<number>;
    desiredCapacity?: pulumi.Input<number>;
    groupDeletionProtection?: pulumi.Input<boolean>;
    groupType?: pulumi.Input<string>;
    healthCheckType?: pulumi.Input<string>;
    healthCheckTypes?: pulumi.Input<pulumi.Input<string>[]>;
    instanceId?: pulumi.Input<string>;
    launchTemplateId?: pulumi.Input<string>;
    launchTemplateOverrides?: pulumi.Input<pulumi.Input<inputs.EssScalingGroupLaunchTemplateOverride>[]>;
    launchTemplateVersion?: pulumi.Input<string>;
    loadbalancerIds?: pulumi.Input<pulumi.Input<string>[]>;
    maxInstanceLifetime?: pulumi.Input<number>;
    maxSize?: pulumi.Input<number>;
    minSize?: pulumi.Input<number>;
    multiAzPolicy?: pulumi.Input<string>;
    onDemandBaseCapacity?: pulumi.Input<number>;
    onDemandPercentageAboveBaseCapacity?: pulumi.Input<number>;
    protectedInstances?: pulumi.Input<pulumi.Input<string>[]>;
    removalPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    resourceGroupId?: pulumi.Input<string>;
    scalingGroupName?: pulumi.Input<string>;
    scalingPolicy?: pulumi.Input<string>;
    spotAllocationStrategy?: pulumi.Input<string>;
    spotInstancePools?: pulumi.Input<number>;
    spotInstanceRemedy?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    vswitchId?: pulumi.Input<string>;
    vswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a EssScalingGroup resource.
 */
export interface EssScalingGroupArgs {
    albServerGroups?: pulumi.Input<pulumi.Input<inputs.EssScalingGroupAlbServerGroup>[]>;
    allocationStrategy?: pulumi.Input<string>;
    azBalance?: pulumi.Input<boolean>;
    dbInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    defaultCooldown?: pulumi.Input<number>;
    desiredCapacity?: pulumi.Input<number>;
    groupDeletionProtection?: pulumi.Input<boolean>;
    groupType?: pulumi.Input<string>;
    healthCheckType?: pulumi.Input<string>;
    healthCheckTypes?: pulumi.Input<pulumi.Input<string>[]>;
    instanceId?: pulumi.Input<string>;
    launchTemplateId?: pulumi.Input<string>;
    launchTemplateOverrides?: pulumi.Input<pulumi.Input<inputs.EssScalingGroupLaunchTemplateOverride>[]>;
    launchTemplateVersion?: pulumi.Input<string>;
    loadbalancerIds?: pulumi.Input<pulumi.Input<string>[]>;
    maxInstanceLifetime?: pulumi.Input<number>;
    maxSize: pulumi.Input<number>;
    minSize: pulumi.Input<number>;
    multiAzPolicy?: pulumi.Input<string>;
    onDemandBaseCapacity?: pulumi.Input<number>;
    onDemandPercentageAboveBaseCapacity?: pulumi.Input<number>;
    protectedInstances?: pulumi.Input<pulumi.Input<string>[]>;
    removalPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    resourceGroupId?: pulumi.Input<string>;
    scalingGroupName?: pulumi.Input<string>;
    scalingPolicy?: pulumi.Input<string>;
    spotAllocationStrategy?: pulumi.Input<string>;
    spotInstancePools?: pulumi.Input<number>;
    spotInstanceRemedy?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * @deprecated Deprecated
     */
    vswitchId?: pulumi.Input<string>;
    vswitchIds?: pulumi.Input<pulumi.Input<string>[]>;
}
