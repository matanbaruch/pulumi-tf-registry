// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmrv2Clusters(args?: GetEmrv2ClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrv2ClustersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEmrv2Clusters:getEmrv2Clusters", {
        "clusterName": args.clusterName,
        "clusterStates": args.clusterStates,
        "clusterTypes": args.clusterTypes,
        "id": args.id,
        "ids": args.ids,
        "maxResults": args.maxResults,
        "nameRegex": args.nameRegex,
        "nextToken": args.nextToken,
        "outputFile": args.outputFile,
        "paymentTypes": args.paymentTypes,
        "resourceGroupId": args.resourceGroupId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrv2Clusters.
 */
export interface GetEmrv2ClustersArgs {
    clusterName?: string;
    clusterStates?: string[];
    clusterTypes?: string[];
    id?: string;
    ids?: string[];
    maxResults?: number;
    nameRegex?: string;
    nextToken?: string;
    outputFile?: string;
    paymentTypes?: string[];
    resourceGroupId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getEmrv2Clusters.
 */
export interface GetEmrv2ClustersResult {
    readonly clusterName?: string;
    readonly clusterStates?: string[];
    readonly clusterTypes?: string[];
    readonly clusters: outputs.GetEmrv2ClustersCluster[];
    readonly id: string;
    readonly ids: string[];
    readonly maxResults?: number;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly nextToken?: string;
    readonly outputFile?: string;
    readonly paymentTypes?: string[];
    readonly resourceGroupId?: string;
    readonly tags?: {[key: string]: string};
    readonly totalCount: number;
}
export function getEmrv2ClustersOutput(args?: GetEmrv2ClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrv2ClustersResult> {
    return pulumi.output(args).apply((a: any) => getEmrv2Clusters(a, opts))
}

/**
 * A collection of arguments for invoking getEmrv2Clusters.
 */
export interface GetEmrv2ClustersOutputArgs {
    clusterName?: pulumi.Input<string>;
    clusterStates?: pulumi.Input<pulumi.Input<string>[]>;
    clusterTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    maxResults?: pulumi.Input<number>;
    nameRegex?: pulumi.Input<string>;
    nextToken?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    paymentTypes?: pulumi.Input<pulumi.Input<string>[]>;
    resourceGroupId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
