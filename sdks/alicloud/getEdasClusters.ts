// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEdasClusters(args: GetEdasClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetEdasClustersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEdasClusters:getEdasClusters", {
        "id": args.id,
        "ids": args.ids,
        "logicalRegionId": args.logicalRegionId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEdasClusters.
 */
export interface GetEdasClustersArgs {
    id?: string;
    ids?: string[];
    logicalRegionId: string;
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getEdasClusters.
 */
export interface GetEdasClustersResult {
    readonly clusters: outputs.GetEdasClustersCluster[];
    readonly id: string;
    readonly ids: string[];
    readonly logicalRegionId: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
}
export function getEdasClustersOutput(args: GetEdasClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEdasClustersResult> {
    return pulumi.output(args).apply((a: any) => getEdasClusters(a, opts))
}

/**
 * A collection of arguments for invoking getEdasClusters.
 */
export interface GetEdasClustersOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    logicalRegionId: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
