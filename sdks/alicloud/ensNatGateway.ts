// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EnsNatGateway extends pulumi.CustomResource {
    /**
     * Get an existing EnsNatGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnsNatGatewayState, opts?: pulumi.CustomResourceOptions): EnsNatGateway {
        return new EnsNatGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ensNatGateway:EnsNatGateway';

    /**
     * Returns true if the given object is an instance of EnsNatGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnsNatGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnsNatGateway.__pulumiType;
    }

    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly ensRegionId!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string>;
    public readonly natName!: pulumi.Output<string | undefined>;
    public readonly networkId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.EnsNatGatewayTimeouts | undefined>;
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a EnsNatGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnsNatGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnsNatGatewayArgs | EnsNatGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnsNatGatewayState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["ensRegionId"] = state ? state.ensRegionId : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["natName"] = state ? state.natName : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as EnsNatGatewayArgs | undefined;
            if ((!args || args.ensRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ensRegionId'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["ensRegionId"] = args ? args.ensRegionId : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["natName"] = args ? args.natName : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnsNatGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EnsNatGateway resources.
 */
export interface EnsNatGatewayState {
    createTime?: pulumi.Input<string>;
    ensRegionId?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    natName?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EnsNatGatewayTimeouts>;
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EnsNatGateway resource.
 */
export interface EnsNatGatewayArgs {
    ensRegionId: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    natName?: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EnsNatGatewayTimeouts>;
    vswitchId: pulumi.Input<string>;
}
