// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HbrEcsBackupClient extends pulumi.CustomResource {
    /**
     * Get an existing HbrEcsBackupClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HbrEcsBackupClientState, opts?: pulumi.CustomResourceOptions): HbrEcsBackupClient {
        return new HbrEcsBackupClient(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/hbrEcsBackupClient:HbrEcsBackupClient';

    /**
     * Returns true if the given object is an instance of HbrEcsBackupClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HbrEcsBackupClient {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HbrEcsBackupClient.__pulumiType;
    }

    public readonly dataNetworkType!: pulumi.Output<string>;
    public readonly dataProxySetting!: pulumi.Output<string>;
    public readonly instanceId!: pulumi.Output<string>;
    public readonly maxCpuCore!: pulumi.Output<string>;
    public readonly maxWorker!: pulumi.Output<string>;
    public readonly proxyHost!: pulumi.Output<string>;
    public readonly proxyPassword!: pulumi.Output<string>;
    public readonly proxyPort!: pulumi.Output<string>;
    public readonly proxyUser!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.HbrEcsBackupClientTimeouts | undefined>;
    public readonly useHttps!: pulumi.Output<boolean>;

    /**
     * Create a HbrEcsBackupClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HbrEcsBackupClientArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HbrEcsBackupClientArgs | HbrEcsBackupClientState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HbrEcsBackupClientState | undefined;
            resourceInputs["dataNetworkType"] = state ? state.dataNetworkType : undefined;
            resourceInputs["dataProxySetting"] = state ? state.dataProxySetting : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["maxCpuCore"] = state ? state.maxCpuCore : undefined;
            resourceInputs["maxWorker"] = state ? state.maxWorker : undefined;
            resourceInputs["proxyHost"] = state ? state.proxyHost : undefined;
            resourceInputs["proxyPassword"] = state ? state.proxyPassword : undefined;
            resourceInputs["proxyPort"] = state ? state.proxyPort : undefined;
            resourceInputs["proxyUser"] = state ? state.proxyUser : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["useHttps"] = state ? state.useHttps : undefined;
        } else {
            const args = argsOrState as HbrEcsBackupClientArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["dataNetworkType"] = args ? args.dataNetworkType : undefined;
            resourceInputs["dataProxySetting"] = args ? args.dataProxySetting : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["maxCpuCore"] = args ? args.maxCpuCore : undefined;
            resourceInputs["maxWorker"] = args ? args.maxWorker : undefined;
            resourceInputs["proxyHost"] = args ? args.proxyHost : undefined;
            resourceInputs["proxyPassword"] = args ? args.proxyPassword : undefined;
            resourceInputs["proxyPort"] = args ? args.proxyPort : undefined;
            resourceInputs["proxyUser"] = args ? args.proxyUser : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["useHttps"] = args ? args.useHttps : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HbrEcsBackupClient.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HbrEcsBackupClient resources.
 */
export interface HbrEcsBackupClientState {
    dataNetworkType?: pulumi.Input<string>;
    dataProxySetting?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    maxCpuCore?: pulumi.Input<string>;
    maxWorker?: pulumi.Input<string>;
    proxyHost?: pulumi.Input<string>;
    proxyPassword?: pulumi.Input<string>;
    proxyPort?: pulumi.Input<string>;
    proxyUser?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.HbrEcsBackupClientTimeouts>;
    useHttps?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a HbrEcsBackupClient resource.
 */
export interface HbrEcsBackupClientArgs {
    dataNetworkType?: pulumi.Input<string>;
    dataProxySetting?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    maxCpuCore?: pulumi.Input<string>;
    maxWorker?: pulumi.Input<string>;
    proxyHost?: pulumi.Input<string>;
    proxyPassword?: pulumi.Input<string>;
    proxyPort?: pulumi.Input<string>;
    proxyUser?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.HbrEcsBackupClientTimeouts>;
    useHttps?: pulumi.Input<boolean>;
}
