// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class QuickBiUser extends pulumi.CustomResource {
    /**
     * Get an existing QuickBiUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QuickBiUserState, opts?: pulumi.CustomResourceOptions): QuickBiUser {
        return new QuickBiUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/quickBiUser:QuickBiUser';

    /**
     * Returns true if the given object is an instance of QuickBiUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QuickBiUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QuickBiUser.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string | undefined>;
    public readonly accountName!: pulumi.Output<string>;
    public readonly adminUser!: pulumi.Output<boolean>;
    public readonly authAdminUser!: pulumi.Output<boolean>;
    public readonly nickName!: pulumi.Output<string>;
    public readonly userType!: pulumi.Output<string>;

    /**
     * Create a QuickBiUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QuickBiUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QuickBiUserArgs | QuickBiUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QuickBiUserState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["adminUser"] = state ? state.adminUser : undefined;
            resourceInputs["authAdminUser"] = state ? state.authAdminUser : undefined;
            resourceInputs["nickName"] = state ? state.nickName : undefined;
            resourceInputs["userType"] = state ? state.userType : undefined;
        } else {
            const args = argsOrState as QuickBiUserArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.adminUser === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminUser'");
            }
            if ((!args || args.authAdminUser === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authAdminUser'");
            }
            if ((!args || args.nickName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nickName'");
            }
            if ((!args || args.userType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userType'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["adminUser"] = args ? args.adminUser : undefined;
            resourceInputs["authAdminUser"] = args ? args.authAdminUser : undefined;
            resourceInputs["nickName"] = args ? args.nickName : undefined;
            resourceInputs["userType"] = args ? args.userType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QuickBiUser.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering QuickBiUser resources.
 */
export interface QuickBiUserState {
    accountId?: pulumi.Input<string>;
    accountName?: pulumi.Input<string>;
    adminUser?: pulumi.Input<boolean>;
    authAdminUser?: pulumi.Input<boolean>;
    nickName?: pulumi.Input<string>;
    userType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QuickBiUser resource.
 */
export interface QuickBiUserArgs {
    accountId?: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    adminUser: pulumi.Input<boolean>;
    authAdminUser: pulumi.Input<boolean>;
    nickName: pulumi.Input<string>;
    userType: pulumi.Input<string>;
}
