// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * @deprecated Deprecated
     */
    public readonly allocatePublicIp!: pulumi.Output<boolean | undefined>;
    public readonly autoReleaseTime!: pulumi.Output<string | undefined>;
    public readonly autoRenewPeriod!: pulumi.Output<number | undefined>;
    public readonly availabilityZone!: pulumi.Output<string>;
    public /*out*/ readonly cpu!: pulumi.Output<number>;
    public readonly creditSpecification!: pulumi.Output<string>;
    public readonly dataDisks!: pulumi.Output<outputs.InstanceDataDisk[] | undefined>;
    public readonly dedicatedHostId!: pulumi.Output<string | undefined>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly deploymentSetGroupNo!: pulumi.Output<string>;
    public readonly deploymentSetId!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    public readonly enableJumboFrame!: pulumi.Output<boolean>;
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    public readonly hostName!: pulumi.Output<string>;
    public readonly hpcClusterId!: pulumi.Output<string | undefined>;
    public readonly httpEndpoint!: pulumi.Output<string>;
    public readonly httpPutResponseHopLimit!: pulumi.Output<number>;
    public readonly httpTokens!: pulumi.Output<string>;
    public readonly imageId!: pulumi.Output<string>;
    public readonly includeDataDisks!: pulumi.Output<boolean | undefined>;
    public readonly instanceChargeType!: pulumi.Output<string>;
    public readonly instanceName!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string>;
    public readonly internetChargeType!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly internetMaxBandwidthIn!: pulumi.Output<number>;
    public readonly internetMaxBandwidthOut!: pulumi.Output<number>;
    /**
     * @deprecated Deprecated
     */
    public readonly ioOptimized!: pulumi.Output<string>;
    public readonly ipv6AddressCount!: pulumi.Output<number>;
    public readonly ipv6Addresses!: pulumi.Output<string[]>;
    public readonly isOutdated!: pulumi.Output<boolean | undefined>;
    public readonly keyName!: pulumi.Output<string>;
    public readonly kmsEncryptedPassword!: pulumi.Output<string | undefined>;
    public readonly kmsEncryptionContext!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly launchTemplateId!: pulumi.Output<string | undefined>;
    public readonly launchTemplateName!: pulumi.Output<string | undefined>;
    public readonly launchTemplateVersion!: pulumi.Output<string | undefined>;
    public readonly maintenanceAction!: pulumi.Output<string>;
    public readonly maintenanceNotify!: pulumi.Output<boolean | undefined>;
    public readonly maintenanceTime!: pulumi.Output<outputs.InstanceMaintenanceTime | undefined>;
    public /*out*/ readonly memory!: pulumi.Output<number>;
    public readonly networkCardIndex!: pulumi.Output<number | undefined>;
    public /*out*/ readonly networkInterfaceId!: pulumi.Output<string>;
    public readonly networkInterfaceTrafficMode!: pulumi.Output<string>;
    public readonly networkInterfaces!: pulumi.Output<outputs.InstanceNetworkInterface[] | undefined>;
    public readonly operatorType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly osName!: pulumi.Output<string>;
    public /*out*/ readonly osType!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly period!: pulumi.Output<number>;
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    public /*out*/ readonly primaryIpAddress!: pulumi.Output<string>;
    public readonly privateIp!: pulumi.Output<string>;
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    public readonly queuePairNumber!: pulumi.Output<number | undefined>;
    public readonly renewalStatus!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly roleName!: pulumi.Output<string>;
    public readonly secondaryPrivateIpAddressCount!: pulumi.Output<number>;
    public readonly secondaryPrivateIps!: pulumi.Output<string[]>;
    public readonly securityEnhancementStrategy!: pulumi.Output<string>;
    public readonly securityGroups!: pulumi.Output<string[]>;
    public readonly spotDuration!: pulumi.Output<number>;
    public readonly spotPriceLimit!: pulumi.Output<number>;
    public readonly spotStrategy!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly stoppedMode!: pulumi.Output<string>;
    public readonly subnetId!: pulumi.Output<string>;
    public readonly systemDiskAutoSnapshotPolicyId!: pulumi.Output<string | undefined>;
    public readonly systemDiskCategory!: pulumi.Output<string>;
    public readonly systemDiskDescription!: pulumi.Output<string>;
    public readonly systemDiskEncryptAlgorithm!: pulumi.Output<string | undefined>;
    public readonly systemDiskEncrypted!: pulumi.Output<boolean>;
    public /*out*/ readonly systemDiskId!: pulumi.Output<string>;
    public readonly systemDiskKmsKeyId!: pulumi.Output<string | undefined>;
    public readonly systemDiskName!: pulumi.Output<string>;
    public readonly systemDiskPerformanceLevel!: pulumi.Output<string>;
    public readonly systemDiskSize!: pulumi.Output<number>;
    public readonly systemDiskStorageClusterId!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.InstanceTimeouts | undefined>;
    public readonly userData!: pulumi.Output<string | undefined>;
    public readonly volumeTags!: pulumi.Output<{[key: string]: string}>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["allocatePublicIp"] = state ? state.allocatePublicIp : undefined;
            resourceInputs["autoReleaseTime"] = state ? state.autoReleaseTime : undefined;
            resourceInputs["autoRenewPeriod"] = state ? state.autoRenewPeriod : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["creditSpecification"] = state ? state.creditSpecification : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["dedicatedHostId"] = state ? state.dedicatedHostId : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["deploymentSetGroupNo"] = state ? state.deploymentSetGroupNo : undefined;
            resourceInputs["deploymentSetId"] = state ? state.deploymentSetId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["enableJumboFrame"] = state ? state.enableJumboFrame : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["hpcClusterId"] = state ? state.hpcClusterId : undefined;
            resourceInputs["httpEndpoint"] = state ? state.httpEndpoint : undefined;
            resourceInputs["httpPutResponseHopLimit"] = state ? state.httpPutResponseHopLimit : undefined;
            resourceInputs["httpTokens"] = state ? state.httpTokens : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["includeDataDisks"] = state ? state.includeDataDisks : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthIn"] = state ? state.internetMaxBandwidthIn : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["ioOptimized"] = state ? state.ioOptimized : undefined;
            resourceInputs["ipv6AddressCount"] = state ? state.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = state ? state.ipv6Addresses : undefined;
            resourceInputs["isOutdated"] = state ? state.isOutdated : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["kmsEncryptedPassword"] = state ? state.kmsEncryptedPassword : undefined;
            resourceInputs["kmsEncryptionContext"] = state ? state.kmsEncryptionContext : undefined;
            resourceInputs["launchTemplateId"] = state ? state.launchTemplateId : undefined;
            resourceInputs["launchTemplateName"] = state ? state.launchTemplateName : undefined;
            resourceInputs["launchTemplateVersion"] = state ? state.launchTemplateVersion : undefined;
            resourceInputs["maintenanceAction"] = state ? state.maintenanceAction : undefined;
            resourceInputs["maintenanceNotify"] = state ? state.maintenanceNotify : undefined;
            resourceInputs["maintenanceTime"] = state ? state.maintenanceTime : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["networkCardIndex"] = state ? state.networkCardIndex : undefined;
            resourceInputs["networkInterfaceId"] = state ? state.networkInterfaceId : undefined;
            resourceInputs["networkInterfaceTrafficMode"] = state ? state.networkInterfaceTrafficMode : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["operatorType"] = state ? state.operatorType : undefined;
            resourceInputs["osName"] = state ? state.osName : undefined;
            resourceInputs["osType"] = state ? state.osType : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["primaryIpAddress"] = state ? state.primaryIpAddress : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["queuePairNumber"] = state ? state.queuePairNumber : undefined;
            resourceInputs["renewalStatus"] = state ? state.renewalStatus : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["secondaryPrivateIpAddressCount"] = state ? state.secondaryPrivateIpAddressCount : undefined;
            resourceInputs["secondaryPrivateIps"] = state ? state.secondaryPrivateIps : undefined;
            resourceInputs["securityEnhancementStrategy"] = state ? state.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroups"] = state ? state.securityGroups : undefined;
            resourceInputs["spotDuration"] = state ? state.spotDuration : undefined;
            resourceInputs["spotPriceLimit"] = state ? state.spotPriceLimit : undefined;
            resourceInputs["spotStrategy"] = state ? state.spotStrategy : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["stoppedMode"] = state ? state.stoppedMode : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["systemDiskAutoSnapshotPolicyId"] = state ? state.systemDiskAutoSnapshotPolicyId : undefined;
            resourceInputs["systemDiskCategory"] = state ? state.systemDiskCategory : undefined;
            resourceInputs["systemDiskDescription"] = state ? state.systemDiskDescription : undefined;
            resourceInputs["systemDiskEncryptAlgorithm"] = state ? state.systemDiskEncryptAlgorithm : undefined;
            resourceInputs["systemDiskEncrypted"] = state ? state.systemDiskEncrypted : undefined;
            resourceInputs["systemDiskId"] = state ? state.systemDiskId : undefined;
            resourceInputs["systemDiskKmsKeyId"] = state ? state.systemDiskKmsKeyId : undefined;
            resourceInputs["systemDiskName"] = state ? state.systemDiskName : undefined;
            resourceInputs["systemDiskPerformanceLevel"] = state ? state.systemDiskPerformanceLevel : undefined;
            resourceInputs["systemDiskSize"] = state ? state.systemDiskSize : undefined;
            resourceInputs["systemDiskStorageClusterId"] = state ? state.systemDiskStorageClusterId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["volumeTags"] = state ? state.volumeTags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            resourceInputs["allocatePublicIp"] = args ? args.allocatePublicIp : undefined;
            resourceInputs["autoReleaseTime"] = args ? args.autoReleaseTime : undefined;
            resourceInputs["autoRenewPeriod"] = args ? args.autoRenewPeriod : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["creditSpecification"] = args ? args.creditSpecification : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["dedicatedHostId"] = args ? args.dedicatedHostId : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["deploymentSetId"] = args ? args.deploymentSetId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["enableJumboFrame"] = args ? args.enableJumboFrame : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["hpcClusterId"] = args ? args.hpcClusterId : undefined;
            resourceInputs["httpEndpoint"] = args ? args.httpEndpoint : undefined;
            resourceInputs["httpPutResponseHopLimit"] = args ? args.httpPutResponseHopLimit : undefined;
            resourceInputs["httpTokens"] = args ? args.httpTokens : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["includeDataDisks"] = args ? args.includeDataDisks : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["internetMaxBandwidthIn"] = args ? args.internetMaxBandwidthIn : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["ioOptimized"] = args ? args.ioOptimized : undefined;
            resourceInputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            resourceInputs["isOutdated"] = args ? args.isOutdated : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["kmsEncryptedPassword"] = args ? args.kmsEncryptedPassword : undefined;
            resourceInputs["kmsEncryptionContext"] = args ? args.kmsEncryptionContext : undefined;
            resourceInputs["launchTemplateId"] = args ? args.launchTemplateId : undefined;
            resourceInputs["launchTemplateName"] = args ? args.launchTemplateName : undefined;
            resourceInputs["launchTemplateVersion"] = args ? args.launchTemplateVersion : undefined;
            resourceInputs["maintenanceAction"] = args ? args.maintenanceAction : undefined;
            resourceInputs["maintenanceNotify"] = args ? args.maintenanceNotify : undefined;
            resourceInputs["maintenanceTime"] = args ? args.maintenanceTime : undefined;
            resourceInputs["networkCardIndex"] = args ? args.networkCardIndex : undefined;
            resourceInputs["networkInterfaceTrafficMode"] = args ? args.networkInterfaceTrafficMode : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["operatorType"] = args ? args.operatorType : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["privateIp"] = args ? args.privateIp : undefined;
            resourceInputs["queuePairNumber"] = args ? args.queuePairNumber : undefined;
            resourceInputs["renewalStatus"] = args ? args.renewalStatus : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["secondaryPrivateIpAddressCount"] = args ? args.secondaryPrivateIpAddressCount : undefined;
            resourceInputs["secondaryPrivateIps"] = args ? args.secondaryPrivateIps : undefined;
            resourceInputs["securityEnhancementStrategy"] = args ? args.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroups"] = args ? args.securityGroups : undefined;
            resourceInputs["spotDuration"] = args ? args.spotDuration : undefined;
            resourceInputs["spotPriceLimit"] = args ? args.spotPriceLimit : undefined;
            resourceInputs["spotStrategy"] = args ? args.spotStrategy : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["stoppedMode"] = args ? args.stoppedMode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["systemDiskAutoSnapshotPolicyId"] = args ? args.systemDiskAutoSnapshotPolicyId : undefined;
            resourceInputs["systemDiskCategory"] = args ? args.systemDiskCategory : undefined;
            resourceInputs["systemDiskDescription"] = args ? args.systemDiskDescription : undefined;
            resourceInputs["systemDiskEncryptAlgorithm"] = args ? args.systemDiskEncryptAlgorithm : undefined;
            resourceInputs["systemDiskEncrypted"] = args ? args.systemDiskEncrypted : undefined;
            resourceInputs["systemDiskKmsKeyId"] = args ? args.systemDiskKmsKeyId : undefined;
            resourceInputs["systemDiskName"] = args ? args.systemDiskName : undefined;
            resourceInputs["systemDiskPerformanceLevel"] = args ? args.systemDiskPerformanceLevel : undefined;
            resourceInputs["systemDiskSize"] = args ? args.systemDiskSize : undefined;
            resourceInputs["systemDiskStorageClusterId"] = args ? args.systemDiskStorageClusterId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["volumeTags"] = args ? args.volumeTags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["cpu"] = undefined /*out*/;
            resourceInputs["deploymentSetGroupNo"] = undefined /*out*/;
            resourceInputs["memory"] = undefined /*out*/;
            resourceInputs["networkInterfaceId"] = undefined /*out*/;
            resourceInputs["osName"] = undefined /*out*/;
            resourceInputs["osType"] = undefined /*out*/;
            resourceInputs["primaryIpAddress"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["systemDiskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * @deprecated Deprecated
     */
    allocatePublicIp?: pulumi.Input<boolean>;
    autoReleaseTime?: pulumi.Input<string>;
    autoRenewPeriod?: pulumi.Input<number>;
    availabilityZone?: pulumi.Input<string>;
    cpu?: pulumi.Input<number>;
    creditSpecification?: pulumi.Input<string>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.InstanceDataDisk>[]>;
    dedicatedHostId?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    deploymentSetGroupNo?: pulumi.Input<string>;
    deploymentSetId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    enableJumboFrame?: pulumi.Input<boolean>;
    forceDelete?: pulumi.Input<boolean>;
    hostName?: pulumi.Input<string>;
    hpcClusterId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpPutResponseHopLimit?: pulumi.Input<number>;
    httpTokens?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    includeDataDisks?: pulumi.Input<boolean>;
    instanceChargeType?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    internetChargeType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    internetMaxBandwidthIn?: pulumi.Input<number>;
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    ioOptimized?: pulumi.Input<string>;
    ipv6AddressCount?: pulumi.Input<number>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    isOutdated?: pulumi.Input<boolean>;
    keyName?: pulumi.Input<string>;
    kmsEncryptedPassword?: pulumi.Input<string>;
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    launchTemplateId?: pulumi.Input<string>;
    launchTemplateName?: pulumi.Input<string>;
    launchTemplateVersion?: pulumi.Input<string>;
    maintenanceAction?: pulumi.Input<string>;
    maintenanceNotify?: pulumi.Input<boolean>;
    maintenanceTime?: pulumi.Input<inputs.InstanceMaintenanceTime>;
    memory?: pulumi.Input<number>;
    networkCardIndex?: pulumi.Input<number>;
    networkInterfaceId?: pulumi.Input<string>;
    networkInterfaceTrafficMode?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.InstanceNetworkInterface>[]>;
    operatorType?: pulumi.Input<string>;
    osName?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    primaryIpAddress?: pulumi.Input<string>;
    privateIp?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    queuePairNumber?: pulumi.Input<number>;
    renewalStatus?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    roleName?: pulumi.Input<string>;
    secondaryPrivateIpAddressCount?: pulumi.Input<number>;
    secondaryPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    securityEnhancementStrategy?: pulumi.Input<string>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    spotDuration?: pulumi.Input<number>;
    spotPriceLimit?: pulumi.Input<number>;
    spotStrategy?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    stoppedMode?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    systemDiskAutoSnapshotPolicyId?: pulumi.Input<string>;
    systemDiskCategory?: pulumi.Input<string>;
    systemDiskDescription?: pulumi.Input<string>;
    systemDiskEncryptAlgorithm?: pulumi.Input<string>;
    systemDiskEncrypted?: pulumi.Input<boolean>;
    systemDiskId?: pulumi.Input<string>;
    systemDiskKmsKeyId?: pulumi.Input<string>;
    systemDiskName?: pulumi.Input<string>;
    systemDiskPerformanceLevel?: pulumi.Input<string>;
    systemDiskSize?: pulumi.Input<number>;
    systemDiskStorageClusterId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.InstanceTimeouts>;
    userData?: pulumi.Input<string>;
    volumeTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * @deprecated Deprecated
     */
    allocatePublicIp?: pulumi.Input<boolean>;
    autoReleaseTime?: pulumi.Input<string>;
    autoRenewPeriod?: pulumi.Input<number>;
    availabilityZone?: pulumi.Input<string>;
    creditSpecification?: pulumi.Input<string>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.InstanceDataDisk>[]>;
    dedicatedHostId?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    deploymentSetId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    enableJumboFrame?: pulumi.Input<boolean>;
    forceDelete?: pulumi.Input<boolean>;
    hostName?: pulumi.Input<string>;
    hpcClusterId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpPutResponseHopLimit?: pulumi.Input<number>;
    httpTokens?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    includeDataDisks?: pulumi.Input<boolean>;
    instanceChargeType?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    internetChargeType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    internetMaxBandwidthIn?: pulumi.Input<number>;
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    ioOptimized?: pulumi.Input<string>;
    ipv6AddressCount?: pulumi.Input<number>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    isOutdated?: pulumi.Input<boolean>;
    keyName?: pulumi.Input<string>;
    kmsEncryptedPassword?: pulumi.Input<string>;
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    launchTemplateId?: pulumi.Input<string>;
    launchTemplateName?: pulumi.Input<string>;
    launchTemplateVersion?: pulumi.Input<string>;
    maintenanceAction?: pulumi.Input<string>;
    maintenanceNotify?: pulumi.Input<boolean>;
    maintenanceTime?: pulumi.Input<inputs.InstanceMaintenanceTime>;
    networkCardIndex?: pulumi.Input<number>;
    networkInterfaceTrafficMode?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.InstanceNetworkInterface>[]>;
    operatorType?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    privateIp?: pulumi.Input<string>;
    queuePairNumber?: pulumi.Input<number>;
    renewalStatus?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    roleName?: pulumi.Input<string>;
    secondaryPrivateIpAddressCount?: pulumi.Input<number>;
    secondaryPrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    securityEnhancementStrategy?: pulumi.Input<string>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    spotDuration?: pulumi.Input<number>;
    spotPriceLimit?: pulumi.Input<number>;
    spotStrategy?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    stoppedMode?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    systemDiskAutoSnapshotPolicyId?: pulumi.Input<string>;
    systemDiskCategory?: pulumi.Input<string>;
    systemDiskDescription?: pulumi.Input<string>;
    systemDiskEncryptAlgorithm?: pulumi.Input<string>;
    systemDiskEncrypted?: pulumi.Input<boolean>;
    systemDiskKmsKeyId?: pulumi.Input<string>;
    systemDiskName?: pulumi.Input<string>;
    systemDiskPerformanceLevel?: pulumi.Input<string>;
    systemDiskSize?: pulumi.Input<number>;
    systemDiskStorageClusterId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.InstanceTimeouts>;
    userData?: pulumi.Input<string>;
    volumeTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}
