// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVswitches(args?: GetVswitchesArgs, opts?: pulumi.InvokeOptions): Promise<GetVswitchesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getVswitches:getVswitches", {
        "cidrBlock": args.cidrBlock,
        "dryRun": args.dryRun,
        "id": args.id,
        "ids": args.ids,
        "isDefault": args.isDefault,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "routeTableId": args.routeTableId,
        "status": args.status,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vswitchName": args.vswitchName,
        "vswitchOwnerId": args.vswitchOwnerId,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVswitches.
 */
export interface GetVswitchesArgs {
    cidrBlock?: string;
    dryRun?: boolean;
    id?: string;
    ids?: string[];
    isDefault?: boolean;
    nameRegex?: string;
    outputFile?: string;
    resourceGroupId?: string;
    routeTableId?: string;
    status?: string;
    tags?: {[key: string]: string};
    vpcId?: string;
    vswitchName?: string;
    vswitchOwnerId?: number;
    zoneId?: string;
}

/**
 * A collection of values returned by getVswitches.
 */
export interface GetVswitchesResult {
    readonly cidrBlock?: string;
    readonly dryRun?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly isDefault?: boolean;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly resourceGroupId?: string;
    readonly routeTableId?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly vpcId?: string;
    readonly vswitchName?: string;
    readonly vswitchOwnerId?: number;
    readonly vswitches: outputs.GetVswitchesVswitch[];
    readonly zoneId?: string;
}
export function getVswitchesOutput(args?: GetVswitchesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVswitchesResult> {
    return pulumi.output(args).apply((a: any) => getVswitches(a, opts))
}

/**
 * A collection of arguments for invoking getVswitches.
 */
export interface GetVswitchesOutputArgs {
    cidrBlock?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    isDefault?: pulumi.Input<boolean>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    routeTableId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    vswitchName?: pulumi.Input<string>;
    vswitchOwnerId?: pulumi.Input<number>;
    zoneId?: pulumi.Input<string>;
}
