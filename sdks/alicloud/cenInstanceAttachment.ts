// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CenInstanceAttachment extends pulumi.CustomResource {
    /**
     * Get an existing CenInstanceAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CenInstanceAttachmentState, opts?: pulumi.CustomResourceOptions): CenInstanceAttachment {
        return new CenInstanceAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cenInstanceAttachment:CenInstanceAttachment';

    /**
     * Returns true if the given object is an instance of CenInstanceAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CenInstanceAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CenInstanceAttachment.__pulumiType;
    }

    public readonly cenOwnerId!: pulumi.Output<number | undefined>;
    public readonly childInstanceId!: pulumi.Output<string>;
    public readonly childInstanceOwnerId!: pulumi.Output<number>;
    public readonly childInstanceRegionId!: pulumi.Output<string>;
    public readonly childInstanceType!: pulumi.Output<string>;
    public readonly instanceId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CenInstanceAttachmentTimeouts | undefined>;

    /**
     * Create a CenInstanceAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CenInstanceAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CenInstanceAttachmentArgs | CenInstanceAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CenInstanceAttachmentState | undefined;
            resourceInputs["cenOwnerId"] = state ? state.cenOwnerId : undefined;
            resourceInputs["childInstanceId"] = state ? state.childInstanceId : undefined;
            resourceInputs["childInstanceOwnerId"] = state ? state.childInstanceOwnerId : undefined;
            resourceInputs["childInstanceRegionId"] = state ? state.childInstanceRegionId : undefined;
            resourceInputs["childInstanceType"] = state ? state.childInstanceType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CenInstanceAttachmentArgs | undefined;
            if ((!args || args.childInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'childInstanceId'");
            }
            if ((!args || args.childInstanceRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'childInstanceRegionId'");
            }
            if ((!args || args.childInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'childInstanceType'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["cenOwnerId"] = args ? args.cenOwnerId : undefined;
            resourceInputs["childInstanceId"] = args ? args.childInstanceId : undefined;
            resourceInputs["childInstanceOwnerId"] = args ? args.childInstanceOwnerId : undefined;
            resourceInputs["childInstanceRegionId"] = args ? args.childInstanceRegionId : undefined;
            resourceInputs["childInstanceType"] = args ? args.childInstanceType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CenInstanceAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CenInstanceAttachment resources.
 */
export interface CenInstanceAttachmentState {
    cenOwnerId?: pulumi.Input<number>;
    childInstanceId?: pulumi.Input<string>;
    childInstanceOwnerId?: pulumi.Input<number>;
    childInstanceRegionId?: pulumi.Input<string>;
    childInstanceType?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CenInstanceAttachmentTimeouts>;
}

/**
 * The set of arguments for constructing a CenInstanceAttachment resource.
 */
export interface CenInstanceAttachmentArgs {
    cenOwnerId?: pulumi.Input<number>;
    childInstanceId: pulumi.Input<string>;
    childInstanceOwnerId?: pulumi.Input<number>;
    childInstanceRegionId: pulumi.Input<string>;
    childInstanceType: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CenInstanceAttachmentTimeouts>;
}
