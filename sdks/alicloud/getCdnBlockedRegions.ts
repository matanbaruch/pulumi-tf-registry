// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCdnBlockedRegions(args: GetCdnBlockedRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCdnBlockedRegionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCdnBlockedRegions:getCdnBlockedRegions", {
        "id": args.id,
        "language": args.language,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCdnBlockedRegions.
 */
export interface GetCdnBlockedRegionsArgs {
    id?: string;
    language: string;
}

/**
 * A collection of values returned by getCdnBlockedRegions.
 */
export interface GetCdnBlockedRegionsResult {
    readonly id: string;
    readonly language: string;
    readonly regions: outputs.GetCdnBlockedRegionsRegion[];
}
export function getCdnBlockedRegionsOutput(args: GetCdnBlockedRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCdnBlockedRegionsResult> {
    return pulumi.output(args).apply((a: any) => getCdnBlockedRegions(a, opts))
}

/**
 * A collection of arguments for invoking getCdnBlockedRegions.
 */
export interface GetCdnBlockedRegionsOutputArgs {
    id?: pulumi.Input<string>;
    language: pulumi.Input<string>;
}
