// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ThreatDetectionClientFileProtect extends pulumi.CustomResource {
    /**
     * Get an existing ThreatDetectionClientFileProtect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThreatDetectionClientFileProtectState, opts?: pulumi.CustomResourceOptions): ThreatDetectionClientFileProtect {
        return new ThreatDetectionClientFileProtect(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/threatDetectionClientFileProtect:ThreatDetectionClientFileProtect';

    /**
     * Returns true if the given object is an instance of ThreatDetectionClientFileProtect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatDetectionClientFileProtect {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatDetectionClientFileProtect.__pulumiType;
    }

    public readonly alertLevel!: pulumi.Output<number | undefined>;
    public readonly fileOps!: pulumi.Output<string[]>;
    public readonly filePaths!: pulumi.Output<string[]>;
    public readonly procPaths!: pulumi.Output<string[]>;
    public readonly ruleAction!: pulumi.Output<string>;
    public readonly ruleName!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<number>;
    public readonly switchId!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ThreatDetectionClientFileProtectTimeouts | undefined>;

    /**
     * Create a ThreatDetectionClientFileProtect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatDetectionClientFileProtectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThreatDetectionClientFileProtectArgs | ThreatDetectionClientFileProtectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThreatDetectionClientFileProtectState | undefined;
            resourceInputs["alertLevel"] = state ? state.alertLevel : undefined;
            resourceInputs["fileOps"] = state ? state.fileOps : undefined;
            resourceInputs["filePaths"] = state ? state.filePaths : undefined;
            resourceInputs["procPaths"] = state ? state.procPaths : undefined;
            resourceInputs["ruleAction"] = state ? state.ruleAction : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["switchId"] = state ? state.switchId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ThreatDetectionClientFileProtectArgs | undefined;
            if ((!args || args.fileOps === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileOps'");
            }
            if ((!args || args.filePaths === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filePaths'");
            }
            if ((!args || args.procPaths === undefined) && !opts.urn) {
                throw new Error("Missing required property 'procPaths'");
            }
            if ((!args || args.ruleAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleAction'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["alertLevel"] = args ? args.alertLevel : undefined;
            resourceInputs["fileOps"] = args ? args.fileOps : undefined;
            resourceInputs["filePaths"] = args ? args.filePaths : undefined;
            resourceInputs["procPaths"] = args ? args.procPaths : undefined;
            resourceInputs["ruleAction"] = args ? args.ruleAction : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["switchId"] = args ? args.switchId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ThreatDetectionClientFileProtect.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ThreatDetectionClientFileProtect resources.
 */
export interface ThreatDetectionClientFileProtectState {
    alertLevel?: pulumi.Input<number>;
    fileOps?: pulumi.Input<pulumi.Input<string>[]>;
    filePaths?: pulumi.Input<pulumi.Input<string>[]>;
    procPaths?: pulumi.Input<pulumi.Input<string>[]>;
    ruleAction?: pulumi.Input<string>;
    ruleName?: pulumi.Input<string>;
    status?: pulumi.Input<number>;
    switchId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ThreatDetectionClientFileProtectTimeouts>;
}

/**
 * The set of arguments for constructing a ThreatDetectionClientFileProtect resource.
 */
export interface ThreatDetectionClientFileProtectArgs {
    alertLevel?: pulumi.Input<number>;
    fileOps: pulumi.Input<pulumi.Input<string>[]>;
    filePaths: pulumi.Input<pulumi.Input<string>[]>;
    procPaths: pulumi.Input<pulumi.Input<string>[]>;
    ruleAction: pulumi.Input<string>;
    ruleName: pulumi.Input<string>;
    status?: pulumi.Input<number>;
    switchId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ThreatDetectionClientFileProtectTimeouts>;
}
