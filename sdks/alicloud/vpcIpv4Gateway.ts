// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcIpv4Gateway extends pulumi.CustomResource {
    /**
     * Get an existing VpcIpv4Gateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcIpv4GatewayState, opts?: pulumi.CustomResourceOptions): VpcIpv4Gateway {
        return new VpcIpv4Gateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/vpcIpv4Gateway:VpcIpv4Gateway';

    /**
     * Returns true if the given object is an instance of VpcIpv4Gateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcIpv4Gateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcIpv4Gateway.__pulumiType;
    }

    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    public readonly enabled!: pulumi.Output<boolean>;
    public readonly ipv4GatewayDescription!: pulumi.Output<string | undefined>;
    public /*out*/ readonly ipv4GatewayId!: pulumi.Output<string>;
    public readonly ipv4GatewayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly ipv4GatewayRouteTableId!: pulumi.Output<string>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.VpcIpv4GatewayTimeouts | undefined>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VpcIpv4Gateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcIpv4GatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcIpv4GatewayArgs | VpcIpv4GatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcIpv4GatewayState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["ipv4GatewayDescription"] = state ? state.ipv4GatewayDescription : undefined;
            resourceInputs["ipv4GatewayId"] = state ? state.ipv4GatewayId : undefined;
            resourceInputs["ipv4GatewayName"] = state ? state.ipv4GatewayName : undefined;
            resourceInputs["ipv4GatewayRouteTableId"] = state ? state.ipv4GatewayRouteTableId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as VpcIpv4GatewayArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["ipv4GatewayDescription"] = args ? args.ipv4GatewayDescription : undefined;
            resourceInputs["ipv4GatewayName"] = args ? args.ipv4GatewayName : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["ipv4GatewayId"] = undefined /*out*/;
            resourceInputs["ipv4GatewayRouteTableId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcIpv4Gateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpcIpv4Gateway resources.
 */
export interface VpcIpv4GatewayState {
    createTime?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    ipv4GatewayDescription?: pulumi.Input<string>;
    ipv4GatewayId?: pulumi.Input<string>;
    ipv4GatewayName?: pulumi.Input<string>;
    ipv4GatewayRouteTableId?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VpcIpv4GatewayTimeouts>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcIpv4Gateway resource.
 */
export interface VpcIpv4GatewayArgs {
    dryRun?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    ipv4GatewayDescription?: pulumi.Input<string>;
    ipv4GatewayName?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VpcIpv4GatewayTimeouts>;
    vpcId: pulumi.Input<string>;
}
