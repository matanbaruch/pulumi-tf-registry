// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EdasSlbAttachment extends pulumi.CustomResource {
    /**
     * Get an existing EdasSlbAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdasSlbAttachmentState, opts?: pulumi.CustomResourceOptions): EdasSlbAttachment {
        return new EdasSlbAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/edasSlbAttachment:EdasSlbAttachment';

    /**
     * Returns true if the given object is an instance of EdasSlbAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdasSlbAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdasSlbAttachment.__pulumiType;
    }

    public readonly appId!: pulumi.Output<string>;
    public readonly listenerPort!: pulumi.Output<number | undefined>;
    public readonly slbId!: pulumi.Output<string>;
    public readonly slbIp!: pulumi.Output<string>;
    public /*out*/ readonly slbStatus!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly vserverGroupId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a EdasSlbAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdasSlbAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdasSlbAttachmentArgs | EdasSlbAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdasSlbAttachmentState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["listenerPort"] = state ? state.listenerPort : undefined;
            resourceInputs["slbId"] = state ? state.slbId : undefined;
            resourceInputs["slbIp"] = state ? state.slbIp : undefined;
            resourceInputs["slbStatus"] = state ? state.slbStatus : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vserverGroupId"] = state ? state.vserverGroupId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as EdasSlbAttachmentArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.slbId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slbId'");
            }
            if ((!args || args.slbIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slbIp'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["listenerPort"] = args ? args.listenerPort : undefined;
            resourceInputs["slbId"] = args ? args.slbId : undefined;
            resourceInputs["slbIp"] = args ? args.slbIp : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vserverGroupId"] = args ? args.vserverGroupId : undefined;
            resourceInputs["slbStatus"] = undefined /*out*/;
            resourceInputs["vswitchId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdasSlbAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EdasSlbAttachment resources.
 */
export interface EdasSlbAttachmentState {
    appId?: pulumi.Input<string>;
    listenerPort?: pulumi.Input<number>;
    slbId?: pulumi.Input<string>;
    slbIp?: pulumi.Input<string>;
    slbStatus?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vserverGroupId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdasSlbAttachment resource.
 */
export interface EdasSlbAttachmentArgs {
    appId: pulumi.Input<string>;
    listenerPort?: pulumi.Input<number>;
    slbId: pulumi.Input<string>;
    slbIp: pulumi.Input<string>;
    type: pulumi.Input<string>;
    vserverGroupId?: pulumi.Input<string>;
}
