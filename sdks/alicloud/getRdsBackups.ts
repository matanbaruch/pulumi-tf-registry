// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdsBackups(args: GetRdsBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetRdsBackupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getRdsBackups:getRdsBackups", {
        "backupMode": args.backupMode,
        "backupStatus": args.backupStatus,
        "dbInstanceId": args.dbInstanceId,
        "endTime": args.endTime,
        "id": args.id,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "startTime": args.startTime,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdsBackups.
 */
export interface GetRdsBackupsArgs {
    backupMode?: string;
    backupStatus?: string;
    dbInstanceId: string;
    endTime?: string;
    id?: string;
    ids?: string[];
    outputFile?: string;
    startTime?: string;
}

/**
 * A collection of values returned by getRdsBackups.
 */
export interface GetRdsBackupsResult {
    readonly backupMode?: string;
    readonly backupStatus?: string;
    readonly backups: outputs.GetRdsBackupsBackup[];
    readonly dbInstanceId: string;
    readonly endTime?: string;
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly startTime?: string;
}
export function getRdsBackupsOutput(args: GetRdsBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdsBackupsResult> {
    return pulumi.output(args).apply((a: any) => getRdsBackups(a, opts))
}

/**
 * A collection of arguments for invoking getRdsBackups.
 */
export interface GetRdsBackupsOutputArgs {
    backupMode?: pulumi.Input<string>;
    backupStatus?: pulumi.Input<string>;
    dbInstanceId: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
}
