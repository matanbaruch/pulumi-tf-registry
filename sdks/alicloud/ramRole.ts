// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RamRole extends pulumi.CustomResource {
    /**
     * Get an existing RamRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RamRoleState, opts?: pulumi.CustomResourceOptions): RamRole {
        return new RamRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ramRole:RamRole';

    /**
     * Returns true if the given object is an instance of RamRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RamRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RamRole.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly document!: pulumi.Output<string>;
    public readonly force!: pulumi.Output<boolean | undefined>;
    public readonly maxSessionDuration!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly ramUsers!: pulumi.Output<string[]>;
    public /*out*/ readonly roleId!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly services!: pulumi.Output<string[]>;
    public readonly timeouts!: pulumi.Output<outputs.RamRoleTimeouts | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a RamRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RamRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RamRoleArgs | RamRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RamRoleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["document"] = state ? state.document : undefined;
            resourceInputs["force"] = state ? state.force : undefined;
            resourceInputs["maxSessionDuration"] = state ? state.maxSessionDuration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ramUsers"] = state ? state.ramUsers : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["services"] = state ? state.services : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as RamRoleArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["document"] = args ? args.document : undefined;
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["maxSessionDuration"] = args ? args.maxSessionDuration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ramUsers"] = args ? args.ramUsers : undefined;
            resourceInputs["services"] = args ? args.services : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["roleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RamRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RamRole resources.
 */
export interface RamRoleState {
    arn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    document?: pulumi.Input<string>;
    force?: pulumi.Input<boolean>;
    maxSessionDuration?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    ramUsers?: pulumi.Input<pulumi.Input<string>[]>;
    roleId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    services?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.RamRoleTimeouts>;
    /**
     * @deprecated Deprecated
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RamRole resource.
 */
export interface RamRoleArgs {
    description?: pulumi.Input<string>;
    document?: pulumi.Input<string>;
    force?: pulumi.Input<boolean>;
    maxSessionDuration?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    ramUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    services?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.RamRoleTimeouts>;
    /**
     * @deprecated Deprecated
     */
    version?: pulumi.Input<string>;
}
