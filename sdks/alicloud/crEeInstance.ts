// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CrEeInstance extends pulumi.CustomResource {
    /**
     * Get an existing CrEeInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CrEeInstanceState, opts?: pulumi.CustomResourceOptions): CrEeInstance {
        return new CrEeInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/crEeInstance:CrEeInstance';

    /**
     * Returns true if the given object is an instance of CrEeInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CrEeInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CrEeInstance.__pulumiType;
    }

    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    public readonly customOssBucket!: pulumi.Output<string | undefined>;
    public /*out*/ readonly endTime!: pulumi.Output<string>;
    public readonly instanceName!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string>;
    public readonly kmsEncryptedPassword!: pulumi.Output<string | undefined>;
    public readonly kmsEncryptionContext!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly paymentType!: pulumi.Output<string | undefined>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly renewPeriod!: pulumi.Output<number | undefined>;
    public readonly renewalStatus!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CrEeInstanceTimeouts | undefined>;

    /**
     * Create a CrEeInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CrEeInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CrEeInstanceArgs | CrEeInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CrEeInstanceState | undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["customOssBucket"] = state ? state.customOssBucket : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["kmsEncryptedPassword"] = state ? state.kmsEncryptedPassword : undefined;
            resourceInputs["kmsEncryptionContext"] = state ? state.kmsEncryptionContext : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["renewPeriod"] = state ? state.renewPeriod : undefined;
            resourceInputs["renewalStatus"] = state ? state.renewalStatus : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CrEeInstanceArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            resourceInputs["customOssBucket"] = args ? args.customOssBucket : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["kmsEncryptedPassword"] = args ? args.kmsEncryptedPassword : undefined;
            resourceInputs["kmsEncryptionContext"] = args ? args.kmsEncryptionContext : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["renewPeriod"] = args ? args.renewPeriod : undefined;
            resourceInputs["renewalStatus"] = args ? args.renewalStatus : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["endTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CrEeInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CrEeInstance resources.
 */
export interface CrEeInstanceState {
    createdTime?: pulumi.Input<string>;
    customOssBucket?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    kmsEncryptedPassword?: pulumi.Input<string>;
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    password?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    renewPeriod?: pulumi.Input<number>;
    renewalStatus?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CrEeInstanceTimeouts>;
}

/**
 * The set of arguments for constructing a CrEeInstance resource.
 */
export interface CrEeInstanceArgs {
    customOssBucket?: pulumi.Input<string>;
    instanceName: pulumi.Input<string>;
    instanceType: pulumi.Input<string>;
    kmsEncryptedPassword?: pulumi.Input<string>;
    kmsEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    password?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    renewPeriod?: pulumi.Input<number>;
    renewalStatus?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CrEeInstanceTimeouts>;
}
