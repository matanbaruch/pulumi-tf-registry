// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCsClusterCredential(args: GetCsClusterCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetCsClusterCredentialResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCsClusterCredential:getCsClusterCredential", {
        "clusterId": args.clusterId,
        "id": args.id,
        "outputFile": args.outputFile,
        "temporaryDurationMinutes": args.temporaryDurationMinutes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCsClusterCredential.
 */
export interface GetCsClusterCredentialArgs {
    clusterId: string;
    id?: string;
    outputFile?: string;
    temporaryDurationMinutes?: number;
}

/**
 * A collection of values returned by getCsClusterCredential.
 */
export interface GetCsClusterCredentialResult {
    readonly certificateAuthority: {[key: string]: string};
    readonly clusterId: string;
    readonly clusterName: string;
    readonly expiration: string;
    readonly id: string;
    readonly kubeConfig: string;
    readonly outputFile?: string;
    readonly temporaryDurationMinutes?: number;
}
export function getCsClusterCredentialOutput(args: GetCsClusterCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCsClusterCredentialResult> {
    return pulumi.output(args).apply((a: any) => getCsClusterCredential(a, opts))
}

/**
 * A collection of arguments for invoking getCsClusterCredential.
 */
export interface GetCsClusterCredentialOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    temporaryDurationMinutes?: pulumi.Input<number>;
}
