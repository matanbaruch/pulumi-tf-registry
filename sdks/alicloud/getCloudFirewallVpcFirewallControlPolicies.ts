// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudFirewallVpcFirewallControlPolicies(args: GetCloudFirewallVpcFirewallControlPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudFirewallVpcFirewallControlPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCloudFirewallVpcFirewallControlPolicies:getCloudFirewallVpcFirewallControlPolicies", {
        "aclAction": args.aclAction,
        "aclUuid": args.aclUuid,
        "description": args.description,
        "destination": args.destination,
        "id": args.id,
        "ids": args.ids,
        "lang": args.lang,
        "memberUid": args.memberUid,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "proto": args.proto,
        "release": args.release,
        "source": args.source,
        "vpcFirewallId": args.vpcFirewallId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudFirewallVpcFirewallControlPolicies.
 */
export interface GetCloudFirewallVpcFirewallControlPoliciesArgs {
    aclAction?: string;
    aclUuid?: string;
    description?: string;
    destination?: string;
    id?: string;
    ids?: string[];
    lang?: string;
    memberUid?: string;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    proto?: string;
    release?: boolean;
    source?: string;
    vpcFirewallId: string;
}

/**
 * A collection of values returned by getCloudFirewallVpcFirewallControlPolicies.
 */
export interface GetCloudFirewallVpcFirewallControlPoliciesResult {
    readonly aclAction?: string;
    readonly aclUuid?: string;
    readonly description?: string;
    readonly destination?: string;
    readonly id: string;
    readonly ids: string[];
    readonly lang?: string;
    readonly memberUid?: string;
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly policies: outputs.GetCloudFirewallVpcFirewallControlPoliciesPolicy[];
    readonly proto?: string;
    readonly release?: boolean;
    readonly source?: string;
    readonly vpcFirewallId: string;
}
export function getCloudFirewallVpcFirewallControlPoliciesOutput(args: GetCloudFirewallVpcFirewallControlPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudFirewallVpcFirewallControlPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getCloudFirewallVpcFirewallControlPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getCloudFirewallVpcFirewallControlPolicies.
 */
export interface GetCloudFirewallVpcFirewallControlPoliciesOutputArgs {
    aclAction?: pulumi.Input<string>;
    aclUuid?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    destination?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    lang?: pulumi.Input<string>;
    memberUid?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    proto?: pulumi.Input<string>;
    release?: pulumi.Input<boolean>;
    source?: pulumi.Input<string>;
    vpcFirewallId: pulumi.Input<string>;
}
