// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Fcv3Alias extends pulumi.CustomResource {
    /**
     * Get an existing Fcv3Alias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Fcv3AliasState, opts?: pulumi.CustomResourceOptions): Fcv3Alias {
        return new Fcv3Alias(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/fcv3Alias:Fcv3Alias';

    /**
     * Returns true if the given object is an instance of Fcv3Alias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Fcv3Alias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Fcv3Alias.__pulumiType;
    }

    public readonly additionalVersionWeight!: pulumi.Output<{[key: string]: number} | undefined>;
    public readonly aliasName!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly functionName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.Fcv3AliasTimeouts | undefined>;
    public readonly versionId!: pulumi.Output<string | undefined>;

    /**
     * Create a Fcv3Alias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Fcv3AliasArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Fcv3AliasArgs | Fcv3AliasState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Fcv3AliasState | undefined;
            resourceInputs["additionalVersionWeight"] = state ? state.additionalVersionWeight : undefined;
            resourceInputs["aliasName"] = state ? state.aliasName : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["functionName"] = state ? state.functionName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as Fcv3AliasArgs | undefined;
            if ((!args || args.functionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'functionName'");
            }
            resourceInputs["additionalVersionWeight"] = args ? args.additionalVersionWeight : undefined;
            resourceInputs["aliasName"] = args ? args.aliasName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["functionName"] = args ? args.functionName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["versionId"] = args ? args.versionId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Fcv3Alias.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Fcv3Alias resources.
 */
export interface Fcv3AliasState {
    additionalVersionWeight?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    aliasName?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    functionName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.Fcv3AliasTimeouts>;
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Fcv3Alias resource.
 */
export interface Fcv3AliasArgs {
    additionalVersionWeight?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    aliasName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    functionName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.Fcv3AliasTimeouts>;
    versionId?: pulumi.Input<string>;
}
