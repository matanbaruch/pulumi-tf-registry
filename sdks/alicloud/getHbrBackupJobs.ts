// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHbrBackupJobs(args: GetHbrBackupJobsArgs, opts?: pulumi.InvokeOptions): Promise<GetHbrBackupJobsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getHbrBackupJobs:getHbrBackupJobs", {
        "filters": args.filters,
        "id": args.id,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "sortDirection": args.sortDirection,
        "sourceType": args.sourceType,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHbrBackupJobs.
 */
export interface GetHbrBackupJobsArgs {
    filters?: inputs.GetHbrBackupJobsFilter[];
    id?: string;
    ids?: string[];
    outputFile?: string;
    sortDirection?: string;
    sourceType: string;
    status?: string;
}

/**
 * A collection of values returned by getHbrBackupJobs.
 */
export interface GetHbrBackupJobsResult {
    readonly filters?: outputs.GetHbrBackupJobsFilter[];
    readonly id: string;
    readonly ids: string[];
    readonly jobs: outputs.GetHbrBackupJobsJob[];
    readonly outputFile?: string;
    readonly sortDirection?: string;
    readonly sourceType: string;
    readonly status?: string;
}
export function getHbrBackupJobsOutput(args: GetHbrBackupJobsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHbrBackupJobsResult> {
    return pulumi.output(args).apply((a: any) => getHbrBackupJobs(a, opts))
}

/**
 * A collection of arguments for invoking getHbrBackupJobs.
 */
export interface GetHbrBackupJobsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetHbrBackupJobsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    sortDirection?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
