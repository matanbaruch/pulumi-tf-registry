// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCmsAlarmContacts(args?: GetCmsAlarmContactsArgs, opts?: pulumi.InvokeOptions): Promise<GetCmsAlarmContactsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCmsAlarmContacts:getCmsAlarmContacts", {
        "chanelType": args.chanelType,
        "chanelValue": args.chanelValue,
        "id": args.id,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCmsAlarmContacts.
 */
export interface GetCmsAlarmContactsArgs {
    chanelType?: string;
    chanelValue?: string;
    id?: string;
    ids?: string[];
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getCmsAlarmContacts.
 */
export interface GetCmsAlarmContactsResult {
    readonly chanelType?: string;
    readonly chanelValue?: string;
    readonly contacts: outputs.GetCmsAlarmContactsContact[];
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
}
export function getCmsAlarmContactsOutput(args?: GetCmsAlarmContactsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmsAlarmContactsResult> {
    return pulumi.output(args).apply((a: any) => getCmsAlarmContacts(a, opts))
}

/**
 * A collection of arguments for invoking getCmsAlarmContacts.
 */
export interface GetCmsAlarmContactsOutputArgs {
    chanelType?: pulumi.Input<string>;
    chanelValue?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
