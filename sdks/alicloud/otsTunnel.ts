// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OtsTunnel extends pulumi.CustomResource {
    /**
     * Get an existing OtsTunnel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OtsTunnelState, opts?: pulumi.CustomResourceOptions): OtsTunnel {
        return new OtsTunnel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/otsTunnel:OtsTunnel';

    /**
     * Returns true if the given object is an instance of OtsTunnel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OtsTunnel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OtsTunnel.__pulumiType;
    }

    public /*out*/ readonly channels!: pulumi.Output<outputs.OtsTunnelChannel[]>;
    public /*out*/ readonly createTime!: pulumi.Output<number>;
    public /*out*/ readonly expired!: pulumi.Output<boolean>;
    public readonly instanceName!: pulumi.Output<string>;
    public readonly tableName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.OtsTunnelTimeouts | undefined>;
    public /*out*/ readonly tunnelId!: pulumi.Output<string>;
    public readonly tunnelName!: pulumi.Output<string>;
    public /*out*/ readonly tunnelRpo!: pulumi.Output<number>;
    public /*out*/ readonly tunnelStage!: pulumi.Output<string>;
    public readonly tunnelType!: pulumi.Output<string>;

    /**
     * Create a OtsTunnel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OtsTunnelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OtsTunnelArgs | OtsTunnelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OtsTunnelState | undefined;
            resourceInputs["channels"] = state ? state.channels : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["expired"] = state ? state.expired : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["tableName"] = state ? state.tableName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["tunnelId"] = state ? state.tunnelId : undefined;
            resourceInputs["tunnelName"] = state ? state.tunnelName : undefined;
            resourceInputs["tunnelRpo"] = state ? state.tunnelRpo : undefined;
            resourceInputs["tunnelStage"] = state ? state.tunnelStage : undefined;
            resourceInputs["tunnelType"] = state ? state.tunnelType : undefined;
        } else {
            const args = argsOrState as OtsTunnelArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.tableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableName'");
            }
            if ((!args || args.tunnelName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tunnelName'");
            }
            if ((!args || args.tunnelType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tunnelType'");
            }
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["tunnelName"] = args ? args.tunnelName : undefined;
            resourceInputs["tunnelType"] = args ? args.tunnelType : undefined;
            resourceInputs["channels"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expired"] = undefined /*out*/;
            resourceInputs["tunnelId"] = undefined /*out*/;
            resourceInputs["tunnelRpo"] = undefined /*out*/;
            resourceInputs["tunnelStage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OtsTunnel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OtsTunnel resources.
 */
export interface OtsTunnelState {
    channels?: pulumi.Input<pulumi.Input<inputs.OtsTunnelChannel>[]>;
    createTime?: pulumi.Input<number>;
    expired?: pulumi.Input<boolean>;
    instanceName?: pulumi.Input<string>;
    tableName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OtsTunnelTimeouts>;
    tunnelId?: pulumi.Input<string>;
    tunnelName?: pulumi.Input<string>;
    tunnelRpo?: pulumi.Input<number>;
    tunnelStage?: pulumi.Input<string>;
    tunnelType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OtsTunnel resource.
 */
export interface OtsTunnelArgs {
    instanceName: pulumi.Input<string>;
    tableName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OtsTunnelTimeouts>;
    tunnelName: pulumi.Input<string>;
    tunnelType: pulumi.Input<string>;
}
