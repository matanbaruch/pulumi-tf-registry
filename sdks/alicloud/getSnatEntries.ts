// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnatEntries(args: GetSnatEntriesArgs, opts?: pulumi.InvokeOptions): Promise<GetSnatEntriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getSnatEntries:getSnatEntries", {
        "id": args.id,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "snatEntryName": args.snatEntryName,
        "snatIp": args.snatIp,
        "snatTableId": args.snatTableId,
        "sourceCidr": args.sourceCidr,
        "sourceVswitchId": args.sourceVswitchId,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSnatEntries.
 */
export interface GetSnatEntriesArgs {
    id?: string;
    ids?: string[];
    nameRegex?: string;
    outputFile?: string;
    snatEntryName?: string;
    snatIp?: string;
    snatTableId: string;
    sourceCidr?: string;
    sourceVswitchId?: string;
    status?: string;
}

/**
 * A collection of values returned by getSnatEntries.
 */
export interface GetSnatEntriesResult {
    readonly entries: outputs.GetSnatEntriesEntry[];
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly snatEntryName?: string;
    readonly snatIp?: string;
    readonly snatTableId: string;
    readonly sourceCidr?: string;
    readonly sourceVswitchId?: string;
    readonly status?: string;
}
export function getSnatEntriesOutput(args: GetSnatEntriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnatEntriesResult> {
    return pulumi.output(args).apply((a: any) => getSnatEntries(a, opts))
}

/**
 * A collection of arguments for invoking getSnatEntries.
 */
export interface GetSnatEntriesOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    snatEntryName?: pulumi.Input<string>;
    snatIp?: pulumi.Input<string>;
    snatTableId: pulumi.Input<string>;
    sourceCidr?: pulumi.Input<string>;
    sourceVswitchId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
