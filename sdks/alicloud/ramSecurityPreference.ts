// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RamSecurityPreference extends pulumi.CustomResource {
    /**
     * Get an existing RamSecurityPreference resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RamSecurityPreferenceState, opts?: pulumi.CustomResourceOptions): RamSecurityPreference {
        return new RamSecurityPreference(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ramSecurityPreference:RamSecurityPreference';

    /**
     * Returns true if the given object is an instance of RamSecurityPreference.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RamSecurityPreference {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RamSecurityPreference.__pulumiType;
    }

    public readonly allowUserToChangePassword!: pulumi.Output<boolean>;
    public readonly allowUserToManageAccessKeys!: pulumi.Output<boolean>;
    public readonly allowUserToManageMfaDevices!: pulumi.Output<boolean>;
    public readonly enableSaveMfaTicket!: pulumi.Output<boolean>;
    public readonly enforceMfaForLogin!: pulumi.Output<boolean>;
    public readonly loginNetworkMasks!: pulumi.Output<string | undefined>;
    public readonly loginSessionDuration!: pulumi.Output<number>;

    /**
     * Create a RamSecurityPreference resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RamSecurityPreferenceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RamSecurityPreferenceArgs | RamSecurityPreferenceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RamSecurityPreferenceState | undefined;
            resourceInputs["allowUserToChangePassword"] = state ? state.allowUserToChangePassword : undefined;
            resourceInputs["allowUserToManageAccessKeys"] = state ? state.allowUserToManageAccessKeys : undefined;
            resourceInputs["allowUserToManageMfaDevices"] = state ? state.allowUserToManageMfaDevices : undefined;
            resourceInputs["enableSaveMfaTicket"] = state ? state.enableSaveMfaTicket : undefined;
            resourceInputs["enforceMfaForLogin"] = state ? state.enforceMfaForLogin : undefined;
            resourceInputs["loginNetworkMasks"] = state ? state.loginNetworkMasks : undefined;
            resourceInputs["loginSessionDuration"] = state ? state.loginSessionDuration : undefined;
        } else {
            const args = argsOrState as RamSecurityPreferenceArgs | undefined;
            resourceInputs["allowUserToChangePassword"] = args ? args.allowUserToChangePassword : undefined;
            resourceInputs["allowUserToManageAccessKeys"] = args ? args.allowUserToManageAccessKeys : undefined;
            resourceInputs["allowUserToManageMfaDevices"] = args ? args.allowUserToManageMfaDevices : undefined;
            resourceInputs["enableSaveMfaTicket"] = args ? args.enableSaveMfaTicket : undefined;
            resourceInputs["enforceMfaForLogin"] = args ? args.enforceMfaForLogin : undefined;
            resourceInputs["loginNetworkMasks"] = args ? args.loginNetworkMasks : undefined;
            resourceInputs["loginSessionDuration"] = args ? args.loginSessionDuration : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RamSecurityPreference.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RamSecurityPreference resources.
 */
export interface RamSecurityPreferenceState {
    allowUserToChangePassword?: pulumi.Input<boolean>;
    allowUserToManageAccessKeys?: pulumi.Input<boolean>;
    allowUserToManageMfaDevices?: pulumi.Input<boolean>;
    enableSaveMfaTicket?: pulumi.Input<boolean>;
    enforceMfaForLogin?: pulumi.Input<boolean>;
    loginNetworkMasks?: pulumi.Input<string>;
    loginSessionDuration?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RamSecurityPreference resource.
 */
export interface RamSecurityPreferenceArgs {
    allowUserToChangePassword?: pulumi.Input<boolean>;
    allowUserToManageAccessKeys?: pulumi.Input<boolean>;
    allowUserToManageMfaDevices?: pulumi.Input<boolean>;
    enableSaveMfaTicket?: pulumi.Input<boolean>;
    enforceMfaForLogin?: pulumi.Input<boolean>;
    loginNetworkMasks?: pulumi.Input<string>;
    loginSessionDuration?: pulumi.Input<number>;
}
