// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GaBasicEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing GaBasicEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GaBasicEndpointState, opts?: pulumi.CustomResourceOptions): GaBasicEndpoint {
        return new GaBasicEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/gaBasicEndpoint:GaBasicEndpoint';

    /**
     * Returns true if the given object is an instance of GaBasicEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GaBasicEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GaBasicEndpoint.__pulumiType;
    }

    public readonly acceleratorId!: pulumi.Output<string>;
    public readonly basicEndpointName!: pulumi.Output<string | undefined>;
    public readonly endpointAddress!: pulumi.Output<string>;
    public readonly endpointGroupId!: pulumi.Output<string>;
    public /*out*/ readonly endpointId!: pulumi.Output<string>;
    public readonly endpointSubAddress!: pulumi.Output<string | undefined>;
    public readonly endpointSubAddressType!: pulumi.Output<string | undefined>;
    public readonly endpointType!: pulumi.Output<string>;
    public readonly endpointZoneId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.GaBasicEndpointTimeouts | undefined>;

    /**
     * Create a GaBasicEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GaBasicEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GaBasicEndpointArgs | GaBasicEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GaBasicEndpointState | undefined;
            resourceInputs["acceleratorId"] = state ? state.acceleratorId : undefined;
            resourceInputs["basicEndpointName"] = state ? state.basicEndpointName : undefined;
            resourceInputs["endpointAddress"] = state ? state.endpointAddress : undefined;
            resourceInputs["endpointGroupId"] = state ? state.endpointGroupId : undefined;
            resourceInputs["endpointId"] = state ? state.endpointId : undefined;
            resourceInputs["endpointSubAddress"] = state ? state.endpointSubAddress : undefined;
            resourceInputs["endpointSubAddressType"] = state ? state.endpointSubAddressType : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
            resourceInputs["endpointZoneId"] = state ? state.endpointZoneId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as GaBasicEndpointArgs | undefined;
            if ((!args || args.acceleratorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceleratorId'");
            }
            if ((!args || args.endpointAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointAddress'");
            }
            if ((!args || args.endpointGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointGroupId'");
            }
            if ((!args || args.endpointType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointType'");
            }
            resourceInputs["acceleratorId"] = args ? args.acceleratorId : undefined;
            resourceInputs["basicEndpointName"] = args ? args.basicEndpointName : undefined;
            resourceInputs["endpointAddress"] = args ? args.endpointAddress : undefined;
            resourceInputs["endpointGroupId"] = args ? args.endpointGroupId : undefined;
            resourceInputs["endpointSubAddress"] = args ? args.endpointSubAddress : undefined;
            resourceInputs["endpointSubAddressType"] = args ? args.endpointSubAddressType : undefined;
            resourceInputs["endpointType"] = args ? args.endpointType : undefined;
            resourceInputs["endpointZoneId"] = args ? args.endpointZoneId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["endpointId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GaBasicEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GaBasicEndpoint resources.
 */
export interface GaBasicEndpointState {
    acceleratorId?: pulumi.Input<string>;
    basicEndpointName?: pulumi.Input<string>;
    endpointAddress?: pulumi.Input<string>;
    endpointGroupId?: pulumi.Input<string>;
    endpointId?: pulumi.Input<string>;
    endpointSubAddress?: pulumi.Input<string>;
    endpointSubAddressType?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    endpointZoneId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GaBasicEndpointTimeouts>;
}

/**
 * The set of arguments for constructing a GaBasicEndpoint resource.
 */
export interface GaBasicEndpointArgs {
    acceleratorId: pulumi.Input<string>;
    basicEndpointName?: pulumi.Input<string>;
    endpointAddress: pulumi.Input<string>;
    endpointGroupId: pulumi.Input<string>;
    endpointSubAddress?: pulumi.Input<string>;
    endpointSubAddressType?: pulumi.Input<string>;
    endpointType: pulumi.Input<string>;
    endpointZoneId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GaBasicEndpointTimeouts>;
}
