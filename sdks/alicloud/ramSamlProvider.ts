// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RamSamlProvider extends pulumi.CustomResource {
    /**
     * Get an existing RamSamlProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RamSamlProviderState, opts?: pulumi.CustomResourceOptions): RamSamlProvider {
        return new RamSamlProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ramSamlProvider:RamSamlProvider';

    /**
     * Returns true if the given object is an instance of RamSamlProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RamSamlProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RamSamlProvider.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly encodedsamlMetadataDocument!: pulumi.Output<string>;
    public readonly samlProviderName!: pulumi.Output<string>;
    public /*out*/ readonly updateDate!: pulumi.Output<string>;

    /**
     * Create a RamSamlProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RamSamlProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RamSamlProviderArgs | RamSamlProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RamSamlProviderState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["encodedsamlMetadataDocument"] = state ? state.encodedsamlMetadataDocument : undefined;
            resourceInputs["samlProviderName"] = state ? state.samlProviderName : undefined;
            resourceInputs["updateDate"] = state ? state.updateDate : undefined;
        } else {
            const args = argsOrState as RamSamlProviderArgs | undefined;
            if ((!args || args.encodedsamlMetadataDocument === undefined) && !opts.urn) {
                throw new Error("Missing required property 'encodedsamlMetadataDocument'");
            }
            if ((!args || args.samlProviderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'samlProviderName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["encodedsamlMetadataDocument"] = args ? args.encodedsamlMetadataDocument : undefined;
            resourceInputs["samlProviderName"] = args ? args.samlProviderName : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["updateDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RamSamlProvider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RamSamlProvider resources.
 */
export interface RamSamlProviderState {
    arn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    encodedsamlMetadataDocument?: pulumi.Input<string>;
    samlProviderName?: pulumi.Input<string>;
    updateDate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RamSamlProvider resource.
 */
export interface RamSamlProviderArgs {
    description?: pulumi.Input<string>;
    encodedsamlMetadataDocument: pulumi.Input<string>;
    samlProviderName: pulumi.Input<string>;
}
