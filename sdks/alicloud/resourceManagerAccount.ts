// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ResourceManagerAccount extends pulumi.CustomResource {
    /**
     * Get an existing ResourceManagerAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceManagerAccountState, opts?: pulumi.CustomResourceOptions): ResourceManagerAccount {
        return new ResourceManagerAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/resourceManagerAccount:ResourceManagerAccount';

    /**
     * Returns true if the given object is an instance of ResourceManagerAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceManagerAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceManagerAccount.__pulumiType;
    }

    public readonly abandonAbleCheckIds!: pulumi.Output<string[] | undefined>;
    public readonly accountNamePrefix!: pulumi.Output<string | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly folderId!: pulumi.Output<string>;
    public /*out*/ readonly joinMethod!: pulumi.Output<string>;
    public /*out*/ readonly joinTime!: pulumi.Output<string>;
    public /*out*/ readonly modifyTime!: pulumi.Output<string>;
    public readonly payerAccountId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly resourceDirectoryId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ResourceManagerAccountTimeouts | undefined>;
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ResourceManagerAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceManagerAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceManagerAccountArgs | ResourceManagerAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceManagerAccountState | undefined;
            resourceInputs["abandonAbleCheckIds"] = state ? state.abandonAbleCheckIds : undefined;
            resourceInputs["accountNamePrefix"] = state ? state.accountNamePrefix : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["joinMethod"] = state ? state.joinMethod : undefined;
            resourceInputs["joinTime"] = state ? state.joinTime : undefined;
            resourceInputs["modifyTime"] = state ? state.modifyTime : undefined;
            resourceInputs["payerAccountId"] = state ? state.payerAccountId : undefined;
            resourceInputs["resourceDirectoryId"] = state ? state.resourceDirectoryId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ResourceManagerAccountArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["abandonAbleCheckIds"] = args ? args.abandonAbleCheckIds : undefined;
            resourceInputs["accountNamePrefix"] = args ? args.accountNamePrefix : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["payerAccountId"] = args ? args.payerAccountId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["joinMethod"] = undefined /*out*/;
            resourceInputs["joinTime"] = undefined /*out*/;
            resourceInputs["modifyTime"] = undefined /*out*/;
            resourceInputs["resourceDirectoryId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceManagerAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ResourceManagerAccount resources.
 */
export interface ResourceManagerAccountState {
    abandonAbleCheckIds?: pulumi.Input<pulumi.Input<string>[]>;
    accountNamePrefix?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    joinMethod?: pulumi.Input<string>;
    joinTime?: pulumi.Input<string>;
    modifyTime?: pulumi.Input<string>;
    payerAccountId?: pulumi.Input<string>;
    resourceDirectoryId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ResourceManagerAccountTimeouts>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceManagerAccount resource.
 */
export interface ResourceManagerAccountArgs {
    abandonAbleCheckIds?: pulumi.Input<pulumi.Input<string>[]>;
    accountNamePrefix?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    payerAccountId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ResourceManagerAccountTimeouts>;
}
