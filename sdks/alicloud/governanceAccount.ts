// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GovernanceAccount extends pulumi.CustomResource {
    /**
     * Get an existing GovernanceAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GovernanceAccountState, opts?: pulumi.CustomResourceOptions): GovernanceAccount {
        return new GovernanceAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/governanceAccount:GovernanceAccount';

    /**
     * Returns true if the given object is an instance of GovernanceAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GovernanceAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GovernanceAccount.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<number>;
    public readonly accountNamePrefix!: pulumi.Output<string | undefined>;
    public readonly baselineId!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string | undefined>;
    public readonly folderId!: pulumi.Output<string | undefined>;
    public readonly payerAccountId!: pulumi.Output<number | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.GovernanceAccountTimeouts | undefined>;

    /**
     * Create a GovernanceAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GovernanceAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GovernanceAccountArgs | GovernanceAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GovernanceAccountState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["accountNamePrefix"] = state ? state.accountNamePrefix : undefined;
            resourceInputs["baselineId"] = state ? state.baselineId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["folderId"] = state ? state.folderId : undefined;
            resourceInputs["payerAccountId"] = state ? state.payerAccountId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as GovernanceAccountArgs | undefined;
            if ((!args || args.baselineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["accountNamePrefix"] = args ? args.accountNamePrefix : undefined;
            resourceInputs["baselineId"] = args ? args.baselineId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["folderId"] = args ? args.folderId : undefined;
            resourceInputs["payerAccountId"] = args ? args.payerAccountId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GovernanceAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GovernanceAccount resources.
 */
export interface GovernanceAccountState {
    accountId?: pulumi.Input<number>;
    accountNamePrefix?: pulumi.Input<string>;
    baselineId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    payerAccountId?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GovernanceAccountTimeouts>;
}

/**
 * The set of arguments for constructing a GovernanceAccount resource.
 */
export interface GovernanceAccountArgs {
    accountId?: pulumi.Input<number>;
    accountNamePrefix?: pulumi.Input<string>;
    baselineId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    payerAccountId?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.GovernanceAccountTimeouts>;
}
