// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PolardbBackupPolicy extends pulumi.CustomResource {
    /**
     * Get an existing PolardbBackupPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolardbBackupPolicyState, opts?: pulumi.CustomResourceOptions): PolardbBackupPolicy {
        return new PolardbBackupPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/polardbBackupPolicy:PolardbBackupPolicy';

    /**
     * Returns true if the given object is an instance of PolardbBackupPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolardbBackupPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolardbBackupPolicy.__pulumiType;
    }

    public readonly backupFrequency!: pulumi.Output<string>;
    public readonly backupRetentionPeriod!: pulumi.Output<string>;
    public readonly backupRetentionPolicyOnClusterDeletion!: pulumi.Output<string>;
    public readonly dataLevel1BackupFrequency!: pulumi.Output<string>;
    public readonly dataLevel1BackupPeriods!: pulumi.Output<string[]>;
    public readonly dataLevel1BackupRetentionPeriod!: pulumi.Output<number>;
    public readonly dataLevel1BackupTime!: pulumi.Output<string>;
    public readonly dataLevel2BackupAnotherRegionRegion!: pulumi.Output<string | undefined>;
    public readonly dataLevel2BackupAnotherRegionRetentionPeriod!: pulumi.Output<number>;
    public readonly dataLevel2BackupPeriods!: pulumi.Output<string[] | undefined>;
    public readonly dataLevel2BackupRetentionPeriod!: pulumi.Output<number>;
    public readonly dbClusterId!: pulumi.Output<string>;
    public /*out*/ readonly enableBackupLog!: pulumi.Output<number>;
    public readonly logBackupAnotherRegionRegion!: pulumi.Output<string | undefined>;
    public readonly logBackupAnotherRegionRetentionPeriod!: pulumi.Output<number | undefined>;
    public readonly logBackupRetentionPeriod!: pulumi.Output<number>;
    public readonly preferredBackupPeriods!: pulumi.Output<string[]>;
    public readonly preferredBackupTime!: pulumi.Output<string>;

    /**
     * Create a PolardbBackupPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolardbBackupPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolardbBackupPolicyArgs | PolardbBackupPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolardbBackupPolicyState | undefined;
            resourceInputs["backupFrequency"] = state ? state.backupFrequency : undefined;
            resourceInputs["backupRetentionPeriod"] = state ? state.backupRetentionPeriod : undefined;
            resourceInputs["backupRetentionPolicyOnClusterDeletion"] = state ? state.backupRetentionPolicyOnClusterDeletion : undefined;
            resourceInputs["dataLevel1BackupFrequency"] = state ? state.dataLevel1BackupFrequency : undefined;
            resourceInputs["dataLevel1BackupPeriods"] = state ? state.dataLevel1BackupPeriods : undefined;
            resourceInputs["dataLevel1BackupRetentionPeriod"] = state ? state.dataLevel1BackupRetentionPeriod : undefined;
            resourceInputs["dataLevel1BackupTime"] = state ? state.dataLevel1BackupTime : undefined;
            resourceInputs["dataLevel2BackupAnotherRegionRegion"] = state ? state.dataLevel2BackupAnotherRegionRegion : undefined;
            resourceInputs["dataLevel2BackupAnotherRegionRetentionPeriod"] = state ? state.dataLevel2BackupAnotherRegionRetentionPeriod : undefined;
            resourceInputs["dataLevel2BackupPeriods"] = state ? state.dataLevel2BackupPeriods : undefined;
            resourceInputs["dataLevel2BackupRetentionPeriod"] = state ? state.dataLevel2BackupRetentionPeriod : undefined;
            resourceInputs["dbClusterId"] = state ? state.dbClusterId : undefined;
            resourceInputs["enableBackupLog"] = state ? state.enableBackupLog : undefined;
            resourceInputs["logBackupAnotherRegionRegion"] = state ? state.logBackupAnotherRegionRegion : undefined;
            resourceInputs["logBackupAnotherRegionRetentionPeriod"] = state ? state.logBackupAnotherRegionRetentionPeriod : undefined;
            resourceInputs["logBackupRetentionPeriod"] = state ? state.logBackupRetentionPeriod : undefined;
            resourceInputs["preferredBackupPeriods"] = state ? state.preferredBackupPeriods : undefined;
            resourceInputs["preferredBackupTime"] = state ? state.preferredBackupTime : undefined;
        } else {
            const args = argsOrState as PolardbBackupPolicyArgs | undefined;
            if ((!args || args.dbClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbClusterId'");
            }
            resourceInputs["backupFrequency"] = args ? args.backupFrequency : undefined;
            resourceInputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            resourceInputs["backupRetentionPolicyOnClusterDeletion"] = args ? args.backupRetentionPolicyOnClusterDeletion : undefined;
            resourceInputs["dataLevel1BackupFrequency"] = args ? args.dataLevel1BackupFrequency : undefined;
            resourceInputs["dataLevel1BackupPeriods"] = args ? args.dataLevel1BackupPeriods : undefined;
            resourceInputs["dataLevel1BackupRetentionPeriod"] = args ? args.dataLevel1BackupRetentionPeriod : undefined;
            resourceInputs["dataLevel1BackupTime"] = args ? args.dataLevel1BackupTime : undefined;
            resourceInputs["dataLevel2BackupAnotherRegionRegion"] = args ? args.dataLevel2BackupAnotherRegionRegion : undefined;
            resourceInputs["dataLevel2BackupAnotherRegionRetentionPeriod"] = args ? args.dataLevel2BackupAnotherRegionRetentionPeriod : undefined;
            resourceInputs["dataLevel2BackupPeriods"] = args ? args.dataLevel2BackupPeriods : undefined;
            resourceInputs["dataLevel2BackupRetentionPeriod"] = args ? args.dataLevel2BackupRetentionPeriod : undefined;
            resourceInputs["dbClusterId"] = args ? args.dbClusterId : undefined;
            resourceInputs["logBackupAnotherRegionRegion"] = args ? args.logBackupAnotherRegionRegion : undefined;
            resourceInputs["logBackupAnotherRegionRetentionPeriod"] = args ? args.logBackupAnotherRegionRetentionPeriod : undefined;
            resourceInputs["logBackupRetentionPeriod"] = args ? args.logBackupRetentionPeriod : undefined;
            resourceInputs["preferredBackupPeriods"] = args ? args.preferredBackupPeriods : undefined;
            resourceInputs["preferredBackupTime"] = args ? args.preferredBackupTime : undefined;
            resourceInputs["enableBackupLog"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolardbBackupPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolardbBackupPolicy resources.
 */
export interface PolardbBackupPolicyState {
    backupFrequency?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<string>;
    backupRetentionPolicyOnClusterDeletion?: pulumi.Input<string>;
    dataLevel1BackupFrequency?: pulumi.Input<string>;
    dataLevel1BackupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    dataLevel1BackupRetentionPeriod?: pulumi.Input<number>;
    dataLevel1BackupTime?: pulumi.Input<string>;
    dataLevel2BackupAnotherRegionRegion?: pulumi.Input<string>;
    dataLevel2BackupAnotherRegionRetentionPeriod?: pulumi.Input<number>;
    dataLevel2BackupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    dataLevel2BackupRetentionPeriod?: pulumi.Input<number>;
    dbClusterId?: pulumi.Input<string>;
    enableBackupLog?: pulumi.Input<number>;
    logBackupAnotherRegionRegion?: pulumi.Input<string>;
    logBackupAnotherRegionRetentionPeriod?: pulumi.Input<number>;
    logBackupRetentionPeriod?: pulumi.Input<number>;
    preferredBackupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    preferredBackupTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolardbBackupPolicy resource.
 */
export interface PolardbBackupPolicyArgs {
    backupFrequency?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<string>;
    backupRetentionPolicyOnClusterDeletion?: pulumi.Input<string>;
    dataLevel1BackupFrequency?: pulumi.Input<string>;
    dataLevel1BackupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    dataLevel1BackupRetentionPeriod?: pulumi.Input<number>;
    dataLevel1BackupTime?: pulumi.Input<string>;
    dataLevel2BackupAnotherRegionRegion?: pulumi.Input<string>;
    dataLevel2BackupAnotherRegionRetentionPeriod?: pulumi.Input<number>;
    dataLevel2BackupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    dataLevel2BackupRetentionPeriod?: pulumi.Input<number>;
    dbClusterId: pulumi.Input<string>;
    logBackupAnotherRegionRegion?: pulumi.Input<string>;
    logBackupAnotherRegionRetentionPeriod?: pulumi.Input<number>;
    logBackupRetentionPeriod?: pulumi.Input<number>;
    preferredBackupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    preferredBackupTime?: pulumi.Input<string>;
}
