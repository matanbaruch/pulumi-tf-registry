// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcFlowLogs(args?: GetVpcFlowLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcFlowLogsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getVpcFlowLogs:getVpcFlowLogs", {
        "description": args.description,
        "flowLogName": args.flowLogName,
        "id": args.id,
        "ids": args.ids,
        "logStoreName": args.logStoreName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "status": args.status,
        "trafficType": args.trafficType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcFlowLogs.
 */
export interface GetVpcFlowLogsArgs {
    description?: string;
    flowLogName?: string;
    id?: string;
    ids?: string[];
    logStoreName?: string;
    nameRegex?: string;
    outputFile?: string;
    projectName?: string;
    resourceId?: string;
    resourceType?: string;
    status?: string;
    trafficType?: string;
}

/**
 * A collection of values returned by getVpcFlowLogs.
 */
export interface GetVpcFlowLogsResult {
    readonly description?: string;
    readonly flowLogName?: string;
    readonly id: string;
    readonly ids: string[];
    readonly logStoreName?: string;
    readonly logs: outputs.GetVpcFlowLogsLog[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly projectName?: string;
    readonly resourceId?: string;
    readonly resourceType?: string;
    readonly status?: string;
    readonly trafficType?: string;
}
export function getVpcFlowLogsOutput(args?: GetVpcFlowLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcFlowLogsResult> {
    return pulumi.output(args).apply((a: any) => getVpcFlowLogs(a, opts))
}

/**
 * A collection of arguments for invoking getVpcFlowLogs.
 */
export interface GetVpcFlowLogsOutputArgs {
    description?: pulumi.Input<string>;
    flowLogName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    logStoreName?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    trafficType?: pulumi.Input<string>;
}
