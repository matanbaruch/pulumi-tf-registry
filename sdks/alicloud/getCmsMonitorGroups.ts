// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCmsMonitorGroups(args?: GetCmsMonitorGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetCmsMonitorGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCmsMonitorGroups:getCmsMonitorGroups", {
        "dynamicTagRuleId": args.dynamicTagRuleId,
        "id": args.id,
        "ids": args.ids,
        "includeTemplateHistory": args.includeTemplateHistory,
        "keyword": args.keyword,
        "monitorGroupName": args.monitorGroupName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "selectContactGroups": args.selectContactGroups,
        "tags": args.tags,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCmsMonitorGroups.
 */
export interface GetCmsMonitorGroupsArgs {
    dynamicTagRuleId?: string;
    id?: string;
    ids?: string[];
    includeTemplateHistory?: boolean;
    keyword?: string;
    monitorGroupName?: string;
    nameRegex?: string;
    outputFile?: string;
    selectContactGroups?: boolean;
    tags?: {[key: string]: string};
    type?: string;
}

/**
 * A collection of values returned by getCmsMonitorGroups.
 */
export interface GetCmsMonitorGroupsResult {
    readonly dynamicTagRuleId?: string;
    readonly groups: outputs.GetCmsMonitorGroupsGroup[];
    readonly id: string;
    readonly ids: string[];
    readonly includeTemplateHistory?: boolean;
    readonly keyword?: string;
    readonly monitorGroupName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly selectContactGroups?: boolean;
    readonly tags?: {[key: string]: string};
    readonly type?: string;
}
export function getCmsMonitorGroupsOutput(args?: GetCmsMonitorGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmsMonitorGroupsResult> {
    return pulumi.output(args).apply((a: any) => getCmsMonitorGroups(a, opts))
}

/**
 * A collection of arguments for invoking getCmsMonitorGroups.
 */
export interface GetCmsMonitorGroupsOutputArgs {
    dynamicTagRuleId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    includeTemplateHistory?: pulumi.Input<boolean>;
    keyword?: pulumi.Input<string>;
    monitorGroupName?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    selectContactGroups?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
}
