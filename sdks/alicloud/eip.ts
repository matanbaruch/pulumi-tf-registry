// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Eip extends pulumi.CustomResource {
    /**
     * Get an existing Eip resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EipState, opts?: pulumi.CustomResourceOptions): Eip {
        return new Eip(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/eip:Eip';

    /**
     * Returns true if the given object is an instance of Eip.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Eip {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Eip.__pulumiType;
    }

    public readonly activityId!: pulumi.Output<string | undefined>;
    public readonly addressName!: pulumi.Output<string>;
    public readonly allocationId!: pulumi.Output<string>;
    public readonly autoPay!: pulumi.Output<boolean | undefined>;
    public readonly bandwidth!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly deletionProtection!: pulumi.Output<boolean>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly highDefinitionMonitorLogStatus!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly instanceChargeType!: pulumi.Output<string>;
    public readonly internetChargeType!: pulumi.Output<string>;
    public readonly ipAddress!: pulumi.Output<string>;
    public readonly isp!: pulumi.Output<string>;
    public readonly logProject!: pulumi.Output<string | undefined>;
    public readonly logStore!: pulumi.Output<string | undefined>;
    public readonly mode!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly name!: pulumi.Output<string>;
    public readonly netmode!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly pricingCycle!: pulumi.Output<string | undefined>;
    public readonly publicIpAddressPoolId!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly securityProtectionTypes!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.EipTimeouts | undefined>;
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a Eip resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EipArgs | EipState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EipState | undefined;
            resourceInputs["activityId"] = state ? state.activityId : undefined;
            resourceInputs["addressName"] = state ? state.addressName : undefined;
            resourceInputs["allocationId"] = state ? state.allocationId : undefined;
            resourceInputs["autoPay"] = state ? state.autoPay : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["highDefinitionMonitorLogStatus"] = state ? state.highDefinitionMonitorLogStatus : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["internetChargeType"] = state ? state.internetChargeType : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["isp"] = state ? state.isp : undefined;
            resourceInputs["logProject"] = state ? state.logProject : undefined;
            resourceInputs["logStore"] = state ? state.logStore : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netmode"] = state ? state.netmode : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["pricingCycle"] = state ? state.pricingCycle : undefined;
            resourceInputs["publicIpAddressPoolId"] = state ? state.publicIpAddressPoolId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["securityProtectionTypes"] = state ? state.securityProtectionTypes : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as EipArgs | undefined;
            resourceInputs["activityId"] = args ? args.activityId : undefined;
            resourceInputs["addressName"] = args ? args.addressName : undefined;
            resourceInputs["allocationId"] = args ? args.allocationId : undefined;
            resourceInputs["autoPay"] = args ? args.autoPay : undefined;
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["highDefinitionMonitorLogStatus"] = args ? args.highDefinitionMonitorLogStatus : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["internetChargeType"] = args ? args.internetChargeType : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["isp"] = args ? args.isp : undefined;
            resourceInputs["logProject"] = args ? args.logProject : undefined;
            resourceInputs["logStore"] = args ? args.logStore : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netmode"] = args ? args.netmode : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["pricingCycle"] = args ? args.pricingCycle : undefined;
            resourceInputs["publicIpAddressPoolId"] = args ? args.publicIpAddressPoolId : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["securityProtectionTypes"] = args ? args.securityProtectionTypes : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Eip.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Eip resources.
 */
export interface EipState {
    activityId?: pulumi.Input<string>;
    addressName?: pulumi.Input<string>;
    allocationId?: pulumi.Input<string>;
    autoPay?: pulumi.Input<boolean>;
    bandwidth?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    highDefinitionMonitorLogStatus?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    instanceChargeType?: pulumi.Input<string>;
    internetChargeType?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    isp?: pulumi.Input<string>;
    logProject?: pulumi.Input<string>;
    logStore?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    netmode?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    pricingCycle?: pulumi.Input<string>;
    publicIpAddressPoolId?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    securityProtectionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.EipTimeouts>;
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Eip resource.
 */
export interface EipArgs {
    activityId?: pulumi.Input<string>;
    addressName?: pulumi.Input<string>;
    allocationId?: pulumi.Input<string>;
    autoPay?: pulumi.Input<boolean>;
    bandwidth?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    highDefinitionMonitorLogStatus?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    instanceChargeType?: pulumi.Input<string>;
    internetChargeType?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    isp?: pulumi.Input<string>;
    logProject?: pulumi.Input<string>;
    logStore?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    netmode?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    pricingCycle?: pulumi.Input<string>;
    publicIpAddressPoolId?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    securityProtectionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.EipTimeouts>;
    zone?: pulumi.Input<string>;
}
