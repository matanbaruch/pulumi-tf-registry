// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ServiceCatalogProvisionedProduct extends pulumi.CustomResource {
    /**
     * Get an existing ServiceCatalogProvisionedProduct resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceCatalogProvisionedProductState, opts?: pulumi.CustomResourceOptions): ServiceCatalogProvisionedProduct {
        return new ServiceCatalogProvisionedProduct(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/serviceCatalogProvisionedProduct:ServiceCatalogProvisionedProduct';

    /**
     * Returns true if the given object is an instance of ServiceCatalogProvisionedProduct.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceCatalogProvisionedProduct {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceCatalogProvisionedProduct.__pulumiType;
    }

    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public /*out*/ readonly lastProvisioningTaskId!: pulumi.Output<string>;
    public /*out*/ readonly lastSuccessfulProvisioningTaskId!: pulumi.Output<string>;
    public /*out*/ readonly lastTaskId!: pulumi.Output<string>;
    public /*out*/ readonly outputs!: pulumi.Output<outputs.ServiceCatalogProvisionedProductOutput[]>;
    public /*out*/ readonly ownerPrincipalId!: pulumi.Output<string>;
    public /*out*/ readonly ownerPrincipalType!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<outputs.ServiceCatalogProvisionedProductParameter[] | undefined>;
    public readonly portfolioId!: pulumi.Output<string | undefined>;
    public readonly productId!: pulumi.Output<string>;
    public /*out*/ readonly productName!: pulumi.Output<string>;
    public readonly productVersionId!: pulumi.Output<string>;
    public /*out*/ readonly productVersionName!: pulumi.Output<string>;
    public /*out*/ readonly provisionedProductArn!: pulumi.Output<string>;
    public readonly provisionedProductId!: pulumi.Output<string>;
    public readonly provisionedProductName!: pulumi.Output<string>;
    public /*out*/ readonly provisionedProductType!: pulumi.Output<string>;
    public /*out*/ readonly stackId!: pulumi.Output<string>;
    public readonly stackRegionId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ServiceCatalogProvisionedProductTimeouts | undefined>;

    /**
     * Create a ServiceCatalogProvisionedProduct resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceCatalogProvisionedProductArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceCatalogProvisionedProductArgs | ServiceCatalogProvisionedProductState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceCatalogProvisionedProductState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["lastProvisioningTaskId"] = state ? state.lastProvisioningTaskId : undefined;
            resourceInputs["lastSuccessfulProvisioningTaskId"] = state ? state.lastSuccessfulProvisioningTaskId : undefined;
            resourceInputs["lastTaskId"] = state ? state.lastTaskId : undefined;
            resourceInputs["outputs"] = state ? state.outputs : undefined;
            resourceInputs["ownerPrincipalId"] = state ? state.ownerPrincipalId : undefined;
            resourceInputs["ownerPrincipalType"] = state ? state.ownerPrincipalType : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["portfolioId"] = state ? state.portfolioId : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["productName"] = state ? state.productName : undefined;
            resourceInputs["productVersionId"] = state ? state.productVersionId : undefined;
            resourceInputs["productVersionName"] = state ? state.productVersionName : undefined;
            resourceInputs["provisionedProductArn"] = state ? state.provisionedProductArn : undefined;
            resourceInputs["provisionedProductId"] = state ? state.provisionedProductId : undefined;
            resourceInputs["provisionedProductName"] = state ? state.provisionedProductName : undefined;
            resourceInputs["provisionedProductType"] = state ? state.provisionedProductType : undefined;
            resourceInputs["stackId"] = state ? state.stackId : undefined;
            resourceInputs["stackRegionId"] = state ? state.stackRegionId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusMessage"] = state ? state.statusMessage : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ServiceCatalogProvisionedProductArgs | undefined;
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            if ((!args || args.productVersionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productVersionId'");
            }
            if ((!args || args.provisionedProductName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'provisionedProductName'");
            }
            if ((!args || args.stackRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackRegionId'");
            }
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["portfolioId"] = args ? args.portfolioId : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["productVersionId"] = args ? args.productVersionId : undefined;
            resourceInputs["provisionedProductId"] = args ? args.provisionedProductId : undefined;
            resourceInputs["provisionedProductName"] = args ? args.provisionedProductName : undefined;
            resourceInputs["stackRegionId"] = args ? args.stackRegionId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["lastProvisioningTaskId"] = undefined /*out*/;
            resourceInputs["lastSuccessfulProvisioningTaskId"] = undefined /*out*/;
            resourceInputs["lastTaskId"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["ownerPrincipalId"] = undefined /*out*/;
            resourceInputs["ownerPrincipalType"] = undefined /*out*/;
            resourceInputs["productName"] = undefined /*out*/;
            resourceInputs["productVersionName"] = undefined /*out*/;
            resourceInputs["provisionedProductArn"] = undefined /*out*/;
            resourceInputs["provisionedProductType"] = undefined /*out*/;
            resourceInputs["stackId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceCatalogProvisionedProduct.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServiceCatalogProvisionedProduct resources.
 */
export interface ServiceCatalogProvisionedProductState {
    createTime?: pulumi.Input<string>;
    lastProvisioningTaskId?: pulumi.Input<string>;
    lastSuccessfulProvisioningTaskId?: pulumi.Input<string>;
    lastTaskId?: pulumi.Input<string>;
    outputs?: pulumi.Input<pulumi.Input<inputs.ServiceCatalogProvisionedProductOutput>[]>;
    ownerPrincipalId?: pulumi.Input<string>;
    ownerPrincipalType?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.ServiceCatalogProvisionedProductParameter>[]>;
    portfolioId?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    productName?: pulumi.Input<string>;
    productVersionId?: pulumi.Input<string>;
    productVersionName?: pulumi.Input<string>;
    provisionedProductArn?: pulumi.Input<string>;
    provisionedProductId?: pulumi.Input<string>;
    provisionedProductName?: pulumi.Input<string>;
    provisionedProductType?: pulumi.Input<string>;
    stackId?: pulumi.Input<string>;
    stackRegionId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    statusMessage?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ServiceCatalogProvisionedProductTimeouts>;
}

/**
 * The set of arguments for constructing a ServiceCatalogProvisionedProduct resource.
 */
export interface ServiceCatalogProvisionedProductArgs {
    parameters?: pulumi.Input<pulumi.Input<inputs.ServiceCatalogProvisionedProductParameter>[]>;
    portfolioId?: pulumi.Input<string>;
    productId: pulumi.Input<string>;
    productVersionId: pulumi.Input<string>;
    provisionedProductId?: pulumi.Input<string>;
    provisionedProductName: pulumi.Input<string>;
    stackRegionId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ServiceCatalogProvisionedProductTimeouts>;
}
