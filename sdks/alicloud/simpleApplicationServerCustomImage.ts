// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SimpleApplicationServerCustomImage extends pulumi.CustomResource {
    /**
     * Get an existing SimpleApplicationServerCustomImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SimpleApplicationServerCustomImageState, opts?: pulumi.CustomResourceOptions): SimpleApplicationServerCustomImage {
        return new SimpleApplicationServerCustomImage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/simpleApplicationServerCustomImage:SimpleApplicationServerCustomImage';

    /**
     * Returns true if the given object is an instance of SimpleApplicationServerCustomImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SimpleApplicationServerCustomImage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SimpleApplicationServerCustomImage.__pulumiType;
    }

    public readonly customImageName!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly instanceId!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly systemSnapshotId!: pulumi.Output<string>;

    /**
     * Create a SimpleApplicationServerCustomImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SimpleApplicationServerCustomImageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SimpleApplicationServerCustomImageArgs | SimpleApplicationServerCustomImageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SimpleApplicationServerCustomImageState | undefined;
            resourceInputs["customImageName"] = state ? state.customImageName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemSnapshotId"] = state ? state.systemSnapshotId : undefined;
        } else {
            const args = argsOrState as SimpleApplicationServerCustomImageArgs | undefined;
            if ((!args || args.customImageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customImageName'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.systemSnapshotId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'systemSnapshotId'");
            }
            resourceInputs["customImageName"] = args ? args.customImageName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["systemSnapshotId"] = args ? args.systemSnapshotId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SimpleApplicationServerCustomImage.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SimpleApplicationServerCustomImage resources.
 */
export interface SimpleApplicationServerCustomImageState {
    customImageName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    systemSnapshotId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SimpleApplicationServerCustomImage resource.
 */
export interface SimpleApplicationServerCustomImageArgs {
    customImageName: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    systemSnapshotId: pulumi.Input<string>;
}
