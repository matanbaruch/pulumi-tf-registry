// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TsdbInstance extends pulumi.CustomResource {
    /**
     * Get an existing TsdbInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TsdbInstanceState, opts?: pulumi.CustomResourceOptions): TsdbInstance {
        return new TsdbInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/tsdbInstance:TsdbInstance';

    /**
     * Returns true if the given object is an instance of TsdbInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TsdbInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TsdbInstance.__pulumiType;
    }

    public readonly appKey!: pulumi.Output<string | undefined>;
    public readonly diskCategory!: pulumi.Output<string | undefined>;
    public readonly duration!: pulumi.Output<string | undefined>;
    public readonly engineType!: pulumi.Output<string | undefined>;
    public readonly instanceAlias!: pulumi.Output<string | undefined>;
    public readonly instanceClass!: pulumi.Output<string>;
    public readonly instanceStorage!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.TsdbInstanceTimeouts | undefined>;
    public readonly vswitchId!: pulumi.Output<string>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a TsdbInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TsdbInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TsdbInstanceArgs | TsdbInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TsdbInstanceState | undefined;
            resourceInputs["appKey"] = state ? state.appKey : undefined;
            resourceInputs["diskCategory"] = state ? state.diskCategory : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["engineType"] = state ? state.engineType : undefined;
            resourceInputs["instanceAlias"] = state ? state.instanceAlias : undefined;
            resourceInputs["instanceClass"] = state ? state.instanceClass : undefined;
            resourceInputs["instanceStorage"] = state ? state.instanceStorage : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as TsdbInstanceArgs | undefined;
            if ((!args || args.instanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceClass'");
            }
            if ((!args || args.instanceStorage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceStorage'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["appKey"] = args ? args.appKey : undefined;
            resourceInputs["diskCategory"] = args ? args.diskCategory : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["engineType"] = args ? args.engineType : undefined;
            resourceInputs["instanceAlias"] = args ? args.instanceAlias : undefined;
            resourceInputs["instanceClass"] = args ? args.instanceClass : undefined;
            resourceInputs["instanceStorage"] = args ? args.instanceStorage : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TsdbInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TsdbInstance resources.
 */
export interface TsdbInstanceState {
    appKey?: pulumi.Input<string>;
    diskCategory?: pulumi.Input<string>;
    duration?: pulumi.Input<string>;
    engineType?: pulumi.Input<string>;
    instanceAlias?: pulumi.Input<string>;
    instanceClass?: pulumi.Input<string>;
    instanceStorage?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.TsdbInstanceTimeouts>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TsdbInstance resource.
 */
export interface TsdbInstanceArgs {
    appKey?: pulumi.Input<string>;
    diskCategory?: pulumi.Input<string>;
    duration?: pulumi.Input<string>;
    engineType?: pulumi.Input<string>;
    instanceAlias?: pulumi.Input<string>;
    instanceClass: pulumi.Input<string>;
    instanceStorage: pulumi.Input<string>;
    paymentType: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.TsdbInstanceTimeouts>;
    vswitchId: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
