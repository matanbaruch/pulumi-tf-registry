// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcIpv6Addresses(args?: GetVpcIpv6AddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpv6AddressesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getVpcIpv6Addresses:getVpcIpv6Addresses", {
        "associatedInstanceId": args.associatedInstanceId,
        "id": args.id,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "status": args.status,
        "vpcId": args.vpcId,
        "vswitchId": args.vswitchId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcIpv6Addresses.
 */
export interface GetVpcIpv6AddressesArgs {
    associatedInstanceId?: string;
    id?: string;
    ids?: string[];
    outputFile?: string;
    status?: string;
    vpcId?: string;
    vswitchId?: string;
}

/**
 * A collection of values returned by getVpcIpv6Addresses.
 */
export interface GetVpcIpv6AddressesResult {
    readonly addresses: outputs.GetVpcIpv6AddressesAddress[];
    readonly associatedInstanceId?: string;
    readonly id: string;
    readonly ids: string[];
    readonly names: string[];
    readonly outputFile?: string;
    readonly status?: string;
    readonly vpcId?: string;
    readonly vswitchId?: string;
}
export function getVpcIpv6AddressesOutput(args?: GetVpcIpv6AddressesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIpv6AddressesResult> {
    return pulumi.output(args).apply((a: any) => getVpcIpv6Addresses(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIpv6Addresses.
 */
export interface GetVpcIpv6AddressesOutputArgs {
    associatedInstanceId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}
