// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKvstoreInstances(args?: GetKvstoreInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetKvstoreInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getKvstoreInstances:getKvstoreInstances", {
        "architectureType": args.architectureType,
        "editionType": args.editionType,
        "enableDetails": args.enableDetails,
        "engineVersion": args.engineVersion,
        "expired": args.expired,
        "globalInstance": args.globalInstance,
        "id": args.id,
        "ids": args.ids,
        "instanceClass": args.instanceClass,
        "instanceType": args.instanceType,
        "nameRegex": args.nameRegex,
        "networkType": args.networkType,
        "outputFile": args.outputFile,
        "paymentType": args.paymentType,
        "resourceGroupId": args.resourceGroupId,
        "searchKey": args.searchKey,
        "status": args.status,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vswitchId": args.vswitchId,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKvstoreInstances.
 */
export interface GetKvstoreInstancesArgs {
    architectureType?: string;
    editionType?: string;
    enableDetails?: boolean;
    engineVersion?: string;
    expired?: string;
    globalInstance?: boolean;
    id?: string;
    ids?: string[];
    instanceClass?: string;
    instanceType?: string;
    nameRegex?: string;
    networkType?: string;
    outputFile?: string;
    paymentType?: string;
    resourceGroupId?: string;
    searchKey?: string;
    status?: string;
    tags?: {[key: string]: string};
    vpcId?: string;
    vswitchId?: string;
    zoneId?: string;
}

/**
 * A collection of values returned by getKvstoreInstances.
 */
export interface GetKvstoreInstancesResult {
    readonly architectureType?: string;
    readonly editionType?: string;
    readonly enableDetails?: boolean;
    readonly engineVersion?: string;
    readonly expired?: string;
    readonly globalInstance?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly instanceClass?: string;
    readonly instanceType?: string;
    readonly instances: outputs.GetKvstoreInstancesInstance[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly networkType?: string;
    readonly outputFile?: string;
    readonly paymentType?: string;
    readonly resourceGroupId?: string;
    readonly searchKey?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly vpcId?: string;
    readonly vswitchId?: string;
    readonly zoneId?: string;
}
export function getKvstoreInstancesOutput(args?: GetKvstoreInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKvstoreInstancesResult> {
    return pulumi.output(args).apply((a: any) => getKvstoreInstances(a, opts))
}

/**
 * A collection of arguments for invoking getKvstoreInstances.
 */
export interface GetKvstoreInstancesOutputArgs {
    architectureType?: pulumi.Input<string>;
    editionType?: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    engineVersion?: pulumi.Input<string>;
    expired?: pulumi.Input<string>;
    globalInstance?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    instanceClass?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    searchKey?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
