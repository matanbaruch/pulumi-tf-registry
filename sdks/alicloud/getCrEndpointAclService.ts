// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCrEndpointAclService(args: GetCrEndpointAclServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetCrEndpointAclServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCrEndpointAclService:getCrEndpointAclService", {
        "enable": args.enable,
        "endpointType": args.endpointType,
        "id": args.id,
        "instanceId": args.instanceId,
        "moduleName": args.moduleName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCrEndpointAclService.
 */
export interface GetCrEndpointAclServiceArgs {
    enable: boolean;
    endpointType: string;
    id?: string;
    instanceId: string;
    moduleName?: string;
}

/**
 * A collection of values returned by getCrEndpointAclService.
 */
export interface GetCrEndpointAclServiceResult {
    readonly enable: boolean;
    readonly endpointType: string;
    readonly id: string;
    readonly instanceId: string;
    readonly moduleName?: string;
    readonly status: string;
}
export function getCrEndpointAclServiceOutput(args: GetCrEndpointAclServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCrEndpointAclServiceResult> {
    return pulumi.output(args).apply((a: any) => getCrEndpointAclService(a, opts))
}

/**
 * A collection of arguments for invoking getCrEndpointAclService.
 */
export interface GetCrEndpointAclServiceOutputArgs {
    enable: pulumi.Input<boolean>;
    endpointType: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    moduleName?: pulumi.Input<string>;
}
