// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmrClusters(args?: GetEmrClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrClustersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEmrClusters:getEmrClusters", {
        "clusterName": args.clusterName,
        "clusterTypeLists": args.clusterTypeLists,
        "createType": args.createType,
        "defaultStatus": args.defaultStatus,
        "depositType": args.depositType,
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "isDesc": args.isDesc,
        "machineType": args.machineType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "resourceGroupId": args.resourceGroupId,
        "statusLists": args.statusLists,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrClusters.
 */
export interface GetEmrClustersArgs {
    clusterName?: string;
    clusterTypeLists?: string[];
    createType?: string;
    defaultStatus?: boolean;
    depositType?: string;
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    isDesc?: boolean;
    machineType?: string;
    nameRegex?: string;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    resourceGroupId?: string;
    statusLists?: string[];
    vpcId?: string;
}

/**
 * A collection of values returned by getEmrClusters.
 */
export interface GetEmrClustersResult {
    readonly clusterName?: string;
    readonly clusterTypeLists?: string[];
    readonly clusters: outputs.GetEmrClustersCluster[];
    readonly createType?: string;
    readonly defaultStatus?: boolean;
    readonly depositType?: string;
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly isDesc?: boolean;
    readonly machineType?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly resourceGroupId?: string;
    readonly statusLists?: string[];
    readonly totalCount: number;
    readonly vpcId?: string;
}
export function getEmrClustersOutput(args?: GetEmrClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrClustersResult> {
    return pulumi.output(args).apply((a: any) => getEmrClusters(a, opts))
}

/**
 * A collection of arguments for invoking getEmrClusters.
 */
export interface GetEmrClustersOutputArgs {
    clusterName?: pulumi.Input<string>;
    clusterTypeLists?: pulumi.Input<pulumi.Input<string>[]>;
    createType?: pulumi.Input<string>;
    defaultStatus?: pulumi.Input<boolean>;
    depositType?: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    isDesc?: pulumi.Input<boolean>;
    machineType?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    resourceGroupId?: pulumi.Input<string>;
    statusLists?: pulumi.Input<pulumi.Input<string>[]>;
    vpcId?: pulumi.Input<string>;
}
