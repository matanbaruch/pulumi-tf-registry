// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EcdSimpleOfficeSite extends pulumi.CustomResource {
    /**
     * Get an existing EcdSimpleOfficeSite resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcdSimpleOfficeSiteState, opts?: pulumi.CustomResourceOptions): EcdSimpleOfficeSite {
        return new EcdSimpleOfficeSite(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/ecdSimpleOfficeSite:EcdSimpleOfficeSite';

    /**
     * Returns true if the given object is an instance of EcdSimpleOfficeSite.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcdSimpleOfficeSite {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcdSimpleOfficeSite.__pulumiType;
    }

    /**
     * @deprecated Deprecated
     */
    public readonly bandwidth!: pulumi.Output<number>;
    public readonly cenId!: pulumi.Output<string | undefined>;
    public readonly cenOwnerId!: pulumi.Output<string | undefined>;
    public readonly cidrBlock!: pulumi.Output<string>;
    public readonly desktopAccessType!: pulumi.Output<string>;
    public readonly enableAdminAccess!: pulumi.Output<boolean>;
    public readonly enableCrossDesktopAccess!: pulumi.Output<boolean>;
    /**
     * @deprecated Deprecated
     */
    public readonly enableInternetAccess!: pulumi.Output<boolean>;
    public readonly mfaEnabled!: pulumi.Output<boolean>;
    public readonly officeSiteName!: pulumi.Output<string | undefined>;
    public readonly ssoEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a EcdSimpleOfficeSite resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EcdSimpleOfficeSiteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcdSimpleOfficeSiteArgs | EcdSimpleOfficeSiteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcdSimpleOfficeSiteState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["cenId"] = state ? state.cenId : undefined;
            resourceInputs["cenOwnerId"] = state ? state.cenOwnerId : undefined;
            resourceInputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            resourceInputs["desktopAccessType"] = state ? state.desktopAccessType : undefined;
            resourceInputs["enableAdminAccess"] = state ? state.enableAdminAccess : undefined;
            resourceInputs["enableCrossDesktopAccess"] = state ? state.enableCrossDesktopAccess : undefined;
            resourceInputs["enableInternetAccess"] = state ? state.enableInternetAccess : undefined;
            resourceInputs["mfaEnabled"] = state ? state.mfaEnabled : undefined;
            resourceInputs["officeSiteName"] = state ? state.officeSiteName : undefined;
            resourceInputs["ssoEnabled"] = state ? state.ssoEnabled : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as EcdSimpleOfficeSiteArgs | undefined;
            if ((!args || args.cidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["cenId"] = args ? args.cenId : undefined;
            resourceInputs["cenOwnerId"] = args ? args.cenOwnerId : undefined;
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["desktopAccessType"] = args ? args.desktopAccessType : undefined;
            resourceInputs["enableAdminAccess"] = args ? args.enableAdminAccess : undefined;
            resourceInputs["enableCrossDesktopAccess"] = args ? args.enableCrossDesktopAccess : undefined;
            resourceInputs["enableInternetAccess"] = args ? args.enableInternetAccess : undefined;
            resourceInputs["mfaEnabled"] = args ? args.mfaEnabled : undefined;
            resourceInputs["officeSiteName"] = args ? args.officeSiteName : undefined;
            resourceInputs["ssoEnabled"] = args ? args.ssoEnabled : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcdSimpleOfficeSite.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EcdSimpleOfficeSite resources.
 */
export interface EcdSimpleOfficeSiteState {
    /**
     * @deprecated Deprecated
     */
    bandwidth?: pulumi.Input<number>;
    cenId?: pulumi.Input<string>;
    cenOwnerId?: pulumi.Input<string>;
    cidrBlock?: pulumi.Input<string>;
    desktopAccessType?: pulumi.Input<string>;
    enableAdminAccess?: pulumi.Input<boolean>;
    enableCrossDesktopAccess?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    enableInternetAccess?: pulumi.Input<boolean>;
    mfaEnabled?: pulumi.Input<boolean>;
    officeSiteName?: pulumi.Input<string>;
    ssoEnabled?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EcdSimpleOfficeSite resource.
 */
export interface EcdSimpleOfficeSiteArgs {
    /**
     * @deprecated Deprecated
     */
    bandwidth?: pulumi.Input<number>;
    cenId?: pulumi.Input<string>;
    cenOwnerId?: pulumi.Input<string>;
    cidrBlock: pulumi.Input<string>;
    desktopAccessType?: pulumi.Input<string>;
    enableAdminAccess?: pulumi.Input<boolean>;
    enableCrossDesktopAccess?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    enableInternetAccess?: pulumi.Input<boolean>;
    mfaEnabled?: pulumi.Input<boolean>;
    officeSiteName?: pulumi.Input<string>;
    ssoEnabled?: pulumi.Input<boolean>;
}
