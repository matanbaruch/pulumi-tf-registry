// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AligreenKeywordLib extends pulumi.CustomResource {
    /**
     * Get an existing AligreenKeywordLib resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AligreenKeywordLibState, opts?: pulumi.CustomResourceOptions): AligreenKeywordLib {
        return new AligreenKeywordLib(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/aligreenKeywordLib:AligreenKeywordLib';

    /**
     * Returns true if the given object is an instance of AligreenKeywordLib.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AligreenKeywordLib {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AligreenKeywordLib.__pulumiType;
    }

    public readonly bizTypes!: pulumi.Output<string[] | undefined>;
    public readonly category!: pulumi.Output<string>;
    public readonly enable!: pulumi.Output<boolean>;
    public readonly keywordLibName!: pulumi.Output<string>;
    public readonly lang!: pulumi.Output<string | undefined>;
    public readonly language!: pulumi.Output<string>;
    public readonly libType!: pulumi.Output<string>;
    public readonly matchMode!: pulumi.Output<string>;
    public readonly resourceType!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AligreenKeywordLibTimeouts | undefined>;

    /**
     * Create a AligreenKeywordLib resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AligreenKeywordLibArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AligreenKeywordLibArgs | AligreenKeywordLibState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AligreenKeywordLibState | undefined;
            resourceInputs["bizTypes"] = state ? state.bizTypes : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["keywordLibName"] = state ? state.keywordLibName : undefined;
            resourceInputs["lang"] = state ? state.lang : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["libType"] = state ? state.libType : undefined;
            resourceInputs["matchMode"] = state ? state.matchMode : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AligreenKeywordLibArgs | undefined;
            if ((!args || args.keywordLibName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keywordLibName'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["bizTypes"] = args ? args.bizTypes : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["keywordLibName"] = args ? args.keywordLibName : undefined;
            resourceInputs["lang"] = args ? args.lang : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["libType"] = args ? args.libType : undefined;
            resourceInputs["matchMode"] = args ? args.matchMode : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AligreenKeywordLib.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AligreenKeywordLib resources.
 */
export interface AligreenKeywordLibState {
    bizTypes?: pulumi.Input<pulumi.Input<string>[]>;
    category?: pulumi.Input<string>;
    enable?: pulumi.Input<boolean>;
    keywordLibName?: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    language?: pulumi.Input<string>;
    libType?: pulumi.Input<string>;
    matchMode?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AligreenKeywordLibTimeouts>;
}

/**
 * The set of arguments for constructing a AligreenKeywordLib resource.
 */
export interface AligreenKeywordLibArgs {
    bizTypes?: pulumi.Input<pulumi.Input<string>[]>;
    category?: pulumi.Input<string>;
    enable?: pulumi.Input<boolean>;
    keywordLibName: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    language?: pulumi.Input<string>;
    libType?: pulumi.Input<string>;
    matchMode?: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AligreenKeywordLibTimeouts>;
}
