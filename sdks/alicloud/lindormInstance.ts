// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LindormInstance extends pulumi.CustomResource {
    /**
     * Get an existing LindormInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LindormInstanceState, opts?: pulumi.CustomResourceOptions): LindormInstance {
        return new LindormInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/lindormInstance:LindormInstance';

    /**
     * Returns true if the given object is an instance of LindormInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LindormInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LindormInstance.__pulumiType;
    }

    public readonly arbiterVswitchId!: pulumi.Output<string | undefined>;
    public readonly arbiterZoneId!: pulumi.Output<string | undefined>;
    public readonly archVersion!: pulumi.Output<string>;
    public readonly coldStorage!: pulumi.Output<number>;
    public readonly coreNum!: pulumi.Output<number | undefined>;
    public readonly coreSingleStorage!: pulumi.Output<number | undefined>;
    public readonly coreSpec!: pulumi.Output<string>;
    public readonly deletionProection!: pulumi.Output<boolean>;
    public readonly diskCategory!: pulumi.Output<string>;
    public readonly duration!: pulumi.Output<string | undefined>;
    public /*out*/ readonly enabledFileEngine!: pulumi.Output<boolean>;
    public /*out*/ readonly enabledLtsEngine!: pulumi.Output<boolean>;
    public /*out*/ readonly enabledSearchEngine!: pulumi.Output<boolean>;
    public /*out*/ readonly enabledStreamEngine!: pulumi.Output<boolean>;
    public /*out*/ readonly enabledTableEngine!: pulumi.Output<boolean>;
    public /*out*/ readonly enabledTimeSeriresEngine!: pulumi.Output<boolean>;
    public readonly fileEngineNodeCount!: pulumi.Output<number>;
    public readonly fileEngineSpecification!: pulumi.Output<string>;
    public readonly groupName!: pulumi.Output<string | undefined>;
    public readonly instanceName!: pulumi.Output<string | undefined>;
    public readonly instanceStorage!: pulumi.Output<string>;
    public readonly ipWhiteLists!: pulumi.Output<string[] | undefined>;
    public readonly logDiskCategory!: pulumi.Output<string | undefined>;
    public readonly logNum!: pulumi.Output<number | undefined>;
    public readonly logSingleStorage!: pulumi.Output<number | undefined>;
    public readonly logSpec!: pulumi.Output<string | undefined>;
    public readonly ltsNodeCount!: pulumi.Output<number>;
    public readonly ltsNodeSpecification!: pulumi.Output<string>;
    public readonly multiZoneCombination!: pulumi.Output<string | undefined>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly phoenixNodeCount!: pulumi.Output<number | undefined>;
    public readonly phoenixNodeSpecification!: pulumi.Output<string | undefined>;
    public readonly pricingCycle!: pulumi.Output<string | undefined>;
    public readonly primaryVswitchId!: pulumi.Output<string | undefined>;
    public readonly primaryZoneId!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly searchEngineNodeCount!: pulumi.Output<number>;
    public readonly searchEngineSpecification!: pulumi.Output<string>;
    public /*out*/ readonly serviceType!: pulumi.Output<string>;
    public readonly standbyVswitchId!: pulumi.Output<string | undefined>;
    public readonly standbyZoneId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly streamEngineNodeCount!: pulumi.Output<number>;
    public readonly streamEngineSpecification!: pulumi.Output<string>;
    public readonly tableEngineNodeCount!: pulumi.Output<number>;
    public readonly tableEngineSpecification!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeSeriesEngineNodeCount!: pulumi.Output<number>;
    public readonly timeSeriesEngineSpecification!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly timeSeriresEngineSpecification!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.LindormInstanceTimeouts | undefined>;
    public readonly upgradeType!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a LindormInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LindormInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LindormInstanceArgs | LindormInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LindormInstanceState | undefined;
            resourceInputs["arbiterVswitchId"] = state ? state.arbiterVswitchId : undefined;
            resourceInputs["arbiterZoneId"] = state ? state.arbiterZoneId : undefined;
            resourceInputs["archVersion"] = state ? state.archVersion : undefined;
            resourceInputs["coldStorage"] = state ? state.coldStorage : undefined;
            resourceInputs["coreNum"] = state ? state.coreNum : undefined;
            resourceInputs["coreSingleStorage"] = state ? state.coreSingleStorage : undefined;
            resourceInputs["coreSpec"] = state ? state.coreSpec : undefined;
            resourceInputs["deletionProection"] = state ? state.deletionProection : undefined;
            resourceInputs["diskCategory"] = state ? state.diskCategory : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["enabledFileEngine"] = state ? state.enabledFileEngine : undefined;
            resourceInputs["enabledLtsEngine"] = state ? state.enabledLtsEngine : undefined;
            resourceInputs["enabledSearchEngine"] = state ? state.enabledSearchEngine : undefined;
            resourceInputs["enabledStreamEngine"] = state ? state.enabledStreamEngine : undefined;
            resourceInputs["enabledTableEngine"] = state ? state.enabledTableEngine : undefined;
            resourceInputs["enabledTimeSeriresEngine"] = state ? state.enabledTimeSeriresEngine : undefined;
            resourceInputs["fileEngineNodeCount"] = state ? state.fileEngineNodeCount : undefined;
            resourceInputs["fileEngineSpecification"] = state ? state.fileEngineSpecification : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceStorage"] = state ? state.instanceStorage : undefined;
            resourceInputs["ipWhiteLists"] = state ? state.ipWhiteLists : undefined;
            resourceInputs["logDiskCategory"] = state ? state.logDiskCategory : undefined;
            resourceInputs["logNum"] = state ? state.logNum : undefined;
            resourceInputs["logSingleStorage"] = state ? state.logSingleStorage : undefined;
            resourceInputs["logSpec"] = state ? state.logSpec : undefined;
            resourceInputs["ltsNodeCount"] = state ? state.ltsNodeCount : undefined;
            resourceInputs["ltsNodeSpecification"] = state ? state.ltsNodeSpecification : undefined;
            resourceInputs["multiZoneCombination"] = state ? state.multiZoneCombination : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["phoenixNodeCount"] = state ? state.phoenixNodeCount : undefined;
            resourceInputs["phoenixNodeSpecification"] = state ? state.phoenixNodeSpecification : undefined;
            resourceInputs["pricingCycle"] = state ? state.pricingCycle : undefined;
            resourceInputs["primaryVswitchId"] = state ? state.primaryVswitchId : undefined;
            resourceInputs["primaryZoneId"] = state ? state.primaryZoneId : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["searchEngineNodeCount"] = state ? state.searchEngineNodeCount : undefined;
            resourceInputs["searchEngineSpecification"] = state ? state.searchEngineSpecification : undefined;
            resourceInputs["serviceType"] = state ? state.serviceType : undefined;
            resourceInputs["standbyVswitchId"] = state ? state.standbyVswitchId : undefined;
            resourceInputs["standbyZoneId"] = state ? state.standbyZoneId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["streamEngineNodeCount"] = state ? state.streamEngineNodeCount : undefined;
            resourceInputs["streamEngineSpecification"] = state ? state.streamEngineSpecification : undefined;
            resourceInputs["tableEngineNodeCount"] = state ? state.tableEngineNodeCount : undefined;
            resourceInputs["tableEngineSpecification"] = state ? state.tableEngineSpecification : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeSeriesEngineNodeCount"] = state ? state.timeSeriesEngineNodeCount : undefined;
            resourceInputs["timeSeriesEngineSpecification"] = state ? state.timeSeriesEngineSpecification : undefined;
            resourceInputs["timeSeriresEngineSpecification"] = state ? state.timeSeriresEngineSpecification : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["upgradeType"] = state ? state.upgradeType : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as LindormInstanceArgs | undefined;
            if ((!args || args.diskCategory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskCategory'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["arbiterVswitchId"] = args ? args.arbiterVswitchId : undefined;
            resourceInputs["arbiterZoneId"] = args ? args.arbiterZoneId : undefined;
            resourceInputs["archVersion"] = args ? args.archVersion : undefined;
            resourceInputs["coldStorage"] = args ? args.coldStorage : undefined;
            resourceInputs["coreNum"] = args ? args.coreNum : undefined;
            resourceInputs["coreSingleStorage"] = args ? args.coreSingleStorage : undefined;
            resourceInputs["coreSpec"] = args ? args.coreSpec : undefined;
            resourceInputs["deletionProection"] = args ? args.deletionProection : undefined;
            resourceInputs["diskCategory"] = args ? args.diskCategory : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["fileEngineNodeCount"] = args ? args.fileEngineNodeCount : undefined;
            resourceInputs["fileEngineSpecification"] = args ? args.fileEngineSpecification : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceStorage"] = args ? args.instanceStorage : undefined;
            resourceInputs["ipWhiteLists"] = args ? args.ipWhiteLists : undefined;
            resourceInputs["logDiskCategory"] = args ? args.logDiskCategory : undefined;
            resourceInputs["logNum"] = args ? args.logNum : undefined;
            resourceInputs["logSingleStorage"] = args ? args.logSingleStorage : undefined;
            resourceInputs["logSpec"] = args ? args.logSpec : undefined;
            resourceInputs["ltsNodeCount"] = args ? args.ltsNodeCount : undefined;
            resourceInputs["ltsNodeSpecification"] = args ? args.ltsNodeSpecification : undefined;
            resourceInputs["multiZoneCombination"] = args ? args.multiZoneCombination : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["phoenixNodeCount"] = args ? args.phoenixNodeCount : undefined;
            resourceInputs["phoenixNodeSpecification"] = args ? args.phoenixNodeSpecification : undefined;
            resourceInputs["pricingCycle"] = args ? args.pricingCycle : undefined;
            resourceInputs["primaryVswitchId"] = args ? args.primaryVswitchId : undefined;
            resourceInputs["primaryZoneId"] = args ? args.primaryZoneId : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["searchEngineNodeCount"] = args ? args.searchEngineNodeCount : undefined;
            resourceInputs["searchEngineSpecification"] = args ? args.searchEngineSpecification : undefined;
            resourceInputs["standbyVswitchId"] = args ? args.standbyVswitchId : undefined;
            resourceInputs["standbyZoneId"] = args ? args.standbyZoneId : undefined;
            resourceInputs["streamEngineNodeCount"] = args ? args.streamEngineNodeCount : undefined;
            resourceInputs["streamEngineSpecification"] = args ? args.streamEngineSpecification : undefined;
            resourceInputs["tableEngineNodeCount"] = args ? args.tableEngineNodeCount : undefined;
            resourceInputs["tableEngineSpecification"] = args ? args.tableEngineSpecification : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeSeriesEngineNodeCount"] = args ? args.timeSeriesEngineNodeCount : undefined;
            resourceInputs["timeSeriesEngineSpecification"] = args ? args.timeSeriesEngineSpecification : undefined;
            resourceInputs["timeSeriresEngineSpecification"] = args ? args.timeSeriresEngineSpecification : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["upgradeType"] = args ? args.upgradeType : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["enabledFileEngine"] = undefined /*out*/;
            resourceInputs["enabledLtsEngine"] = undefined /*out*/;
            resourceInputs["enabledSearchEngine"] = undefined /*out*/;
            resourceInputs["enabledStreamEngine"] = undefined /*out*/;
            resourceInputs["enabledTableEngine"] = undefined /*out*/;
            resourceInputs["enabledTimeSeriresEngine"] = undefined /*out*/;
            resourceInputs["serviceType"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LindormInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LindormInstance resources.
 */
export interface LindormInstanceState {
    arbiterVswitchId?: pulumi.Input<string>;
    arbiterZoneId?: pulumi.Input<string>;
    archVersion?: pulumi.Input<string>;
    coldStorage?: pulumi.Input<number>;
    coreNum?: pulumi.Input<number>;
    coreSingleStorage?: pulumi.Input<number>;
    coreSpec?: pulumi.Input<string>;
    deletionProection?: pulumi.Input<boolean>;
    diskCategory?: pulumi.Input<string>;
    duration?: pulumi.Input<string>;
    enabledFileEngine?: pulumi.Input<boolean>;
    enabledLtsEngine?: pulumi.Input<boolean>;
    enabledSearchEngine?: pulumi.Input<boolean>;
    enabledStreamEngine?: pulumi.Input<boolean>;
    enabledTableEngine?: pulumi.Input<boolean>;
    enabledTimeSeriresEngine?: pulumi.Input<boolean>;
    fileEngineNodeCount?: pulumi.Input<number>;
    fileEngineSpecification?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceStorage?: pulumi.Input<string>;
    ipWhiteLists?: pulumi.Input<pulumi.Input<string>[]>;
    logDiskCategory?: pulumi.Input<string>;
    logNum?: pulumi.Input<number>;
    logSingleStorage?: pulumi.Input<number>;
    logSpec?: pulumi.Input<string>;
    ltsNodeCount?: pulumi.Input<number>;
    ltsNodeSpecification?: pulumi.Input<string>;
    multiZoneCombination?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    phoenixNodeCount?: pulumi.Input<number>;
    phoenixNodeSpecification?: pulumi.Input<string>;
    pricingCycle?: pulumi.Input<string>;
    primaryVswitchId?: pulumi.Input<string>;
    primaryZoneId?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    searchEngineNodeCount?: pulumi.Input<number>;
    searchEngineSpecification?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    standbyVswitchId?: pulumi.Input<string>;
    standbyZoneId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    streamEngineNodeCount?: pulumi.Input<number>;
    streamEngineSpecification?: pulumi.Input<string>;
    tableEngineNodeCount?: pulumi.Input<number>;
    tableEngineSpecification?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeSeriesEngineNodeCount?: pulumi.Input<number>;
    timeSeriesEngineSpecification?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    timeSeriresEngineSpecification?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LindormInstanceTimeouts>;
    upgradeType?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LindormInstance resource.
 */
export interface LindormInstanceArgs {
    arbiterVswitchId?: pulumi.Input<string>;
    arbiterZoneId?: pulumi.Input<string>;
    archVersion?: pulumi.Input<string>;
    coldStorage?: pulumi.Input<number>;
    coreNum?: pulumi.Input<number>;
    coreSingleStorage?: pulumi.Input<number>;
    coreSpec?: pulumi.Input<string>;
    deletionProection?: pulumi.Input<boolean>;
    diskCategory: pulumi.Input<string>;
    duration?: pulumi.Input<string>;
    fileEngineNodeCount?: pulumi.Input<number>;
    fileEngineSpecification?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceStorage?: pulumi.Input<string>;
    ipWhiteLists?: pulumi.Input<pulumi.Input<string>[]>;
    logDiskCategory?: pulumi.Input<string>;
    logNum?: pulumi.Input<number>;
    logSingleStorage?: pulumi.Input<number>;
    logSpec?: pulumi.Input<string>;
    ltsNodeCount?: pulumi.Input<number>;
    ltsNodeSpecification?: pulumi.Input<string>;
    multiZoneCombination?: pulumi.Input<string>;
    paymentType: pulumi.Input<string>;
    phoenixNodeCount?: pulumi.Input<number>;
    phoenixNodeSpecification?: pulumi.Input<string>;
    pricingCycle?: pulumi.Input<string>;
    primaryVswitchId?: pulumi.Input<string>;
    primaryZoneId?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    searchEngineNodeCount?: pulumi.Input<number>;
    searchEngineSpecification?: pulumi.Input<string>;
    standbyVswitchId?: pulumi.Input<string>;
    standbyZoneId?: pulumi.Input<string>;
    streamEngineNodeCount?: pulumi.Input<number>;
    streamEngineSpecification?: pulumi.Input<string>;
    tableEngineNodeCount?: pulumi.Input<number>;
    tableEngineSpecification?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeSeriesEngineNodeCount?: pulumi.Input<number>;
    timeSeriesEngineSpecification?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    timeSeriresEngineSpecification?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LindormInstanceTimeouts>;
    upgradeType?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
