// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCddcDedicatedHosts(args: GetCddcDedicatedHostsArgs, opts?: pulumi.InvokeOptions): Promise<GetCddcDedicatedHostsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCddcDedicatedHosts:getCddcDedicatedHosts", {
        "allocationStatus": args.allocationStatus,
        "dedicatedHostGroupId": args.dedicatedHostGroupId,
        "enableDetails": args.enableDetails,
        "hostType": args.hostType,
        "id": args.id,
        "ids": args.ids,
        "orderId": args.orderId,
        "outputFile": args.outputFile,
        "status": args.status,
        "tags": args.tags,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCddcDedicatedHosts.
 */
export interface GetCddcDedicatedHostsArgs {
    allocationStatus?: string;
    dedicatedHostGroupId: string;
    enableDetails?: boolean;
    hostType?: string;
    id?: string;
    ids?: string[];
    orderId?: string;
    outputFile?: string;
    status?: string;
    tags?: {[key: string]: string};
    zoneId?: string;
}

/**
 * A collection of values returned by getCddcDedicatedHosts.
 */
export interface GetCddcDedicatedHostsResult {
    readonly allocationStatus?: string;
    readonly dedicatedHostGroupId: string;
    readonly enableDetails?: boolean;
    readonly hostType?: string;
    readonly hosts: outputs.GetCddcDedicatedHostsHost[];
    readonly id: string;
    readonly ids: string[];
    readonly orderId?: string;
    readonly outputFile?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly zoneId?: string;
}
export function getCddcDedicatedHostsOutput(args: GetCddcDedicatedHostsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCddcDedicatedHostsResult> {
    return pulumi.output(args).apply((a: any) => getCddcDedicatedHosts(a, opts))
}

/**
 * A collection of arguments for invoking getCddcDedicatedHosts.
 */
export interface GetCddcDedicatedHostsOutputArgs {
    allocationStatus?: pulumi.Input<string>;
    dedicatedHostGroupId: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    hostType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    orderId?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    zoneId?: pulumi.Input<string>;
}
