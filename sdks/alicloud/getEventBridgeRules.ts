// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventBridgeRules(args: GetEventBridgeRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetEventBridgeRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEventBridgeRules:getEventBridgeRules", {
        "eventBusName": args.eventBusName,
        "id": args.id,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "ruleNamePrefix": args.ruleNamePrefix,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventBridgeRules.
 */
export interface GetEventBridgeRulesArgs {
    eventBusName: string;
    id?: string;
    ids?: string[];
    nameRegex?: string;
    outputFile?: string;
    ruleNamePrefix?: string;
    status?: string;
}

/**
 * A collection of values returned by getEventBridgeRules.
 */
export interface GetEventBridgeRulesResult {
    readonly eventBusName: string;
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly ruleNamePrefix?: string;
    readonly rules: outputs.GetEventBridgeRulesRule[];
    readonly status?: string;
}
export function getEventBridgeRulesOutput(args: GetEventBridgeRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventBridgeRulesResult> {
    return pulumi.output(args).apply((a: any) => getEventBridgeRules(a, opts))
}

/**
 * A collection of arguments for invoking getEventBridgeRules.
 */
export interface GetEventBridgeRulesOutputArgs {
    eventBusName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    ruleNamePrefix?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
