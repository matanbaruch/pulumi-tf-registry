// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SddpRule extends pulumi.CustomResource {
    /**
     * Get an existing SddpRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SddpRuleState, opts?: pulumi.CustomResourceOptions): SddpRule {
        return new SddpRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/sddpRule:SddpRule';

    /**
     * Returns true if the given object is an instance of SddpRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SddpRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SddpRule.__pulumiType;
    }

    public readonly category!: pulumi.Output<number>;
    public readonly content!: pulumi.Output<string>;
    public readonly contentCategory!: pulumi.Output<string>;
    public /*out*/ readonly customType!: pulumi.Output<number>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly lang!: pulumi.Output<string | undefined>;
    public readonly productCode!: pulumi.Output<string | undefined>;
    public readonly productId!: pulumi.Output<string | undefined>;
    public readonly riskLevelId!: pulumi.Output<string | undefined>;
    public readonly ruleName!: pulumi.Output<string>;
    public readonly ruleType!: pulumi.Output<number | undefined>;
    public readonly statExpress!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<number>;
    public readonly target!: pulumi.Output<string | undefined>;
    public readonly warnLevel!: pulumi.Output<number | undefined>;

    /**
     * Create a SddpRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SddpRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SddpRuleArgs | SddpRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SddpRuleState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["contentCategory"] = state ? state.contentCategory : undefined;
            resourceInputs["customType"] = state ? state.customType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lang"] = state ? state.lang : undefined;
            resourceInputs["productCode"] = state ? state.productCode : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["riskLevelId"] = state ? state.riskLevelId : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["ruleType"] = state ? state.ruleType : undefined;
            resourceInputs["statExpress"] = state ? state.statExpress : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
            resourceInputs["warnLevel"] = state ? state.warnLevel : undefined;
        } else {
            const args = argsOrState as SddpRuleArgs | undefined;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["contentCategory"] = args ? args.contentCategory : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["lang"] = args ? args.lang : undefined;
            resourceInputs["productCode"] = args ? args.productCode : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["riskLevelId"] = args ? args.riskLevelId : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["statExpress"] = args ? args.statExpress : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["warnLevel"] = args ? args.warnLevel : undefined;
            resourceInputs["customType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SddpRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SddpRule resources.
 */
export interface SddpRuleState {
    category?: pulumi.Input<number>;
    content?: pulumi.Input<string>;
    contentCategory?: pulumi.Input<string>;
    customType?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    productCode?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    riskLevelId?: pulumi.Input<string>;
    ruleName?: pulumi.Input<string>;
    ruleType?: pulumi.Input<number>;
    statExpress?: pulumi.Input<string>;
    status?: pulumi.Input<number>;
    target?: pulumi.Input<string>;
    warnLevel?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SddpRule resource.
 */
export interface SddpRuleArgs {
    category: pulumi.Input<number>;
    content: pulumi.Input<string>;
    contentCategory?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    productCode?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    riskLevelId?: pulumi.Input<string>;
    ruleName: pulumi.Input<string>;
    ruleType?: pulumi.Input<number>;
    statExpress?: pulumi.Input<string>;
    status?: pulumi.Input<number>;
    target?: pulumi.Input<string>;
    warnLevel?: pulumi.Input<number>;
}
