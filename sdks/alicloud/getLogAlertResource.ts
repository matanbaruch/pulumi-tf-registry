// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogAlertResource(args: GetLogAlertResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAlertResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getLogAlertResource:getLogAlertResource", {
        "id": args.id,
        "lang": args.lang,
        "project": args.project,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogAlertResource.
 */
export interface GetLogAlertResourceArgs {
    id?: string;
    lang?: string;
    project?: string;
    type: string;
}

/**
 * A collection of values returned by getLogAlertResource.
 */
export interface GetLogAlertResourceResult {
    readonly id: string;
    readonly lang?: string;
    readonly project?: string;
    readonly type: string;
}
export function getLogAlertResourceOutput(args: GetLogAlertResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAlertResourceResult> {
    return pulumi.output(args).apply((a: any) => getLogAlertResource(a, opts))
}

/**
 * A collection of arguments for invoking getLogAlertResource.
 */
export interface GetLogAlertResourceOutputArgs {
    id?: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
