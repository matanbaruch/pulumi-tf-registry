// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCenBandwidthLimits(args?: GetCenBandwidthLimitsArgs, opts?: pulumi.InvokeOptions): Promise<GetCenBandwidthLimitsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCenBandwidthLimits:getCenBandwidthLimits", {
        "id": args.id,
        "instanceIds": args.instanceIds,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCenBandwidthLimits.
 */
export interface GetCenBandwidthLimitsArgs {
    id?: string;
    instanceIds?: string[];
    outputFile?: string;
}

/**
 * A collection of values returned by getCenBandwidthLimits.
 */
export interface GetCenBandwidthLimitsResult {
    readonly id: string;
    readonly instanceIds?: string[];
    readonly limits: outputs.GetCenBandwidthLimitsLimit[];
    readonly outputFile?: string;
}
export function getCenBandwidthLimitsOutput(args?: GetCenBandwidthLimitsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCenBandwidthLimitsResult> {
    return pulumi.output(args).apply((a: any) => getCenBandwidthLimits(a, opts))
}

/**
 * A collection of arguments for invoking getCenBandwidthLimits.
 */
export interface GetCenBandwidthLimitsOutputArgs {
    id?: pulumi.Input<string>;
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
}
