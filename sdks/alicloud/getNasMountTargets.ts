// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNasMountTargets(args: GetNasMountTargetsArgs, opts?: pulumi.InvokeOptions): Promise<GetNasMountTargetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getNasMountTargets:getNasMountTargets", {
        "accessGroupName": args.accessGroupName,
        "fileSystemId": args.fileSystemId,
        "id": args.id,
        "ids": args.ids,
        "mountTargetDomain": args.mountTargetDomain,
        "networkType": args.networkType,
        "outputFile": args.outputFile,
        "status": args.status,
        "type": args.type,
        "vpcId": args.vpcId,
        "vswitchId": args.vswitchId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNasMountTargets.
 */
export interface GetNasMountTargetsArgs {
    accessGroupName?: string;
    fileSystemId: string;
    id?: string;
    ids?: string[];
    /**
     * @deprecated Deprecated
     */
    mountTargetDomain?: string;
    networkType?: string;
    outputFile?: string;
    status?: string;
    /**
     * @deprecated Deprecated
     */
    type?: string;
    vpcId?: string;
    vswitchId?: string;
}

/**
 * A collection of values returned by getNasMountTargets.
 */
export interface GetNasMountTargetsResult {
    readonly accessGroupName?: string;
    readonly fileSystemId: string;
    readonly id: string;
    readonly ids: string[];
    /**
     * @deprecated Deprecated
     */
    readonly mountTargetDomain?: string;
    readonly networkType?: string;
    readonly outputFile?: string;
    readonly status?: string;
    readonly targets: outputs.GetNasMountTargetsTarget[];
    /**
     * @deprecated Deprecated
     */
    readonly type?: string;
    readonly vpcId?: string;
    readonly vswitchId?: string;
}
export function getNasMountTargetsOutput(args: GetNasMountTargetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNasMountTargetsResult> {
    return pulumi.output(args).apply((a: any) => getNasMountTargets(a, opts))
}

/**
 * A collection of arguments for invoking getNasMountTargets.
 */
export interface GetNasMountTargetsOutputArgs {
    accessGroupName?: pulumi.Input<string>;
    fileSystemId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    mountTargetDomain?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    type?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}
