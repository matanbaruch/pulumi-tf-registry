// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcsCommands(args?: GetEcsCommandsArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsCommandsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEcsCommands:getEcsCommands", {
        "commandProvider": args.commandProvider,
        "contentEncoding": args.contentEncoding,
        "description": args.description,
        "id": args.id,
        "ids": args.ids,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcsCommands.
 */
export interface GetEcsCommandsArgs {
    commandProvider?: string;
    contentEncoding?: string;
    description?: string;
    id?: string;
    ids?: string[];
    name?: string;
    nameRegex?: string;
    outputFile?: string;
    type?: string;
}

/**
 * A collection of values returned by getEcsCommands.
 */
export interface GetEcsCommandsResult {
    readonly commandProvider?: string;
    readonly commands: outputs.GetEcsCommandsCommand[];
    readonly contentEncoding?: string;
    readonly description?: string;
    readonly id: string;
    readonly ids: string[];
    readonly name?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly type?: string;
}
export function getEcsCommandsOutput(args?: GetEcsCommandsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcsCommandsResult> {
    return pulumi.output(args).apply((a: any) => getEcsCommands(a, opts))
}

/**
 * A collection of arguments for invoking getEcsCommands.
 */
export interface GetEcsCommandsOutputArgs {
    commandProvider?: pulumi.Input<string>;
    contentEncoding?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
