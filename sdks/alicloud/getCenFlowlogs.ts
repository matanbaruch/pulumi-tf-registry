// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCenFlowlogs(args?: GetCenFlowlogsArgs, opts?: pulumi.InvokeOptions): Promise<GetCenFlowlogsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCenFlowlogs:getCenFlowlogs", {
        "cenId": args.cenId,
        "description": args.description,
        "id": args.id,
        "ids": args.ids,
        "logStoreName": args.logStoreName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCenFlowlogs.
 */
export interface GetCenFlowlogsArgs {
    cenId?: string;
    description?: string;
    id?: string;
    ids?: string[];
    logStoreName?: string;
    nameRegex?: string;
    outputFile?: string;
    projectName?: string;
    status?: string;
}

/**
 * A collection of values returned by getCenFlowlogs.
 */
export interface GetCenFlowlogsResult {
    readonly cenId?: string;
    readonly description?: string;
    readonly flowlogs: outputs.GetCenFlowlogsFlowlog[];
    readonly id: string;
    readonly ids: string[];
    readonly logStoreName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly projectName?: string;
    readonly status?: string;
}
export function getCenFlowlogsOutput(args?: GetCenFlowlogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCenFlowlogsResult> {
    return pulumi.output(args).apply((a: any) => getCenFlowlogs(a, opts))
}

/**
 * A collection of arguments for invoking getCenFlowlogs.
 */
export interface GetCenFlowlogsOutputArgs {
    cenId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    logStoreName?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
