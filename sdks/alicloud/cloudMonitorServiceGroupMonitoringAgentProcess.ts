// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudMonitorServiceGroupMonitoringAgentProcess extends pulumi.CustomResource {
    /**
     * Get an existing CloudMonitorServiceGroupMonitoringAgentProcess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudMonitorServiceGroupMonitoringAgentProcessState, opts?: pulumi.CustomResourceOptions): CloudMonitorServiceGroupMonitoringAgentProcess {
        return new CloudMonitorServiceGroupMonitoringAgentProcess(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cloudMonitorServiceGroupMonitoringAgentProcess:CloudMonitorServiceGroupMonitoringAgentProcess';

    /**
     * Returns true if the given object is an instance of CloudMonitorServiceGroupMonitoringAgentProcess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudMonitorServiceGroupMonitoringAgentProcess {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudMonitorServiceGroupMonitoringAgentProcess.__pulumiType;
    }

    public readonly alertConfigs!: pulumi.Output<outputs.CloudMonitorServiceGroupMonitoringAgentProcessAlertConfig[]>;
    public readonly groupId!: pulumi.Output<string>;
    public /*out*/ readonly groupMonitoringAgentProcessId!: pulumi.Output<string>;
    public readonly matchExpressFilterRelation!: pulumi.Output<string>;
    public readonly matchExpresses!: pulumi.Output<outputs.CloudMonitorServiceGroupMonitoringAgentProcessMatchExpress[] | undefined>;
    public readonly processName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CloudMonitorServiceGroupMonitoringAgentProcessTimeouts | undefined>;

    /**
     * Create a CloudMonitorServiceGroupMonitoringAgentProcess resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudMonitorServiceGroupMonitoringAgentProcessArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudMonitorServiceGroupMonitoringAgentProcessArgs | CloudMonitorServiceGroupMonitoringAgentProcessState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudMonitorServiceGroupMonitoringAgentProcessState | undefined;
            resourceInputs["alertConfigs"] = state ? state.alertConfigs : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["groupMonitoringAgentProcessId"] = state ? state.groupMonitoringAgentProcessId : undefined;
            resourceInputs["matchExpressFilterRelation"] = state ? state.matchExpressFilterRelation : undefined;
            resourceInputs["matchExpresses"] = state ? state.matchExpresses : undefined;
            resourceInputs["processName"] = state ? state.processName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CloudMonitorServiceGroupMonitoringAgentProcessArgs | undefined;
            if ((!args || args.alertConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alertConfigs'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.processName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'processName'");
            }
            resourceInputs["alertConfigs"] = args ? args.alertConfigs : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["matchExpressFilterRelation"] = args ? args.matchExpressFilterRelation : undefined;
            resourceInputs["matchExpresses"] = args ? args.matchExpresses : undefined;
            resourceInputs["processName"] = args ? args.processName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["groupMonitoringAgentProcessId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudMonitorServiceGroupMonitoringAgentProcess.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudMonitorServiceGroupMonitoringAgentProcess resources.
 */
export interface CloudMonitorServiceGroupMonitoringAgentProcessState {
    alertConfigs?: pulumi.Input<pulumi.Input<inputs.CloudMonitorServiceGroupMonitoringAgentProcessAlertConfig>[]>;
    groupId?: pulumi.Input<string>;
    groupMonitoringAgentProcessId?: pulumi.Input<string>;
    matchExpressFilterRelation?: pulumi.Input<string>;
    matchExpresses?: pulumi.Input<pulumi.Input<inputs.CloudMonitorServiceGroupMonitoringAgentProcessMatchExpress>[]>;
    processName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudMonitorServiceGroupMonitoringAgentProcessTimeouts>;
}

/**
 * The set of arguments for constructing a CloudMonitorServiceGroupMonitoringAgentProcess resource.
 */
export interface CloudMonitorServiceGroupMonitoringAgentProcessArgs {
    alertConfigs: pulumi.Input<pulumi.Input<inputs.CloudMonitorServiceGroupMonitoringAgentProcessAlertConfig>[]>;
    groupId: pulumi.Input<string>;
    matchExpressFilterRelation?: pulumi.Input<string>;
    matchExpresses?: pulumi.Input<pulumi.Input<inputs.CloudMonitorServiceGroupMonitoringAgentProcessMatchExpress>[]>;
    processName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudMonitorServiceGroupMonitoringAgentProcessTimeouts>;
}
