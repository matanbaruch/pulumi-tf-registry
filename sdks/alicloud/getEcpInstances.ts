// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcpInstances(args?: GetEcpInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetEcpInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEcpInstances:getEcpInstances", {
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "imageId": args.imageId,
        "instanceName": args.instanceName,
        "instanceType": args.instanceType,
        "keyPairName": args.keyPairName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "paymentType": args.paymentType,
        "resolution": args.resolution,
        "status": args.status,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcpInstances.
 */
export interface GetEcpInstancesArgs {
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    imageId?: string;
    instanceName?: string;
    instanceType?: string;
    keyPairName?: string;
    nameRegex?: string;
    outputFile?: string;
    paymentType?: string;
    resolution?: string;
    status?: string;
    zoneId?: string;
}

/**
 * A collection of values returned by getEcpInstances.
 */
export interface GetEcpInstancesResult {
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly imageId?: string;
    readonly instanceName?: string;
    readonly instanceType?: string;
    readonly instances: outputs.GetEcpInstancesInstance[];
    readonly keyPairName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly paymentType?: string;
    readonly resolution?: string;
    readonly status?: string;
    readonly zoneId?: string;
}
export function getEcpInstancesOutput(args?: GetEcpInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcpInstancesResult> {
    return pulumi.output(args).apply((a: any) => getEcpInstances(a, opts))
}

/**
 * A collection of arguments for invoking getEcpInstances.
 */
export interface GetEcpInstancesOutputArgs {
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    imageId?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    keyPairName?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    resolution?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
