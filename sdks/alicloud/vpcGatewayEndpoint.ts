// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcGatewayEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing VpcGatewayEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcGatewayEndpointState, opts?: pulumi.CustomResourceOptions): VpcGatewayEndpoint {
        return new VpcGatewayEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/vpcGatewayEndpoint:VpcGatewayEndpoint';

    /**
     * Returns true if the given object is an instance of VpcGatewayEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcGatewayEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcGatewayEndpoint.__pulumiType;
    }

    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly gatewayEndpointDescrption!: pulumi.Output<string | undefined>;
    public readonly gatewayEndpointName!: pulumi.Output<string | undefined>;
    public readonly policyDocument!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly serviceName!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.VpcGatewayEndpointTimeouts | undefined>;
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VpcGatewayEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcGatewayEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcGatewayEndpointArgs | VpcGatewayEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcGatewayEndpointState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["gatewayEndpointDescrption"] = state ? state.gatewayEndpointDescrption : undefined;
            resourceInputs["gatewayEndpointName"] = state ? state.gatewayEndpointName : undefined;
            resourceInputs["policyDocument"] = state ? state.policyDocument : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as VpcGatewayEndpointArgs | undefined;
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["gatewayEndpointDescrption"] = args ? args.gatewayEndpointDescrption : undefined;
            resourceInputs["gatewayEndpointName"] = args ? args.gatewayEndpointName : undefined;
            resourceInputs["policyDocument"] = args ? args.policyDocument : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcGatewayEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpcGatewayEndpoint resources.
 */
export interface VpcGatewayEndpointState {
    createTime?: pulumi.Input<string>;
    gatewayEndpointDescrption?: pulumi.Input<string>;
    gatewayEndpointName?: pulumi.Input<string>;
    policyDocument?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VpcGatewayEndpointTimeouts>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcGatewayEndpoint resource.
 */
export interface VpcGatewayEndpointArgs {
    gatewayEndpointDescrption?: pulumi.Input<string>;
    gatewayEndpointName?: pulumi.Input<string>;
    policyDocument?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VpcGatewayEndpointTimeouts>;
    vpcId: pulumi.Input<string>;
}
