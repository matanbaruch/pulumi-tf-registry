// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNasProtocols(args: GetNasProtocolsArgs, opts?: pulumi.InvokeOptions): Promise<GetNasProtocolsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getNasProtocols:getNasProtocols", {
        "id": args.id,
        "outputFile": args.outputFile,
        "type": args.type,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNasProtocols.
 */
export interface GetNasProtocolsArgs {
    id?: string;
    outputFile?: string;
    type: string;
    zoneId?: string;
}

/**
 * A collection of values returned by getNasProtocols.
 */
export interface GetNasProtocolsResult {
    readonly id: string;
    readonly outputFile?: string;
    readonly protocols: string[];
    readonly type: string;
    readonly zoneId?: string;
}
export function getNasProtocolsOutput(args: GetNasProtocolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNasProtocolsResult> {
    return pulumi.output(args).apply((a: any) => getNasProtocols(a, opts))
}

/**
 * A collection of arguments for invoking getNasProtocols.
 */
export interface GetNasProtocolsOutputArgs {
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
