// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCenTransitRouterAvailableResources(args?: GetCenTransitRouterAvailableResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetCenTransitRouterAvailableResourcesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCenTransitRouterAvailableResources:getCenTransitRouterAvailableResources", {
        "id": args.id,
        "outputFile": args.outputFile,
        "supportMulticast": args.supportMulticast,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCenTransitRouterAvailableResources.
 */
export interface GetCenTransitRouterAvailableResourcesArgs {
    id?: string;
    outputFile?: string;
    supportMulticast?: boolean;
}

/**
 * A collection of values returned by getCenTransitRouterAvailableResources.
 */
export interface GetCenTransitRouterAvailableResourcesResult {
    readonly id: string;
    readonly outputFile?: string;
    readonly resources: outputs.GetCenTransitRouterAvailableResourcesResource[];
    readonly supportMulticast?: boolean;
}
export function getCenTransitRouterAvailableResourcesOutput(args?: GetCenTransitRouterAvailableResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCenTransitRouterAvailableResourcesResult> {
    return pulumi.output(args).apply((a: any) => getCenTransitRouterAvailableResources(a, opts))
}

/**
 * A collection of arguments for invoking getCenTransitRouterAvailableResources.
 */
export interface GetCenTransitRouterAvailableResourcesOutputArgs {
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    supportMulticast?: pulumi.Input<boolean>;
}
