// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlbLoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing AlbLoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions): AlbLoadBalancer {
        return new AlbLoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/albLoadBalancer:AlbLoadBalancer';

    /**
     * Returns true if the given object is an instance of AlbLoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlbLoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlbLoadBalancer.__pulumiType;
    }

    public readonly accessLogConfig!: pulumi.Output<outputs.AlbLoadBalancerAccessLogConfig | undefined>;
    public readonly addressAllocatedMode!: pulumi.Output<string | undefined>;
    public readonly addressIpVersion!: pulumi.Output<string>;
    public readonly addressType!: pulumi.Output<string>;
    public readonly bandwidthPackageId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly deletionProtectionEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly dnsName!: pulumi.Output<string>;
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    public readonly ipv6AddressType!: pulumi.Output<string>;
    public readonly loadBalancerBillingConfig!: pulumi.Output<outputs.AlbLoadBalancerLoadBalancerBillingConfig>;
    public readonly loadBalancerEdition!: pulumi.Output<string>;
    public readonly loadBalancerName!: pulumi.Output<string | undefined>;
    public readonly modificationProtectionConfig!: pulumi.Output<outputs.AlbLoadBalancerModificationProtectionConfig | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AlbLoadBalancerTimeouts | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly zoneMappings!: pulumi.Output<outputs.AlbLoadBalancerZoneMapping[]>;

    /**
     * Create a AlbLoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlbLoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlbLoadBalancerArgs | AlbLoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlbLoadBalancerState | undefined;
            resourceInputs["accessLogConfig"] = state ? state.accessLogConfig : undefined;
            resourceInputs["addressAllocatedMode"] = state ? state.addressAllocatedMode : undefined;
            resourceInputs["addressIpVersion"] = state ? state.addressIpVersion : undefined;
            resourceInputs["addressType"] = state ? state.addressType : undefined;
            resourceInputs["bandwidthPackageId"] = state ? state.bandwidthPackageId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deletionProtectionEnabled"] = state ? state.deletionProtectionEnabled : undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["dryRun"] = state ? state.dryRun : undefined;
            resourceInputs["ipv6AddressType"] = state ? state.ipv6AddressType : undefined;
            resourceInputs["loadBalancerBillingConfig"] = state ? state.loadBalancerBillingConfig : undefined;
            resourceInputs["loadBalancerEdition"] = state ? state.loadBalancerEdition : undefined;
            resourceInputs["loadBalancerName"] = state ? state.loadBalancerName : undefined;
            resourceInputs["modificationProtectionConfig"] = state ? state.modificationProtectionConfig : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zoneMappings"] = state ? state.zoneMappings : undefined;
        } else {
            const args = argsOrState as AlbLoadBalancerArgs | undefined;
            if ((!args || args.addressType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressType'");
            }
            if ((!args || args.loadBalancerBillingConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerBillingConfig'");
            }
            if ((!args || args.loadBalancerEdition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerEdition'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.zoneMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneMappings'");
            }
            resourceInputs["accessLogConfig"] = args ? args.accessLogConfig : undefined;
            resourceInputs["addressAllocatedMode"] = args ? args.addressAllocatedMode : undefined;
            resourceInputs["addressIpVersion"] = args ? args.addressIpVersion : undefined;
            resourceInputs["addressType"] = args ? args.addressType : undefined;
            resourceInputs["bandwidthPackageId"] = args ? args.bandwidthPackageId : undefined;
            resourceInputs["deletionProtectionEnabled"] = args ? args.deletionProtectionEnabled : undefined;
            resourceInputs["dryRun"] = args ? args.dryRun : undefined;
            resourceInputs["ipv6AddressType"] = args ? args.ipv6AddressType : undefined;
            resourceInputs["loadBalancerBillingConfig"] = args ? args.loadBalancerBillingConfig : undefined;
            resourceInputs["loadBalancerEdition"] = args ? args.loadBalancerEdition : undefined;
            resourceInputs["loadBalancerName"] = args ? args.loadBalancerName : undefined;
            resourceInputs["modificationProtectionConfig"] = args ? args.modificationProtectionConfig : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zoneMappings"] = args ? args.zoneMappings : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dnsName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlbLoadBalancer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlbLoadBalancer resources.
 */
export interface AlbLoadBalancerState {
    accessLogConfig?: pulumi.Input<inputs.AlbLoadBalancerAccessLogConfig>;
    addressAllocatedMode?: pulumi.Input<string>;
    addressIpVersion?: pulumi.Input<string>;
    addressType?: pulumi.Input<string>;
    bandwidthPackageId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    dnsName?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    ipv6AddressType?: pulumi.Input<string>;
    loadBalancerBillingConfig?: pulumi.Input<inputs.AlbLoadBalancerLoadBalancerBillingConfig>;
    loadBalancerEdition?: pulumi.Input<string>;
    loadBalancerName?: pulumi.Input<string>;
    modificationProtectionConfig?: pulumi.Input<inputs.AlbLoadBalancerModificationProtectionConfig>;
    resourceGroupId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AlbLoadBalancerTimeouts>;
    vpcId?: pulumi.Input<string>;
    zoneMappings?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerZoneMapping>[]>;
}

/**
 * The set of arguments for constructing a AlbLoadBalancer resource.
 */
export interface AlbLoadBalancerArgs {
    accessLogConfig?: pulumi.Input<inputs.AlbLoadBalancerAccessLogConfig>;
    addressAllocatedMode?: pulumi.Input<string>;
    addressIpVersion?: pulumi.Input<string>;
    addressType: pulumi.Input<string>;
    bandwidthPackageId?: pulumi.Input<string>;
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    dryRun?: pulumi.Input<boolean>;
    ipv6AddressType?: pulumi.Input<string>;
    loadBalancerBillingConfig: pulumi.Input<inputs.AlbLoadBalancerLoadBalancerBillingConfig>;
    loadBalancerEdition: pulumi.Input<string>;
    loadBalancerName?: pulumi.Input<string>;
    modificationProtectionConfig?: pulumi.Input<inputs.AlbLoadBalancerModificationProtectionConfig>;
    resourceGroupId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AlbLoadBalancerTimeouts>;
    vpcId: pulumi.Input<string>;
    zoneMappings: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerZoneMapping>[]>;
}
