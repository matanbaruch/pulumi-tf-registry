// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudSsoDirectory extends pulumi.CustomResource {
    /**
     * Get an existing CloudSsoDirectory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudSsoDirectoryState, opts?: pulumi.CustomResourceOptions): CloudSsoDirectory {
        return new CloudSsoDirectory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cloudSsoDirectory:CloudSsoDirectory';

    /**
     * Returns true if the given object is an instance of CloudSsoDirectory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudSsoDirectory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudSsoDirectory.__pulumiType;
    }

    public readonly directoryName!: pulumi.Output<string | undefined>;
    public readonly mfaAuthenticationStatus!: pulumi.Output<string>;
    public readonly samlIdentityProviderConfiguration!: pulumi.Output<outputs.CloudSsoDirectorySamlIdentityProviderConfiguration | undefined>;
    public readonly scimSynchronizationStatus!: pulumi.Output<string>;

    /**
     * Create a CloudSsoDirectory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudSsoDirectoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudSsoDirectoryArgs | CloudSsoDirectoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudSsoDirectoryState | undefined;
            resourceInputs["directoryName"] = state ? state.directoryName : undefined;
            resourceInputs["mfaAuthenticationStatus"] = state ? state.mfaAuthenticationStatus : undefined;
            resourceInputs["samlIdentityProviderConfiguration"] = state ? state.samlIdentityProviderConfiguration : undefined;
            resourceInputs["scimSynchronizationStatus"] = state ? state.scimSynchronizationStatus : undefined;
        } else {
            const args = argsOrState as CloudSsoDirectoryArgs | undefined;
            resourceInputs["directoryName"] = args ? args.directoryName : undefined;
            resourceInputs["mfaAuthenticationStatus"] = args ? args.mfaAuthenticationStatus : undefined;
            resourceInputs["samlIdentityProviderConfiguration"] = args ? args.samlIdentityProviderConfiguration : undefined;
            resourceInputs["scimSynchronizationStatus"] = args ? args.scimSynchronizationStatus : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudSsoDirectory.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudSsoDirectory resources.
 */
export interface CloudSsoDirectoryState {
    directoryName?: pulumi.Input<string>;
    mfaAuthenticationStatus?: pulumi.Input<string>;
    samlIdentityProviderConfiguration?: pulumi.Input<inputs.CloudSsoDirectorySamlIdentityProviderConfiguration>;
    scimSynchronizationStatus?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudSsoDirectory resource.
 */
export interface CloudSsoDirectoryArgs {
    directoryName?: pulumi.Input<string>;
    mfaAuthenticationStatus?: pulumi.Input<string>;
    samlIdentityProviderConfiguration?: pulumi.Input<inputs.CloudSsoDirectorySamlIdentityProviderConfiguration>;
    scimSynchronizationStatus?: pulumi.Input<string>;
}
