// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ThreatDetectionOssScanConfig extends pulumi.CustomResource {
    /**
     * Get an existing ThreatDetectionOssScanConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThreatDetectionOssScanConfigState, opts?: pulumi.CustomResourceOptions): ThreatDetectionOssScanConfig {
        return new ThreatDetectionOssScanConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/threatDetectionOssScanConfig:ThreatDetectionOssScanConfig';

    /**
     * Returns true if the given object is an instance of ThreatDetectionOssScanConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatDetectionOssScanConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatDetectionOssScanConfig.__pulumiType;
    }

    public readonly allKeyPrefix!: pulumi.Output<boolean>;
    public readonly bucketNameLists!: pulumi.Output<string[]>;
    public readonly enable!: pulumi.Output<number>;
    public readonly endTime!: pulumi.Output<string>;
    public readonly keyPrefixLists!: pulumi.Output<string[] | undefined>;
    public readonly keySuffixLists!: pulumi.Output<string[]>;
    public readonly ossScanConfigName!: pulumi.Output<string | undefined>;
    public readonly scanDayLists!: pulumi.Output<number[]>;
    public readonly startTime!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ThreatDetectionOssScanConfigTimeouts | undefined>;

    /**
     * Create a ThreatDetectionOssScanConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatDetectionOssScanConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThreatDetectionOssScanConfigArgs | ThreatDetectionOssScanConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThreatDetectionOssScanConfigState | undefined;
            resourceInputs["allKeyPrefix"] = state ? state.allKeyPrefix : undefined;
            resourceInputs["bucketNameLists"] = state ? state.bucketNameLists : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["keyPrefixLists"] = state ? state.keyPrefixLists : undefined;
            resourceInputs["keySuffixLists"] = state ? state.keySuffixLists : undefined;
            resourceInputs["ossScanConfigName"] = state ? state.ossScanConfigName : undefined;
            resourceInputs["scanDayLists"] = state ? state.scanDayLists : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ThreatDetectionOssScanConfigArgs | undefined;
            if ((!args || args.bucketNameLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketNameLists'");
            }
            if ((!args || args.enable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enable'");
            }
            if ((!args || args.endTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if ((!args || args.keySuffixLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keySuffixLists'");
            }
            if ((!args || args.scanDayLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scanDayLists'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            resourceInputs["allKeyPrefix"] = args ? args.allKeyPrefix : undefined;
            resourceInputs["bucketNameLists"] = args ? args.bucketNameLists : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["keyPrefixLists"] = args ? args.keyPrefixLists : undefined;
            resourceInputs["keySuffixLists"] = args ? args.keySuffixLists : undefined;
            resourceInputs["ossScanConfigName"] = args ? args.ossScanConfigName : undefined;
            resourceInputs["scanDayLists"] = args ? args.scanDayLists : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ThreatDetectionOssScanConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ThreatDetectionOssScanConfig resources.
 */
export interface ThreatDetectionOssScanConfigState {
    allKeyPrefix?: pulumi.Input<boolean>;
    bucketNameLists?: pulumi.Input<pulumi.Input<string>[]>;
    enable?: pulumi.Input<number>;
    endTime?: pulumi.Input<string>;
    keyPrefixLists?: pulumi.Input<pulumi.Input<string>[]>;
    keySuffixLists?: pulumi.Input<pulumi.Input<string>[]>;
    ossScanConfigName?: pulumi.Input<string>;
    scanDayLists?: pulumi.Input<pulumi.Input<number>[]>;
    startTime?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ThreatDetectionOssScanConfigTimeouts>;
}

/**
 * The set of arguments for constructing a ThreatDetectionOssScanConfig resource.
 */
export interface ThreatDetectionOssScanConfigArgs {
    allKeyPrefix?: pulumi.Input<boolean>;
    bucketNameLists: pulumi.Input<pulumi.Input<string>[]>;
    enable: pulumi.Input<number>;
    endTime: pulumi.Input<string>;
    keyPrefixLists?: pulumi.Input<pulumi.Input<string>[]>;
    keySuffixLists: pulumi.Input<pulumi.Input<string>[]>;
    ossScanConfigName?: pulumi.Input<string>;
    scanDayLists: pulumi.Input<pulumi.Input<number>[]>;
    startTime: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ThreatDetectionOssScanConfigTimeouts>;
}
