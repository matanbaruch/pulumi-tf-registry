// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConfigAggregateConfigRules(args: GetConfigAggregateConfigRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigAggregateConfigRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getConfigAggregateConfigRules:getConfigAggregateConfigRules", {
        "aggregateConfigRuleName": args.aggregateConfigRuleName,
        "aggregatorId": args.aggregatorId,
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "riskLevel": args.riskLevel,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfigAggregateConfigRules.
 */
export interface GetConfigAggregateConfigRulesArgs {
    aggregateConfigRuleName?: string;
    aggregatorId: string;
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    nameRegex?: string;
    outputFile?: string;
    riskLevel?: number;
    status?: string;
}

/**
 * A collection of values returned by getConfigAggregateConfigRules.
 */
export interface GetConfigAggregateConfigRulesResult {
    readonly aggregateConfigRuleName?: string;
    readonly aggregatorId: string;
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly riskLevel?: number;
    readonly rules: outputs.GetConfigAggregateConfigRulesRule[];
    readonly status?: string;
}
export function getConfigAggregateConfigRulesOutput(args: GetConfigAggregateConfigRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigAggregateConfigRulesResult> {
    return pulumi.output(args).apply((a: any) => getConfigAggregateConfigRules(a, opts))
}

/**
 * A collection of arguments for invoking getConfigAggregateConfigRules.
 */
export interface GetConfigAggregateConfigRulesOutputArgs {
    aggregateConfigRuleName?: pulumi.Input<string>;
    aggregatorId: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    riskLevel?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
}
