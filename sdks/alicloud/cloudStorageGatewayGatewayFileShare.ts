// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudStorageGatewayGatewayFileShare extends pulumi.CustomResource {
    /**
     * Get an existing CloudStorageGatewayGatewayFileShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudStorageGatewayGatewayFileShareState, opts?: pulumi.CustomResourceOptions): CloudStorageGatewayGatewayFileShare {
        return new CloudStorageGatewayGatewayFileShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cloudStorageGatewayGatewayFileShare:CloudStorageGatewayGatewayFileShare';

    /**
     * Returns true if the given object is an instance of CloudStorageGatewayGatewayFileShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudStorageGatewayGatewayFileShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudStorageGatewayGatewayFileShare.__pulumiType;
    }

    public readonly accessBasedEnumeration!: pulumi.Output<boolean>;
    public readonly backendLimit!: pulumi.Output<number>;
    public readonly browsable!: pulumi.Output<boolean>;
    public readonly bypassCacheRead!: pulumi.Output<boolean>;
    public readonly cacheMode!: pulumi.Output<string>;
    public readonly directIo!: pulumi.Output<boolean>;
    public readonly downloadLimit!: pulumi.Output<number>;
    public readonly fastReclaim!: pulumi.Output<boolean>;
    public readonly feLimit!: pulumi.Output<number>;
    public readonly gatewayFileShareName!: pulumi.Output<string>;
    public readonly gatewayId!: pulumi.Output<string>;
    public readonly ignoreDelete!: pulumi.Output<boolean>;
    public readonly inPlace!: pulumi.Output<boolean>;
    public /*out*/ readonly indexId!: pulumi.Output<string>;
    public readonly lagPeriod!: pulumi.Output<number>;
    public readonly localPath!: pulumi.Output<string>;
    public readonly nfsV4Optimization!: pulumi.Output<boolean>;
    public readonly ossBucketName!: pulumi.Output<string>;
    public readonly ossBucketSsl!: pulumi.Output<boolean>;
    public readonly ossEndpoint!: pulumi.Output<string>;
    public readonly partialSyncPaths!: pulumi.Output<string | undefined>;
    public readonly pathPrefix!: pulumi.Output<string | undefined>;
    public readonly pollingInterval!: pulumi.Output<number | undefined>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly remoteSync!: pulumi.Output<boolean>;
    public readonly remoteSyncDownload!: pulumi.Output<boolean>;
    public readonly roClientList!: pulumi.Output<string | undefined>;
    public readonly roUserList!: pulumi.Output<string | undefined>;
    public readonly rwClientList!: pulumi.Output<string | undefined>;
    public readonly rwUserList!: pulumi.Output<string | undefined>;
    public readonly squash!: pulumi.Output<string>;
    public readonly supportArchive!: pulumi.Output<boolean>;
    public readonly timeouts!: pulumi.Output<outputs.CloudStorageGatewayGatewayFileShareTimeouts | undefined>;
    public readonly transferAcceleration!: pulumi.Output<boolean>;
    public readonly windowsAcl!: pulumi.Output<boolean>;

    /**
     * Create a CloudStorageGatewayGatewayFileShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudStorageGatewayGatewayFileShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudStorageGatewayGatewayFileShareArgs | CloudStorageGatewayGatewayFileShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudStorageGatewayGatewayFileShareState | undefined;
            resourceInputs["accessBasedEnumeration"] = state ? state.accessBasedEnumeration : undefined;
            resourceInputs["backendLimit"] = state ? state.backendLimit : undefined;
            resourceInputs["browsable"] = state ? state.browsable : undefined;
            resourceInputs["bypassCacheRead"] = state ? state.bypassCacheRead : undefined;
            resourceInputs["cacheMode"] = state ? state.cacheMode : undefined;
            resourceInputs["directIo"] = state ? state.directIo : undefined;
            resourceInputs["downloadLimit"] = state ? state.downloadLimit : undefined;
            resourceInputs["fastReclaim"] = state ? state.fastReclaim : undefined;
            resourceInputs["feLimit"] = state ? state.feLimit : undefined;
            resourceInputs["gatewayFileShareName"] = state ? state.gatewayFileShareName : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["ignoreDelete"] = state ? state.ignoreDelete : undefined;
            resourceInputs["inPlace"] = state ? state.inPlace : undefined;
            resourceInputs["indexId"] = state ? state.indexId : undefined;
            resourceInputs["lagPeriod"] = state ? state.lagPeriod : undefined;
            resourceInputs["localPath"] = state ? state.localPath : undefined;
            resourceInputs["nfsV4Optimization"] = state ? state.nfsV4Optimization : undefined;
            resourceInputs["ossBucketName"] = state ? state.ossBucketName : undefined;
            resourceInputs["ossBucketSsl"] = state ? state.ossBucketSsl : undefined;
            resourceInputs["ossEndpoint"] = state ? state.ossEndpoint : undefined;
            resourceInputs["partialSyncPaths"] = state ? state.partialSyncPaths : undefined;
            resourceInputs["pathPrefix"] = state ? state.pathPrefix : undefined;
            resourceInputs["pollingInterval"] = state ? state.pollingInterval : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["remoteSync"] = state ? state.remoteSync : undefined;
            resourceInputs["remoteSyncDownload"] = state ? state.remoteSyncDownload : undefined;
            resourceInputs["roClientList"] = state ? state.roClientList : undefined;
            resourceInputs["roUserList"] = state ? state.roUserList : undefined;
            resourceInputs["rwClientList"] = state ? state.rwClientList : undefined;
            resourceInputs["rwUserList"] = state ? state.rwUserList : undefined;
            resourceInputs["squash"] = state ? state.squash : undefined;
            resourceInputs["supportArchive"] = state ? state.supportArchive : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["transferAcceleration"] = state ? state.transferAcceleration : undefined;
            resourceInputs["windowsAcl"] = state ? state.windowsAcl : undefined;
        } else {
            const args = argsOrState as CloudStorageGatewayGatewayFileShareArgs | undefined;
            if ((!args || args.gatewayFileShareName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayFileShareName'");
            }
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.localPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localPath'");
            }
            if ((!args || args.ossBucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ossBucketName'");
            }
            if ((!args || args.ossEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ossEndpoint'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["accessBasedEnumeration"] = args ? args.accessBasedEnumeration : undefined;
            resourceInputs["backendLimit"] = args ? args.backendLimit : undefined;
            resourceInputs["browsable"] = args ? args.browsable : undefined;
            resourceInputs["bypassCacheRead"] = args ? args.bypassCacheRead : undefined;
            resourceInputs["cacheMode"] = args ? args.cacheMode : undefined;
            resourceInputs["directIo"] = args ? args.directIo : undefined;
            resourceInputs["downloadLimit"] = args ? args.downloadLimit : undefined;
            resourceInputs["fastReclaim"] = args ? args.fastReclaim : undefined;
            resourceInputs["feLimit"] = args ? args.feLimit : undefined;
            resourceInputs["gatewayFileShareName"] = args ? args.gatewayFileShareName : undefined;
            resourceInputs["gatewayId"] = args ? args.gatewayId : undefined;
            resourceInputs["ignoreDelete"] = args ? args.ignoreDelete : undefined;
            resourceInputs["inPlace"] = args ? args.inPlace : undefined;
            resourceInputs["lagPeriod"] = args ? args.lagPeriod : undefined;
            resourceInputs["localPath"] = args ? args.localPath : undefined;
            resourceInputs["nfsV4Optimization"] = args ? args.nfsV4Optimization : undefined;
            resourceInputs["ossBucketName"] = args ? args.ossBucketName : undefined;
            resourceInputs["ossBucketSsl"] = args ? args.ossBucketSsl : undefined;
            resourceInputs["ossEndpoint"] = args ? args.ossEndpoint : undefined;
            resourceInputs["partialSyncPaths"] = args ? args.partialSyncPaths : undefined;
            resourceInputs["pathPrefix"] = args ? args.pathPrefix : undefined;
            resourceInputs["pollingInterval"] = args ? args.pollingInterval : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["remoteSync"] = args ? args.remoteSync : undefined;
            resourceInputs["remoteSyncDownload"] = args ? args.remoteSyncDownload : undefined;
            resourceInputs["roClientList"] = args ? args.roClientList : undefined;
            resourceInputs["roUserList"] = args ? args.roUserList : undefined;
            resourceInputs["rwClientList"] = args ? args.rwClientList : undefined;
            resourceInputs["rwUserList"] = args ? args.rwUserList : undefined;
            resourceInputs["squash"] = args ? args.squash : undefined;
            resourceInputs["supportArchive"] = args ? args.supportArchive : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["transferAcceleration"] = args ? args.transferAcceleration : undefined;
            resourceInputs["windowsAcl"] = args ? args.windowsAcl : undefined;
            resourceInputs["indexId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudStorageGatewayGatewayFileShare.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudStorageGatewayGatewayFileShare resources.
 */
export interface CloudStorageGatewayGatewayFileShareState {
    accessBasedEnumeration?: pulumi.Input<boolean>;
    backendLimit?: pulumi.Input<number>;
    browsable?: pulumi.Input<boolean>;
    bypassCacheRead?: pulumi.Input<boolean>;
    cacheMode?: pulumi.Input<string>;
    directIo?: pulumi.Input<boolean>;
    downloadLimit?: pulumi.Input<number>;
    fastReclaim?: pulumi.Input<boolean>;
    feLimit?: pulumi.Input<number>;
    gatewayFileShareName?: pulumi.Input<string>;
    gatewayId?: pulumi.Input<string>;
    ignoreDelete?: pulumi.Input<boolean>;
    inPlace?: pulumi.Input<boolean>;
    indexId?: pulumi.Input<string>;
    lagPeriod?: pulumi.Input<number>;
    localPath?: pulumi.Input<string>;
    nfsV4Optimization?: pulumi.Input<boolean>;
    ossBucketName?: pulumi.Input<string>;
    ossBucketSsl?: pulumi.Input<boolean>;
    ossEndpoint?: pulumi.Input<string>;
    partialSyncPaths?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    pollingInterval?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    remoteSync?: pulumi.Input<boolean>;
    remoteSyncDownload?: pulumi.Input<boolean>;
    roClientList?: pulumi.Input<string>;
    roUserList?: pulumi.Input<string>;
    rwClientList?: pulumi.Input<string>;
    rwUserList?: pulumi.Input<string>;
    squash?: pulumi.Input<string>;
    supportArchive?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.CloudStorageGatewayGatewayFileShareTimeouts>;
    transferAcceleration?: pulumi.Input<boolean>;
    windowsAcl?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a CloudStorageGatewayGatewayFileShare resource.
 */
export interface CloudStorageGatewayGatewayFileShareArgs {
    accessBasedEnumeration?: pulumi.Input<boolean>;
    backendLimit?: pulumi.Input<number>;
    browsable?: pulumi.Input<boolean>;
    bypassCacheRead?: pulumi.Input<boolean>;
    cacheMode?: pulumi.Input<string>;
    directIo?: pulumi.Input<boolean>;
    downloadLimit?: pulumi.Input<number>;
    fastReclaim?: pulumi.Input<boolean>;
    feLimit?: pulumi.Input<number>;
    gatewayFileShareName: pulumi.Input<string>;
    gatewayId: pulumi.Input<string>;
    ignoreDelete?: pulumi.Input<boolean>;
    inPlace?: pulumi.Input<boolean>;
    lagPeriod?: pulumi.Input<number>;
    localPath: pulumi.Input<string>;
    nfsV4Optimization?: pulumi.Input<boolean>;
    ossBucketName: pulumi.Input<string>;
    ossBucketSsl?: pulumi.Input<boolean>;
    ossEndpoint: pulumi.Input<string>;
    partialSyncPaths?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    pollingInterval?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    remoteSync?: pulumi.Input<boolean>;
    remoteSyncDownload?: pulumi.Input<boolean>;
    roClientList?: pulumi.Input<string>;
    roUserList?: pulumi.Input<string>;
    rwClientList?: pulumi.Input<string>;
    rwUserList?: pulumi.Input<string>;
    squash?: pulumi.Input<string>;
    supportArchive?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.CloudStorageGatewayGatewayFileShareTimeouts>;
    transferAcceleration?: pulumi.Input<boolean>;
    windowsAcl?: pulumi.Input<boolean>;
}
