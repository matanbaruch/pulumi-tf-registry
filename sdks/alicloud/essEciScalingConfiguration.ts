// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EssEciScalingConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing EssEciScalingConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EssEciScalingConfigurationState, opts?: pulumi.CustomResourceOptions): EssEciScalingConfiguration {
        return new EssEciScalingConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/essEciScalingConfiguration:EssEciScalingConfiguration';

    /**
     * Returns true if the given object is an instance of EssEciScalingConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EssEciScalingConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EssEciScalingConfiguration.__pulumiType;
    }

    public readonly acrRegistryInfos!: pulumi.Output<outputs.EssEciScalingConfigurationAcrRegistryInfo[] | undefined>;
    public readonly active!: pulumi.Output<boolean | undefined>;
    public readonly activeDeadlineSeconds!: pulumi.Output<number | undefined>;
    public readonly autoCreateEip!: pulumi.Output<boolean | undefined>;
    public readonly autoMatchImageCache!: pulumi.Output<boolean | undefined>;
    public readonly containerGroupName!: pulumi.Output<string | undefined>;
    public readonly containers!: pulumi.Output<outputs.EssEciScalingConfigurationContainer[] | undefined>;
    public readonly cpu!: pulumi.Output<number | undefined>;
    public readonly cpuOptionsCore!: pulumi.Output<number | undefined>;
    public readonly cpuOptionsThreadsPerCore!: pulumi.Output<number | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly dnsPolicy!: pulumi.Output<string | undefined>;
    public readonly egressBandwidth!: pulumi.Output<number | undefined>;
    public readonly eipBandwidth!: pulumi.Output<number | undefined>;
    public readonly enableSls!: pulumi.Output<boolean | undefined>;
    public readonly ephemeralStorage!: pulumi.Output<number | undefined>;
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    public readonly hostAliases!: pulumi.Output<outputs.EssEciScalingConfigurationHostAlias[] | undefined>;
    public readonly hostName!: pulumi.Output<string | undefined>;
    public readonly imageRegistryCredentials!: pulumi.Output<outputs.EssEciScalingConfigurationImageRegistryCredential[] | undefined>;
    public readonly imageSnapshotId!: pulumi.Output<string | undefined>;
    public readonly ingressBandwidth!: pulumi.Output<number | undefined>;
    public readonly initContainers!: pulumi.Output<outputs.EssEciScalingConfigurationInitContainer[] | undefined>;
    public readonly instanceTypes!: pulumi.Output<string[] | undefined>;
    public readonly ipv6AddressCount!: pulumi.Output<number | undefined>;
    public readonly loadBalancerWeight!: pulumi.Output<number | undefined>;
    public readonly memory!: pulumi.Output<number | undefined>;
    public readonly ramRoleName!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string | undefined>;
    public readonly restartPolicy!: pulumi.Output<string | undefined>;
    public readonly scalingConfigurationName!: pulumi.Output<string>;
    public readonly scalingGroupId!: pulumi.Output<string>;
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    public readonly spotPriceLimit!: pulumi.Output<number | undefined>;
    public readonly spotStrategy!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly terminationGracePeriodSeconds!: pulumi.Output<number | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.EssEciScalingConfigurationTimeouts | undefined>;
    public readonly volumes!: pulumi.Output<outputs.EssEciScalingConfigurationVolume[] | undefined>;

    /**
     * Create a EssEciScalingConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EssEciScalingConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EssEciScalingConfigurationArgs | EssEciScalingConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EssEciScalingConfigurationState | undefined;
            resourceInputs["acrRegistryInfos"] = state ? state.acrRegistryInfos : undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["activeDeadlineSeconds"] = state ? state.activeDeadlineSeconds : undefined;
            resourceInputs["autoCreateEip"] = state ? state.autoCreateEip : undefined;
            resourceInputs["autoMatchImageCache"] = state ? state.autoMatchImageCache : undefined;
            resourceInputs["containerGroupName"] = state ? state.containerGroupName : undefined;
            resourceInputs["containers"] = state ? state.containers : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["cpuOptionsCore"] = state ? state.cpuOptionsCore : undefined;
            resourceInputs["cpuOptionsThreadsPerCore"] = state ? state.cpuOptionsThreadsPerCore : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsPolicy"] = state ? state.dnsPolicy : undefined;
            resourceInputs["egressBandwidth"] = state ? state.egressBandwidth : undefined;
            resourceInputs["eipBandwidth"] = state ? state.eipBandwidth : undefined;
            resourceInputs["enableSls"] = state ? state.enableSls : undefined;
            resourceInputs["ephemeralStorage"] = state ? state.ephemeralStorage : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["hostAliases"] = state ? state.hostAliases : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["imageRegistryCredentials"] = state ? state.imageRegistryCredentials : undefined;
            resourceInputs["imageSnapshotId"] = state ? state.imageSnapshotId : undefined;
            resourceInputs["ingressBandwidth"] = state ? state.ingressBandwidth : undefined;
            resourceInputs["initContainers"] = state ? state.initContainers : undefined;
            resourceInputs["instanceTypes"] = state ? state.instanceTypes : undefined;
            resourceInputs["ipv6AddressCount"] = state ? state.ipv6AddressCount : undefined;
            resourceInputs["loadBalancerWeight"] = state ? state.loadBalancerWeight : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["ramRoleName"] = state ? state.ramRoleName : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["restartPolicy"] = state ? state.restartPolicy : undefined;
            resourceInputs["scalingConfigurationName"] = state ? state.scalingConfigurationName : undefined;
            resourceInputs["scalingGroupId"] = state ? state.scalingGroupId : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["spotPriceLimit"] = state ? state.spotPriceLimit : undefined;
            resourceInputs["spotStrategy"] = state ? state.spotStrategy : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terminationGracePeriodSeconds"] = state ? state.terminationGracePeriodSeconds : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["volumes"] = state ? state.volumes : undefined;
        } else {
            const args = argsOrState as EssEciScalingConfigurationArgs | undefined;
            if ((!args || args.scalingGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalingGroupId'");
            }
            resourceInputs["acrRegistryInfos"] = args ? args.acrRegistryInfos : undefined;
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["activeDeadlineSeconds"] = args ? args.activeDeadlineSeconds : undefined;
            resourceInputs["autoCreateEip"] = args ? args.autoCreateEip : undefined;
            resourceInputs["autoMatchImageCache"] = args ? args.autoMatchImageCache : undefined;
            resourceInputs["containerGroupName"] = args ? args.containerGroupName : undefined;
            resourceInputs["containers"] = args ? args.containers : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["cpuOptionsCore"] = args ? args.cpuOptionsCore : undefined;
            resourceInputs["cpuOptionsThreadsPerCore"] = args ? args.cpuOptionsThreadsPerCore : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsPolicy"] = args ? args.dnsPolicy : undefined;
            resourceInputs["egressBandwidth"] = args ? args.egressBandwidth : undefined;
            resourceInputs["eipBandwidth"] = args ? args.eipBandwidth : undefined;
            resourceInputs["enableSls"] = args ? args.enableSls : undefined;
            resourceInputs["ephemeralStorage"] = args ? args.ephemeralStorage : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["hostAliases"] = args ? args.hostAliases : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["imageRegistryCredentials"] = args ? args.imageRegistryCredentials : undefined;
            resourceInputs["imageSnapshotId"] = args ? args.imageSnapshotId : undefined;
            resourceInputs["ingressBandwidth"] = args ? args.ingressBandwidth : undefined;
            resourceInputs["initContainers"] = args ? args.initContainers : undefined;
            resourceInputs["instanceTypes"] = args ? args.instanceTypes : undefined;
            resourceInputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            resourceInputs["loadBalancerWeight"] = args ? args.loadBalancerWeight : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["ramRoleName"] = args ? args.ramRoleName : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["restartPolicy"] = args ? args.restartPolicy : undefined;
            resourceInputs["scalingConfigurationName"] = args ? args.scalingConfigurationName : undefined;
            resourceInputs["scalingGroupId"] = args ? args.scalingGroupId : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["spotPriceLimit"] = args ? args.spotPriceLimit : undefined;
            resourceInputs["spotStrategy"] = args ? args.spotStrategy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["terminationGracePeriodSeconds"] = args ? args.terminationGracePeriodSeconds : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EssEciScalingConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EssEciScalingConfiguration resources.
 */
export interface EssEciScalingConfigurationState {
    acrRegistryInfos?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationAcrRegistryInfo>[]>;
    active?: pulumi.Input<boolean>;
    activeDeadlineSeconds?: pulumi.Input<number>;
    autoCreateEip?: pulumi.Input<boolean>;
    autoMatchImageCache?: pulumi.Input<boolean>;
    containerGroupName?: pulumi.Input<string>;
    containers?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationContainer>[]>;
    cpu?: pulumi.Input<number>;
    cpuOptionsCore?: pulumi.Input<number>;
    cpuOptionsThreadsPerCore?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    dnsPolicy?: pulumi.Input<string>;
    egressBandwidth?: pulumi.Input<number>;
    eipBandwidth?: pulumi.Input<number>;
    enableSls?: pulumi.Input<boolean>;
    ephemeralStorage?: pulumi.Input<number>;
    forceDelete?: pulumi.Input<boolean>;
    hostAliases?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationHostAlias>[]>;
    hostName?: pulumi.Input<string>;
    imageRegistryCredentials?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationImageRegistryCredential>[]>;
    imageSnapshotId?: pulumi.Input<string>;
    ingressBandwidth?: pulumi.Input<number>;
    initContainers?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationInitContainer>[]>;
    instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6AddressCount?: pulumi.Input<number>;
    loadBalancerWeight?: pulumi.Input<number>;
    memory?: pulumi.Input<number>;
    ramRoleName?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    restartPolicy?: pulumi.Input<string>;
    scalingConfigurationName?: pulumi.Input<string>;
    scalingGroupId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    spotPriceLimit?: pulumi.Input<number>;
    spotStrategy?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    terminationGracePeriodSeconds?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.EssEciScalingConfigurationTimeouts>;
    volumes?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationVolume>[]>;
}

/**
 * The set of arguments for constructing a EssEciScalingConfiguration resource.
 */
export interface EssEciScalingConfigurationArgs {
    acrRegistryInfos?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationAcrRegistryInfo>[]>;
    active?: pulumi.Input<boolean>;
    activeDeadlineSeconds?: pulumi.Input<number>;
    autoCreateEip?: pulumi.Input<boolean>;
    autoMatchImageCache?: pulumi.Input<boolean>;
    containerGroupName?: pulumi.Input<string>;
    containers?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationContainer>[]>;
    cpu?: pulumi.Input<number>;
    cpuOptionsCore?: pulumi.Input<number>;
    cpuOptionsThreadsPerCore?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    dnsPolicy?: pulumi.Input<string>;
    egressBandwidth?: pulumi.Input<number>;
    eipBandwidth?: pulumi.Input<number>;
    enableSls?: pulumi.Input<boolean>;
    ephemeralStorage?: pulumi.Input<number>;
    forceDelete?: pulumi.Input<boolean>;
    hostAliases?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationHostAlias>[]>;
    hostName?: pulumi.Input<string>;
    imageRegistryCredentials?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationImageRegistryCredential>[]>;
    imageSnapshotId?: pulumi.Input<string>;
    ingressBandwidth?: pulumi.Input<number>;
    initContainers?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationInitContainer>[]>;
    instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6AddressCount?: pulumi.Input<number>;
    loadBalancerWeight?: pulumi.Input<number>;
    memory?: pulumi.Input<number>;
    ramRoleName?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    restartPolicy?: pulumi.Input<string>;
    scalingConfigurationName?: pulumi.Input<string>;
    scalingGroupId: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    spotPriceLimit?: pulumi.Input<number>;
    spotStrategy?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    terminationGracePeriodSeconds?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.EssEciScalingConfigurationTimeouts>;
    volumes?: pulumi.Input<pulumi.Input<inputs.EssEciScalingConfigurationVolume>[]>;
}
