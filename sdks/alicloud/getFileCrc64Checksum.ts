// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFileCrc64Checksum(args: GetFileCrc64ChecksumArgs, opts?: pulumi.InvokeOptions): Promise<GetFileCrc64ChecksumResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getFileCrc64Checksum:getFileCrc64Checksum", {
        "filename": args.filename,
        "id": args.id,
        "outputFile": args.outputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFileCrc64Checksum.
 */
export interface GetFileCrc64ChecksumArgs {
    filename: string;
    id?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getFileCrc64Checksum.
 */
export interface GetFileCrc64ChecksumResult {
    readonly checksum: string;
    readonly filename: string;
    readonly id: string;
    readonly outputFile?: string;
}
export function getFileCrc64ChecksumOutput(args: GetFileCrc64ChecksumOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileCrc64ChecksumResult> {
    return pulumi.output(args).apply((a: any) => getFileCrc64Checksum(a, opts))
}

/**
 * A collection of arguments for invoking getFileCrc64Checksum.
 */
export interface GetFileCrc64ChecksumOutputArgs {
    filename: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
}
