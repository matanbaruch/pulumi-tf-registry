// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EdasApplication extends pulumi.CustomResource {
    /**
     * Get an existing EdasApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdasApplicationState, opts?: pulumi.CustomResourceOptions): EdasApplication {
        return new EdasApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/edasApplication:EdasApplication';

    /**
     * Returns true if the given object is an instance of EdasApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdasApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdasApplication.__pulumiType;
    }

    public readonly applicationName!: pulumi.Output<string>;
    public readonly buildPackId!: pulumi.Output<number | undefined>;
    public readonly clusterId!: pulumi.Output<string>;
    public readonly descriotion!: pulumi.Output<string | undefined>;
    public readonly ecuInfos!: pulumi.Output<string[] | undefined>;
    public readonly groupId!: pulumi.Output<string | undefined>;
    public readonly healthCheckUrl!: pulumi.Output<string | undefined>;
    public readonly logicalRegionId!: pulumi.Output<string | undefined>;
    public readonly packageType!: pulumi.Output<string>;
    public readonly packageVersion!: pulumi.Output<string | undefined>;
    public readonly warUrl!: pulumi.Output<string | undefined>;

    /**
     * Create a EdasApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdasApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdasApplicationArgs | EdasApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdasApplicationState | undefined;
            resourceInputs["applicationName"] = state ? state.applicationName : undefined;
            resourceInputs["buildPackId"] = state ? state.buildPackId : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["descriotion"] = state ? state.descriotion : undefined;
            resourceInputs["ecuInfos"] = state ? state.ecuInfos : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["healthCheckUrl"] = state ? state.healthCheckUrl : undefined;
            resourceInputs["logicalRegionId"] = state ? state.logicalRegionId : undefined;
            resourceInputs["packageType"] = state ? state.packageType : undefined;
            resourceInputs["packageVersion"] = state ? state.packageVersion : undefined;
            resourceInputs["warUrl"] = state ? state.warUrl : undefined;
        } else {
            const args = argsOrState as EdasApplicationArgs | undefined;
            if ((!args || args.applicationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationName'");
            }
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.packageType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageType'");
            }
            resourceInputs["applicationName"] = args ? args.applicationName : undefined;
            resourceInputs["buildPackId"] = args ? args.buildPackId : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["descriotion"] = args ? args.descriotion : undefined;
            resourceInputs["ecuInfos"] = args ? args.ecuInfos : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["healthCheckUrl"] = args ? args.healthCheckUrl : undefined;
            resourceInputs["logicalRegionId"] = args ? args.logicalRegionId : undefined;
            resourceInputs["packageType"] = args ? args.packageType : undefined;
            resourceInputs["packageVersion"] = args ? args.packageVersion : undefined;
            resourceInputs["warUrl"] = args ? args.warUrl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdasApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EdasApplication resources.
 */
export interface EdasApplicationState {
    applicationName?: pulumi.Input<string>;
    buildPackId?: pulumi.Input<number>;
    clusterId?: pulumi.Input<string>;
    descriotion?: pulumi.Input<string>;
    ecuInfos?: pulumi.Input<pulumi.Input<string>[]>;
    groupId?: pulumi.Input<string>;
    healthCheckUrl?: pulumi.Input<string>;
    logicalRegionId?: pulumi.Input<string>;
    packageType?: pulumi.Input<string>;
    packageVersion?: pulumi.Input<string>;
    warUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdasApplication resource.
 */
export interface EdasApplicationArgs {
    applicationName: pulumi.Input<string>;
    buildPackId?: pulumi.Input<number>;
    clusterId: pulumi.Input<string>;
    descriotion?: pulumi.Input<string>;
    ecuInfos?: pulumi.Input<pulumi.Input<string>[]>;
    groupId?: pulumi.Input<string>;
    healthCheckUrl?: pulumi.Input<string>;
    logicalRegionId?: pulumi.Input<string>;
    packageType: pulumi.Input<string>;
    packageVersion?: pulumi.Input<string>;
    warUrl?: pulumi.Input<string>;
}
