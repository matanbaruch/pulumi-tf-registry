// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCenTransitRouterPrefixListAssociations(args: GetCenTransitRouterPrefixListAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetCenTransitRouterPrefixListAssociationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCenTransitRouterPrefixListAssociations:getCenTransitRouterPrefixListAssociations", {
        "id": args.id,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "ownerUid": args.ownerUid,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "prefixListId": args.prefixListId,
        "status": args.status,
        "transitRouterId": args.transitRouterId,
        "transitRouterTableId": args.transitRouterTableId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCenTransitRouterPrefixListAssociations.
 */
export interface GetCenTransitRouterPrefixListAssociationsArgs {
    id?: string;
    ids?: string[];
    outputFile?: string;
    ownerUid?: number;
    pageNumber?: number;
    pageSize?: number;
    prefixListId?: string;
    status?: string;
    transitRouterId: string;
    transitRouterTableId: string;
}

/**
 * A collection of values returned by getCenTransitRouterPrefixListAssociations.
 */
export interface GetCenTransitRouterPrefixListAssociationsResult {
    readonly associations: outputs.GetCenTransitRouterPrefixListAssociationsAssociation[];
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly ownerUid?: number;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly prefixListId?: string;
    readonly status?: string;
    readonly transitRouterId: string;
    readonly transitRouterTableId: string;
}
export function getCenTransitRouterPrefixListAssociationsOutput(args: GetCenTransitRouterPrefixListAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCenTransitRouterPrefixListAssociationsResult> {
    return pulumi.output(args).apply((a: any) => getCenTransitRouterPrefixListAssociations(a, opts))
}

/**
 * A collection of arguments for invoking getCenTransitRouterPrefixListAssociations.
 */
export interface GetCenTransitRouterPrefixListAssociationsOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    ownerUid?: pulumi.Input<number>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    prefixListId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    transitRouterId: pulumi.Input<string>;
    transitRouterTableId: pulumi.Input<string>;
}
