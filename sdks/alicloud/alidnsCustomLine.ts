// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlidnsCustomLine extends pulumi.CustomResource {
    /**
     * Get an existing AlidnsCustomLine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlidnsCustomLineState, opts?: pulumi.CustomResourceOptions): AlidnsCustomLine {
        return new AlidnsCustomLine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/alidnsCustomLine:AlidnsCustomLine';

    /**
     * Returns true if the given object is an instance of AlidnsCustomLine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlidnsCustomLine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlidnsCustomLine.__pulumiType;
    }

    public readonly customLineName!: pulumi.Output<string>;
    public readonly domainName!: pulumi.Output<string>;
    public readonly ipSegmentLists!: pulumi.Output<outputs.AlidnsCustomLineIpSegmentList[]>;
    public readonly lang!: pulumi.Output<string | undefined>;

    /**
     * Create a AlidnsCustomLine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlidnsCustomLineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlidnsCustomLineArgs | AlidnsCustomLineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlidnsCustomLineState | undefined;
            resourceInputs["customLineName"] = state ? state.customLineName : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["ipSegmentLists"] = state ? state.ipSegmentLists : undefined;
            resourceInputs["lang"] = state ? state.lang : undefined;
        } else {
            const args = argsOrState as AlidnsCustomLineArgs | undefined;
            if ((!args || args.customLineName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customLineName'");
            }
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.ipSegmentLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipSegmentLists'");
            }
            resourceInputs["customLineName"] = args ? args.customLineName : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["ipSegmentLists"] = args ? args.ipSegmentLists : undefined;
            resourceInputs["lang"] = args ? args.lang : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlidnsCustomLine.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlidnsCustomLine resources.
 */
export interface AlidnsCustomLineState {
    customLineName?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    ipSegmentLists?: pulumi.Input<pulumi.Input<inputs.AlidnsCustomLineIpSegmentList>[]>;
    lang?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlidnsCustomLine resource.
 */
export interface AlidnsCustomLineArgs {
    customLineName: pulumi.Input<string>;
    domainName: pulumi.Input<string>;
    ipSegmentLists: pulumi.Input<pulumi.Input<inputs.AlidnsCustomLineIpSegmentList>[]>;
    lang?: pulumi.Input<string>;
}
