// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CmsDynamicTagGroup extends pulumi.CustomResource {
    /**
     * Get an existing CmsDynamicTagGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CmsDynamicTagGroupState, opts?: pulumi.CustomResourceOptions): CmsDynamicTagGroup {
        return new CmsDynamicTagGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cmsDynamicTagGroup:CmsDynamicTagGroup';

    /**
     * Returns true if the given object is an instance of CmsDynamicTagGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CmsDynamicTagGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CmsDynamicTagGroup.__pulumiType;
    }

    public readonly contactGroupLists!: pulumi.Output<string[]>;
    public readonly matchExpressFilterRelation!: pulumi.Output<string>;
    public readonly matchExpresses!: pulumi.Output<outputs.CmsDynamicTagGroupMatchExpress[]>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tagKey!: pulumi.Output<string>;
    public readonly templateIdLists!: pulumi.Output<string[] | undefined>;

    /**
     * Create a CmsDynamicTagGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CmsDynamicTagGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CmsDynamicTagGroupArgs | CmsDynamicTagGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CmsDynamicTagGroupState | undefined;
            resourceInputs["contactGroupLists"] = state ? state.contactGroupLists : undefined;
            resourceInputs["matchExpressFilterRelation"] = state ? state.matchExpressFilterRelation : undefined;
            resourceInputs["matchExpresses"] = state ? state.matchExpresses : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tagKey"] = state ? state.tagKey : undefined;
            resourceInputs["templateIdLists"] = state ? state.templateIdLists : undefined;
        } else {
            const args = argsOrState as CmsDynamicTagGroupArgs | undefined;
            if ((!args || args.contactGroupLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactGroupLists'");
            }
            if ((!args || args.matchExpresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'matchExpresses'");
            }
            if ((!args || args.tagKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagKey'");
            }
            resourceInputs["contactGroupLists"] = args ? args.contactGroupLists : undefined;
            resourceInputs["matchExpressFilterRelation"] = args ? args.matchExpressFilterRelation : undefined;
            resourceInputs["matchExpresses"] = args ? args.matchExpresses : undefined;
            resourceInputs["tagKey"] = args ? args.tagKey : undefined;
            resourceInputs["templateIdLists"] = args ? args.templateIdLists : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CmsDynamicTagGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CmsDynamicTagGroup resources.
 */
export interface CmsDynamicTagGroupState {
    contactGroupLists?: pulumi.Input<pulumi.Input<string>[]>;
    matchExpressFilterRelation?: pulumi.Input<string>;
    matchExpresses?: pulumi.Input<pulumi.Input<inputs.CmsDynamicTagGroupMatchExpress>[]>;
    status?: pulumi.Input<string>;
    tagKey?: pulumi.Input<string>;
    templateIdLists?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a CmsDynamicTagGroup resource.
 */
export interface CmsDynamicTagGroupArgs {
    contactGroupLists: pulumi.Input<pulumi.Input<string>[]>;
    matchExpressFilterRelation?: pulumi.Input<string>;
    matchExpresses: pulumi.Input<pulumi.Input<inputs.CmsDynamicTagGroupMatchExpress>[]>;
    tagKey: pulumi.Input<string>;
    templateIdLists?: pulumi.Input<pulumi.Input<string>[]>;
}
