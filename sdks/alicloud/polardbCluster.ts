// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PolardbCluster extends pulumi.CustomResource {
    /**
     * Get an existing PolardbCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolardbClusterState, opts?: pulumi.CustomResourceOptions): PolardbCluster {
        return new PolardbCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/polardbCluster:PolardbCluster';

    /**
     * Returns true if the given object is an instance of PolardbCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolardbCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolardbCluster.__pulumiType;
    }

    public readonly allowShutDown!: pulumi.Output<string | undefined>;
    public readonly autoRenewPeriod!: pulumi.Output<number | undefined>;
    public readonly backupRetentionPolicyOnClusterDeletion!: pulumi.Output<string>;
    public readonly cloneDataPoint!: pulumi.Output<string | undefined>;
    public readonly collectorStatus!: pulumi.Output<string>;
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly creationCategory!: pulumi.Output<string>;
    public readonly creationOption!: pulumi.Output<string>;
    public readonly dbClusterIpArrays!: pulumi.Output<outputs.PolardbClusterDbClusterIpArray[] | undefined>;
    public readonly dbNodeClass!: pulumi.Output<string>;
    public readonly dbNodeCount!: pulumi.Output<number>;
    public readonly dbNodeId!: pulumi.Output<string | undefined>;
    public readonly dbNodeNum!: pulumi.Output<number | undefined>;
    public /*out*/ readonly dbRevisionVersionLists!: pulumi.Output<outputs.PolardbClusterDbRevisionVersionList[]>;
    public readonly dbType!: pulumi.Output<string>;
    public readonly dbVersion!: pulumi.Output<string>;
    public readonly defaultTimeZone!: pulumi.Output<string>;
    public readonly deletionLock!: pulumi.Output<number | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly encryptNewTables!: pulumi.Output<string | undefined>;
    public readonly encryptionKey!: pulumi.Output<string | undefined>;
    public readonly fromTimeService!: pulumi.Output<string | undefined>;
    public readonly gdnId!: pulumi.Output<string | undefined>;
    public readonly hotReplicaMode!: pulumi.Output<string>;
    public readonly hotStandbyCluster!: pulumi.Output<string>;
    public readonly imciSwitch!: pulumi.Output<string>;
    public readonly loosePolarLogBin!: pulumi.Output<string>;
    public readonly lowerCaseTableNames!: pulumi.Output<number>;
    public readonly maintainTime!: pulumi.Output<string>;
    public readonly modifyType!: pulumi.Output<string | undefined>;
    public readonly parameterGroupId!: pulumi.Output<string | undefined>;
    public readonly parameters!: pulumi.Output<outputs.PolardbClusterParameter[] | undefined>;
    public readonly payType!: pulumi.Output<string | undefined>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly plannedEndTime!: pulumi.Output<string | undefined>;
    public readonly plannedStartTime!: pulumi.Output<string | undefined>;
    public /*out*/ readonly port!: pulumi.Output<string>;
    public readonly provisionedIops!: pulumi.Output<string>;
    public readonly proxyClass!: pulumi.Output<string | undefined>;
    public readonly proxyType!: pulumi.Output<string | undefined>;
    public readonly renewalStatus!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly roleArn!: pulumi.Output<string>;
    public readonly scaleApRoNumMax!: pulumi.Output<number>;
    public readonly scaleApRoNumMin!: pulumi.Output<number>;
    public readonly scaleMax!: pulumi.Output<number | undefined>;
    public readonly scaleMin!: pulumi.Output<number | undefined>;
    public readonly scaleRoNumMax!: pulumi.Output<number | undefined>;
    public readonly scaleRoNumMin!: pulumi.Output<number | undefined>;
    public readonly secondsUntilAutoPause!: pulumi.Output<number>;
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    public readonly securityIps!: pulumi.Output<string[]>;
    public readonly serverlessSteadySwitch!: pulumi.Output<string | undefined>;
    public readonly serverlessType!: pulumi.Output<string | undefined>;
    public readonly sourceResourceId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly storagePayType!: pulumi.Output<string>;
    public readonly storageSpace!: pulumi.Output<number>;
    public readonly storageType!: pulumi.Output<string>;
    public readonly subCategory!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly targetDbRevisionVersionCode!: pulumi.Output<string | undefined>;
    public /*out*/ readonly tdeRegion!: pulumi.Output<string>;
    public readonly tdeStatus!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.PolardbClusterTimeouts | undefined>;
    public readonly upgradeType!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string | undefined>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a PolardbCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolardbClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolardbClusterArgs | PolardbClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolardbClusterState | undefined;
            resourceInputs["allowShutDown"] = state ? state.allowShutDown : undefined;
            resourceInputs["autoRenewPeriod"] = state ? state.autoRenewPeriod : undefined;
            resourceInputs["backupRetentionPolicyOnClusterDeletion"] = state ? state.backupRetentionPolicyOnClusterDeletion : undefined;
            resourceInputs["cloneDataPoint"] = state ? state.cloneDataPoint : undefined;
            resourceInputs["collectorStatus"] = state ? state.collectorStatus : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["creationCategory"] = state ? state.creationCategory : undefined;
            resourceInputs["creationOption"] = state ? state.creationOption : undefined;
            resourceInputs["dbClusterIpArrays"] = state ? state.dbClusterIpArrays : undefined;
            resourceInputs["dbNodeClass"] = state ? state.dbNodeClass : undefined;
            resourceInputs["dbNodeCount"] = state ? state.dbNodeCount : undefined;
            resourceInputs["dbNodeId"] = state ? state.dbNodeId : undefined;
            resourceInputs["dbNodeNum"] = state ? state.dbNodeNum : undefined;
            resourceInputs["dbRevisionVersionLists"] = state ? state.dbRevisionVersionLists : undefined;
            resourceInputs["dbType"] = state ? state.dbType : undefined;
            resourceInputs["dbVersion"] = state ? state.dbVersion : undefined;
            resourceInputs["defaultTimeZone"] = state ? state.defaultTimeZone : undefined;
            resourceInputs["deletionLock"] = state ? state.deletionLock : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["encryptNewTables"] = state ? state.encryptNewTables : undefined;
            resourceInputs["encryptionKey"] = state ? state.encryptionKey : undefined;
            resourceInputs["fromTimeService"] = state ? state.fromTimeService : undefined;
            resourceInputs["gdnId"] = state ? state.gdnId : undefined;
            resourceInputs["hotReplicaMode"] = state ? state.hotReplicaMode : undefined;
            resourceInputs["hotStandbyCluster"] = state ? state.hotStandbyCluster : undefined;
            resourceInputs["imciSwitch"] = state ? state.imciSwitch : undefined;
            resourceInputs["loosePolarLogBin"] = state ? state.loosePolarLogBin : undefined;
            resourceInputs["lowerCaseTableNames"] = state ? state.lowerCaseTableNames : undefined;
            resourceInputs["maintainTime"] = state ? state.maintainTime : undefined;
            resourceInputs["modifyType"] = state ? state.modifyType : undefined;
            resourceInputs["parameterGroupId"] = state ? state.parameterGroupId : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["payType"] = state ? state.payType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["plannedEndTime"] = state ? state.plannedEndTime : undefined;
            resourceInputs["plannedStartTime"] = state ? state.plannedStartTime : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["provisionedIops"] = state ? state.provisionedIops : undefined;
            resourceInputs["proxyClass"] = state ? state.proxyClass : undefined;
            resourceInputs["proxyType"] = state ? state.proxyType : undefined;
            resourceInputs["renewalStatus"] = state ? state.renewalStatus : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["scaleApRoNumMax"] = state ? state.scaleApRoNumMax : undefined;
            resourceInputs["scaleApRoNumMin"] = state ? state.scaleApRoNumMin : undefined;
            resourceInputs["scaleMax"] = state ? state.scaleMax : undefined;
            resourceInputs["scaleMin"] = state ? state.scaleMin : undefined;
            resourceInputs["scaleRoNumMax"] = state ? state.scaleRoNumMax : undefined;
            resourceInputs["scaleRoNumMin"] = state ? state.scaleRoNumMin : undefined;
            resourceInputs["secondsUntilAutoPause"] = state ? state.secondsUntilAutoPause : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["securityIps"] = state ? state.securityIps : undefined;
            resourceInputs["serverlessSteadySwitch"] = state ? state.serverlessSteadySwitch : undefined;
            resourceInputs["serverlessType"] = state ? state.serverlessType : undefined;
            resourceInputs["sourceResourceId"] = state ? state.sourceResourceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storagePayType"] = state ? state.storagePayType : undefined;
            resourceInputs["storageSpace"] = state ? state.storageSpace : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["subCategory"] = state ? state.subCategory : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetDbRevisionVersionCode"] = state ? state.targetDbRevisionVersionCode : undefined;
            resourceInputs["tdeRegion"] = state ? state.tdeRegion : undefined;
            resourceInputs["tdeStatus"] = state ? state.tdeStatus : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["upgradeType"] = state ? state.upgradeType : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as PolardbClusterArgs | undefined;
            if ((!args || args.dbNodeClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbNodeClass'");
            }
            if ((!args || args.dbType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbType'");
            }
            if ((!args || args.dbVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbVersion'");
            }
            resourceInputs["allowShutDown"] = args ? args.allowShutDown : undefined;
            resourceInputs["autoRenewPeriod"] = args ? args.autoRenewPeriod : undefined;
            resourceInputs["backupRetentionPolicyOnClusterDeletion"] = args ? args.backupRetentionPolicyOnClusterDeletion : undefined;
            resourceInputs["cloneDataPoint"] = args ? args.cloneDataPoint : undefined;
            resourceInputs["collectorStatus"] = args ? args.collectorStatus : undefined;
            resourceInputs["creationCategory"] = args ? args.creationCategory : undefined;
            resourceInputs["creationOption"] = args ? args.creationOption : undefined;
            resourceInputs["dbClusterIpArrays"] = args ? args.dbClusterIpArrays : undefined;
            resourceInputs["dbNodeClass"] = args ? args.dbNodeClass : undefined;
            resourceInputs["dbNodeCount"] = args ? args.dbNodeCount : undefined;
            resourceInputs["dbNodeId"] = args ? args.dbNodeId : undefined;
            resourceInputs["dbNodeNum"] = args ? args.dbNodeNum : undefined;
            resourceInputs["dbType"] = args ? args.dbType : undefined;
            resourceInputs["dbVersion"] = args ? args.dbVersion : undefined;
            resourceInputs["defaultTimeZone"] = args ? args.defaultTimeZone : undefined;
            resourceInputs["deletionLock"] = args ? args.deletionLock : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["encryptNewTables"] = args ? args.encryptNewTables : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["fromTimeService"] = args ? args.fromTimeService : undefined;
            resourceInputs["gdnId"] = args ? args.gdnId : undefined;
            resourceInputs["hotReplicaMode"] = args ? args.hotReplicaMode : undefined;
            resourceInputs["hotStandbyCluster"] = args ? args.hotStandbyCluster : undefined;
            resourceInputs["imciSwitch"] = args ? args.imciSwitch : undefined;
            resourceInputs["loosePolarLogBin"] = args ? args.loosePolarLogBin : undefined;
            resourceInputs["lowerCaseTableNames"] = args ? args.lowerCaseTableNames : undefined;
            resourceInputs["maintainTime"] = args ? args.maintainTime : undefined;
            resourceInputs["modifyType"] = args ? args.modifyType : undefined;
            resourceInputs["parameterGroupId"] = args ? args.parameterGroupId : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["payType"] = args ? args.payType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["plannedEndTime"] = args ? args.plannedEndTime : undefined;
            resourceInputs["plannedStartTime"] = args ? args.plannedStartTime : undefined;
            resourceInputs["provisionedIops"] = args ? args.provisionedIops : undefined;
            resourceInputs["proxyClass"] = args ? args.proxyClass : undefined;
            resourceInputs["proxyType"] = args ? args.proxyType : undefined;
            resourceInputs["renewalStatus"] = args ? args.renewalStatus : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["scaleApRoNumMax"] = args ? args.scaleApRoNumMax : undefined;
            resourceInputs["scaleApRoNumMin"] = args ? args.scaleApRoNumMin : undefined;
            resourceInputs["scaleMax"] = args ? args.scaleMax : undefined;
            resourceInputs["scaleMin"] = args ? args.scaleMin : undefined;
            resourceInputs["scaleRoNumMax"] = args ? args.scaleRoNumMax : undefined;
            resourceInputs["scaleRoNumMin"] = args ? args.scaleRoNumMin : undefined;
            resourceInputs["secondsUntilAutoPause"] = args ? args.secondsUntilAutoPause : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["securityIps"] = args ? args.securityIps : undefined;
            resourceInputs["serverlessSteadySwitch"] = args ? args.serverlessSteadySwitch : undefined;
            resourceInputs["serverlessType"] = args ? args.serverlessType : undefined;
            resourceInputs["sourceResourceId"] = args ? args.sourceResourceId : undefined;
            resourceInputs["storagePayType"] = args ? args.storagePayType : undefined;
            resourceInputs["storageSpace"] = args ? args.storageSpace : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["subCategory"] = args ? args.subCategory : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetDbRevisionVersionCode"] = args ? args.targetDbRevisionVersionCode : undefined;
            resourceInputs["tdeStatus"] = args ? args.tdeStatus : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["upgradeType"] = args ? args.upgradeType : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dbRevisionVersionLists"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tdeRegion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolardbCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolardbCluster resources.
 */
export interface PolardbClusterState {
    allowShutDown?: pulumi.Input<string>;
    autoRenewPeriod?: pulumi.Input<number>;
    backupRetentionPolicyOnClusterDeletion?: pulumi.Input<string>;
    cloneDataPoint?: pulumi.Input<string>;
    collectorStatus?: pulumi.Input<string>;
    connectionString?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    creationCategory?: pulumi.Input<string>;
    creationOption?: pulumi.Input<string>;
    dbClusterIpArrays?: pulumi.Input<pulumi.Input<inputs.PolardbClusterDbClusterIpArray>[]>;
    dbNodeClass?: pulumi.Input<string>;
    dbNodeCount?: pulumi.Input<number>;
    dbNodeId?: pulumi.Input<string>;
    dbNodeNum?: pulumi.Input<number>;
    dbRevisionVersionLists?: pulumi.Input<pulumi.Input<inputs.PolardbClusterDbRevisionVersionList>[]>;
    dbType?: pulumi.Input<string>;
    dbVersion?: pulumi.Input<string>;
    defaultTimeZone?: pulumi.Input<string>;
    deletionLock?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    encryptNewTables?: pulumi.Input<string>;
    encryptionKey?: pulumi.Input<string>;
    fromTimeService?: pulumi.Input<string>;
    gdnId?: pulumi.Input<string>;
    hotReplicaMode?: pulumi.Input<string>;
    hotStandbyCluster?: pulumi.Input<string>;
    imciSwitch?: pulumi.Input<string>;
    loosePolarLogBin?: pulumi.Input<string>;
    lowerCaseTableNames?: pulumi.Input<number>;
    maintainTime?: pulumi.Input<string>;
    modifyType?: pulumi.Input<string>;
    parameterGroupId?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.PolardbClusterParameter>[]>;
    payType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    plannedEndTime?: pulumi.Input<string>;
    plannedStartTime?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    provisionedIops?: pulumi.Input<string>;
    proxyClass?: pulumi.Input<string>;
    proxyType?: pulumi.Input<string>;
    renewalStatus?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    scaleApRoNumMax?: pulumi.Input<number>;
    scaleApRoNumMin?: pulumi.Input<number>;
    scaleMax?: pulumi.Input<number>;
    scaleMin?: pulumi.Input<number>;
    scaleRoNumMax?: pulumi.Input<number>;
    scaleRoNumMin?: pulumi.Input<number>;
    secondsUntilAutoPause?: pulumi.Input<number>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    securityIps?: pulumi.Input<pulumi.Input<string>[]>;
    serverlessSteadySwitch?: pulumi.Input<string>;
    serverlessType?: pulumi.Input<string>;
    sourceResourceId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    storagePayType?: pulumi.Input<string>;
    storageSpace?: pulumi.Input<number>;
    storageType?: pulumi.Input<string>;
    subCategory?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetDbRevisionVersionCode?: pulumi.Input<string>;
    tdeRegion?: pulumi.Input<string>;
    tdeStatus?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PolardbClusterTimeouts>;
    upgradeType?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolardbCluster resource.
 */
export interface PolardbClusterArgs {
    allowShutDown?: pulumi.Input<string>;
    autoRenewPeriod?: pulumi.Input<number>;
    backupRetentionPolicyOnClusterDeletion?: pulumi.Input<string>;
    cloneDataPoint?: pulumi.Input<string>;
    collectorStatus?: pulumi.Input<string>;
    creationCategory?: pulumi.Input<string>;
    creationOption?: pulumi.Input<string>;
    dbClusterIpArrays?: pulumi.Input<pulumi.Input<inputs.PolardbClusterDbClusterIpArray>[]>;
    dbNodeClass: pulumi.Input<string>;
    dbNodeCount?: pulumi.Input<number>;
    dbNodeId?: pulumi.Input<string>;
    dbNodeNum?: pulumi.Input<number>;
    dbType: pulumi.Input<string>;
    dbVersion: pulumi.Input<string>;
    defaultTimeZone?: pulumi.Input<string>;
    deletionLock?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    encryptNewTables?: pulumi.Input<string>;
    encryptionKey?: pulumi.Input<string>;
    fromTimeService?: pulumi.Input<string>;
    gdnId?: pulumi.Input<string>;
    hotReplicaMode?: pulumi.Input<string>;
    hotStandbyCluster?: pulumi.Input<string>;
    imciSwitch?: pulumi.Input<string>;
    loosePolarLogBin?: pulumi.Input<string>;
    lowerCaseTableNames?: pulumi.Input<number>;
    maintainTime?: pulumi.Input<string>;
    modifyType?: pulumi.Input<string>;
    parameterGroupId?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.PolardbClusterParameter>[]>;
    payType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    plannedEndTime?: pulumi.Input<string>;
    plannedStartTime?: pulumi.Input<string>;
    provisionedIops?: pulumi.Input<string>;
    proxyClass?: pulumi.Input<string>;
    proxyType?: pulumi.Input<string>;
    renewalStatus?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    scaleApRoNumMax?: pulumi.Input<number>;
    scaleApRoNumMin?: pulumi.Input<number>;
    scaleMax?: pulumi.Input<number>;
    scaleMin?: pulumi.Input<number>;
    scaleRoNumMax?: pulumi.Input<number>;
    scaleRoNumMin?: pulumi.Input<number>;
    secondsUntilAutoPause?: pulumi.Input<number>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    securityIps?: pulumi.Input<pulumi.Input<string>[]>;
    serverlessSteadySwitch?: pulumi.Input<string>;
    serverlessType?: pulumi.Input<string>;
    sourceResourceId?: pulumi.Input<string>;
    storagePayType?: pulumi.Input<string>;
    storageSpace?: pulumi.Input<number>;
    storageType?: pulumi.Input<string>;
    subCategory?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetDbRevisionVersionCode?: pulumi.Input<string>;
    tdeStatus?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PolardbClusterTimeouts>;
    upgradeType?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
