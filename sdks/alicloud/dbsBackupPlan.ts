// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DbsBackupPlan extends pulumi.CustomResource {
    /**
     * Get an existing DbsBackupPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbsBackupPlanState, opts?: pulumi.CustomResourceOptions): DbsBackupPlan {
        return new DbsBackupPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/dbsBackupPlan:DbsBackupPlan';

    /**
     * Returns true if the given object is an instance of DbsBackupPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbsBackupPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbsBackupPlan.__pulumiType;
    }

    public readonly backupGatewayId!: pulumi.Output<string>;
    public readonly backupLogIntervalSeconds!: pulumi.Output<number | undefined>;
    public readonly backupMethod!: pulumi.Output<string>;
    public readonly backupObjects!: pulumi.Output<string>;
    public readonly backupPeriod!: pulumi.Output<string>;
    public readonly backupPlanName!: pulumi.Output<string>;
    public readonly backupRateLimit!: pulumi.Output<string | undefined>;
    public readonly backupRetentionPeriod!: pulumi.Output<number>;
    public readonly backupSpeedLimit!: pulumi.Output<string | undefined>;
    public readonly backupStartTime!: pulumi.Output<string>;
    public readonly backupStorageType!: pulumi.Output<string>;
    public readonly backupStrategyType!: pulumi.Output<string | undefined>;
    public readonly crossAliyunId!: pulumi.Output<string>;
    public readonly crossRoleName!: pulumi.Output<string>;
    public readonly databaseRegion!: pulumi.Output<string | undefined>;
    public readonly databaseType!: pulumi.Output<string>;
    public readonly duplicationArchivePeriod!: pulumi.Output<number>;
    public readonly duplicationInfrequentAccessPeriod!: pulumi.Output<number>;
    public readonly enableBackupLog!: pulumi.Output<boolean>;
    public readonly instanceClass!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string | undefined>;
    public readonly ossBucketName!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<string | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly sourceEndpointDatabaseName!: pulumi.Output<string>;
    public readonly sourceEndpointInstanceId!: pulumi.Output<string>;
    public readonly sourceEndpointInstanceType!: pulumi.Output<string>;
    public readonly sourceEndpointIp!: pulumi.Output<string | undefined>;
    public readonly sourceEndpointOracleSid!: pulumi.Output<string | undefined>;
    public readonly sourceEndpointPassword!: pulumi.Output<string | undefined>;
    public readonly sourceEndpointPort!: pulumi.Output<number | undefined>;
    public readonly sourceEndpointRegion!: pulumi.Output<string>;
    public readonly sourceEndpointSid!: pulumi.Output<string>;
    public readonly sourceEndpointUserName!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly storageRegion!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DbsBackupPlanTimeouts | undefined>;
    public readonly usedTime!: pulumi.Output<number | undefined>;

    /**
     * Create a DbsBackupPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbsBackupPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbsBackupPlanArgs | DbsBackupPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbsBackupPlanState | undefined;
            resourceInputs["backupGatewayId"] = state ? state.backupGatewayId : undefined;
            resourceInputs["backupLogIntervalSeconds"] = state ? state.backupLogIntervalSeconds : undefined;
            resourceInputs["backupMethod"] = state ? state.backupMethod : undefined;
            resourceInputs["backupObjects"] = state ? state.backupObjects : undefined;
            resourceInputs["backupPeriod"] = state ? state.backupPeriod : undefined;
            resourceInputs["backupPlanName"] = state ? state.backupPlanName : undefined;
            resourceInputs["backupRateLimit"] = state ? state.backupRateLimit : undefined;
            resourceInputs["backupRetentionPeriod"] = state ? state.backupRetentionPeriod : undefined;
            resourceInputs["backupSpeedLimit"] = state ? state.backupSpeedLimit : undefined;
            resourceInputs["backupStartTime"] = state ? state.backupStartTime : undefined;
            resourceInputs["backupStorageType"] = state ? state.backupStorageType : undefined;
            resourceInputs["backupStrategyType"] = state ? state.backupStrategyType : undefined;
            resourceInputs["crossAliyunId"] = state ? state.crossAliyunId : undefined;
            resourceInputs["crossRoleName"] = state ? state.crossRoleName : undefined;
            resourceInputs["databaseRegion"] = state ? state.databaseRegion : undefined;
            resourceInputs["databaseType"] = state ? state.databaseType : undefined;
            resourceInputs["duplicationArchivePeriod"] = state ? state.duplicationArchivePeriod : undefined;
            resourceInputs["duplicationInfrequentAccessPeriod"] = state ? state.duplicationInfrequentAccessPeriod : undefined;
            resourceInputs["enableBackupLog"] = state ? state.enableBackupLog : undefined;
            resourceInputs["instanceClass"] = state ? state.instanceClass : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["ossBucketName"] = state ? state.ossBucketName : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["sourceEndpointDatabaseName"] = state ? state.sourceEndpointDatabaseName : undefined;
            resourceInputs["sourceEndpointInstanceId"] = state ? state.sourceEndpointInstanceId : undefined;
            resourceInputs["sourceEndpointInstanceType"] = state ? state.sourceEndpointInstanceType : undefined;
            resourceInputs["sourceEndpointIp"] = state ? state.sourceEndpointIp : undefined;
            resourceInputs["sourceEndpointOracleSid"] = state ? state.sourceEndpointOracleSid : undefined;
            resourceInputs["sourceEndpointPassword"] = state ? state.sourceEndpointPassword : undefined;
            resourceInputs["sourceEndpointPort"] = state ? state.sourceEndpointPort : undefined;
            resourceInputs["sourceEndpointRegion"] = state ? state.sourceEndpointRegion : undefined;
            resourceInputs["sourceEndpointSid"] = state ? state.sourceEndpointSid : undefined;
            resourceInputs["sourceEndpointUserName"] = state ? state.sourceEndpointUserName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageRegion"] = state ? state.storageRegion : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["usedTime"] = state ? state.usedTime : undefined;
        } else {
            const args = argsOrState as DbsBackupPlanArgs | undefined;
            if ((!args || args.backupMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupMethod'");
            }
            if ((!args || args.backupPlanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupPlanName'");
            }
            if ((!args || args.databaseType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseType'");
            }
            if ((!args || args.instanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceClass'");
            }
            if ((!args || args.sourceEndpointInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceEndpointInstanceType'");
            }
            resourceInputs["backupGatewayId"] = args ? args.backupGatewayId : undefined;
            resourceInputs["backupLogIntervalSeconds"] = args ? args.backupLogIntervalSeconds : undefined;
            resourceInputs["backupMethod"] = args ? args.backupMethod : undefined;
            resourceInputs["backupObjects"] = args ? args.backupObjects : undefined;
            resourceInputs["backupPeriod"] = args ? args.backupPeriod : undefined;
            resourceInputs["backupPlanName"] = args ? args.backupPlanName : undefined;
            resourceInputs["backupRateLimit"] = args ? args.backupRateLimit : undefined;
            resourceInputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            resourceInputs["backupSpeedLimit"] = args ? args.backupSpeedLimit : undefined;
            resourceInputs["backupStartTime"] = args ? args.backupStartTime : undefined;
            resourceInputs["backupStorageType"] = args ? args.backupStorageType : undefined;
            resourceInputs["backupStrategyType"] = args ? args.backupStrategyType : undefined;
            resourceInputs["crossAliyunId"] = args ? args.crossAliyunId : undefined;
            resourceInputs["crossRoleName"] = args ? args.crossRoleName : undefined;
            resourceInputs["databaseRegion"] = args ? args.databaseRegion : undefined;
            resourceInputs["databaseType"] = args ? args.databaseType : undefined;
            resourceInputs["duplicationArchivePeriod"] = args ? args.duplicationArchivePeriod : undefined;
            resourceInputs["duplicationInfrequentAccessPeriod"] = args ? args.duplicationInfrequentAccessPeriod : undefined;
            resourceInputs["enableBackupLog"] = args ? args.enableBackupLog : undefined;
            resourceInputs["instanceClass"] = args ? args.instanceClass : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["ossBucketName"] = args ? args.ossBucketName : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["sourceEndpointDatabaseName"] = args ? args.sourceEndpointDatabaseName : undefined;
            resourceInputs["sourceEndpointInstanceId"] = args ? args.sourceEndpointInstanceId : undefined;
            resourceInputs["sourceEndpointInstanceType"] = args ? args.sourceEndpointInstanceType : undefined;
            resourceInputs["sourceEndpointIp"] = args ? args.sourceEndpointIp : undefined;
            resourceInputs["sourceEndpointOracleSid"] = args ? args.sourceEndpointOracleSid : undefined;
            resourceInputs["sourceEndpointPassword"] = args?.sourceEndpointPassword ? pulumi.secret(args.sourceEndpointPassword) : undefined;
            resourceInputs["sourceEndpointPort"] = args ? args.sourceEndpointPort : undefined;
            resourceInputs["sourceEndpointRegion"] = args ? args.sourceEndpointRegion : undefined;
            resourceInputs["sourceEndpointSid"] = args ? args.sourceEndpointSid : undefined;
            resourceInputs["sourceEndpointUserName"] = args ? args.sourceEndpointUserName : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["storageRegion"] = args ? args.storageRegion : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["usedTime"] = args ? args.usedTime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["sourceEndpointPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DbsBackupPlan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DbsBackupPlan resources.
 */
export interface DbsBackupPlanState {
    backupGatewayId?: pulumi.Input<string>;
    backupLogIntervalSeconds?: pulumi.Input<number>;
    backupMethod?: pulumi.Input<string>;
    backupObjects?: pulumi.Input<string>;
    backupPeriod?: pulumi.Input<string>;
    backupPlanName?: pulumi.Input<string>;
    backupRateLimit?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<number>;
    backupSpeedLimit?: pulumi.Input<string>;
    backupStartTime?: pulumi.Input<string>;
    backupStorageType?: pulumi.Input<string>;
    backupStrategyType?: pulumi.Input<string>;
    crossAliyunId?: pulumi.Input<string>;
    crossRoleName?: pulumi.Input<string>;
    databaseRegion?: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    duplicationArchivePeriod?: pulumi.Input<number>;
    duplicationInfrequentAccessPeriod?: pulumi.Input<number>;
    enableBackupLog?: pulumi.Input<boolean>;
    instanceClass?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    ossBucketName?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    sourceEndpointDatabaseName?: pulumi.Input<string>;
    sourceEndpointInstanceId?: pulumi.Input<string>;
    sourceEndpointInstanceType?: pulumi.Input<string>;
    sourceEndpointIp?: pulumi.Input<string>;
    sourceEndpointOracleSid?: pulumi.Input<string>;
    sourceEndpointPassword?: pulumi.Input<string>;
    sourceEndpointPort?: pulumi.Input<number>;
    sourceEndpointRegion?: pulumi.Input<string>;
    sourceEndpointSid?: pulumi.Input<string>;
    sourceEndpointUserName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    storageRegion?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DbsBackupPlanTimeouts>;
    usedTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DbsBackupPlan resource.
 */
export interface DbsBackupPlanArgs {
    backupGatewayId?: pulumi.Input<string>;
    backupLogIntervalSeconds?: pulumi.Input<number>;
    backupMethod: pulumi.Input<string>;
    backupObjects?: pulumi.Input<string>;
    backupPeriod?: pulumi.Input<string>;
    backupPlanName: pulumi.Input<string>;
    backupRateLimit?: pulumi.Input<string>;
    backupRetentionPeriod?: pulumi.Input<number>;
    backupSpeedLimit?: pulumi.Input<string>;
    backupStartTime?: pulumi.Input<string>;
    backupStorageType?: pulumi.Input<string>;
    backupStrategyType?: pulumi.Input<string>;
    crossAliyunId?: pulumi.Input<string>;
    crossRoleName?: pulumi.Input<string>;
    databaseRegion?: pulumi.Input<string>;
    databaseType: pulumi.Input<string>;
    duplicationArchivePeriod?: pulumi.Input<number>;
    duplicationInfrequentAccessPeriod?: pulumi.Input<number>;
    enableBackupLog?: pulumi.Input<boolean>;
    instanceClass: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    ossBucketName?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    sourceEndpointDatabaseName?: pulumi.Input<string>;
    sourceEndpointInstanceId?: pulumi.Input<string>;
    sourceEndpointInstanceType: pulumi.Input<string>;
    sourceEndpointIp?: pulumi.Input<string>;
    sourceEndpointOracleSid?: pulumi.Input<string>;
    sourceEndpointPassword?: pulumi.Input<string>;
    sourceEndpointPort?: pulumi.Input<number>;
    sourceEndpointRegion?: pulumi.Input<string>;
    sourceEndpointSid?: pulumi.Input<string>;
    sourceEndpointUserName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    storageRegion?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DbsBackupPlanTimeouts>;
    usedTime?: pulumi.Input<number>;
}
