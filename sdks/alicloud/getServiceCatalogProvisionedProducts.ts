// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceCatalogProvisionedProducts(args?: GetServiceCatalogProvisionedProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceCatalogProvisionedProductsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getServiceCatalogProvisionedProducts:getServiceCatalogProvisionedProducts", {
        "accessLevelFilter": args.accessLevelFilter,
        "enableDetails": args.enableDetails,
        "id": args.id,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "sortBy": args.sortBy,
        "sortOrder": args.sortOrder,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceCatalogProvisionedProducts.
 */
export interface GetServiceCatalogProvisionedProductsArgs {
    accessLevelFilter?: string;
    enableDetails?: boolean;
    id?: string;
    ids?: string[];
    nameRegex?: string;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    sortBy?: string;
    sortOrder?: string;
}

/**
 * A collection of values returned by getServiceCatalogProvisionedProducts.
 */
export interface GetServiceCatalogProvisionedProductsResult {
    readonly accessLevelFilter?: string;
    readonly enableDetails?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    /**
     * @deprecated Deprecated
     */
    readonly products: outputs.GetServiceCatalogProvisionedProductsProduct[];
    readonly provisionedProducts: outputs.GetServiceCatalogProvisionedProductsProvisionedProduct[];
    readonly sortBy?: string;
    readonly sortOrder?: string;
}
export function getServiceCatalogProvisionedProductsOutput(args?: GetServiceCatalogProvisionedProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceCatalogProvisionedProductsResult> {
    return pulumi.output(args).apply((a: any) => getServiceCatalogProvisionedProducts(a, opts))
}

/**
 * A collection of arguments for invoking getServiceCatalogProvisionedProducts.
 */
export interface GetServiceCatalogProvisionedProductsOutputArgs {
    accessLevelFilter?: pulumi.Input<string>;
    enableDetails?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    sortBy?: pulumi.Input<string>;
    sortOrder?: pulumi.Input<string>;
}
