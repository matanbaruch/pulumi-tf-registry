// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNasAccessRules(args: GetNasAccessRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetNasAccessRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getNasAccessRules:getNasAccessRules", {
        "accessGroupName": args.accessGroupName,
        "id": args.id,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "rwAccess": args.rwAccess,
        "sourceCidrIp": args.sourceCidrIp,
        "userAccess": args.userAccess,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNasAccessRules.
 */
export interface GetNasAccessRulesArgs {
    accessGroupName: string;
    id?: string;
    ids?: string[];
    outputFile?: string;
    rwAccess?: string;
    sourceCidrIp?: string;
    userAccess?: string;
}

/**
 * A collection of values returned by getNasAccessRules.
 */
export interface GetNasAccessRulesResult {
    readonly accessGroupName: string;
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    readonly rules: outputs.GetNasAccessRulesRule[];
    readonly rwAccess?: string;
    readonly sourceCidrIp?: string;
    readonly userAccess?: string;
}
export function getNasAccessRulesOutput(args: GetNasAccessRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNasAccessRulesResult> {
    return pulumi.output(args).apply((a: any) => getNasAccessRules(a, opts))
}

/**
 * A collection of arguments for invoking getNasAccessRules.
 */
export interface GetNasAccessRulesOutputArgs {
    accessGroupName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    rwAccess?: pulumi.Input<string>;
    sourceCidrIp?: pulumi.Input<string>;
    userAccess?: pulumi.Input<string>;
}
