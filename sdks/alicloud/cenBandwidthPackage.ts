// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CenBandwidthPackage extends pulumi.CustomResource {
    /**
     * Get an existing CenBandwidthPackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CenBandwidthPackageState, opts?: pulumi.CustomResourceOptions): CenBandwidthPackage {
        return new CenBandwidthPackage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cenBandwidthPackage:CenBandwidthPackage';

    /**
     * Returns true if the given object is an instance of CenBandwidthPackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CenBandwidthPackage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CenBandwidthPackage.__pulumiType;
    }

    public readonly bandwidth!: pulumi.Output<number>;
    public readonly cenBandwidthPackageName!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly chargeType!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly expiredTime!: pulumi.Output<string>;
    public readonly geographicRegionAId!: pulumi.Output<string>;
    public readonly geographicRegionBId!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly geographicRegionIds!: pulumi.Output<string[]>;
    /**
     * @deprecated Deprecated
     */
    public readonly name!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<number | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CenBandwidthPackageTimeouts | undefined>;

    /**
     * Create a CenBandwidthPackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CenBandwidthPackageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CenBandwidthPackageArgs | CenBandwidthPackageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CenBandwidthPackageState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["cenBandwidthPackageName"] = state ? state.cenBandwidthPackageName : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expiredTime"] = state ? state.expiredTime : undefined;
            resourceInputs["geographicRegionAId"] = state ? state.geographicRegionAId : undefined;
            resourceInputs["geographicRegionBId"] = state ? state.geographicRegionBId : undefined;
            resourceInputs["geographicRegionIds"] = state ? state.geographicRegionIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CenBandwidthPackageArgs | undefined;
            if ((!args || args.bandwidth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["cenBandwidthPackageName"] = args ? args.cenBandwidthPackageName : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["geographicRegionAId"] = args ? args.geographicRegionAId : undefined;
            resourceInputs["geographicRegionBId"] = args ? args.geographicRegionBId : undefined;
            resourceInputs["geographicRegionIds"] = args ? args.geographicRegionIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["expiredTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CenBandwidthPackage.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CenBandwidthPackage resources.
 */
export interface CenBandwidthPackageState {
    bandwidth?: pulumi.Input<number>;
    cenBandwidthPackageName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    chargeType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    expiredTime?: pulumi.Input<string>;
    geographicRegionAId?: pulumi.Input<string>;
    geographicRegionBId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    geographicRegionIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CenBandwidthPackageTimeouts>;
}

/**
 * The set of arguments for constructing a CenBandwidthPackage resource.
 */
export interface CenBandwidthPackageArgs {
    bandwidth: pulumi.Input<number>;
    cenBandwidthPackageName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    chargeType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    geographicRegionAId?: pulumi.Input<string>;
    geographicRegionBId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    geographicRegionIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.CenBandwidthPackageTimeouts>;
}
