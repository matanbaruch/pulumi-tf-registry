// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlidnsAccessStrategy extends pulumi.CustomResource {
    /**
     * Get an existing AlidnsAccessStrategy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlidnsAccessStrategyState, opts?: pulumi.CustomResourceOptions): AlidnsAccessStrategy {
        return new AlidnsAccessStrategy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/alidnsAccessStrategy:AlidnsAccessStrategy';

    /**
     * Returns true if the given object is an instance of AlidnsAccessStrategy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlidnsAccessStrategy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlidnsAccessStrategy.__pulumiType;
    }

    public readonly accessMode!: pulumi.Output<string>;
    public readonly defaultAddrPoolType!: pulumi.Output<string>;
    public readonly defaultAddrPools!: pulumi.Output<outputs.AlidnsAccessStrategyDefaultAddrPool[]>;
    public readonly defaultLatencyOptimization!: pulumi.Output<string | undefined>;
    public readonly defaultLbaStrategy!: pulumi.Output<string | undefined>;
    public readonly defaultMaxReturnAddrNum!: pulumi.Output<number | undefined>;
    public readonly defaultMinAvailableAddrNum!: pulumi.Output<number>;
    public readonly failoverAddrPoolType!: pulumi.Output<string | undefined>;
    public readonly failoverAddrPools!: pulumi.Output<outputs.AlidnsAccessStrategyFailoverAddrPool[] | undefined>;
    public readonly failoverLatencyOptimization!: pulumi.Output<string | undefined>;
    public readonly failoverLbaStrategy!: pulumi.Output<string | undefined>;
    public readonly failoverMaxReturnAddrNum!: pulumi.Output<number | undefined>;
    public readonly failoverMinAvailableAddrNum!: pulumi.Output<number | undefined>;
    public readonly instanceId!: pulumi.Output<string>;
    public readonly lang!: pulumi.Output<string | undefined>;
    public readonly lines!: pulumi.Output<outputs.AlidnsAccessStrategyLine[] | undefined>;
    public readonly strategyMode!: pulumi.Output<string>;
    public readonly strategyName!: pulumi.Output<string>;

    /**
     * Create a AlidnsAccessStrategy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlidnsAccessStrategyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlidnsAccessStrategyArgs | AlidnsAccessStrategyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlidnsAccessStrategyState | undefined;
            resourceInputs["accessMode"] = state ? state.accessMode : undefined;
            resourceInputs["defaultAddrPoolType"] = state ? state.defaultAddrPoolType : undefined;
            resourceInputs["defaultAddrPools"] = state ? state.defaultAddrPools : undefined;
            resourceInputs["defaultLatencyOptimization"] = state ? state.defaultLatencyOptimization : undefined;
            resourceInputs["defaultLbaStrategy"] = state ? state.defaultLbaStrategy : undefined;
            resourceInputs["defaultMaxReturnAddrNum"] = state ? state.defaultMaxReturnAddrNum : undefined;
            resourceInputs["defaultMinAvailableAddrNum"] = state ? state.defaultMinAvailableAddrNum : undefined;
            resourceInputs["failoverAddrPoolType"] = state ? state.failoverAddrPoolType : undefined;
            resourceInputs["failoverAddrPools"] = state ? state.failoverAddrPools : undefined;
            resourceInputs["failoverLatencyOptimization"] = state ? state.failoverLatencyOptimization : undefined;
            resourceInputs["failoverLbaStrategy"] = state ? state.failoverLbaStrategy : undefined;
            resourceInputs["failoverMaxReturnAddrNum"] = state ? state.failoverMaxReturnAddrNum : undefined;
            resourceInputs["failoverMinAvailableAddrNum"] = state ? state.failoverMinAvailableAddrNum : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["lang"] = state ? state.lang : undefined;
            resourceInputs["lines"] = state ? state.lines : undefined;
            resourceInputs["strategyMode"] = state ? state.strategyMode : undefined;
            resourceInputs["strategyName"] = state ? state.strategyName : undefined;
        } else {
            const args = argsOrState as AlidnsAccessStrategyArgs | undefined;
            if ((!args || args.defaultAddrPoolType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultAddrPoolType'");
            }
            if ((!args || args.defaultAddrPools === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultAddrPools'");
            }
            if ((!args || args.defaultMinAvailableAddrNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultMinAvailableAddrNum'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.strategyMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'strategyMode'");
            }
            if ((!args || args.strategyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'strategyName'");
            }
            resourceInputs["accessMode"] = args ? args.accessMode : undefined;
            resourceInputs["defaultAddrPoolType"] = args ? args.defaultAddrPoolType : undefined;
            resourceInputs["defaultAddrPools"] = args ? args.defaultAddrPools : undefined;
            resourceInputs["defaultLatencyOptimization"] = args ? args.defaultLatencyOptimization : undefined;
            resourceInputs["defaultLbaStrategy"] = args ? args.defaultLbaStrategy : undefined;
            resourceInputs["defaultMaxReturnAddrNum"] = args ? args.defaultMaxReturnAddrNum : undefined;
            resourceInputs["defaultMinAvailableAddrNum"] = args ? args.defaultMinAvailableAddrNum : undefined;
            resourceInputs["failoverAddrPoolType"] = args ? args.failoverAddrPoolType : undefined;
            resourceInputs["failoverAddrPools"] = args ? args.failoverAddrPools : undefined;
            resourceInputs["failoverLatencyOptimization"] = args ? args.failoverLatencyOptimization : undefined;
            resourceInputs["failoverLbaStrategy"] = args ? args.failoverLbaStrategy : undefined;
            resourceInputs["failoverMaxReturnAddrNum"] = args ? args.failoverMaxReturnAddrNum : undefined;
            resourceInputs["failoverMinAvailableAddrNum"] = args ? args.failoverMinAvailableAddrNum : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["lang"] = args ? args.lang : undefined;
            resourceInputs["lines"] = args ? args.lines : undefined;
            resourceInputs["strategyMode"] = args ? args.strategyMode : undefined;
            resourceInputs["strategyName"] = args ? args.strategyName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlidnsAccessStrategy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlidnsAccessStrategy resources.
 */
export interface AlidnsAccessStrategyState {
    accessMode?: pulumi.Input<string>;
    defaultAddrPoolType?: pulumi.Input<string>;
    defaultAddrPools?: pulumi.Input<pulumi.Input<inputs.AlidnsAccessStrategyDefaultAddrPool>[]>;
    defaultLatencyOptimization?: pulumi.Input<string>;
    defaultLbaStrategy?: pulumi.Input<string>;
    defaultMaxReturnAddrNum?: pulumi.Input<number>;
    defaultMinAvailableAddrNum?: pulumi.Input<number>;
    failoverAddrPoolType?: pulumi.Input<string>;
    failoverAddrPools?: pulumi.Input<pulumi.Input<inputs.AlidnsAccessStrategyFailoverAddrPool>[]>;
    failoverLatencyOptimization?: pulumi.Input<string>;
    failoverLbaStrategy?: pulumi.Input<string>;
    failoverMaxReturnAddrNum?: pulumi.Input<number>;
    failoverMinAvailableAddrNum?: pulumi.Input<number>;
    instanceId?: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    lines?: pulumi.Input<pulumi.Input<inputs.AlidnsAccessStrategyLine>[]>;
    strategyMode?: pulumi.Input<string>;
    strategyName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlidnsAccessStrategy resource.
 */
export interface AlidnsAccessStrategyArgs {
    accessMode?: pulumi.Input<string>;
    defaultAddrPoolType: pulumi.Input<string>;
    defaultAddrPools: pulumi.Input<pulumi.Input<inputs.AlidnsAccessStrategyDefaultAddrPool>[]>;
    defaultLatencyOptimization?: pulumi.Input<string>;
    defaultLbaStrategy?: pulumi.Input<string>;
    defaultMaxReturnAddrNum?: pulumi.Input<number>;
    defaultMinAvailableAddrNum: pulumi.Input<number>;
    failoverAddrPoolType?: pulumi.Input<string>;
    failoverAddrPools?: pulumi.Input<pulumi.Input<inputs.AlidnsAccessStrategyFailoverAddrPool>[]>;
    failoverLatencyOptimization?: pulumi.Input<string>;
    failoverLbaStrategy?: pulumi.Input<string>;
    failoverMaxReturnAddrNum?: pulumi.Input<number>;
    failoverMinAvailableAddrNum?: pulumi.Input<number>;
    instanceId: pulumi.Input<string>;
    lang?: pulumi.Input<string>;
    lines?: pulumi.Input<pulumi.Input<inputs.AlidnsAccessStrategyLine>[]>;
    strategyMode: pulumi.Input<string>;
    strategyName: pulumi.Input<string>;
}
