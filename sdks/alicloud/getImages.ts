// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImages(args?: GetImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetImagesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getImages:getImages", {
        "actionType": args.actionType,
        "architecture": args.architecture,
        "dryRun": args.dryRun,
        "id": args.id,
        "imageFamily": args.imageFamily,
        "imageId": args.imageId,
        "imageName": args.imageName,
        "imageOwnerId": args.imageOwnerId,
        "instanceType": args.instanceType,
        "isSupportCloudInit": args.isSupportCloudInit,
        "isSupportIoOptimized": args.isSupportIoOptimized,
        "mostRecent": args.mostRecent,
        "nameRegex": args.nameRegex,
        "osType": args.osType,
        "outputFile": args.outputFile,
        "owners": args.owners,
        "resourceGroupId": args.resourceGroupId,
        "snapshotId": args.snapshotId,
        "status": args.status,
        "tags": args.tags,
        "usage": args.usage,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesArgs {
    actionType?: string;
    architecture?: string;
    dryRun?: boolean;
    id?: string;
    imageFamily?: string;
    imageId?: string;
    imageName?: string;
    imageOwnerId?: string;
    instanceType?: string;
    isSupportCloudInit?: boolean;
    isSupportIoOptimized?: boolean;
    mostRecent?: boolean;
    nameRegex?: string;
    osType?: string;
    outputFile?: string;
    owners?: string;
    resourceGroupId?: string;
    snapshotId?: string;
    status?: string;
    tags?: {[key: string]: string};
    usage?: string;
}

/**
 * A collection of values returned by getImages.
 */
export interface GetImagesResult {
    readonly actionType?: string;
    readonly architecture?: string;
    readonly dryRun?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly imageFamily?: string;
    readonly imageId?: string;
    readonly imageName?: string;
    readonly imageOwnerId?: string;
    readonly images: outputs.GetImagesImage[];
    readonly instanceType?: string;
    readonly isSupportCloudInit?: boolean;
    readonly isSupportIoOptimized?: boolean;
    readonly mostRecent?: boolean;
    readonly nameRegex?: string;
    readonly osType?: string;
    readonly outputFile?: string;
    readonly owners?: string;
    readonly resourceGroupId?: string;
    readonly snapshotId?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly usage?: string;
}
export function getImagesOutput(args?: GetImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagesResult> {
    return pulumi.output(args).apply((a: any) => getImages(a, opts))
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesOutputArgs {
    actionType?: pulumi.Input<string>;
    architecture?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    imageFamily?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    imageName?: pulumi.Input<string>;
    imageOwnerId?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    isSupportCloudInit?: pulumi.Input<boolean>;
    isSupportIoOptimized?: pulumi.Input<boolean>;
    mostRecent?: pulumi.Input<boolean>;
    nameRegex?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    owners?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    usage?: pulumi.Input<string>;
}
