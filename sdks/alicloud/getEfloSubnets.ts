// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEfloSubnets(args?: GetEfloSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetEfloSubnetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getEfloSubnets:getEfloSubnets", {
        "id": args.id,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
        "subnetId": args.subnetId,
        "subnetName": args.subnetName,
        "type": args.type,
        "vpdId": args.vpdId,
        "zoneId": args.zoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEfloSubnets.
 */
export interface GetEfloSubnetsArgs {
    id?: string;
    ids?: string[];
    nameRegex?: string;
    outputFile?: string;
    pageNumber?: number;
    pageSize?: number;
    resourceGroupId?: string;
    status?: string;
    subnetId?: string;
    subnetName?: string;
    type?: string;
    vpdId?: string;
    zoneId?: string;
}

/**
 * A collection of values returned by getEfloSubnets.
 */
export interface GetEfloSubnetsResult {
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly pageNumber?: number;
    readonly pageSize?: number;
    readonly resourceGroupId?: string;
    readonly status?: string;
    readonly subnetId?: string;
    readonly subnetName?: string;
    readonly subnets: outputs.GetEfloSubnetsSubnet[];
    readonly type?: string;
    readonly vpdId?: string;
    readonly zoneId?: string;
}
export function getEfloSubnetsOutput(args?: GetEfloSubnetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEfloSubnetsResult> {
    return pulumi.output(args).apply((a: any) => getEfloSubnets(a, opts))
}

/**
 * A collection of arguments for invoking getEfloSubnets.
 */
export interface GetEfloSubnetsOutputArgs {
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    nameRegex?: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    pageNumber?: pulumi.Input<number>;
    pageSize?: pulumi.Input<number>;
    resourceGroupId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    subnetName?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vpdId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}
