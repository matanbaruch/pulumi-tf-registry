// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpnGateway extends pulumi.CustomResource {
    /**
     * Get an existing VpnGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnGatewayState, opts?: pulumi.CustomResourceOptions): VpnGateway {
        return new VpnGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/vpnGateway:VpnGateway';

    /**
     * Returns true if the given object is an instance of VpnGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnGateway.__pulumiType;
    }

    public readonly autoPay!: pulumi.Output<boolean | undefined>;
    public readonly autoPropagate!: pulumi.Output<boolean | undefined>;
    public readonly bandwidth!: pulumi.Output<number>;
    public /*out*/ readonly businessStatus!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<number>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly disasterRecoveryInternetIp!: pulumi.Output<string>;
    public readonly disasterRecoveryVswitchId!: pulumi.Output<string>;
    public readonly enableIpsec!: pulumi.Output<boolean | undefined>;
    public readonly enableSsl!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly instanceChargeType!: pulumi.Output<string>;
    public /*out*/ readonly internetIp!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly name!: pulumi.Output<string>;
    public readonly networkType!: pulumi.Output<string>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<number | undefined>;
    public readonly resourceGroupId!: pulumi.Output<string>;
    public readonly sslConnections!: pulumi.Output<number>;
    public /*out*/ readonly sslVpnInternetIp!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.VpnGatewayTimeouts | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vpnGatewayName!: pulumi.Output<string>;
    public readonly vpnType!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a VpnGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnGatewayArgs | VpnGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnGatewayState | undefined;
            resourceInputs["autoPay"] = state ? state.autoPay : undefined;
            resourceInputs["autoPropagate"] = state ? state.autoPropagate : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["businessStatus"] = state ? state.businessStatus : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disasterRecoveryInternetIp"] = state ? state.disasterRecoveryInternetIp : undefined;
            resourceInputs["disasterRecoveryVswitchId"] = state ? state.disasterRecoveryVswitchId : undefined;
            resourceInputs["enableIpsec"] = state ? state.enableIpsec : undefined;
            resourceInputs["enableSsl"] = state ? state.enableSsl : undefined;
            resourceInputs["instanceChargeType"] = state ? state.instanceChargeType : undefined;
            resourceInputs["internetIp"] = state ? state.internetIp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["sslConnections"] = state ? state.sslConnections : undefined;
            resourceInputs["sslVpnInternetIp"] = state ? state.sslVpnInternetIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpnGatewayName"] = state ? state.vpnGatewayName : undefined;
            resourceInputs["vpnType"] = state ? state.vpnType : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as VpnGatewayArgs | undefined;
            if ((!args || args.bandwidth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoPay"] = args ? args.autoPay : undefined;
            resourceInputs["autoPropagate"] = args ? args.autoPropagate : undefined;
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disasterRecoveryVswitchId"] = args ? args.disasterRecoveryVswitchId : undefined;
            resourceInputs["enableIpsec"] = args ? args.enableIpsec : undefined;
            resourceInputs["enableSsl"] = args ? args.enableSsl : undefined;
            resourceInputs["instanceChargeType"] = args ? args.instanceChargeType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["sslConnections"] = args ? args.sslConnections : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpnGatewayName"] = args ? args.vpnGatewayName : undefined;
            resourceInputs["vpnType"] = args ? args.vpnType : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["businessStatus"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["disasterRecoveryInternetIp"] = undefined /*out*/;
            resourceInputs["internetIp"] = undefined /*out*/;
            resourceInputs["sslVpnInternetIp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpnGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpnGateway resources.
 */
export interface VpnGatewayState {
    autoPay?: pulumi.Input<boolean>;
    autoPropagate?: pulumi.Input<boolean>;
    bandwidth?: pulumi.Input<number>;
    businessStatus?: pulumi.Input<string>;
    createTime?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    disasterRecoveryInternetIp?: pulumi.Input<string>;
    disasterRecoveryVswitchId?: pulumi.Input<string>;
    enableIpsec?: pulumi.Input<boolean>;
    enableSsl?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    instanceChargeType?: pulumi.Input<string>;
    internetIp?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    resourceGroupId?: pulumi.Input<string>;
    sslConnections?: pulumi.Input<number>;
    sslVpnInternetIp?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VpnGatewayTimeouts>;
    vpcId?: pulumi.Input<string>;
    vpnGatewayName?: pulumi.Input<string>;
    vpnType?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnGateway resource.
 */
export interface VpnGatewayArgs {
    autoPay?: pulumi.Input<boolean>;
    autoPropagate?: pulumi.Input<boolean>;
    bandwidth: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    disasterRecoveryVswitchId?: pulumi.Input<string>;
    enableIpsec?: pulumi.Input<boolean>;
    enableSsl?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    name?: pulumi.Input<string>;
    networkType?: pulumi.Input<string>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    resourceGroupId?: pulumi.Input<string>;
    sslConnections?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VpnGatewayTimeouts>;
    vpcId: pulumi.Input<string>;
    vpnGatewayName?: pulumi.Input<string>;
    vpnType?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}
