// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EventBridgeConnection extends pulumi.CustomResource {
    /**
     * Get an existing EventBridgeConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EventBridgeConnectionState, opts?: pulumi.CustomResourceOptions): EventBridgeConnection {
        return new EventBridgeConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/eventBridgeConnection:EventBridgeConnection';

    /**
     * Returns true if the given object is an instance of EventBridgeConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EventBridgeConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventBridgeConnection.__pulumiType;
    }

    public readonly authParameters!: pulumi.Output<outputs.EventBridgeConnectionAuthParameters | undefined>;
    public readonly connectionName!: pulumi.Output<string>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly networkParameters!: pulumi.Output<outputs.EventBridgeConnectionNetworkParameters>;
    public readonly timeouts!: pulumi.Output<outputs.EventBridgeConnectionTimeouts | undefined>;

    /**
     * Create a EventBridgeConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventBridgeConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EventBridgeConnectionArgs | EventBridgeConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EventBridgeConnectionState | undefined;
            resourceInputs["authParameters"] = state ? state.authParameters : undefined;
            resourceInputs["connectionName"] = state ? state.connectionName : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["networkParameters"] = state ? state.networkParameters : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as EventBridgeConnectionArgs | undefined;
            if ((!args || args.connectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionName'");
            }
            if ((!args || args.networkParameters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkParameters'");
            }
            resourceInputs["authParameters"] = args ? args.authParameters : undefined;
            resourceInputs["connectionName"] = args ? args.connectionName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["networkParameters"] = args ? args.networkParameters : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EventBridgeConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EventBridgeConnection resources.
 */
export interface EventBridgeConnectionState {
    authParameters?: pulumi.Input<inputs.EventBridgeConnectionAuthParameters>;
    connectionName?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    networkParameters?: pulumi.Input<inputs.EventBridgeConnectionNetworkParameters>;
    timeouts?: pulumi.Input<inputs.EventBridgeConnectionTimeouts>;
}

/**
 * The set of arguments for constructing a EventBridgeConnection resource.
 */
export interface EventBridgeConnectionArgs {
    authParameters?: pulumi.Input<inputs.EventBridgeConnectionAuthParameters>;
    connectionName: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    networkParameters: pulumi.Input<inputs.EventBridgeConnectionNetworkParameters>;
    timeouts?: pulumi.Input<inputs.EventBridgeConnectionTimeouts>;
}
