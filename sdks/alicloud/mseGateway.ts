// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MseGateway extends pulumi.CustomResource {
    /**
     * Get an existing MseGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MseGatewayState, opts?: pulumi.CustomResourceOptions): MseGateway {
        return new MseGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/mseGateway:MseGateway';

    /**
     * Returns true if the given object is an instance of MseGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MseGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MseGateway.__pulumiType;
    }

    public readonly backupVswitchId!: pulumi.Output<string | undefined>;
    public readonly deleteSlb!: pulumi.Output<boolean | undefined>;
    public readonly enterpriseSecurityGroup!: pulumi.Output<boolean | undefined>;
    public readonly gatewayName!: pulumi.Output<string | undefined>;
    public readonly internetSlbSpec!: pulumi.Output<string | undefined>;
    public readonly replica!: pulumi.Output<number>;
    public /*out*/ readonly slbLists!: pulumi.Output<outputs.MseGatewaySlbList[]>;
    public readonly slbSpec!: pulumi.Output<string | undefined>;
    public readonly spec!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.MseGatewayTimeouts | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string>;

    /**
     * Create a MseGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MseGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MseGatewayArgs | MseGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MseGatewayState | undefined;
            resourceInputs["backupVswitchId"] = state ? state.backupVswitchId : undefined;
            resourceInputs["deleteSlb"] = state ? state.deleteSlb : undefined;
            resourceInputs["enterpriseSecurityGroup"] = state ? state.enterpriseSecurityGroup : undefined;
            resourceInputs["gatewayName"] = state ? state.gatewayName : undefined;
            resourceInputs["internetSlbSpec"] = state ? state.internetSlbSpec : undefined;
            resourceInputs["replica"] = state ? state.replica : undefined;
            resourceInputs["slbLists"] = state ? state.slbLists : undefined;
            resourceInputs["slbSpec"] = state ? state.slbSpec : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
        } else {
            const args = argsOrState as MseGatewayArgs | undefined;
            if ((!args || args.replica === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replica'");
            }
            if ((!args || args.spec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spec'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            resourceInputs["backupVswitchId"] = args ? args.backupVswitchId : undefined;
            resourceInputs["deleteSlb"] = args ? args.deleteSlb : undefined;
            resourceInputs["enterpriseSecurityGroup"] = args ? args.enterpriseSecurityGroup : undefined;
            resourceInputs["gatewayName"] = args ? args.gatewayName : undefined;
            resourceInputs["internetSlbSpec"] = args ? args.internetSlbSpec : undefined;
            resourceInputs["replica"] = args ? args.replica : undefined;
            resourceInputs["slbSpec"] = args ? args.slbSpec : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["slbLists"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MseGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MseGateway resources.
 */
export interface MseGatewayState {
    backupVswitchId?: pulumi.Input<string>;
    deleteSlb?: pulumi.Input<boolean>;
    enterpriseSecurityGroup?: pulumi.Input<boolean>;
    gatewayName?: pulumi.Input<string>;
    internetSlbSpec?: pulumi.Input<string>;
    replica?: pulumi.Input<number>;
    slbLists?: pulumi.Input<pulumi.Input<inputs.MseGatewaySlbList>[]>;
    slbSpec?: pulumi.Input<string>;
    spec?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MseGatewayTimeouts>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MseGateway resource.
 */
export interface MseGatewayArgs {
    backupVswitchId?: pulumi.Input<string>;
    deleteSlb?: pulumi.Input<boolean>;
    enterpriseSecurityGroup?: pulumi.Input<boolean>;
    gatewayName?: pulumi.Input<string>;
    internetSlbSpec?: pulumi.Input<string>;
    replica: pulumi.Input<number>;
    slbSpec?: pulumi.Input<string>;
    spec: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MseGatewayTimeouts>;
    vpcId: pulumi.Input<string>;
    vswitchId: pulumi.Input<string>;
}
