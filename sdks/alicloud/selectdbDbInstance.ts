// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SelectdbDbInstance extends pulumi.CustomResource {
    /**
     * Get an existing SelectdbDbInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SelectdbDbInstanceState, opts?: pulumi.CustomResourceOptions): SelectdbDbInstance {
        return new SelectdbDbInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/selectdbDbInstance:SelectdbDbInstance';

    /**
     * Returns true if the given object is an instance of SelectdbDbInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SelectdbDbInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SelectdbDbInstance.__pulumiType;
    }

    public readonly cacheSize!: pulumi.Output<number>;
    public /*out*/ readonly cacheSizePostpaid!: pulumi.Output<number>;
    public /*out*/ readonly cacheSizePrepaid!: pulumi.Output<number>;
    public /*out*/ readonly clusterCountPostpaid!: pulumi.Output<number>;
    public /*out*/ readonly clusterCountPrepaid!: pulumi.Output<number>;
    public /*out*/ readonly cpuPostpaid!: pulumi.Output<number>;
    public /*out*/ readonly cpuPrepaid!: pulumi.Output<number>;
    public readonly dbInstanceClass!: pulumi.Output<string>;
    public readonly dbInstanceDescription!: pulumi.Output<string>;
    public readonly desiredSecurityIpLists!: pulumi.Output<outputs.SelectdbDbInstanceDesiredSecurityIpList[] | undefined>;
    public readonly enablePublicNetwork!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly engine!: pulumi.Output<string>;
    public /*out*/ readonly engineMinorVersion!: pulumi.Output<string>;
    public /*out*/ readonly gmtCreated!: pulumi.Output<string>;
    public /*out*/ readonly gmtExpired!: pulumi.Output<string>;
    public /*out*/ readonly gmtModified!: pulumi.Output<string>;
    public /*out*/ readonly instanceNetInfos!: pulumi.Output<outputs.SelectdbDbInstanceInstanceNetInfo[]>;
    public /*out*/ readonly lockMode!: pulumi.Output<string>;
    public /*out*/ readonly lockReason!: pulumi.Output<string>;
    public /*out*/ readonly memoryPostpaid!: pulumi.Output<number>;
    public /*out*/ readonly memoryPrepaid!: pulumi.Output<number>;
    public readonly paymentType!: pulumi.Output<string>;
    public readonly period!: pulumi.Output<string | undefined>;
    public readonly periodTime!: pulumi.Output<number | undefined>;
    public /*out*/ readonly regionId!: pulumi.Output<string>;
    public /*out*/ readonly securityIpLists!: pulumi.Output<outputs.SelectdbDbInstanceSecurityIpList[]>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly subDomain!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.SelectdbDbInstanceTimeouts | undefined>;
    public readonly upgradedEngineMinorVersion!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string>;
    public readonly vswitchId!: pulumi.Output<string>;
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a SelectdbDbInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SelectdbDbInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SelectdbDbInstanceArgs | SelectdbDbInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SelectdbDbInstanceState | undefined;
            resourceInputs["cacheSize"] = state ? state.cacheSize : undefined;
            resourceInputs["cacheSizePostpaid"] = state ? state.cacheSizePostpaid : undefined;
            resourceInputs["cacheSizePrepaid"] = state ? state.cacheSizePrepaid : undefined;
            resourceInputs["clusterCountPostpaid"] = state ? state.clusterCountPostpaid : undefined;
            resourceInputs["clusterCountPrepaid"] = state ? state.clusterCountPrepaid : undefined;
            resourceInputs["cpuPostpaid"] = state ? state.cpuPostpaid : undefined;
            resourceInputs["cpuPrepaid"] = state ? state.cpuPrepaid : undefined;
            resourceInputs["dbInstanceClass"] = state ? state.dbInstanceClass : undefined;
            resourceInputs["dbInstanceDescription"] = state ? state.dbInstanceDescription : undefined;
            resourceInputs["desiredSecurityIpLists"] = state ? state.desiredSecurityIpLists : undefined;
            resourceInputs["enablePublicNetwork"] = state ? state.enablePublicNetwork : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineMinorVersion"] = state ? state.engineMinorVersion : undefined;
            resourceInputs["gmtCreated"] = state ? state.gmtCreated : undefined;
            resourceInputs["gmtExpired"] = state ? state.gmtExpired : undefined;
            resourceInputs["gmtModified"] = state ? state.gmtModified : undefined;
            resourceInputs["instanceNetInfos"] = state ? state.instanceNetInfos : undefined;
            resourceInputs["lockMode"] = state ? state.lockMode : undefined;
            resourceInputs["lockReason"] = state ? state.lockReason : undefined;
            resourceInputs["memoryPostpaid"] = state ? state.memoryPostpaid : undefined;
            resourceInputs["memoryPrepaid"] = state ? state.memoryPrepaid : undefined;
            resourceInputs["paymentType"] = state ? state.paymentType : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodTime"] = state ? state.periodTime : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["securityIpLists"] = state ? state.securityIpLists : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subDomain"] = state ? state.subDomain : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["upgradedEngineMinorVersion"] = state ? state.upgradedEngineMinorVersion : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vswitchId"] = state ? state.vswitchId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as SelectdbDbInstanceArgs | undefined;
            if ((!args || args.cacheSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cacheSize'");
            }
            if ((!args || args.dbInstanceClass === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceClass'");
            }
            if ((!args || args.dbInstanceDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceDescription'");
            }
            if ((!args || args.paymentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentType'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vswitchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vswitchId'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["cacheSize"] = args ? args.cacheSize : undefined;
            resourceInputs["dbInstanceClass"] = args ? args.dbInstanceClass : undefined;
            resourceInputs["dbInstanceDescription"] = args ? args.dbInstanceDescription : undefined;
            resourceInputs["desiredSecurityIpLists"] = args ? args.desiredSecurityIpLists : undefined;
            resourceInputs["enablePublicNetwork"] = args ? args.enablePublicNetwork : undefined;
            resourceInputs["paymentType"] = args ? args.paymentType : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodTime"] = args ? args.periodTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["upgradedEngineMinorVersion"] = args ? args.upgradedEngineMinorVersion : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vswitchId"] = args ? args.vswitchId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["cacheSizePostpaid"] = undefined /*out*/;
            resourceInputs["cacheSizePrepaid"] = undefined /*out*/;
            resourceInputs["clusterCountPostpaid"] = undefined /*out*/;
            resourceInputs["clusterCountPrepaid"] = undefined /*out*/;
            resourceInputs["cpuPostpaid"] = undefined /*out*/;
            resourceInputs["cpuPrepaid"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["engineMinorVersion"] = undefined /*out*/;
            resourceInputs["gmtCreated"] = undefined /*out*/;
            resourceInputs["gmtExpired"] = undefined /*out*/;
            resourceInputs["gmtModified"] = undefined /*out*/;
            resourceInputs["instanceNetInfos"] = undefined /*out*/;
            resourceInputs["lockMode"] = undefined /*out*/;
            resourceInputs["lockReason"] = undefined /*out*/;
            resourceInputs["memoryPostpaid"] = undefined /*out*/;
            resourceInputs["memoryPrepaid"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["securityIpLists"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subDomain"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SelectdbDbInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SelectdbDbInstance resources.
 */
export interface SelectdbDbInstanceState {
    cacheSize?: pulumi.Input<number>;
    cacheSizePostpaid?: pulumi.Input<number>;
    cacheSizePrepaid?: pulumi.Input<number>;
    clusterCountPostpaid?: pulumi.Input<number>;
    clusterCountPrepaid?: pulumi.Input<number>;
    cpuPostpaid?: pulumi.Input<number>;
    cpuPrepaid?: pulumi.Input<number>;
    dbInstanceClass?: pulumi.Input<string>;
    dbInstanceDescription?: pulumi.Input<string>;
    desiredSecurityIpLists?: pulumi.Input<pulumi.Input<inputs.SelectdbDbInstanceDesiredSecurityIpList>[]>;
    enablePublicNetwork?: pulumi.Input<boolean>;
    engine?: pulumi.Input<string>;
    engineMinorVersion?: pulumi.Input<string>;
    gmtCreated?: pulumi.Input<string>;
    gmtExpired?: pulumi.Input<string>;
    gmtModified?: pulumi.Input<string>;
    instanceNetInfos?: pulumi.Input<pulumi.Input<inputs.SelectdbDbInstanceInstanceNetInfo>[]>;
    lockMode?: pulumi.Input<string>;
    lockReason?: pulumi.Input<string>;
    memoryPostpaid?: pulumi.Input<number>;
    memoryPrepaid?: pulumi.Input<number>;
    paymentType?: pulumi.Input<string>;
    period?: pulumi.Input<string>;
    periodTime?: pulumi.Input<number>;
    regionId?: pulumi.Input<string>;
    securityIpLists?: pulumi.Input<pulumi.Input<inputs.SelectdbDbInstanceSecurityIpList>[]>;
    status?: pulumi.Input<string>;
    subDomain?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.SelectdbDbInstanceTimeouts>;
    upgradedEngineMinorVersion?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vswitchId?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SelectdbDbInstance resource.
 */
export interface SelectdbDbInstanceArgs {
    cacheSize: pulumi.Input<number>;
    dbInstanceClass: pulumi.Input<string>;
    dbInstanceDescription: pulumi.Input<string>;
    desiredSecurityIpLists?: pulumi.Input<pulumi.Input<inputs.SelectdbDbInstanceDesiredSecurityIpList>[]>;
    enablePublicNetwork?: pulumi.Input<boolean>;
    paymentType: pulumi.Input<string>;
    period?: pulumi.Input<string>;
    periodTime?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.SelectdbDbInstanceTimeouts>;
    upgradedEngineMinorVersion?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
    vswitchId: pulumi.Input<string>;
    zoneId: pulumi.Input<string>;
}
