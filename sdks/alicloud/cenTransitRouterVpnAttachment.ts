// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CenTransitRouterVpnAttachment extends pulumi.CustomResource {
    /**
     * Get an existing CenTransitRouterVpnAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CenTransitRouterVpnAttachmentState, opts?: pulumi.CustomResourceOptions): CenTransitRouterVpnAttachment {
        return new CenTransitRouterVpnAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/cenTransitRouterVpnAttachment:CenTransitRouterVpnAttachment';

    /**
     * Returns true if the given object is an instance of CenTransitRouterVpnAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CenTransitRouterVpnAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CenTransitRouterVpnAttachment.__pulumiType;
    }

    public readonly autoPublishRouteEnabled!: pulumi.Output<boolean>;
    public readonly cenId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.CenTransitRouterVpnAttachmentTimeouts | undefined>;
    public readonly transitRouterAttachmentDescription!: pulumi.Output<string | undefined>;
    public readonly transitRouterAttachmentName!: pulumi.Output<string | undefined>;
    public readonly transitRouterId!: pulumi.Output<string>;
    public readonly vpnId!: pulumi.Output<string>;
    public readonly vpnOwnerId!: pulumi.Output<string>;
    public readonly zones!: pulumi.Output<outputs.CenTransitRouterVpnAttachmentZone[]>;

    /**
     * Create a CenTransitRouterVpnAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CenTransitRouterVpnAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CenTransitRouterVpnAttachmentArgs | CenTransitRouterVpnAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CenTransitRouterVpnAttachmentState | undefined;
            resourceInputs["autoPublishRouteEnabled"] = state ? state.autoPublishRouteEnabled : undefined;
            resourceInputs["cenId"] = state ? state.cenId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["transitRouterAttachmentDescription"] = state ? state.transitRouterAttachmentDescription : undefined;
            resourceInputs["transitRouterAttachmentName"] = state ? state.transitRouterAttachmentName : undefined;
            resourceInputs["transitRouterId"] = state ? state.transitRouterId : undefined;
            resourceInputs["vpnId"] = state ? state.vpnId : undefined;
            resourceInputs["vpnOwnerId"] = state ? state.vpnOwnerId : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as CenTransitRouterVpnAttachmentArgs | undefined;
            if ((!args || args.transitRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterId'");
            }
            if ((!args || args.vpnId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnId'");
            }
            if ((!args || args.zones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zones'");
            }
            resourceInputs["autoPublishRouteEnabled"] = args ? args.autoPublishRouteEnabled : undefined;
            resourceInputs["cenId"] = args ? args.cenId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["transitRouterAttachmentDescription"] = args ? args.transitRouterAttachmentDescription : undefined;
            resourceInputs["transitRouterAttachmentName"] = args ? args.transitRouterAttachmentName : undefined;
            resourceInputs["transitRouterId"] = args ? args.transitRouterId : undefined;
            resourceInputs["vpnId"] = args ? args.vpnId : undefined;
            resourceInputs["vpnOwnerId"] = args ? args.vpnOwnerId : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CenTransitRouterVpnAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CenTransitRouterVpnAttachment resources.
 */
export interface CenTransitRouterVpnAttachmentState {
    autoPublishRouteEnabled?: pulumi.Input<boolean>;
    cenId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CenTransitRouterVpnAttachmentTimeouts>;
    transitRouterAttachmentDescription?: pulumi.Input<string>;
    transitRouterAttachmentName?: pulumi.Input<string>;
    transitRouterId?: pulumi.Input<string>;
    vpnId?: pulumi.Input<string>;
    vpnOwnerId?: pulumi.Input<string>;
    zones?: pulumi.Input<pulumi.Input<inputs.CenTransitRouterVpnAttachmentZone>[]>;
}

/**
 * The set of arguments for constructing a CenTransitRouterVpnAttachment resource.
 */
export interface CenTransitRouterVpnAttachmentArgs {
    autoPublishRouteEnabled?: pulumi.Input<boolean>;
    cenId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CenTransitRouterVpnAttachmentTimeouts>;
    transitRouterAttachmentDescription?: pulumi.Input<string>;
    transitRouterAttachmentName?: pulumi.Input<string>;
    transitRouterId: pulumi.Input<string>;
    vpnId: pulumi.Input<string>;
    vpnOwnerId?: pulumi.Input<string>;
    zones: pulumi.Input<pulumi.Input<inputs.CenTransitRouterVpnAttachmentZone>[]>;
}
