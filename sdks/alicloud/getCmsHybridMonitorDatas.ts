// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCmsHybridMonitorDatas(args: GetCmsHybridMonitorDatasArgs, opts?: pulumi.InvokeOptions): Promise<GetCmsHybridMonitorDatasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alicloud:index/getCmsHybridMonitorDatas:getCmsHybridMonitorDatas", {
        "end": args.end,
        "id": args.id,
        "namespace": args.namespace,
        "outputFile": args.outputFile,
        "period": args.period,
        "promSql": args.promSql,
        "start": args.start,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCmsHybridMonitorDatas.
 */
export interface GetCmsHybridMonitorDatasArgs {
    end: string;
    id?: string;
    namespace: string;
    outputFile?: string;
    period?: string;
    promSql: string;
    start: string;
}

/**
 * A collection of values returned by getCmsHybridMonitorDatas.
 */
export interface GetCmsHybridMonitorDatasResult {
    readonly datas: outputs.GetCmsHybridMonitorDatasData[];
    readonly end: string;
    readonly id: string;
    readonly namespace: string;
    readonly outputFile?: string;
    readonly period?: string;
    readonly promSql: string;
    readonly start: string;
}
export function getCmsHybridMonitorDatasOutput(args: GetCmsHybridMonitorDatasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmsHybridMonitorDatasResult> {
    return pulumi.output(args).apply((a: any) => getCmsHybridMonitorDatas(a, opts))
}

/**
 * A collection of arguments for invoking getCmsHybridMonitorDatas.
 */
export interface GetCmsHybridMonitorDatasOutputArgs {
    end: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    outputFile?: pulumi.Input<string>;
    period?: pulumi.Input<string>;
    promSql: pulumi.Input<string>;
    start: pulumi.Input<string>;
}
