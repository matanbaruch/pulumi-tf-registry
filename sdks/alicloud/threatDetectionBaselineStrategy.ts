// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ThreatDetectionBaselineStrategy extends pulumi.CustomResource {
    /**
     * Get an existing ThreatDetectionBaselineStrategy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThreatDetectionBaselineStrategyState, opts?: pulumi.CustomResourceOptions): ThreatDetectionBaselineStrategy {
        return new ThreatDetectionBaselineStrategy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:index/threatDetectionBaselineStrategy:ThreatDetectionBaselineStrategy';

    /**
     * Returns true if the given object is an instance of ThreatDetectionBaselineStrategy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatDetectionBaselineStrategy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatDetectionBaselineStrategy.__pulumiType;
    }

    public /*out*/ readonly baselineStrategyId!: pulumi.Output<string>;
    public readonly baselineStrategyName!: pulumi.Output<string>;
    public readonly customType!: pulumi.Output<string>;
    public readonly cycleDays!: pulumi.Output<number>;
    public readonly cycleStartTime!: pulumi.Output<number>;
    public readonly endTime!: pulumi.Output<string>;
    public readonly riskSubTypeName!: pulumi.Output<string>;
    public readonly startTime!: pulumi.Output<string>;
    public readonly targetType!: pulumi.Output<string>;

    /**
     * Create a ThreatDetectionBaselineStrategy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatDetectionBaselineStrategyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThreatDetectionBaselineStrategyArgs | ThreatDetectionBaselineStrategyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThreatDetectionBaselineStrategyState | undefined;
            resourceInputs["baselineStrategyId"] = state ? state.baselineStrategyId : undefined;
            resourceInputs["baselineStrategyName"] = state ? state.baselineStrategyName : undefined;
            resourceInputs["customType"] = state ? state.customType : undefined;
            resourceInputs["cycleDays"] = state ? state.cycleDays : undefined;
            resourceInputs["cycleStartTime"] = state ? state.cycleStartTime : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["riskSubTypeName"] = state ? state.riskSubTypeName : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
        } else {
            const args = argsOrState as ThreatDetectionBaselineStrategyArgs | undefined;
            if ((!args || args.baselineStrategyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineStrategyName'");
            }
            if ((!args || args.customType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customType'");
            }
            if ((!args || args.cycleDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cycleDays'");
            }
            if ((!args || args.endTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if ((!args || args.riskSubTypeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'riskSubTypeName'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            if ((!args || args.targetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetType'");
            }
            resourceInputs["baselineStrategyName"] = args ? args.baselineStrategyName : undefined;
            resourceInputs["customType"] = args ? args.customType : undefined;
            resourceInputs["cycleDays"] = args ? args.cycleDays : undefined;
            resourceInputs["cycleStartTime"] = args ? args.cycleStartTime : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["riskSubTypeName"] = args ? args.riskSubTypeName : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
            resourceInputs["baselineStrategyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ThreatDetectionBaselineStrategy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ThreatDetectionBaselineStrategy resources.
 */
export interface ThreatDetectionBaselineStrategyState {
    baselineStrategyId?: pulumi.Input<string>;
    baselineStrategyName?: pulumi.Input<string>;
    customType?: pulumi.Input<string>;
    cycleDays?: pulumi.Input<number>;
    cycleStartTime?: pulumi.Input<number>;
    endTime?: pulumi.Input<string>;
    riskSubTypeName?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    targetType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ThreatDetectionBaselineStrategy resource.
 */
export interface ThreatDetectionBaselineStrategyArgs {
    baselineStrategyName: pulumi.Input<string>;
    customType: pulumi.Input<string>;
    cycleDays: pulumi.Input<number>;
    cycleStartTime?: pulumi.Input<number>;
    endTime: pulumi.Input<string>;
    riskSubTypeName: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
    targetType: pulumi.Input<string>;
}
