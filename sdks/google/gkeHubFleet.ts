// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GkeHubFleet extends pulumi.CustomResource {
    /**
     * Get an existing GkeHubFleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GkeHubFleetState, opts?: pulumi.CustomResourceOptions): GkeHubFleet {
        return new GkeHubFleet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/gkeHubFleet:GkeHubFleet';

    /**
     * Returns true if the given object is an instance of GkeHubFleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GkeHubFleet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GkeHubFleet.__pulumiType;
    }

    /**
     * The time the fleet was created, in RFC3339 text format.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The default cluster configurations to apply across the fleet.
     */
    public readonly defaultClusterConfig!: pulumi.Output<outputs.GkeHubFleetDefaultClusterConfig | undefined>;
    /**
     * The time the fleet was deleted, in RFC3339 text format.
     */
    public /*out*/ readonly deleteTime!: pulumi.Output<string>;
    /**
     * A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
     * lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The state of the fleet resource.
     */
    public /*out*/ readonly states!: pulumi.Output<outputs.GkeHubFleetState[]>;
    public readonly timeouts!: pulumi.Output<outputs.GkeHubFleetTimeouts | undefined>;
    /**
     * Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and
     * another resource with the same name is created, it gets a different uid.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The time the fleet was last updated, in RFC3339 text format.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a GkeHubFleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GkeHubFleetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GkeHubFleetArgs | GkeHubFleetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GkeHubFleetState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["defaultClusterConfig"] = state ? state.defaultClusterConfig : undefined;
            resourceInputs["deleteTime"] = state ? state.deleteTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["states"] = state ? state.states : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as GkeHubFleetArgs | undefined;
            resourceInputs["defaultClusterConfig"] = args ? args.defaultClusterConfig : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["states"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GkeHubFleet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GkeHubFleet resources.
 */
export interface GkeHubFleetState {
    /**
     * The time the fleet was created, in RFC3339 text format.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The default cluster configurations to apply across the fleet.
     */
    defaultClusterConfig?: pulumi.Input<inputs.GkeHubFleetDefaultClusterConfig>;
    /**
     * The time the fleet was deleted, in RFC3339 text format.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
     * lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
     */
    displayName?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The state of the fleet resource.
     */
    states?: pulumi.Input<pulumi.Input<inputs.GkeHubFleetState>[]>;
    timeouts?: pulumi.Input<inputs.GkeHubFleetTimeouts>;
    /**
     * Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and
     * another resource with the same name is created, it gets a different uid.
     */
    uid?: pulumi.Input<string>;
    /**
     * The time the fleet was last updated, in RFC3339 text format.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GkeHubFleet resource.
 */
export interface GkeHubFleetArgs {
    /**
     * The default cluster configurations to apply across the fleet.
     */
    defaultClusterConfig?: pulumi.Input<inputs.GkeHubFleetDefaultClusterConfig>;
    /**
     * A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
     * lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
     */
    displayName?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GkeHubFleetTimeouts>;
}
