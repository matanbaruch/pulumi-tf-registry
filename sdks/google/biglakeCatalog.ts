// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BiglakeCatalog extends pulumi.CustomResource {
    /**
     * Get an existing BiglakeCatalog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BiglakeCatalogState, opts?: pulumi.CustomResourceOptions): BiglakeCatalog {
        return new BiglakeCatalog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/biglakeCatalog:BiglakeCatalog';

    /**
     * Returns true if the given object is an instance of BiglakeCatalog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BiglakeCatalog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BiglakeCatalog.__pulumiType;
    }

    /**
     * Output only. The creation time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Output only. The deletion time of the catalog. Only set after the catalog is deleted. A timestamp in RFC3339 UTC "Zulu"
     * format, with nanosecond resolution and up to nine fractional digits.
     */
    public /*out*/ readonly deleteTime!: pulumi.Output<string>;
    /**
     * Output only. The time when this catalog is considered expired. Only set after the catalog is deleted. Only set after the
     * catalog is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
     * digits.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    /**
     * The geographic location where the Catalog should reside.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.BiglakeCatalogTimeouts | undefined>;
    /**
     * Output only. The last modification time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a BiglakeCatalog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BiglakeCatalogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BiglakeCatalogArgs | BiglakeCatalogState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BiglakeCatalogState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deleteTime"] = state ? state.deleteTime : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as BiglakeCatalogArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BiglakeCatalog.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BiglakeCatalog resources.
 */
export interface BiglakeCatalogState {
    /**
     * Output only. The creation time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Output only. The deletion time of the catalog. Only set after the catalog is deleted. A timestamp in RFC3339 UTC "Zulu"
     * format, with nanosecond resolution and up to nine fractional digits.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * Output only. The time when this catalog is considered expired. Only set after the catalog is deleted. Only set after the
     * catalog is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
     * digits.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * The geographic location where the Catalog should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BiglakeCatalogTimeouts>;
    /**
     * Output only. The last modification time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BiglakeCatalog resource.
 */
export interface BiglakeCatalogArgs {
    /**
     * The geographic location where the Catalog should reside.
     */
    location: pulumi.Input<string>;
    /**
     * The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BiglakeCatalogTimeouts>;
}
