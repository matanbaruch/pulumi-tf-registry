// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VertexAiIndexEndpointDeployedIndex extends pulumi.CustomResource {
    /**
     * Get an existing VertexAiIndexEndpointDeployedIndex resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VertexAiIndexEndpointDeployedIndexState, opts?: pulumi.CustomResourceOptions): VertexAiIndexEndpointDeployedIndex {
        return new VertexAiIndexEndpointDeployedIndex(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/vertexAiIndexEndpointDeployedIndex:VertexAiIndexEndpointDeployedIndex';

    /**
     * Returns true if the given object is an instance of VertexAiIndexEndpointDeployedIndex.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VertexAiIndexEndpointDeployedIndex {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VertexAiIndexEndpointDeployedIndex.__pulumiType;
    }

    /**
     * A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally
     * allows only a modest additional configuration.
     */
    public readonly automaticResources!: pulumi.Output<outputs.VertexAiIndexEndpointDeployedIndexAutomaticResources | undefined>;
    /**
     * The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual
     * configuration. The field minReplicaCount must be set to a value strictly greater than 0, or else validation will fail.
     * We don't provide SLA when minReplicaCount=1. If maxReplicaCount is not set, the default value is minReplicaCount. The
     * max allowed replica count is 1000. Available machine types for SMALL shard: e2-standard-2 and all machine types
     * available for MEDIUM and LARGE shard. Available machine types for MEDIUM shard: e2-standard-16 and all machine types
     * available for LARGE shard. Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32. n1-standard-16 and
     * n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.
     */
    public readonly dedicatedResources!: pulumi.Output<outputs.VertexAiIndexEndpointDeployedIndexDedicatedResources | undefined>;
    /**
     * If set, the authentication is enabled for the private endpoint.
     */
    public readonly deployedIndexAuthConfig!: pulumi.Output<outputs.VertexAiIndexEndpointDeployedIndexDeployedIndexAuthConfig | undefined>;
    /**
     * The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and
     * only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
     */
    public readonly deployedIndexId!: pulumi.Output<string>;
    /**
     * The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default'
     * deployment group. Creating deployment_groups with reserved_ip_ranges is a recommended practice when the peered network
     * has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration.
     * Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the
     * deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. [See
     * the official documentation
     * here](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#DeployedIndex.FIELDS.deployment_group).
     * Note: we only support up to 5 deployment groups (not including 'default').
     */
    public readonly deploymentGroup!: pulumi.Output<string | undefined>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * If true, private endpoint's access logs are sent to Cloud Logging.
     */
    public readonly enableAccessLogging!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Index this is the deployment of.
     */
    public readonly index!: pulumi.Output<string>;
    /**
     * Identifies the index endpoint. Must be in the format
     * 'projects/{{project}}/locations/{{region}}/indexEndpoints/{{indexEndpoint}}'
     */
    public readonly indexEndpoint!: pulumi.Output<string>;
    /**
     * The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original
     * Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously
     * updated in the background to reflect these changes. If this timestamp's value is at least the
     * [Index.update_time](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexes#Index.FIELDS.update_time)
     * of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older,
     * then to see which updates this DeployedIndex already contains (and which it does not), one must
     * [list](https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.operations/list#google.longrunning.Operations.ListOperations)
     * the operations that are running on the original Index. Only the successfully completed Operations with updateTime equal
     * or before this sync time are contained in this DeployedIndex. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly indexSyncTime!: pulumi.Output<string>;
    /**
     * The name of the DeployedIndex resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Provides paths for users to send requests directly to the deployed index services running on Cloud via private services
     * access. This field is populated if
     * [network](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#IndexEndpoint.FIELDS.network)
     * is configured.
     */
    public /*out*/ readonly privateEndpoints!: pulumi.Output<outputs.VertexAiIndexEndpointDeployedIndexPrivateEndpoint[]>;
    /**
     * A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the
     * index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC
     * network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
     * Example: ['vertex-ai-ip-range']. For more information about subnets and network IP ranges, please see
     * https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
     */
    public readonly reservedIpRanges!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.VertexAiIndexEndpointDeployedIndexTimeouts | undefined>;

    /**
     * Create a VertexAiIndexEndpointDeployedIndex resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VertexAiIndexEndpointDeployedIndexArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VertexAiIndexEndpointDeployedIndexArgs | VertexAiIndexEndpointDeployedIndexState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VertexAiIndexEndpointDeployedIndexState | undefined;
            resourceInputs["automaticResources"] = state ? state.automaticResources : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dedicatedResources"] = state ? state.dedicatedResources : undefined;
            resourceInputs["deployedIndexAuthConfig"] = state ? state.deployedIndexAuthConfig : undefined;
            resourceInputs["deployedIndexId"] = state ? state.deployedIndexId : undefined;
            resourceInputs["deploymentGroup"] = state ? state.deploymentGroup : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enableAccessLogging"] = state ? state.enableAccessLogging : undefined;
            resourceInputs["index"] = state ? state.index : undefined;
            resourceInputs["indexEndpoint"] = state ? state.indexEndpoint : undefined;
            resourceInputs["indexSyncTime"] = state ? state.indexSyncTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateEndpoints"] = state ? state.privateEndpoints : undefined;
            resourceInputs["reservedIpRanges"] = state ? state.reservedIpRanges : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as VertexAiIndexEndpointDeployedIndexArgs | undefined;
            if ((!args || args.deployedIndexId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployedIndexId'");
            }
            if ((!args || args.index === undefined) && !opts.urn) {
                throw new Error("Missing required property 'index'");
            }
            if ((!args || args.indexEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'indexEndpoint'");
            }
            resourceInputs["automaticResources"] = args ? args.automaticResources : undefined;
            resourceInputs["dedicatedResources"] = args ? args.dedicatedResources : undefined;
            resourceInputs["deployedIndexAuthConfig"] = args ? args.deployedIndexAuthConfig : undefined;
            resourceInputs["deployedIndexId"] = args ? args.deployedIndexId : undefined;
            resourceInputs["deploymentGroup"] = args ? args.deploymentGroup : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableAccessLogging"] = args ? args.enableAccessLogging : undefined;
            resourceInputs["index"] = args ? args.index : undefined;
            resourceInputs["indexEndpoint"] = args ? args.indexEndpoint : undefined;
            resourceInputs["reservedIpRanges"] = args ? args.reservedIpRanges : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["indexSyncTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["privateEndpoints"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VertexAiIndexEndpointDeployedIndex.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VertexAiIndexEndpointDeployedIndex resources.
 */
export interface VertexAiIndexEndpointDeployedIndexState {
    /**
     * A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally
     * allows only a modest additional configuration.
     */
    automaticResources?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexAutomaticResources>;
    /**
     * The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual
     * configuration. The field minReplicaCount must be set to a value strictly greater than 0, or else validation will fail.
     * We don't provide SLA when minReplicaCount=1. If maxReplicaCount is not set, the default value is minReplicaCount. The
     * max allowed replica count is 1000. Available machine types for SMALL shard: e2-standard-2 and all machine types
     * available for MEDIUM and LARGE shard. Available machine types for MEDIUM shard: e2-standard-16 and all machine types
     * available for LARGE shard. Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32. n1-standard-16 and
     * n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.
     */
    dedicatedResources?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexDedicatedResources>;
    /**
     * If set, the authentication is enabled for the private endpoint.
     */
    deployedIndexAuthConfig?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexDeployedIndexAuthConfig>;
    /**
     * The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and
     * only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
     */
    deployedIndexId?: pulumi.Input<string>;
    /**
     * The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default'
     * deployment group. Creating deployment_groups with reserved_ip_ranges is a recommended practice when the peered network
     * has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration.
     * Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the
     * deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. [See
     * the official documentation
     * here](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#DeployedIndex.FIELDS.deployment_group).
     * Note: we only support up to 5 deployment groups (not including 'default').
     */
    deploymentGroup?: pulumi.Input<string>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * If true, private endpoint's access logs are sent to Cloud Logging.
     */
    enableAccessLogging?: pulumi.Input<boolean>;
    /**
     * The name of the Index this is the deployment of.
     */
    index?: pulumi.Input<string>;
    /**
     * Identifies the index endpoint. Must be in the format
     * 'projects/{{project}}/locations/{{region}}/indexEndpoints/{{indexEndpoint}}'
     */
    indexEndpoint?: pulumi.Input<string>;
    /**
     * The DeployedIndex may depend on various data on its original Index. Additionally when certain changes to the original
     * Index are being done (e.g. when what the Index contains is being changed) the DeployedIndex may be asynchronously
     * updated in the background to reflect these changes. If this timestamp's value is at least the
     * [Index.update_time](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexes#Index.FIELDS.update_time)
     * of the original Index, it means that this DeployedIndex and the original Index are in sync. If this timestamp is older,
     * then to see which updates this DeployedIndex already contains (and which it does not), one must
     * [list](https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.operations/list#google.longrunning.Operations.ListOperations)
     * the operations that are running on the original Index. Only the successfully completed Operations with updateTime equal
     * or before this sync time are contained in this DeployedIndex. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    indexSyncTime?: pulumi.Input<string>;
    /**
     * The name of the DeployedIndex resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Provides paths for users to send requests directly to the deployed index services running on Cloud via private services
     * access. This field is populated if
     * [network](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#IndexEndpoint.FIELDS.network)
     * is configured.
     */
    privateEndpoints?: pulumi.Input<pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexPrivateEndpoint>[]>;
    /**
     * A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the
     * index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC
     * network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
     * Example: ['vertex-ai-ip-range']. For more information about subnets and network IP ranges, please see
     * https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
     */
    reservedIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexTimeouts>;
}

/**
 * The set of arguments for constructing a VertexAiIndexEndpointDeployedIndex resource.
 */
export interface VertexAiIndexEndpointDeployedIndexArgs {
    /**
     * A description of resources that the DeployedIndex uses, which to large degree are decided by Vertex AI, and optionally
     * allows only a modest additional configuration.
     */
    automaticResources?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexAutomaticResources>;
    /**
     * A description of resources that are dedicated to the DeployedIndex, and that need a higher degree of manual
     * configuration. The field minReplicaCount must be set to a value strictly greater than 0, or else validation will fail.
     * We don't provide SLA when minReplicaCount=1. If maxReplicaCount is not set, the default value is minReplicaCount. The
     * max allowed replica count is 1000. Available machine types for SMALL shard: e2-standard-2 and all machine types
     * available for MEDIUM and LARGE shard. Available machine types for MEDIUM shard: e2-standard-16 and all machine types
     * available for LARGE shard. Available machine types for LARGE shard: e2-highmem-16, n2d-standard-32. n1-standard-16 and
     * n1-standard-32 are still available, but we recommend e2-standard-16 and e2-highmem-16 for cost efficiency.
     */
    dedicatedResources?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexDedicatedResources>;
    /**
     * If set, the authentication is enabled for the private endpoint.
     */
    deployedIndexAuthConfig?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexDeployedIndexAuthConfig>;
    /**
     * The user specified ID of the DeployedIndex. The ID can be up to 128 characters long and must start with a letter and
     * only contain letters, numbers, and underscores. The ID must be unique within the project it is created in.
     */
    deployedIndexId: pulumi.Input<string>;
    /**
     * The deployment group can be no longer than 64 characters (eg: 'test', 'prod'). If not set, we will use the 'default'
     * deployment group. Creating deployment_groups with reserved_ip_ranges is a recommended practice when the peered network
     * has multiple peering ranges. This creates your deployments from predictable IP spaces for easier traffic administration.
     * Also, one deployment_group (except 'default') can only be used with the same reserved_ip_ranges which means if the
     * deployment_group has been used with reserved_ip_ranges: [a, b, c], using it with [a, b] or [d, e] is disallowed. [See
     * the official documentation
     * here](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints#DeployedIndex.FIELDS.deployment_group).
     * Note: we only support up to 5 deployment groups (not including 'default').
     */
    deploymentGroup?: pulumi.Input<string>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * If true, private endpoint's access logs are sent to Cloud Logging.
     */
    enableAccessLogging?: pulumi.Input<boolean>;
    /**
     * The name of the Index this is the deployment of.
     */
    index: pulumi.Input<string>;
    /**
     * Identifies the index endpoint. Must be in the format
     * 'projects/{{project}}/locations/{{region}}/indexEndpoints/{{indexEndpoint}}'
     */
    indexEndpoint: pulumi.Input<string>;
    /**
     * A list of reserved ip ranges under the VPC network that can be used for this DeployedIndex. If set, we will deploy the
     * index within the provided ip ranges. Otherwise, the index might be deployed to any ip ranges under the provided VPC
     * network. The value should be the name of the address (https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
     * Example: ['vertex-ai-ip-range']. For more information about subnets and network IP ranges, please see
     * https://cloud.google.com/vpc/docs/subnets#manually_created_subnet_ip_ranges.
     */
    reservedIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.VertexAiIndexEndpointDeployedIndexTimeouts>;
}
