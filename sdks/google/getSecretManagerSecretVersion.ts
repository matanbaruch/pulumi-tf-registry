// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecretManagerSecretVersion(args: GetSecretManagerSecretVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretManagerSecretVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getSecretManagerSecretVersion:getSecretManagerSecretVersion", {
        "id": args.id,
        "project": args.project,
        "secret": args.secret,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretManagerSecretVersion.
 */
export interface GetSecretManagerSecretVersionArgs {
    id?: string;
    project?: string;
    secret: string;
    version?: string;
}

/**
 * A collection of values returned by getSecretManagerSecretVersion.
 */
export interface GetSecretManagerSecretVersionResult {
    readonly createTime: string;
    readonly destroyTime: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly project: string;
    readonly secret: string;
    readonly secretData: string;
    readonly version: string;
}
export function getSecretManagerSecretVersionOutput(args: GetSecretManagerSecretVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretManagerSecretVersionResult> {
    return pulumi.output(args).apply((a: any) => getSecretManagerSecretVersion(a, opts))
}

/**
 * A collection of arguments for invoking getSecretManagerSecretVersion.
 */
export interface GetSecretManagerSecretVersionOutputArgs {
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
