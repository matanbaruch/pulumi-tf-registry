// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApigeeInstance extends pulumi.CustomResource {
    /**
     * Get an existing ApigeeInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigeeInstanceState, opts?: pulumi.CustomResourceOptions): ApigeeInstance {
        return new ApigeeInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/apigeeInstance:ApigeeInstance';

    /**
     * Returns true if the given object is an instance of ApigeeInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigeeInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigeeInstance.__pulumiType;
    }

    /**
     * Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
     * to the service attachment. It is an optional field which the customers can provide during the instance creation. By
     * default, the customer project associated with the Apigee organization will be included to the list.
     */
    public readonly consumerAcceptLists!: pulumi.Output<string[]>;
    /**
     * Description of the instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
     * Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
     */
    public readonly diskEncryptionKeyName!: pulumi.Output<string | undefined>;
    /**
     * Display name of the instance.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
     */
    public /*out*/ readonly host!: pulumi.Output<string>;
    /**
     * IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
     * This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
     * the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
     * block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
     * traffic from Apigee. Input format: "a.b.c.d/22"
     */
    public readonly ipRange!: pulumi.Output<string | undefined>;
    /**
     * Required. Compute Engine location where the instance resides.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource ID of the instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
     */
    public readonly orgId!: pulumi.Output<string>;
    /**
     * The size of the CIDR block range that will be reserved by the instance. For valid values, see
     * [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
     * documentation.
     */
    public readonly peeringCidrRange!: pulumi.Output<string>;
    /**
     * Output only. Port number of the exposed Apigee endpoint.
     */
    public /*out*/ readonly port!: pulumi.Output<string>;
    /**
     * Output only. Resource name of the service attachment created for the instance in the format:
     * projects/*&#47;regions/*&#47;serviceAttachments/* Apigee customers can privately forward traffic to this service attachment
     * using the PSC endpoints.
     */
    public /*out*/ readonly serviceAttachment!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApigeeInstanceTimeouts | undefined>;

    /**
     * Create a ApigeeInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigeeInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigeeInstanceArgs | ApigeeInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigeeInstanceState | undefined;
            resourceInputs["consumerAcceptLists"] = state ? state.consumerAcceptLists : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["diskEncryptionKeyName"] = state ? state.diskEncryptionKeyName : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["ipRange"] = state ? state.ipRange : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["peeringCidrRange"] = state ? state.peeringCidrRange : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["serviceAttachment"] = state ? state.serviceAttachment : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ApigeeInstanceArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            resourceInputs["consumerAcceptLists"] = args ? args.consumerAcceptLists : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["diskEncryptionKeyName"] = args ? args.diskEncryptionKeyName : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["ipRange"] = args ? args.ipRange : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["peeringCidrRange"] = args ? args.peeringCidrRange : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["host"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["serviceAttachment"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigeeInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApigeeInstance resources.
 */
export interface ApigeeInstanceState {
    /**
     * Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
     * to the service attachment. It is an optional field which the customers can provide during the instance creation. By
     * default, the customer project associated with the Apigee organization will be included to the list.
     */
    consumerAcceptLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
     * Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
     */
    diskEncryptionKeyName?: pulumi.Input<string>;
    /**
     * Display name of the instance.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
     */
    host?: pulumi.Input<string>;
    /**
     * IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
     * This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
     * the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
     * block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
     * traffic from Apigee. Input format: "a.b.c.d/22"
     */
    ipRange?: pulumi.Input<string>;
    /**
     * Required. Compute Engine location where the instance resides.
     */
    location?: pulumi.Input<string>;
    /**
     * Resource ID of the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The size of the CIDR block range that will be reserved by the instance. For valid values, see
     * [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
     * documentation.
     */
    peeringCidrRange?: pulumi.Input<string>;
    /**
     * Output only. Port number of the exposed Apigee endpoint.
     */
    port?: pulumi.Input<string>;
    /**
     * Output only. Resource name of the service attachment created for the instance in the format:
     * projects/*&#47;regions/*&#47;serviceAttachments/* Apigee customers can privately forward traffic to this service attachment
     * using the PSC endpoints.
     */
    serviceAttachment?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeInstanceTimeouts>;
}

/**
 * The set of arguments for constructing a ApigeeInstance resource.
 */
export interface ApigeeInstanceArgs {
    /**
     * Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
     * to the service attachment. It is an optional field which the customers can provide during the instance creation. By
     * default, the customer project associated with the Apigee organization will be included to the list.
     */
    consumerAcceptLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
     * Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
     */
    diskEncryptionKeyName?: pulumi.Input<string>;
    /**
     * Display name of the instance.
     */
    displayName?: pulumi.Input<string>;
    /**
     * IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
     * This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
     * the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
     * block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
     * traffic from Apigee. Input format: "a.b.c.d/22"
     */
    ipRange?: pulumi.Input<string>;
    /**
     * Required. Compute Engine location where the instance resides.
     */
    location: pulumi.Input<string>;
    /**
     * Resource ID of the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
     */
    orgId: pulumi.Input<string>;
    /**
     * The size of the CIDR block range that will be reserved by the instance. For valid values, see
     * [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
     * documentation.
     */
    peeringCidrRange?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeInstanceTimeouts>;
}
