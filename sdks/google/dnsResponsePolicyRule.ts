// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DnsResponsePolicyRule extends pulumi.CustomResource {
    /**
     * Get an existing DnsResponsePolicyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsResponsePolicyRuleState, opts?: pulumi.CustomResourceOptions): DnsResponsePolicyRule {
        return new DnsResponsePolicyRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/dnsResponsePolicyRule:DnsResponsePolicyRule';

    /**
     * Returns true if the given object is an instance of DnsResponsePolicyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsResponsePolicyRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsResponsePolicyRule.__pulumiType;
    }

    /**
     * The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
     */
    public readonly dnsName!: pulumi.Output<string>;
    /**
     * Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
     * in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
     */
    public readonly localData!: pulumi.Output<outputs.DnsResponsePolicyRuleLocalData | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Identifies the response policy addressed by this request.
     */
    public readonly responsePolicy!: pulumi.Output<string>;
    /**
     * An identifier for this rule. Must be unique with the ResponsePolicy.
     */
    public readonly ruleName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DnsResponsePolicyRuleTimeouts | undefined>;

    /**
     * Create a DnsResponsePolicyRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsResponsePolicyRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsResponsePolicyRuleArgs | DnsResponsePolicyRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsResponsePolicyRuleState | undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["localData"] = state ? state.localData : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["responsePolicy"] = state ? state.responsePolicy : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DnsResponsePolicyRuleArgs | undefined;
            if ((!args || args.dnsName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dnsName'");
            }
            if ((!args || args.responsePolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'responsePolicy'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["dnsName"] = args ? args.dnsName : undefined;
            resourceInputs["localData"] = args ? args.localData : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["responsePolicy"] = args ? args.responsePolicy : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsResponsePolicyRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnsResponsePolicyRule resources.
 */
export interface DnsResponsePolicyRuleState {
    /**
     * The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
     */
    dnsName?: pulumi.Input<string>;
    /**
     * Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
     * in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
     */
    localData?: pulumi.Input<inputs.DnsResponsePolicyRuleLocalData>;
    project?: pulumi.Input<string>;
    /**
     * Identifies the response policy addressed by this request.
     */
    responsePolicy?: pulumi.Input<string>;
    /**
     * An identifier for this rule. Must be unique with the ResponsePolicy.
     */
    ruleName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DnsResponsePolicyRuleTimeouts>;
}

/**
 * The set of arguments for constructing a DnsResponsePolicyRule resource.
 */
export interface DnsResponsePolicyRuleArgs {
    /**
     * The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
     */
    dnsName: pulumi.Input<string>;
    /**
     * Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
     * in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
     */
    localData?: pulumi.Input<inputs.DnsResponsePolicyRuleLocalData>;
    project?: pulumi.Input<string>;
    /**
     * Identifies the response policy addressed by this request.
     */
    responsePolicy: pulumi.Input<string>;
    /**
     * An identifier for this rule. Must be unique with the ResponsePolicy.
     */
    ruleName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DnsResponsePolicyRuleTimeouts>;
}
