// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CertificateManagerCertificateMapEntry extends pulumi.CustomResource {
    /**
     * Get an existing CertificateManagerCertificateMapEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateManagerCertificateMapEntryState, opts?: pulumi.CustomResourceOptions): CertificateManagerCertificateMapEntry {
        return new CertificateManagerCertificateMapEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/certificateManagerCertificateMapEntry:CertificateManagerCertificateMapEntry';

    /**
     * Returns true if the given object is an instance of CertificateManagerCertificateMapEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CertificateManagerCertificateMapEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateManagerCertificateMapEntry.__pulumiType;
    }

    /**
     * A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
     * Certificate Map Entry. Each certificate must match pattern projects/*&#47;locations/*&#47;certificates/*.
     */
    public readonly certificates!: pulumi.Output<string[]>;
    /**
     * Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
     * to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A human-readable description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
     * suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
     */
    public readonly hostname!: pulumi.Output<string | undefined>;
    /**
     * Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
     * "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A map entry that is inputted into the cetrificate map
     */
    public readonly map!: pulumi.Output<string>;
    /**
     * A predefined matcher for particular cases, other than SNI selection
     */
    public readonly matcher!: pulumi.Output<string | undefined>;
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
     * 'projects/*&#47;locations/*&#47;certificateMaps/*&#47;certificateMapEntries/*'
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * A serving state of this Certificate Map Entry.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.CertificateManagerCertificateMapEntryTimeouts | undefined>;
    /**
     * Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
     * to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a CertificateManagerCertificateMapEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateManagerCertificateMapEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateManagerCertificateMapEntryArgs | CertificateManagerCertificateMapEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateManagerCertificateMapEntryState | undefined;
            resourceInputs["certificates"] = state ? state.certificates : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["map"] = state ? state.map : undefined;
            resourceInputs["matcher"] = state ? state.matcher : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as CertificateManagerCertificateMapEntryArgs | undefined;
            if ((!args || args.certificates === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificates'");
            }
            if ((!args || args.map === undefined) && !opts.urn) {
                throw new Error("Missing required property 'map'");
            }
            resourceInputs["certificates"] = args ? args.certificates : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["map"] = args ? args.map : undefined;
            resourceInputs["matcher"] = args ? args.matcher : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CertificateManagerCertificateMapEntry.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CertificateManagerCertificateMapEntry resources.
 */
export interface CertificateManagerCertificateMapEntryState {
    /**
     * A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
     * Certificate Map Entry. Each certificate must match pattern projects/*&#47;locations/*&#47;certificates/*.
     */
    certificates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
     * to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
     * suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
     * "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map entry that is inputted into the cetrificate map
     */
    map?: pulumi.Input<string>;
    /**
     * A predefined matcher for particular cases, other than SNI selection
     */
    matcher?: pulumi.Input<string>;
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
     * 'projects/*&#47;locations/*&#47;certificateMaps/*&#47;certificateMapEntries/*'
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * A serving state of this Certificate Map Entry.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CertificateManagerCertificateMapEntryTimeouts>;
    /**
     * Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
     * to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CertificateManagerCertificateMapEntry resource.
 */
export interface CertificateManagerCertificateMapEntryArgs {
    /**
     * A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
     * Certificate Map Entry. Each certificate must match pattern projects/*&#47;locations/*&#47;certificates/*.
     */
    certificates: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
     * suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
     * "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map entry that is inputted into the cetrificate map
     */
    map: pulumi.Input<string>;
    /**
     * A predefined matcher for particular cases, other than SNI selection
     */
    matcher?: pulumi.Input<string>;
    /**
     * A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
     * 'projects/*&#47;locations/*&#47;certificateMaps/*&#47;certificateMapEntries/*'
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CertificateManagerCertificateMapEntryTimeouts>;
}
