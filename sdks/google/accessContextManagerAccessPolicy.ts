// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AccessContextManagerAccessPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AccessContextManagerAccessPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessContextManagerAccessPolicyState, opts?: pulumi.CustomResourceOptions): AccessContextManagerAccessPolicy {
        return new AccessContextManagerAccessPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/accessContextManagerAccessPolicy:AccessContextManagerAccessPolicy';

    /**
     * Returns true if the given object is an instance of AccessContextManagerAccessPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessContextManagerAccessPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessContextManagerAccessPolicy.__pulumiType;
    }

    /**
     * Time the AccessPolicy was created in UTC.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Resource name of the AccessPolicy. Format: '{{policy_id}}'
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
     */
    public readonly scopes!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AccessContextManagerAccessPolicyTimeouts | undefined>;
    /**
     * Human readable title. Does not affect behavior.
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Time the AccessPolicy was updated in UTC.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AccessContextManagerAccessPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessContextManagerAccessPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessContextManagerAccessPolicyArgs | AccessContextManagerAccessPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessContextManagerAccessPolicyState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["scopes"] = state ? state.scopes : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AccessContextManagerAccessPolicyArgs | undefined;
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessContextManagerAccessPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AccessContextManagerAccessPolicy resources.
 */
export interface AccessContextManagerAccessPolicyState {
    /**
     * Time the AccessPolicy was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Resource name of the AccessPolicy. Format: '{{policy_id}}'
     */
    name?: pulumi.Input<string>;
    /**
     * The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
     */
    parent?: pulumi.Input<string>;
    /**
     * Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.AccessContextManagerAccessPolicyTimeouts>;
    /**
     * Human readable title. Does not affect behavior.
     */
    title?: pulumi.Input<string>;
    /**
     * Time the AccessPolicy was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessContextManagerAccessPolicy resource.
 */
export interface AccessContextManagerAccessPolicyArgs {
    /**
     * The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
     */
    parent: pulumi.Input<string>;
    /**
     * Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.AccessContextManagerAccessPolicyTimeouts>;
    /**
     * Human readable title. Does not affect behavior.
     */
    title: pulumi.Input<string>;
}
