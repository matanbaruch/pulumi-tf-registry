// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeBackendBucket(args: GetComputeBackendBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeBackendBucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getComputeBackendBucket:getComputeBackendBucket", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeBackendBucket.
 */
export interface GetComputeBackendBucketArgs {
    id?: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getComputeBackendBucket.
 */
export interface GetComputeBackendBucketResult {
    readonly bucketName: string;
    readonly cdnPolicies: outputs.GetComputeBackendBucketCdnPolicy[];
    readonly compressionMode: string;
    readonly creationTimestamp: string;
    readonly customResponseHeaders: string[];
    readonly description: string;
    readonly edgeSecurityPolicy: string;
    readonly enableCdn: boolean;
    readonly id: string;
    readonly name: string;
    readonly project?: string;
    readonly selfLink: string;
}
export function getComputeBackendBucketOutput(args: GetComputeBackendBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeBackendBucketResult> {
    return pulumi.output(args).apply((a: any) => getComputeBackendBucket(a, opts))
}

/**
 * A collection of arguments for invoking getComputeBackendBucket.
 */
export interface GetComputeBackendBucketOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
