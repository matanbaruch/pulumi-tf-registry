// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IdentityPlatformDefaultSupportedIdpConfig extends pulumi.CustomResource {
    /**
     * Get an existing IdentityPlatformDefaultSupportedIdpConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityPlatformDefaultSupportedIdpConfigState, opts?: pulumi.CustomResourceOptions): IdentityPlatformDefaultSupportedIdpConfig {
        return new IdentityPlatformDefaultSupportedIdpConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/identityPlatformDefaultSupportedIdpConfig:IdentityPlatformDefaultSupportedIdpConfig';

    /**
     * Returns true if the given object is an instance of IdentityPlatformDefaultSupportedIdpConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityPlatformDefaultSupportedIdpConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityPlatformDefaultSupportedIdpConfig.__pulumiType;
    }

    /**
     * OAuth client ID
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * OAuth client secret
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * If this IDP allows the user to sign in
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
     * 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
     */
    public readonly idpId!: pulumi.Output<string>;
    /**
     * The name of the DefaultSupportedIdpConfig resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.IdentityPlatformDefaultSupportedIdpConfigTimeouts | undefined>;

    /**
     * Create a IdentityPlatformDefaultSupportedIdpConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityPlatformDefaultSupportedIdpConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityPlatformDefaultSupportedIdpConfigArgs | IdentityPlatformDefaultSupportedIdpConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityPlatformDefaultSupportedIdpConfigState | undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["idpId"] = state ? state.idpId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as IdentityPlatformDefaultSupportedIdpConfigArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if ((!args || args.idpId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idpId'");
            }
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args ? args.clientSecret : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["idpId"] = args ? args.idpId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IdentityPlatformDefaultSupportedIdpConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IdentityPlatformDefaultSupportedIdpConfig resources.
 */
export interface IdentityPlatformDefaultSupportedIdpConfigState {
    /**
     * OAuth client ID
     */
    clientId?: pulumi.Input<string>;
    /**
     * OAuth client secret
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * If this IDP allows the user to sign in
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
     * 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
     */
    idpId?: pulumi.Input<string>;
    /**
     * The name of the DefaultSupportedIdpConfig resource
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IdentityPlatformDefaultSupportedIdpConfigTimeouts>;
}

/**
 * The set of arguments for constructing a IdentityPlatformDefaultSupportedIdpConfig resource.
 */
export interface IdentityPlatformDefaultSupportedIdpConfigArgs {
    /**
     * OAuth client ID
     */
    clientId: pulumi.Input<string>;
    /**
     * OAuth client secret
     */
    clientSecret: pulumi.Input<string>;
    /**
     * If this IDP allows the user to sign in
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
     * 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
     */
    idpId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IdentityPlatformDefaultSupportedIdpConfigTimeouts>;
}
