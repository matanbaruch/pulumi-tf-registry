// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSpannerInstanceIamPolicy(args: GetSpannerInstanceIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSpannerInstanceIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getSpannerInstanceIamPolicy:getSpannerInstanceIamPolicy", {
        "id": args.id,
        "instance": args.instance,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpannerInstanceIamPolicy.
 */
export interface GetSpannerInstanceIamPolicyArgs {
    id?: string;
    instance: string;
    project?: string;
}

/**
 * A collection of values returned by getSpannerInstanceIamPolicy.
 */
export interface GetSpannerInstanceIamPolicyResult {
    readonly etag: string;
    readonly id: string;
    readonly instance: string;
    readonly policyData: string;
    readonly project: string;
}
export function getSpannerInstanceIamPolicyOutput(args: GetSpannerInstanceIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpannerInstanceIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getSpannerInstanceIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSpannerInstanceIamPolicy.
 */
export interface GetSpannerInstanceIamPolicyOutputArgs {
    id?: pulumi.Input<string>;
    instance: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
