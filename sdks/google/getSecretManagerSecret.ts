// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecretManagerSecret(args: GetSecretManagerSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretManagerSecretResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getSecretManagerSecret:getSecretManagerSecret", {
        "id": args.id,
        "project": args.project,
        "secretId": args.secretId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretManagerSecret.
 */
export interface GetSecretManagerSecretArgs {
    id?: string;
    project?: string;
    secretId: string;
}

/**
 * A collection of values returned by getSecretManagerSecret.
 */
export interface GetSecretManagerSecretResult {
    readonly annotations: {[key: string]: string};
    readonly createTime: string;
    readonly effectiveAnnotations: {[key: string]: string};
    readonly effectiveLabels: {[key: string]: string};
    readonly expireTime: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly project?: string;
    readonly replications: outputs.GetSecretManagerSecretReplication[];
    readonly rotations: outputs.GetSecretManagerSecretRotation[];
    readonly secretId: string;
    readonly terraformLabels: {[key: string]: string};
    readonly topics: outputs.GetSecretManagerSecretTopic[];
    readonly ttl: string;
    readonly versionAliases: {[key: string]: string};
    readonly versionDestroyTtl: string;
}
export function getSecretManagerSecretOutput(args: GetSecretManagerSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretManagerSecretResult> {
    return pulumi.output(args).apply((a: any) => getSecretManagerSecret(a, opts))
}

/**
 * A collection of arguments for invoking getSecretManagerSecret.
 */
export interface GetSecretManagerSecretOutputArgs {
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    secretId: pulumi.Input<string>;
}
