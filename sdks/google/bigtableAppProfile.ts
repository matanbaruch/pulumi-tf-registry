// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BigtableAppProfile extends pulumi.CustomResource {
    /**
     * Get an existing BigtableAppProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BigtableAppProfileState, opts?: pulumi.CustomResourceOptions): BigtableAppProfile {
        return new BigtableAppProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/bigtableAppProfile:BigtableAppProfile';

    /**
     * Returns true if the given object is an instance of BigtableAppProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BigtableAppProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BigtableAppProfile.__pulumiType;
    }

    /**
     * The unique name of the app profile in the form '[_a-zA-Z0-9][-_.a-zA-Z0-9]*'.
     */
    public readonly appProfileId!: pulumi.Output<string>;
    /**
     * Specifies that this app profile is intended for read-only usage via the Data Boost feature.
     */
    public readonly dataBoostIsolationReadOnly!: pulumi.Output<outputs.BigtableAppProfileDataBoostIsolationReadOnly | undefined>;
    /**
     * Long form description of the use case for this app profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * If true, ignore safety checks when deleting/updating the app profile.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the instance to create the app profile within.
     */
    public readonly instance!: pulumi.Output<string | undefined>;
    /**
     * The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all
     * clusters are eligible.
     */
    public readonly multiClusterRoutingClusterIds!: pulumi.Output<string[] | undefined>;
    /**
     * If true, read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest
     * cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant.
     * Choosing this option sacrifices read-your-writes consistency to improve availability.
     */
    public readonly multiClusterRoutingUseAny!: pulumi.Output<boolean | undefined>;
    /**
     * The unique name of the requested app profile. Values are of the form
     * 'projects/<project>/instances/<instance>/appProfiles/<appProfileId>'.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Use a single-cluster routing policy.
     */
    public readonly singleClusterRouting!: pulumi.Output<outputs.BigtableAppProfileSingleClusterRouting | undefined>;
    /**
     * The standard options used for isolating this app profile's traffic from other use cases.
     */
    public readonly standardIsolation!: pulumi.Output<outputs.BigtableAppProfileStandardIsolation | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.BigtableAppProfileTimeouts | undefined>;

    /**
     * Create a BigtableAppProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BigtableAppProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BigtableAppProfileArgs | BigtableAppProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BigtableAppProfileState | undefined;
            resourceInputs["appProfileId"] = state ? state.appProfileId : undefined;
            resourceInputs["dataBoostIsolationReadOnly"] = state ? state.dataBoostIsolationReadOnly : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["instance"] = state ? state.instance : undefined;
            resourceInputs["multiClusterRoutingClusterIds"] = state ? state.multiClusterRoutingClusterIds : undefined;
            resourceInputs["multiClusterRoutingUseAny"] = state ? state.multiClusterRoutingUseAny : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["singleClusterRouting"] = state ? state.singleClusterRouting : undefined;
            resourceInputs["standardIsolation"] = state ? state.standardIsolation : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BigtableAppProfileArgs | undefined;
            if ((!args || args.appProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appProfileId'");
            }
            resourceInputs["appProfileId"] = args ? args.appProfileId : undefined;
            resourceInputs["dataBoostIsolationReadOnly"] = args ? args.dataBoostIsolationReadOnly : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["multiClusterRoutingClusterIds"] = args ? args.multiClusterRoutingClusterIds : undefined;
            resourceInputs["multiClusterRoutingUseAny"] = args ? args.multiClusterRoutingUseAny : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["singleClusterRouting"] = args ? args.singleClusterRouting : undefined;
            resourceInputs["standardIsolation"] = args ? args.standardIsolation : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BigtableAppProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BigtableAppProfile resources.
 */
export interface BigtableAppProfileState {
    /**
     * The unique name of the app profile in the form '[_a-zA-Z0-9][-_.a-zA-Z0-9]*'.
     */
    appProfileId?: pulumi.Input<string>;
    /**
     * Specifies that this app profile is intended for read-only usage via the Data Boost feature.
     */
    dataBoostIsolationReadOnly?: pulumi.Input<inputs.BigtableAppProfileDataBoostIsolationReadOnly>;
    /**
     * Long form description of the use case for this app profile.
     */
    description?: pulumi.Input<string>;
    /**
     * If true, ignore safety checks when deleting/updating the app profile.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * The name of the instance to create the app profile within.
     */
    instance?: pulumi.Input<string>;
    /**
     * The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all
     * clusters are eligible.
     */
    multiClusterRoutingClusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest
     * cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant.
     * Choosing this option sacrifices read-your-writes consistency to improve availability.
     */
    multiClusterRoutingUseAny?: pulumi.Input<boolean>;
    /**
     * The unique name of the requested app profile. Values are of the form
     * 'projects/<project>/instances/<instance>/appProfiles/<appProfileId>'.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Use a single-cluster routing policy.
     */
    singleClusterRouting?: pulumi.Input<inputs.BigtableAppProfileSingleClusterRouting>;
    /**
     * The standard options used for isolating this app profile's traffic from other use cases.
     */
    standardIsolation?: pulumi.Input<inputs.BigtableAppProfileStandardIsolation>;
    timeouts?: pulumi.Input<inputs.BigtableAppProfileTimeouts>;
}

/**
 * The set of arguments for constructing a BigtableAppProfile resource.
 */
export interface BigtableAppProfileArgs {
    /**
     * The unique name of the app profile in the form '[_a-zA-Z0-9][-_.a-zA-Z0-9]*'.
     */
    appProfileId: pulumi.Input<string>;
    /**
     * Specifies that this app profile is intended for read-only usage via the Data Boost feature.
     */
    dataBoostIsolationReadOnly?: pulumi.Input<inputs.BigtableAppProfileDataBoostIsolationReadOnly>;
    /**
     * Long form description of the use case for this app profile.
     */
    description?: pulumi.Input<string>;
    /**
     * If true, ignore safety checks when deleting/updating the app profile.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * The name of the instance to create the app profile within.
     */
    instance?: pulumi.Input<string>;
    /**
     * The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all
     * clusters are eligible.
     */
    multiClusterRoutingClusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest
     * cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant.
     * Choosing this option sacrifices read-your-writes consistency to improve availability.
     */
    multiClusterRoutingUseAny?: pulumi.Input<boolean>;
    project?: pulumi.Input<string>;
    /**
     * Use a single-cluster routing policy.
     */
    singleClusterRouting?: pulumi.Input<inputs.BigtableAppProfileSingleClusterRouting>;
    /**
     * The standard options used for isolating this app profile's traffic from other use cases.
     */
    standardIsolation?: pulumi.Input<inputs.BigtableAppProfileStandardIsolation>;
    timeouts?: pulumi.Input<inputs.BigtableAppProfileTimeouts>;
}
