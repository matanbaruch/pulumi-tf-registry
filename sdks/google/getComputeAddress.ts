// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeAddress(args: GetComputeAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeAddressResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getComputeAddress:getComputeAddress", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeAddress.
 */
export interface GetComputeAddressArgs {
    id?: string;
    name: string;
    project?: string;
    region?: string;
}

/**
 * A collection of values returned by getComputeAddress.
 */
export interface GetComputeAddressResult {
    readonly address: string;
    readonly addressType: string;
    readonly id: string;
    readonly name: string;
    readonly network: string;
    readonly networkTier: string;
    readonly prefixLength: number;
    readonly project: string;
    readonly purpose: string;
    readonly region: string;
    readonly selfLink: string;
    readonly status: string;
    readonly subnetwork: string;
    readonly users: string;
}
export function getComputeAddressOutput(args: GetComputeAddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeAddressResult> {
    return pulumi.output(args).apply((a: any) => getComputeAddress(a, opts))
}

/**
 * A collection of arguments for invoking getComputeAddress.
 */
export interface GetComputeAddressOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
