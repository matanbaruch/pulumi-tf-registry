// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeSubnetwork extends pulumi.CustomResource {
    /**
     * Get an existing ComputeSubnetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeSubnetworkState, opts?: pulumi.CustomResourceOptions): ComputeSubnetwork {
        return new ComputeSubnetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/computeSubnetwork:ComputeSubnetwork';

    /**
     * Returns true if the given object is an instance of ComputeSubnetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeSubnetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeSubnetwork.__pulumiType;
    }

    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource. This field can be set only
     * at resource creation time.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The range of external IPv6 addresses that are owned by this subnetwork.
     */
    public readonly externalIpv6Prefix!: pulumi.Output<string>;
    /**
     * Fingerprint of this resource. This field is used internally during updates of this resource.
     *
     * @deprecated Deprecated
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * The gateway address for default routes to reach destination addresses outside this subnetwork.
     */
    public /*out*/ readonly gatewayAddress!: pulumi.Output<string>;
    /**
     * The internal IPv6 address range that is assigned to this subnetwork.
     */
    public /*out*/ readonly internalIpv6Prefix!: pulumi.Output<string>;
    /**
     * The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork.
     * For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is
     * supported. Field is optional when 'reserved_internal_range' is defined, otherwise required.
     */
    public readonly ipCidrRange!: pulumi.Output<string>;
    /**
     * The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first
     * time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet cannot enable direct
     * path. Possible values: ["EXTERNAL", "INTERNAL"]
     */
    public readonly ipv6AccessType!: pulumi.Output<string | undefined>;
    /**
     * The range of internal IPv6 addresses that are owned by this subnetwork.
     */
    public /*out*/ readonly ipv6CidrRange!: pulumi.Output<string>;
    /**
     * This field denotes the VPC flow logging options for this subnetwork. If logging is enabled, logs are exported to Cloud
     * Logging. Flow logging isn't supported if the subnet 'purpose' field is set to subnetwork is 'REGIONAL_MANAGED_PROXY' or
     * 'GLOBAL_MANAGED_PROXY'.
     */
    public readonly logConfig!: pulumi.Output<outputs.ComputeSubnetworkLogConfig | undefined>;
    /**
     * The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters
     * long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
     * 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The network this subnet belongs to. Only networks that are in the distributed mode can have subnetworks.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * When enabled, VMs in this subnetwork without external IP addresses can access Google APIs and services by using Private
     * Google Access.
     */
    public readonly privateIpGoogleAccess!: pulumi.Output<boolean>;
    /**
     * The private IPv6 google access type for the VMs in this subnet.
     */
    public readonly privateIpv6GoogleAccess!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly purpose!: pulumi.Output<string>;
    /**
     * The GCP region for this subnetwork.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The ID of the reserved internal range. Must be prefixed with 'networkconnectivity.googleapis.com' E.g.
     * 'networkconnectivity.googleapis.com/projects/{project}/locations/global/internalRanges/{rangeId}'
     */
    public readonly reservedInternalRange!: pulumi.Output<string | undefined>;
    /**
     * The role of subnetwork. Currently, this field is only used when 'purpose' is 'REGIONAL_MANAGED_PROXY'. The value can be
     * set to 'ACTIVE' or 'BACKUP'. An 'ACTIVE' subnetwork is one that is currently being used for Envoy-based load balancers
     * in a region. A 'BACKUP' subnetwork is one that is ready to be promoted to 'ACTIVE' or is currently draining. Possible
     * values: ["ACTIVE", "BACKUP"]
     */
    public readonly role!: pulumi.Output<string | undefined>;
    public readonly secondaryIpRanges!: pulumi.Output<outputs.ComputeSubnetworkSecondaryIpRange[] | undefined>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Controls the removal behavior of secondary_ip_range. When false, removing secondary_ip_range from config will not
     * produce a diff as the provider will default to the API's value. When true, the provider will treat removing
     * secondary_ip_range as sending an empty list of secondary IP ranges to the API. Defaults to false.
     */
    public readonly sendSecondaryIpRangeIfEmpty!: pulumi.Output<boolean | undefined>;
    /**
     * The stack type for this subnet to identify whether the IPv6 feature is enabled or not. If not specified IPV4_ONLY will
     * be used. Possible values: ["IPV4_ONLY", "IPV4_IPV6"]
     */
    public readonly stackType!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeSubnetworkTimeouts | undefined>;

    /**
     * Create a ComputeSubnetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeSubnetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeSubnetworkArgs | ComputeSubnetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeSubnetworkState | undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["externalIpv6Prefix"] = state ? state.externalIpv6Prefix : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["gatewayAddress"] = state ? state.gatewayAddress : undefined;
            resourceInputs["internalIpv6Prefix"] = state ? state.internalIpv6Prefix : undefined;
            resourceInputs["ipCidrRange"] = state ? state.ipCidrRange : undefined;
            resourceInputs["ipv6AccessType"] = state ? state.ipv6AccessType : undefined;
            resourceInputs["ipv6CidrRange"] = state ? state.ipv6CidrRange : undefined;
            resourceInputs["logConfig"] = state ? state.logConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["privateIpGoogleAccess"] = state ? state.privateIpGoogleAccess : undefined;
            resourceInputs["privateIpv6GoogleAccess"] = state ? state.privateIpv6GoogleAccess : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["purpose"] = state ? state.purpose : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["reservedInternalRange"] = state ? state.reservedInternalRange : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["secondaryIpRanges"] = state ? state.secondaryIpRanges : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["sendSecondaryIpRangeIfEmpty"] = state ? state.sendSecondaryIpRangeIfEmpty : undefined;
            resourceInputs["stackType"] = state ? state.stackType : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ComputeSubnetworkArgs | undefined;
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["externalIpv6Prefix"] = args ? args.externalIpv6Prefix : undefined;
            resourceInputs["ipCidrRange"] = args ? args.ipCidrRange : undefined;
            resourceInputs["ipv6AccessType"] = args ? args.ipv6AccessType : undefined;
            resourceInputs["logConfig"] = args ? args.logConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["privateIpGoogleAccess"] = args ? args.privateIpGoogleAccess : undefined;
            resourceInputs["privateIpv6GoogleAccess"] = args ? args.privateIpv6GoogleAccess : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["purpose"] = args ? args.purpose : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["reservedInternalRange"] = args ? args.reservedInternalRange : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["secondaryIpRanges"] = args ? args.secondaryIpRanges : undefined;
            resourceInputs["sendSecondaryIpRangeIfEmpty"] = args ? args.sendSecondaryIpRangeIfEmpty : undefined;
            resourceInputs["stackType"] = args ? args.stackType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["gatewayAddress"] = undefined /*out*/;
            resourceInputs["internalIpv6Prefix"] = undefined /*out*/;
            resourceInputs["ipv6CidrRange"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeSubnetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeSubnetwork resources.
 */
export interface ComputeSubnetworkState {
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource. This field can be set only
     * at resource creation time.
     */
    description?: pulumi.Input<string>;
    /**
     * The range of external IPv6 addresses that are owned by this subnetwork.
     */
    externalIpv6Prefix?: pulumi.Input<string>;
    /**
     * Fingerprint of this resource. This field is used internally during updates of this resource.
     *
     * @deprecated Deprecated
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * The gateway address for default routes to reach destination addresses outside this subnetwork.
     */
    gatewayAddress?: pulumi.Input<string>;
    /**
     * The internal IPv6 address range that is assigned to this subnetwork.
     */
    internalIpv6Prefix?: pulumi.Input<string>;
    /**
     * The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork.
     * For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is
     * supported. Field is optional when 'reserved_internal_range' is defined, otherwise required.
     */
    ipCidrRange?: pulumi.Input<string>;
    /**
     * The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first
     * time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet cannot enable direct
     * path. Possible values: ["EXTERNAL", "INTERNAL"]
     */
    ipv6AccessType?: pulumi.Input<string>;
    /**
     * The range of internal IPv6 addresses that are owned by this subnetwork.
     */
    ipv6CidrRange?: pulumi.Input<string>;
    /**
     * This field denotes the VPC flow logging options for this subnetwork. If logging is enabled, logs are exported to Cloud
     * Logging. Flow logging isn't supported if the subnet 'purpose' field is set to subnetwork is 'REGIONAL_MANAGED_PROXY' or
     * 'GLOBAL_MANAGED_PROXY'.
     */
    logConfig?: pulumi.Input<inputs.ComputeSubnetworkLogConfig>;
    /**
     * The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters
     * long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
     * 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The network this subnet belongs to. Only networks that are in the distributed mode can have subnetworks.
     */
    network?: pulumi.Input<string>;
    /**
     * When enabled, VMs in this subnetwork without external IP addresses can access Google APIs and services by using Private
     * Google Access.
     */
    privateIpGoogleAccess?: pulumi.Input<boolean>;
    /**
     * The private IPv6 google access type for the VMs in this subnet.
     */
    privateIpv6GoogleAccess?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    purpose?: pulumi.Input<string>;
    /**
     * The GCP region for this subnetwork.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the reserved internal range. Must be prefixed with 'networkconnectivity.googleapis.com' E.g.
     * 'networkconnectivity.googleapis.com/projects/{project}/locations/global/internalRanges/{rangeId}'
     */
    reservedInternalRange?: pulumi.Input<string>;
    /**
     * The role of subnetwork. Currently, this field is only used when 'purpose' is 'REGIONAL_MANAGED_PROXY'. The value can be
     * set to 'ACTIVE' or 'BACKUP'. An 'ACTIVE' subnetwork is one that is currently being used for Envoy-based load balancers
     * in a region. A 'BACKUP' subnetwork is one that is ready to be promoted to 'ACTIVE' or is currently draining. Possible
     * values: ["ACTIVE", "BACKUP"]
     */
    role?: pulumi.Input<string>;
    secondaryIpRanges?: pulumi.Input<pulumi.Input<inputs.ComputeSubnetworkSecondaryIpRange>[]>;
    selfLink?: pulumi.Input<string>;
    /**
     * Controls the removal behavior of secondary_ip_range. When false, removing secondary_ip_range from config will not
     * produce a diff as the provider will default to the API's value. When true, the provider will treat removing
     * secondary_ip_range as sending an empty list of secondary IP ranges to the API. Defaults to false.
     */
    sendSecondaryIpRangeIfEmpty?: pulumi.Input<boolean>;
    /**
     * The stack type for this subnet to identify whether the IPv6 feature is enabled or not. If not specified IPV4_ONLY will
     * be used. Possible values: ["IPV4_ONLY", "IPV4_IPV6"]
     */
    stackType?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeSubnetworkTimeouts>;
}

/**
 * The set of arguments for constructing a ComputeSubnetwork resource.
 */
export interface ComputeSubnetworkArgs {
    /**
     * An optional description of this resource. Provide this property when you create the resource. This field can be set only
     * at resource creation time.
     */
    description?: pulumi.Input<string>;
    /**
     * The range of external IPv6 addresses that are owned by this subnetwork.
     */
    externalIpv6Prefix?: pulumi.Input<string>;
    /**
     * The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork.
     * For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is
     * supported. Field is optional when 'reserved_internal_range' is defined, otherwise required.
     */
    ipCidrRange?: pulumi.Input<string>;
    /**
     * The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first
     * time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet cannot enable direct
     * path. Possible values: ["EXTERNAL", "INTERNAL"]
     */
    ipv6AccessType?: pulumi.Input<string>;
    /**
     * This field denotes the VPC flow logging options for this subnetwork. If logging is enabled, logs are exported to Cloud
     * Logging. Flow logging isn't supported if the subnet 'purpose' field is set to subnetwork is 'REGIONAL_MANAGED_PROXY' or
     * 'GLOBAL_MANAGED_PROXY'.
     */
    logConfig?: pulumi.Input<inputs.ComputeSubnetworkLogConfig>;
    /**
     * The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters
     * long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
     * 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The network this subnet belongs to. Only networks that are in the distributed mode can have subnetworks.
     */
    network: pulumi.Input<string>;
    /**
     * When enabled, VMs in this subnetwork without external IP addresses can access Google APIs and services by using Private
     * Google Access.
     */
    privateIpGoogleAccess?: pulumi.Input<boolean>;
    /**
     * The private IPv6 google access type for the VMs in this subnet.
     */
    privateIpv6GoogleAccess?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    purpose?: pulumi.Input<string>;
    /**
     * The GCP region for this subnetwork.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the reserved internal range. Must be prefixed with 'networkconnectivity.googleapis.com' E.g.
     * 'networkconnectivity.googleapis.com/projects/{project}/locations/global/internalRanges/{rangeId}'
     */
    reservedInternalRange?: pulumi.Input<string>;
    /**
     * The role of subnetwork. Currently, this field is only used when 'purpose' is 'REGIONAL_MANAGED_PROXY'. The value can be
     * set to 'ACTIVE' or 'BACKUP'. An 'ACTIVE' subnetwork is one that is currently being used for Envoy-based load balancers
     * in a region. A 'BACKUP' subnetwork is one that is ready to be promoted to 'ACTIVE' or is currently draining. Possible
     * values: ["ACTIVE", "BACKUP"]
     */
    role?: pulumi.Input<string>;
    secondaryIpRanges?: pulumi.Input<pulumi.Input<inputs.ComputeSubnetworkSecondaryIpRange>[]>;
    /**
     * Controls the removal behavior of secondary_ip_range. When false, removing secondary_ip_range from config will not
     * produce a diff as the provider will default to the API's value. When true, the provider will treat removing
     * secondary_ip_range as sending an empty list of secondary IP ranges to the API. Defaults to false.
     */
    sendSecondaryIpRangeIfEmpty?: pulumi.Input<boolean>;
    /**
     * The stack type for this subnet to identify whether the IPv6 feature is enabled or not. If not specified IPV4_ONLY will
     * be used. Possible values: ["IPV4_ONLY", "IPV4_IPV6"]
     */
    stackType?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeSubnetworkTimeouts>;
}
