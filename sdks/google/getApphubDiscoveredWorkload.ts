// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApphubDiscoveredWorkload(args: GetApphubDiscoveredWorkloadArgs, opts?: pulumi.InvokeOptions): Promise<GetApphubDiscoveredWorkloadResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getApphubDiscoveredWorkload:getApphubDiscoveredWorkload", {
        "id": args.id,
        "location": args.location,
        "project": args.project,
        "workloadUri": args.workloadUri,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApphubDiscoveredWorkload.
 */
export interface GetApphubDiscoveredWorkloadArgs {
    id?: string;
    location: string;
    project?: string;
    workloadUri: string;
}

/**
 * A collection of values returned by getApphubDiscoveredWorkload.
 */
export interface GetApphubDiscoveredWorkloadResult {
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly project?: string;
    readonly workloadProperties: outputs.GetApphubDiscoveredWorkloadWorkloadProperty[];
    readonly workloadReferences: outputs.GetApphubDiscoveredWorkloadWorkloadReference[];
    readonly workloadUri: string;
}
export function getApphubDiscoveredWorkloadOutput(args: GetApphubDiscoveredWorkloadOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApphubDiscoveredWorkloadResult> {
    return pulumi.output(args).apply((a: any) => getApphubDiscoveredWorkload(a, opts))
}

/**
 * A collection of arguments for invoking getApphubDiscoveredWorkload.
 */
export interface GetApphubDiscoveredWorkloadOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    workloadUri: pulumi.Input<string>;
}
