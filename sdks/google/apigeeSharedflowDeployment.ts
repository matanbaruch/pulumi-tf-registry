// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApigeeSharedflowDeployment extends pulumi.CustomResource {
    /**
     * Get an existing ApigeeSharedflowDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigeeSharedflowDeploymentState, opts?: pulumi.CustomResourceOptions): ApigeeSharedflowDeployment {
        return new ApigeeSharedflowDeployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/apigeeSharedflowDeployment:ApigeeSharedflowDeployment';

    /**
     * Returns true if the given object is an instance of ApigeeSharedflowDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigeeSharedflowDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigeeSharedflowDeployment.__pulumiType;
    }

    /**
     * The resource ID of the environment.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the Apigee instance
     */
    public readonly orgId!: pulumi.Output<string>;
    /**
     * Revision of the Sharedflow to be deployed.
     */
    public readonly revision!: pulumi.Output<string>;
    /**
     * The service account represents the identity of the deployed proxy, and determines what permissions it has. The format
     * must be {ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com.
     */
    public readonly serviceAccount!: pulumi.Output<string | undefined>;
    /**
     * Id of the Sharedflow to be deployed.
     */
    public readonly sharedflowId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApigeeSharedflowDeploymentTimeouts | undefined>;

    /**
     * Create a ApigeeSharedflowDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigeeSharedflowDeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigeeSharedflowDeploymentArgs | ApigeeSharedflowDeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigeeSharedflowDeploymentState | undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["serviceAccount"] = state ? state.serviceAccount : undefined;
            resourceInputs["sharedflowId"] = state ? state.sharedflowId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ApigeeSharedflowDeploymentArgs | undefined;
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if ((!args || args.revision === undefined) && !opts.urn) {
                throw new Error("Missing required property 'revision'");
            }
            if ((!args || args.sharedflowId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sharedflowId'");
            }
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["revision"] = args ? args.revision : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["sharedflowId"] = args ? args.sharedflowId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigeeSharedflowDeployment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApigeeSharedflowDeployment resources.
 */
export interface ApigeeSharedflowDeploymentState {
    /**
     * The resource ID of the environment.
     */
    environment?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee instance
     */
    orgId?: pulumi.Input<string>;
    /**
     * Revision of the Sharedflow to be deployed.
     */
    revision?: pulumi.Input<string>;
    /**
     * The service account represents the identity of the deployed proxy, and determines what permissions it has. The format
     * must be {ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Id of the Sharedflow to be deployed.
     */
    sharedflowId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeSharedflowDeploymentTimeouts>;
}

/**
 * The set of arguments for constructing a ApigeeSharedflowDeployment resource.
 */
export interface ApigeeSharedflowDeploymentArgs {
    /**
     * The resource ID of the environment.
     */
    environment: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee instance
     */
    orgId: pulumi.Input<string>;
    /**
     * Revision of the Sharedflow to be deployed.
     */
    revision: pulumi.Input<string>;
    /**
     * The service account represents the identity of the deployed proxy, and determines what permissions it has. The format
     * must be {ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Id of the Sharedflow to be deployed.
     */
    sharedflowId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeSharedflowDeploymentTimeouts>;
}
