// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKmsCryptoKeyIamPolicy(args: GetKmsCryptoKeyIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsCryptoKeyIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getKmsCryptoKeyIamPolicy:getKmsCryptoKeyIamPolicy", {
        "cryptoKeyId": args.cryptoKeyId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsCryptoKeyIamPolicy.
 */
export interface GetKmsCryptoKeyIamPolicyArgs {
    cryptoKeyId: string;
    id?: string;
}

/**
 * A collection of values returned by getKmsCryptoKeyIamPolicy.
 */
export interface GetKmsCryptoKeyIamPolicyResult {
    readonly cryptoKeyId: string;
    readonly etag: string;
    readonly id: string;
    readonly policyData: string;
}
export function getKmsCryptoKeyIamPolicyOutput(args: GetKmsCryptoKeyIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsCryptoKeyIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getKmsCryptoKeyIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getKmsCryptoKeyIamPolicy.
 */
export interface GetKmsCryptoKeyIamPolicyOutputArgs {
    cryptoKeyId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
