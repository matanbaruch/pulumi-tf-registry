// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDataplexAspectTypeIamPolicy(args: GetDataplexAspectTypeIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDataplexAspectTypeIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getDataplexAspectTypeIamPolicy:getDataplexAspectTypeIamPolicy", {
        "aspectTypeId": args.aspectTypeId,
        "id": args.id,
        "location": args.location,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataplexAspectTypeIamPolicy.
 */
export interface GetDataplexAspectTypeIamPolicyArgs {
    aspectTypeId: string;
    id?: string;
    location?: string;
    project?: string;
}

/**
 * A collection of values returned by getDataplexAspectTypeIamPolicy.
 */
export interface GetDataplexAspectTypeIamPolicyResult {
    readonly aspectTypeId: string;
    readonly etag: string;
    readonly id: string;
    readonly location: string;
    readonly policyData: string;
    readonly project: string;
}
export function getDataplexAspectTypeIamPolicyOutput(args: GetDataplexAspectTypeIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataplexAspectTypeIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getDataplexAspectTypeIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getDataplexAspectTypeIamPolicy.
 */
export interface GetDataplexAspectTypeIamPolicyOutputArgs {
    aspectTypeId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
