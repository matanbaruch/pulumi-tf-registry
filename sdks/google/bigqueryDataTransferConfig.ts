// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BigqueryDataTransferConfig extends pulumi.CustomResource {
    /**
     * Get an existing BigqueryDataTransferConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BigqueryDataTransferConfigState, opts?: pulumi.CustomResourceOptions): BigqueryDataTransferConfig {
        return new BigqueryDataTransferConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/bigqueryDataTransferConfig:BigqueryDataTransferConfig';

    /**
     * Returns true if the given object is an instance of BigqueryDataTransferConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BigqueryDataTransferConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BigqueryDataTransferConfig.__pulumiType;
    }

    /**
     * The number of days to look back to automatically refresh the data. For example, if dataRefreshWindowDays = 10, then
     * every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if
     * the data source supports the feature. Set the value to 0 to use the default value.
     */
    public readonly dataRefreshWindowDays!: pulumi.Output<number | undefined>;
    /**
     * The data source id. Cannot be changed once the transfer config is created.
     */
    public readonly dataSourceId!: pulumi.Output<string>;
    /**
     * The BigQuery target dataset id.
     */
    public readonly destinationDatasetId!: pulumi.Output<string | undefined>;
    /**
     * When set to true, no runs are scheduled for a given transfer.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * The user specified display name for the transfer config.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Email notifications will be sent according to these preferences to the email address of the user who owns this transfer
     * config.
     */
    public readonly emailPreferences!: pulumi.Output<outputs.BigqueryDataTransferConfigEmailPreferences | undefined>;
    /**
     * Represents the encryption configuration for a transfer.
     */
    public readonly encryptionConfiguration!: pulumi.Output<outputs.BigqueryDataTransferConfigEncryptionConfiguration | undefined>;
    /**
     * The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
     * US.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The resource name of the transfer config. Transfer config names have the form
     * projects/{projectId}/locations/{location}/transferConfigs/{configId} or projects/{projectId}/transferConfigs/{configId},
     * where configId is usually a uuid, but this is not required. The name is ignored when creating a transfer config.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish.
     */
    public readonly notificationPubsubTopic!: pulumi.Output<string | undefined>;
    public readonly params!: pulumi.Output<{[key: string]: string}>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the
     * default value for the data source will be used. The specified times are in UTC. Examples of valid format: 1st,3rd monday
     * of month 15:30, every wed,fri of jan, jun 13:15, and first sunday of quarter 00:00. See more explanation about the
     * format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format
     * NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for
     * your data source.
     */
    public readonly schedule!: pulumi.Output<string | undefined>;
    /**
     * Options customizing the data transfer schedule.
     */
    public readonly scheduleOptions!: pulumi.Output<outputs.BigqueryDataTransferConfigScheduleOptions | undefined>;
    /**
     * Different parameters are configured primarily using the the 'params' field on this resource. This block contains the
     * parameters which contain secrets or passwords so that they can be marked sensitive and hidden from plan output. The name
     * of the field, eg: secret_access_key, will be the key in the 'params' map in the api request. Credentials may not be
     * specified in both locations and will cause an error. Changing from one location to a different credential configuration
     * in the config will require an apply to update state.
     */
    public readonly sensitiveParams!: pulumi.Output<outputs.BigqueryDataTransferConfigSensitiveParams | undefined>;
    /**
     * Service account email. If this field is set, transfer config will be created with this service account credentials. It
     * requires that requesting user calling this API has permissions to act as this service account.
     */
    public readonly serviceAccountName!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.BigqueryDataTransferConfigTimeouts | undefined>;

    /**
     * Create a BigqueryDataTransferConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BigqueryDataTransferConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BigqueryDataTransferConfigArgs | BigqueryDataTransferConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BigqueryDataTransferConfigState | undefined;
            resourceInputs["dataRefreshWindowDays"] = state ? state.dataRefreshWindowDays : undefined;
            resourceInputs["dataSourceId"] = state ? state.dataSourceId : undefined;
            resourceInputs["destinationDatasetId"] = state ? state.destinationDatasetId : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["emailPreferences"] = state ? state.emailPreferences : undefined;
            resourceInputs["encryptionConfiguration"] = state ? state.encryptionConfiguration : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notificationPubsubTopic"] = state ? state.notificationPubsubTopic : undefined;
            resourceInputs["params"] = state ? state.params : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["scheduleOptions"] = state ? state.scheduleOptions : undefined;
            resourceInputs["sensitiveParams"] = state ? state.sensitiveParams : undefined;
            resourceInputs["serviceAccountName"] = state ? state.serviceAccountName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BigqueryDataTransferConfigArgs | undefined;
            if ((!args || args.dataSourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataSourceId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.params === undefined) && !opts.urn) {
                throw new Error("Missing required property 'params'");
            }
            resourceInputs["dataRefreshWindowDays"] = args ? args.dataRefreshWindowDays : undefined;
            resourceInputs["dataSourceId"] = args ? args.dataSourceId : undefined;
            resourceInputs["destinationDatasetId"] = args ? args.destinationDatasetId : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["emailPreferences"] = args ? args.emailPreferences : undefined;
            resourceInputs["encryptionConfiguration"] = args ? args.encryptionConfiguration : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["notificationPubsubTopic"] = args ? args.notificationPubsubTopic : undefined;
            resourceInputs["params"] = args ? args.params : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["scheduleOptions"] = args ? args.scheduleOptions : undefined;
            resourceInputs["sensitiveParams"] = args ? args.sensitiveParams : undefined;
            resourceInputs["serviceAccountName"] = args ? args.serviceAccountName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BigqueryDataTransferConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BigqueryDataTransferConfig resources.
 */
export interface BigqueryDataTransferConfigState {
    /**
     * The number of days to look back to automatically refresh the data. For example, if dataRefreshWindowDays = 10, then
     * every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if
     * the data source supports the feature. Set the value to 0 to use the default value.
     */
    dataRefreshWindowDays?: pulumi.Input<number>;
    /**
     * The data source id. Cannot be changed once the transfer config is created.
     */
    dataSourceId?: pulumi.Input<string>;
    /**
     * The BigQuery target dataset id.
     */
    destinationDatasetId?: pulumi.Input<string>;
    /**
     * When set to true, no runs are scheduled for a given transfer.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * The user specified display name for the transfer config.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Email notifications will be sent according to these preferences to the email address of the user who owns this transfer
     * config.
     */
    emailPreferences?: pulumi.Input<inputs.BigqueryDataTransferConfigEmailPreferences>;
    /**
     * Represents the encryption configuration for a transfer.
     */
    encryptionConfiguration?: pulumi.Input<inputs.BigqueryDataTransferConfigEncryptionConfiguration>;
    /**
     * The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
     * US.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the transfer config. Transfer config names have the form
     * projects/{projectId}/locations/{location}/transferConfigs/{configId} or projects/{projectId}/transferConfigs/{configId},
     * where configId is usually a uuid, but this is not required. The name is ignored when creating a transfer config.
     */
    name?: pulumi.Input<string>;
    /**
     * Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish.
     */
    notificationPubsubTopic?: pulumi.Input<string>;
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    project?: pulumi.Input<string>;
    /**
     * Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the
     * default value for the data source will be used. The specified times are in UTC. Examples of valid format: 1st,3rd monday
     * of month 15:30, every wed,fri of jan, jun 13:15, and first sunday of quarter 00:00. See more explanation about the
     * format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format
     * NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for
     * your data source.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Options customizing the data transfer schedule.
     */
    scheduleOptions?: pulumi.Input<inputs.BigqueryDataTransferConfigScheduleOptions>;
    /**
     * Different parameters are configured primarily using the the 'params' field on this resource. This block contains the
     * parameters which contain secrets or passwords so that they can be marked sensitive and hidden from plan output. The name
     * of the field, eg: secret_access_key, will be the key in the 'params' map in the api request. Credentials may not be
     * specified in both locations and will cause an error. Changing from one location to a different credential configuration
     * in the config will require an apply to update state.
     */
    sensitiveParams?: pulumi.Input<inputs.BigqueryDataTransferConfigSensitiveParams>;
    /**
     * Service account email. If this field is set, transfer config will be created with this service account credentials. It
     * requires that requesting user calling this API has permissions to act as this service account.
     */
    serviceAccountName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BigqueryDataTransferConfigTimeouts>;
}

/**
 * The set of arguments for constructing a BigqueryDataTransferConfig resource.
 */
export interface BigqueryDataTransferConfigArgs {
    /**
     * The number of days to look back to automatically refresh the data. For example, if dataRefreshWindowDays = 10, then
     * every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if
     * the data source supports the feature. Set the value to 0 to use the default value.
     */
    dataRefreshWindowDays?: pulumi.Input<number>;
    /**
     * The data source id. Cannot be changed once the transfer config is created.
     */
    dataSourceId: pulumi.Input<string>;
    /**
     * The BigQuery target dataset id.
     */
    destinationDatasetId?: pulumi.Input<string>;
    /**
     * When set to true, no runs are scheduled for a given transfer.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * The user specified display name for the transfer config.
     */
    displayName: pulumi.Input<string>;
    /**
     * Email notifications will be sent according to these preferences to the email address of the user who owns this transfer
     * config.
     */
    emailPreferences?: pulumi.Input<inputs.BigqueryDataTransferConfigEmailPreferences>;
    /**
     * Represents the encryption configuration for a transfer.
     */
    encryptionConfiguration?: pulumi.Input<inputs.BigqueryDataTransferConfigEncryptionConfiguration>;
    /**
     * The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
     * US.
     */
    location?: pulumi.Input<string>;
    /**
     * Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish.
     */
    notificationPubsubTopic?: pulumi.Input<string>;
    params: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    project?: pulumi.Input<string>;
    /**
     * Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the
     * default value for the data source will be used. The specified times are in UTC. Examples of valid format: 1st,3rd monday
     * of month 15:30, every wed,fri of jan, jun 13:15, and first sunday of quarter 00:00. See more explanation about the
     * format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format
     * NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for
     * your data source.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Options customizing the data transfer schedule.
     */
    scheduleOptions?: pulumi.Input<inputs.BigqueryDataTransferConfigScheduleOptions>;
    /**
     * Different parameters are configured primarily using the the 'params' field on this resource. This block contains the
     * parameters which contain secrets or passwords so that they can be marked sensitive and hidden from plan output. The name
     * of the field, eg: secret_access_key, will be the key in the 'params' map in the api request. Credentials may not be
     * specified in both locations and will cause an error. Changing from one location to a different credential configuration
     * in the config will require an apply to update state.
     */
    sensitiveParams?: pulumi.Input<inputs.BigqueryDataTransferConfigSensitiveParams>;
    /**
     * Service account email. If this field is set, transfer config will be created with this service account credentials. It
     * requires that requesting user calling this API has permissions to act as this service account.
     */
    serviceAccountName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BigqueryDataTransferConfigTimeouts>;
}
