// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DialogflowAgent extends pulumi.CustomResource {
    /**
     * Get an existing DialogflowAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DialogflowAgentState, opts?: pulumi.CustomResourceOptions): DialogflowAgent {
        return new DialogflowAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/dialogflowAgent:DialogflowAgent';

    /**
     * Returns true if the given object is an instance of DialogflowAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DialogflowAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DialogflowAgent.__pulumiType;
    }

    /**
     * API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different
     * service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API
     * version. * API_VERSION_V1: Legacy V1 API. * API_VERSION_V2: V2 API. * API_VERSION_V2_BETA_1: V2beta1 API. Possible
     * values: ["API_VERSION_V1", "API_VERSION_V2", "API_VERSION_V2_BETA_1"]
     */
    public readonly apiVersion!: pulumi.Output<string>;
    /**
     * The URI of the agent's avatar, which are used throughout the Dialogflow console. When an image URL is entered into this
     * field, the Dialogflow will save the image in the backend. The address of the backend image returned from the API will be
     * shown in the [avatarUriBackend] field.
     */
    public readonly avatarUri!: pulumi.Output<string | undefined>;
    /**
     * The URI of the agent's avatar as returned from the API. Output only. To provide an image URL for the agent avatar, the
     * [avatarUri] field can be used.
     */
    public /*out*/ readonly avatarUriBackend!: pulumi.Output<string>;
    /**
     * To filter out false positive results and still get variety in matched natural language inputs for your agent, you can
     * tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a
     * fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score
     * values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
     */
    public readonly classificationThreshold!: pulumi.Output<number | undefined>;
    /**
     * The default language of the agent as a language tag. [See Language
     * Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language
     * codes. This field cannot be updated after creation.
     */
    public readonly defaultLanguageCode!: pulumi.Output<string>;
    /**
     * The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of this agent.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Determines whether this agent should log conversation queries.
     */
    public readonly enableLogging!: pulumi.Output<boolean | undefined>;
    /**
     * Determines how intents are detected from user queries. * MATCH_MODE_HYBRID: Best for agents with a small number of
     * examples in intents and/or wide use of templates syntax and composite entities. * MATCH_MODE_ML_ONLY: Can be used for
     * agents with a large number of examples in intents, especially the ones using @sys.any or very large developer entities.
     * Possible values: ["MATCH_MODE_HYBRID", "MATCH_MODE_ML_ONLY"]
     */
    public readonly matchMode!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The list of all languages supported by this agent (except for the defaultLanguageCode).
     */
    public readonly supportedLanguageCodes!: pulumi.Output<string[] | undefined>;
    public readonly tier!: pulumi.Output<string | undefined>;
    /**
     * The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
     * Europe/Paris.
     */
    public readonly timeZone!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DialogflowAgentTimeouts | undefined>;

    /**
     * Create a DialogflowAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DialogflowAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DialogflowAgentArgs | DialogflowAgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DialogflowAgentState | undefined;
            resourceInputs["apiVersion"] = state ? state.apiVersion : undefined;
            resourceInputs["avatarUri"] = state ? state.avatarUri : undefined;
            resourceInputs["avatarUriBackend"] = state ? state.avatarUriBackend : undefined;
            resourceInputs["classificationThreshold"] = state ? state.classificationThreshold : undefined;
            resourceInputs["defaultLanguageCode"] = state ? state.defaultLanguageCode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enableLogging"] = state ? state.enableLogging : undefined;
            resourceInputs["matchMode"] = state ? state.matchMode : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["supportedLanguageCodes"] = state ? state.supportedLanguageCodes : undefined;
            resourceInputs["tier"] = state ? state.tier : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DialogflowAgentArgs | undefined;
            if ((!args || args.defaultLanguageCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultLanguageCode'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.timeZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZone'");
            }
            resourceInputs["apiVersion"] = args ? args.apiVersion : undefined;
            resourceInputs["avatarUri"] = args ? args.avatarUri : undefined;
            resourceInputs["classificationThreshold"] = args ? args.classificationThreshold : undefined;
            resourceInputs["defaultLanguageCode"] = args ? args.defaultLanguageCode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableLogging"] = args ? args.enableLogging : undefined;
            resourceInputs["matchMode"] = args ? args.matchMode : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["supportedLanguageCodes"] = args ? args.supportedLanguageCodes : undefined;
            resourceInputs["tier"] = args ? args.tier : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["avatarUriBackend"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DialogflowAgent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DialogflowAgent resources.
 */
export interface DialogflowAgentState {
    /**
     * API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different
     * service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API
     * version. * API_VERSION_V1: Legacy V1 API. * API_VERSION_V2: V2 API. * API_VERSION_V2_BETA_1: V2beta1 API. Possible
     * values: ["API_VERSION_V1", "API_VERSION_V2", "API_VERSION_V2_BETA_1"]
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * The URI of the agent's avatar, which are used throughout the Dialogflow console. When an image URL is entered into this
     * field, the Dialogflow will save the image in the backend. The address of the backend image returned from the API will be
     * shown in the [avatarUriBackend] field.
     */
    avatarUri?: pulumi.Input<string>;
    /**
     * The URI of the agent's avatar as returned from the API. Output only. To provide an image URL for the agent avatar, the
     * [avatarUri] field can be used.
     */
    avatarUriBackend?: pulumi.Input<string>;
    /**
     * To filter out false positive results and still get variety in matched natural language inputs for your agent, you can
     * tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a
     * fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score
     * values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
     */
    classificationThreshold?: pulumi.Input<number>;
    /**
     * The default language of the agent as a language tag. [See Language
     * Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language
     * codes. This field cannot be updated after creation.
     */
    defaultLanguageCode?: pulumi.Input<string>;
    /**
     * The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this agent.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Determines whether this agent should log conversation queries.
     */
    enableLogging?: pulumi.Input<boolean>;
    /**
     * Determines how intents are detected from user queries. * MATCH_MODE_HYBRID: Best for agents with a small number of
     * examples in intents and/or wide use of templates syntax and composite entities. * MATCH_MODE_ML_ONLY: Can be used for
     * agents with a large number of examples in intents, especially the ones using @sys.any or very large developer entities.
     * Possible values: ["MATCH_MODE_HYBRID", "MATCH_MODE_ML_ONLY"]
     */
    matchMode?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The list of all languages supported by this agent (except for the defaultLanguageCode).
     */
    supportedLanguageCodes?: pulumi.Input<pulumi.Input<string>[]>;
    tier?: pulumi.Input<string>;
    /**
     * The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
     * Europe/Paris.
     */
    timeZone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowAgentTimeouts>;
}

/**
 * The set of arguments for constructing a DialogflowAgent resource.
 */
export interface DialogflowAgentArgs {
    /**
     * API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different
     * service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API
     * version. * API_VERSION_V1: Legacy V1 API. * API_VERSION_V2: V2 API. * API_VERSION_V2_BETA_1: V2beta1 API. Possible
     * values: ["API_VERSION_V1", "API_VERSION_V2", "API_VERSION_V2_BETA_1"]
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * The URI of the agent's avatar, which are used throughout the Dialogflow console. When an image URL is entered into this
     * field, the Dialogflow will save the image in the backend. The address of the backend image returned from the API will be
     * shown in the [avatarUriBackend] field.
     */
    avatarUri?: pulumi.Input<string>;
    /**
     * To filter out false positive results and still get variety in matched natural language inputs for your agent, you can
     * tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a
     * fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score
     * values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
     */
    classificationThreshold?: pulumi.Input<number>;
    /**
     * The default language of the agent as a language tag. [See Language
     * Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language
     * codes. This field cannot be updated after creation.
     */
    defaultLanguageCode: pulumi.Input<string>;
    /**
     * The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this agent.
     */
    displayName: pulumi.Input<string>;
    /**
     * Determines whether this agent should log conversation queries.
     */
    enableLogging?: pulumi.Input<boolean>;
    /**
     * Determines how intents are detected from user queries. * MATCH_MODE_HYBRID: Best for agents with a small number of
     * examples in intents and/or wide use of templates syntax and composite entities. * MATCH_MODE_ML_ONLY: Can be used for
     * agents with a large number of examples in intents, especially the ones using @sys.any or very large developer entities.
     * Possible values: ["MATCH_MODE_HYBRID", "MATCH_MODE_ML_ONLY"]
     */
    matchMode?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The list of all languages supported by this agent (except for the defaultLanguageCode).
     */
    supportedLanguageCodes?: pulumi.Input<pulumi.Input<string>[]>;
    tier?: pulumi.Input<string>;
    /**
     * The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York,
     * Europe/Paris.
     */
    timeZone: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowAgentTimeouts>;
}
