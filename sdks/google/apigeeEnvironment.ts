// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApigeeEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing ApigeeEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigeeEnvironmentState, opts?: pulumi.CustomResourceOptions): ApigeeEnvironment {
        return new ApigeeEnvironment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/apigeeEnvironment:ApigeeEnvironment';

    /**
     * Returns true if the given object is an instance of ApigeeEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigeeEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigeeEnvironment.__pulumiType;
    }

    /**
     * Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
     * changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
     */
    public readonly apiProxyType!: pulumi.Output<string>;
    /**
     * Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
     * cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
     * the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
     * deleting resource files; Creating, updating, or deleting target servers. Possible values:
     * ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
     */
    public readonly deploymentType!: pulumi.Output<string>;
    /**
     * Description of the environment.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name of the environment.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
     * {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
     */
    public readonly forwardProxyUri!: pulumi.Output<string | undefined>;
    /**
     * The resource ID of the environment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * NodeConfig for setting the min/max number of nodes associated with the environment.
     */
    public readonly nodeConfig!: pulumi.Output<outputs.ApigeeEnvironmentNodeConfig | undefined>;
    /**
     * The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
     */
    public readonly orgId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApigeeEnvironmentTimeouts | undefined>;
    /**
     * Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
     * Apigee's public documentation to understand about each of these types in details. An Apigee org can support
     * heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ApigeeEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigeeEnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigeeEnvironmentArgs | ApigeeEnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigeeEnvironmentState | undefined;
            resourceInputs["apiProxyType"] = state ? state.apiProxyType : undefined;
            resourceInputs["deploymentType"] = state ? state.deploymentType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["forwardProxyUri"] = state ? state.forwardProxyUri : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeConfig"] = state ? state.nodeConfig : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ApigeeEnvironmentArgs | undefined;
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            resourceInputs["apiProxyType"] = args ? args.apiProxyType : undefined;
            resourceInputs["deploymentType"] = args ? args.deploymentType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["forwardProxyUri"] = args ? args.forwardProxyUri : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeConfig"] = args ? args.nodeConfig : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigeeEnvironment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApigeeEnvironment resources.
 */
export interface ApigeeEnvironmentState {
    /**
     * Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
     * changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
     */
    apiProxyType?: pulumi.Input<string>;
    /**
     * Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
     * cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
     * the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
     * deleting resource files; Creating, updating, or deleting target servers. Possible values:
     * ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Description of the environment.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of the environment.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
     * {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
     */
    forwardProxyUri?: pulumi.Input<string>;
    /**
     * The resource ID of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * NodeConfig for setting the min/max number of nodes associated with the environment.
     */
    nodeConfig?: pulumi.Input<inputs.ApigeeEnvironmentNodeConfig>;
    /**
     * The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
     */
    orgId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeEnvironmentTimeouts>;
    /**
     * Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
     * Apigee's public documentation to understand about each of these types in details. An Apigee org can support
     * heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApigeeEnvironment resource.
 */
export interface ApigeeEnvironmentArgs {
    /**
     * Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
     * changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
     */
    apiProxyType?: pulumi.Input<string>;
    /**
     * Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
     * cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
     * the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
     * deleting resource files; Creating, updating, or deleting target servers. Possible values:
     * ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Description of the environment.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name of the environment.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
     * {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
     */
    forwardProxyUri?: pulumi.Input<string>;
    /**
     * The resource ID of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * NodeConfig for setting the min/max number of nodes associated with the environment.
     */
    nodeConfig?: pulumi.Input<inputs.ApigeeEnvironmentNodeConfig>;
    /**
     * The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
     */
    orgId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeEnvironmentTimeouts>;
    /**
     * Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
     * Apigee's public documentation to understand about each of these types in details. An Apigee org can support
     * heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
     */
    type?: pulumi.Input<string>;
}
