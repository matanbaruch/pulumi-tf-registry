// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ServiceNetworkingVpcServiceControls extends pulumi.CustomResource {
    /**
     * Get an existing ServiceNetworkingVpcServiceControls resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceNetworkingVpcServiceControlsState, opts?: pulumi.CustomResourceOptions): ServiceNetworkingVpcServiceControls {
        return new ServiceNetworkingVpcServiceControls(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/serviceNetworkingVpcServiceControls:ServiceNetworkingVpcServiceControls';

    /**
     * Returns true if the given object is an instance of ServiceNetworkingVpcServiceControls.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceNetworkingVpcServiceControls {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceNetworkingVpcServiceControls.__pulumiType;
    }

    /**
     * Desired VPC Service Controls state service producer VPC network, as described at the top of this page.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The network that the consumer is using to connect with services.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * The id of the Google Cloud project containing the consumer network.
     */
    public readonly project!: pulumi.Output<string | undefined>;
    /**
     * The service that is managing peering connectivity for a service producer's organization. For Google services that
     * support this functionality, this value is 'servicenetworking.googleapis.com'.
     */
    public readonly service!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ServiceNetworkingVpcServiceControlsTimeouts | undefined>;

    /**
     * Create a ServiceNetworkingVpcServiceControls resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceNetworkingVpcServiceControlsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceNetworkingVpcServiceControlsArgs | ServiceNetworkingVpcServiceControlsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceNetworkingVpcServiceControlsState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ServiceNetworkingVpcServiceControlsArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceNetworkingVpcServiceControls.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServiceNetworkingVpcServiceControls resources.
 */
export interface ServiceNetworkingVpcServiceControlsState {
    /**
     * Desired VPC Service Controls state service producer VPC network, as described at the top of this page.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The network that the consumer is using to connect with services.
     */
    network?: pulumi.Input<string>;
    /**
     * The id of the Google Cloud project containing the consumer network.
     */
    project?: pulumi.Input<string>;
    /**
     * The service that is managing peering connectivity for a service producer's organization. For Google services that
     * support this functionality, this value is 'servicenetworking.googleapis.com'.
     */
    service?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ServiceNetworkingVpcServiceControlsTimeouts>;
}

/**
 * The set of arguments for constructing a ServiceNetworkingVpcServiceControls resource.
 */
export interface ServiceNetworkingVpcServiceControlsArgs {
    /**
     * Desired VPC Service Controls state service producer VPC network, as described at the top of this page.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The network that the consumer is using to connect with services.
     */
    network: pulumi.Input<string>;
    /**
     * The id of the Google Cloud project containing the consumer network.
     */
    project?: pulumi.Input<string>;
    /**
     * The service that is managing peering connectivity for a service producer's organization. For Google services that
     * support this functionality, this value is 'servicenetworking.googleapis.com'.
     */
    service: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ServiceNetworkingVpcServiceControlsTimeouts>;
}
