// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EssentialContactsContact extends pulumi.CustomResource {
    /**
     * Get an existing EssentialContactsContact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EssentialContactsContactState, opts?: pulumi.CustomResourceOptions): EssentialContactsContact {
        return new EssentialContactsContact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/essentialContactsContact:EssentialContactsContact';

    /**
     * Returns true if the given object is an instance of EssentialContactsContact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EssentialContactsContact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EssentialContactsContact.__pulumiType;
    }

    /**
     * The email address to send notifications to. This does not need to be a Google account.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported
     * languages.
     */
    public readonly languageTag!: pulumi.Output<string>;
    /**
     * The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The categories of notifications that the contact will receive communications for.
     */
    public readonly notificationCategorySubscriptions!: pulumi.Output<string[]>;
    /**
     * The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or
     * projects/{project_id}
     */
    public readonly parent!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.EssentialContactsContactTimeouts | undefined>;

    /**
     * Create a EssentialContactsContact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EssentialContactsContactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EssentialContactsContactArgs | EssentialContactsContactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EssentialContactsContactState | undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["languageTag"] = state ? state.languageTag : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notificationCategorySubscriptions"] = state ? state.notificationCategorySubscriptions : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as EssentialContactsContactArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.languageTag === undefined) && !opts.urn) {
                throw new Error("Missing required property 'languageTag'");
            }
            if ((!args || args.notificationCategorySubscriptions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationCategorySubscriptions'");
            }
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["languageTag"] = args ? args.languageTag : undefined;
            resourceInputs["notificationCategorySubscriptions"] = args ? args.notificationCategorySubscriptions : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EssentialContactsContact.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EssentialContactsContact resources.
 */
export interface EssentialContactsContactState {
    /**
     * The email address to send notifications to. This does not need to be a Google account.
     */
    email?: pulumi.Input<string>;
    /**
     * The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported
     * languages.
     */
    languageTag?: pulumi.Input<string>;
    /**
     * The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
     */
    name?: pulumi.Input<string>;
    /**
     * The categories of notifications that the contact will receive communications for.
     */
    notificationCategorySubscriptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or
     * projects/{project_id}
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EssentialContactsContactTimeouts>;
}

/**
 * The set of arguments for constructing a EssentialContactsContact resource.
 */
export interface EssentialContactsContactArgs {
    /**
     * The email address to send notifications to. This does not need to be a Google account.
     */
    email: pulumi.Input<string>;
    /**
     * The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported
     * languages.
     */
    languageTag: pulumi.Input<string>;
    /**
     * The categories of notifications that the contact will receive communications for.
     */
    notificationCategorySubscriptions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or
     * projects/{project_id}
     */
    parent: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EssentialContactsContactTimeouts>;
}
