// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AppEngineFlexibleAppVersion extends pulumi.CustomResource {
    /**
     * Get an existing AppEngineFlexibleAppVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppEngineFlexibleAppVersionState, opts?: pulumi.CustomResourceOptions): AppEngineFlexibleAppVersion {
        return new AppEngineFlexibleAppVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/appEngineFlexibleAppVersion:AppEngineFlexibleAppVersion';

    /**
     * Returns true if the given object is an instance of AppEngineFlexibleAppVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppEngineFlexibleAppVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppEngineFlexibleAppVersion.__pulumiType;
    }

    /**
     * Serving configuration for Google Cloud Endpoints.
     */
    public readonly apiConfig!: pulumi.Output<outputs.AppEngineFlexibleAppVersionApiConfig | undefined>;
    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     */
    public readonly automaticScaling!: pulumi.Output<outputs.AppEngineFlexibleAppVersionAutomaticScaling | undefined>;
    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     */
    public readonly betaSettings!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding
     * StaticFilesHandler does not specify its own expiration time.
     */
    public readonly defaultExpiration!: pulumi.Output<string | undefined>;
    /**
     * If set to 'true', the service will be deleted if it is the last version.
     */
    public readonly deleteServiceOnDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * Code and application artifacts that make up this version.
     */
    public readonly deployment!: pulumi.Output<outputs.AppEngineFlexibleAppVersionDeployment | undefined>;
    /**
     * Code and application artifacts that make up this version.
     */
    public readonly endpointsApiService!: pulumi.Output<outputs.AppEngineFlexibleAppVersionEndpointsApiService | undefined>;
    /**
     * The entrypoint for the application.
     */
    public readonly entrypoint!: pulumi.Output<outputs.AppEngineFlexibleAppVersionEntrypoint | undefined>;
    public readonly envVariables!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Runtime settings for App Engine flexible environment.
     */
    public readonly flexibleRuntimeSettings!: pulumi.Output<outputs.AppEngineFlexibleAppVersionFlexibleRuntimeSettings | undefined>;
    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the
     * request and other request handlers are not attempted.
     */
    public readonly handlers!: pulumi.Output<outputs.AppEngineFlexibleAppVersionHandler[] | undefined>;
    /**
     * A list of the types of messages that this application is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
     * "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE",
     * "INBOUND_SERVICE_XMPP_SUBSCRIBE", "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
     * "INBOUND_SERVICE_WARMUP"]
     */
    public readonly inboundServices!: pulumi.Output<string[] | undefined>;
    /**
     * Instance class that is used to run this version. Valid values are AutomaticScaling: F1, F2, F4, F4_1G ManualScaling: B1,
     * B2, B4, B8, B4_1G Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
     */
    public readonly instanceClass!: pulumi.Output<string | undefined>;
    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     */
    public readonly livenessCheck!: pulumi.Output<outputs.AppEngineFlexibleAppVersionLivenessCheck>;
    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of
     * its memory over time.
     */
    public readonly manualScaling!: pulumi.Output<outputs.AppEngineFlexibleAppVersionManualScaling | undefined>;
    /**
     * Full path to the Version resource in the API. Example, "v1".
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Extra network settings
     */
    public readonly network!: pulumi.Output<outputs.AppEngineFlexibleAppVersionNetwork | undefined>;
    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
     */
    public readonly nobuildFilesRegex!: pulumi.Output<string | undefined>;
    /**
     * If set to 'true', the application version will not be deleted.
     */
    public readonly noopOnDestroy!: pulumi.Output<boolean | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
     */
    public readonly readinessCheck!: pulumi.Output<outputs.AppEngineFlexibleAppVersionReadinessCheck>;
    /**
     * Machine resources for a version.
     */
    public readonly resources!: pulumi.Output<outputs.AppEngineFlexibleAppVersionResources | undefined>;
    /**
     * Desired runtime. Example python27.
     */
    public readonly runtime!: pulumi.Output<string>;
    /**
     * The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
     * 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\ Substitute '<language>' with 'python',
     * 'java', 'php', 'ruby', 'go' or 'nodejs'.
     */
    public readonly runtimeApiVersion!: pulumi.Output<string>;
    /**
     * The channel of the runtime to use. Only available for some runtimes.
     */
    public readonly runtimeChannel!: pulumi.Output<string | undefined>;
    /**
     * The path or name of the app's main executable.
     */
    public readonly runtimeMainExecutablePath!: pulumi.Output<string | undefined>;
    /**
     * AppEngine service resource. Can contain numbers, letters, and hyphens.
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default
     * if this field is neither provided in app.yaml file nor through CLI flag.
     */
    public readonly serviceAccount!: pulumi.Output<string>;
    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
     * Default value: "SERVING" Possible values: ["SERVING", "STOPPED"]
     */
    public readonly servingStatus!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AppEngineFlexibleAppVersionTimeouts | undefined>;
    /**
     * Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters,
     * numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
     */
    public readonly versionId!: pulumi.Output<string | undefined>;
    /**
     * Enables VPC connectivity for standard apps.
     */
    public readonly vpcAccessConnector!: pulumi.Output<outputs.AppEngineFlexibleAppVersionVpcAccessConnector | undefined>;

    /**
     * Create a AppEngineFlexibleAppVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppEngineFlexibleAppVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppEngineFlexibleAppVersionArgs | AppEngineFlexibleAppVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppEngineFlexibleAppVersionState | undefined;
            resourceInputs["apiConfig"] = state ? state.apiConfig : undefined;
            resourceInputs["automaticScaling"] = state ? state.automaticScaling : undefined;
            resourceInputs["betaSettings"] = state ? state.betaSettings : undefined;
            resourceInputs["defaultExpiration"] = state ? state.defaultExpiration : undefined;
            resourceInputs["deleteServiceOnDestroy"] = state ? state.deleteServiceOnDestroy : undefined;
            resourceInputs["deployment"] = state ? state.deployment : undefined;
            resourceInputs["endpointsApiService"] = state ? state.endpointsApiService : undefined;
            resourceInputs["entrypoint"] = state ? state.entrypoint : undefined;
            resourceInputs["envVariables"] = state ? state.envVariables : undefined;
            resourceInputs["flexibleRuntimeSettings"] = state ? state.flexibleRuntimeSettings : undefined;
            resourceInputs["handlers"] = state ? state.handlers : undefined;
            resourceInputs["inboundServices"] = state ? state.inboundServices : undefined;
            resourceInputs["instanceClass"] = state ? state.instanceClass : undefined;
            resourceInputs["livenessCheck"] = state ? state.livenessCheck : undefined;
            resourceInputs["manualScaling"] = state ? state.manualScaling : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["nobuildFilesRegex"] = state ? state.nobuildFilesRegex : undefined;
            resourceInputs["noopOnDestroy"] = state ? state.noopOnDestroy : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["readinessCheck"] = state ? state.readinessCheck : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["runtime"] = state ? state.runtime : undefined;
            resourceInputs["runtimeApiVersion"] = state ? state.runtimeApiVersion : undefined;
            resourceInputs["runtimeChannel"] = state ? state.runtimeChannel : undefined;
            resourceInputs["runtimeMainExecutablePath"] = state ? state.runtimeMainExecutablePath : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["serviceAccount"] = state ? state.serviceAccount : undefined;
            resourceInputs["servingStatus"] = state ? state.servingStatus : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["vpcAccessConnector"] = state ? state.vpcAccessConnector : undefined;
        } else {
            const args = argsOrState as AppEngineFlexibleAppVersionArgs | undefined;
            if ((!args || args.livenessCheck === undefined) && !opts.urn) {
                throw new Error("Missing required property 'livenessCheck'");
            }
            if ((!args || args.readinessCheck === undefined) && !opts.urn) {
                throw new Error("Missing required property 'readinessCheck'");
            }
            if ((!args || args.runtime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            resourceInputs["apiConfig"] = args ? args.apiConfig : undefined;
            resourceInputs["automaticScaling"] = args ? args.automaticScaling : undefined;
            resourceInputs["betaSettings"] = args ? args.betaSettings : undefined;
            resourceInputs["defaultExpiration"] = args ? args.defaultExpiration : undefined;
            resourceInputs["deleteServiceOnDestroy"] = args ? args.deleteServiceOnDestroy : undefined;
            resourceInputs["deployment"] = args ? args.deployment : undefined;
            resourceInputs["endpointsApiService"] = args ? args.endpointsApiService : undefined;
            resourceInputs["entrypoint"] = args ? args.entrypoint : undefined;
            resourceInputs["envVariables"] = args ? args.envVariables : undefined;
            resourceInputs["flexibleRuntimeSettings"] = args ? args.flexibleRuntimeSettings : undefined;
            resourceInputs["handlers"] = args ? args.handlers : undefined;
            resourceInputs["inboundServices"] = args ? args.inboundServices : undefined;
            resourceInputs["instanceClass"] = args ? args.instanceClass : undefined;
            resourceInputs["livenessCheck"] = args ? args.livenessCheck : undefined;
            resourceInputs["manualScaling"] = args ? args.manualScaling : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["nobuildFilesRegex"] = args ? args.nobuildFilesRegex : undefined;
            resourceInputs["noopOnDestroy"] = args ? args.noopOnDestroy : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["readinessCheck"] = args ? args.readinessCheck : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["runtime"] = args ? args.runtime : undefined;
            resourceInputs["runtimeApiVersion"] = args ? args.runtimeApiVersion : undefined;
            resourceInputs["runtimeChannel"] = args ? args.runtimeChannel : undefined;
            resourceInputs["runtimeMainExecutablePath"] = args ? args.runtimeMainExecutablePath : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["servingStatus"] = args ? args.servingStatus : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["versionId"] = args ? args.versionId : undefined;
            resourceInputs["vpcAccessConnector"] = args ? args.vpcAccessConnector : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppEngineFlexibleAppVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppEngineFlexibleAppVersion resources.
 */
export interface AppEngineFlexibleAppVersionState {
    /**
     * Serving configuration for Google Cloud Endpoints.
     */
    apiConfig?: pulumi.Input<inputs.AppEngineFlexibleAppVersionApiConfig>;
    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     */
    automaticScaling?: pulumi.Input<inputs.AppEngineFlexibleAppVersionAutomaticScaling>;
    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     */
    betaSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding
     * StaticFilesHandler does not specify its own expiration time.
     */
    defaultExpiration?: pulumi.Input<string>;
    /**
     * If set to 'true', the service will be deleted if it is the last version.
     */
    deleteServiceOnDestroy?: pulumi.Input<boolean>;
    /**
     * Code and application artifacts that make up this version.
     */
    deployment?: pulumi.Input<inputs.AppEngineFlexibleAppVersionDeployment>;
    /**
     * Code and application artifacts that make up this version.
     */
    endpointsApiService?: pulumi.Input<inputs.AppEngineFlexibleAppVersionEndpointsApiService>;
    /**
     * The entrypoint for the application.
     */
    entrypoint?: pulumi.Input<inputs.AppEngineFlexibleAppVersionEntrypoint>;
    envVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Runtime settings for App Engine flexible environment.
     */
    flexibleRuntimeSettings?: pulumi.Input<inputs.AppEngineFlexibleAppVersionFlexibleRuntimeSettings>;
    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the
     * request and other request handlers are not attempted.
     */
    handlers?: pulumi.Input<pulumi.Input<inputs.AppEngineFlexibleAppVersionHandler>[]>;
    /**
     * A list of the types of messages that this application is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
     * "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE",
     * "INBOUND_SERVICE_XMPP_SUBSCRIBE", "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
     * "INBOUND_SERVICE_WARMUP"]
     */
    inboundServices?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance class that is used to run this version. Valid values are AutomaticScaling: F1, F2, F4, F4_1G ManualScaling: B1,
     * B2, B4, B8, B4_1G Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
     */
    instanceClass?: pulumi.Input<string>;
    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     */
    livenessCheck?: pulumi.Input<inputs.AppEngineFlexibleAppVersionLivenessCheck>;
    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of
     * its memory over time.
     */
    manualScaling?: pulumi.Input<inputs.AppEngineFlexibleAppVersionManualScaling>;
    /**
     * Full path to the Version resource in the API. Example, "v1".
     */
    name?: pulumi.Input<string>;
    /**
     * Extra network settings
     */
    network?: pulumi.Input<inputs.AppEngineFlexibleAppVersionNetwork>;
    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
     */
    nobuildFilesRegex?: pulumi.Input<string>;
    /**
     * If set to 'true', the application version will not be deleted.
     */
    noopOnDestroy?: pulumi.Input<boolean>;
    project?: pulumi.Input<string>;
    /**
     * Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
     */
    readinessCheck?: pulumi.Input<inputs.AppEngineFlexibleAppVersionReadinessCheck>;
    /**
     * Machine resources for a version.
     */
    resources?: pulumi.Input<inputs.AppEngineFlexibleAppVersionResources>;
    /**
     * Desired runtime. Example python27.
     */
    runtime?: pulumi.Input<string>;
    /**
     * The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
     * 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\ Substitute '<language>' with 'python',
     * 'java', 'php', 'ruby', 'go' or 'nodejs'.
     */
    runtimeApiVersion?: pulumi.Input<string>;
    /**
     * The channel of the runtime to use. Only available for some runtimes.
     */
    runtimeChannel?: pulumi.Input<string>;
    /**
     * The path or name of the app's main executable.
     */
    runtimeMainExecutablePath?: pulumi.Input<string>;
    /**
     * AppEngine service resource. Can contain numbers, letters, and hyphens.
     */
    service?: pulumi.Input<string>;
    /**
     * The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default
     * if this field is neither provided in app.yaml file nor through CLI flag.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
     * Default value: "SERVING" Possible values: ["SERVING", "STOPPED"]
     */
    servingStatus?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppEngineFlexibleAppVersionTimeouts>;
    /**
     * Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters,
     * numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
     */
    versionId?: pulumi.Input<string>;
    /**
     * Enables VPC connectivity for standard apps.
     */
    vpcAccessConnector?: pulumi.Input<inputs.AppEngineFlexibleAppVersionVpcAccessConnector>;
}

/**
 * The set of arguments for constructing a AppEngineFlexibleAppVersion resource.
 */
export interface AppEngineFlexibleAppVersionArgs {
    /**
     * Serving configuration for Google Cloud Endpoints.
     */
    apiConfig?: pulumi.Input<inputs.AppEngineFlexibleAppVersionApiConfig>;
    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     */
    automaticScaling?: pulumi.Input<inputs.AppEngineFlexibleAppVersionAutomaticScaling>;
    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     */
    betaSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding
     * StaticFilesHandler does not specify its own expiration time.
     */
    defaultExpiration?: pulumi.Input<string>;
    /**
     * If set to 'true', the service will be deleted if it is the last version.
     */
    deleteServiceOnDestroy?: pulumi.Input<boolean>;
    /**
     * Code and application artifacts that make up this version.
     */
    deployment?: pulumi.Input<inputs.AppEngineFlexibleAppVersionDeployment>;
    /**
     * Code and application artifacts that make up this version.
     */
    endpointsApiService?: pulumi.Input<inputs.AppEngineFlexibleAppVersionEndpointsApiService>;
    /**
     * The entrypoint for the application.
     */
    entrypoint?: pulumi.Input<inputs.AppEngineFlexibleAppVersionEntrypoint>;
    envVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Runtime settings for App Engine flexible environment.
     */
    flexibleRuntimeSettings?: pulumi.Input<inputs.AppEngineFlexibleAppVersionFlexibleRuntimeSettings>;
    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the
     * request and other request handlers are not attempted.
     */
    handlers?: pulumi.Input<pulumi.Input<inputs.AppEngineFlexibleAppVersionHandler>[]>;
    /**
     * A list of the types of messages that this application is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
     * "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR", "INBOUND_SERVICE_XMPP_MESSAGE",
     * "INBOUND_SERVICE_XMPP_SUBSCRIBE", "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
     * "INBOUND_SERVICE_WARMUP"]
     */
    inboundServices?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance class that is used to run this version. Valid values are AutomaticScaling: F1, F2, F4, F4_1G ManualScaling: B1,
     * B2, B4, B8, B4_1G Defaults to F1 for AutomaticScaling and B1 for ManualScaling.
     */
    instanceClass?: pulumi.Input<string>;
    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     */
    livenessCheck: pulumi.Input<inputs.AppEngineFlexibleAppVersionLivenessCheck>;
    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of
     * its memory over time.
     */
    manualScaling?: pulumi.Input<inputs.AppEngineFlexibleAppVersionManualScaling>;
    /**
     * Extra network settings
     */
    network?: pulumi.Input<inputs.AppEngineFlexibleAppVersionNetwork>;
    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.
     */
    nobuildFilesRegex?: pulumi.Input<string>;
    /**
     * If set to 'true', the application version will not be deleted.
     */
    noopOnDestroy?: pulumi.Input<boolean>;
    project?: pulumi.Input<string>;
    /**
     * Configures readiness health checking for instances. Unhealthy instances are not put into the backend traffic rotation.
     */
    readinessCheck: pulumi.Input<inputs.AppEngineFlexibleAppVersionReadinessCheck>;
    /**
     * Machine resources for a version.
     */
    resources?: pulumi.Input<inputs.AppEngineFlexibleAppVersionResources>;
    /**
     * Desired runtime. Example python27.
     */
    runtime: pulumi.Input<string>;
    /**
     * The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
     * 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\ Substitute '<language>' with 'python',
     * 'java', 'php', 'ruby', 'go' or 'nodejs'.
     */
    runtimeApiVersion?: pulumi.Input<string>;
    /**
     * The channel of the runtime to use. Only available for some runtimes.
     */
    runtimeChannel?: pulumi.Input<string>;
    /**
     * The path or name of the app's main executable.
     */
    runtimeMainExecutablePath?: pulumi.Input<string>;
    /**
     * AppEngine service resource. Can contain numbers, letters, and hyphens.
     */
    service: pulumi.Input<string>;
    /**
     * The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default
     * if this field is neither provided in app.yaml file nor through CLI flag.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.
     * Default value: "SERVING" Possible values: ["SERVING", "STOPPED"]
     */
    servingStatus?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppEngineFlexibleAppVersionTimeouts>;
    /**
     * Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase letters,
     * numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
     */
    versionId?: pulumi.Input<string>;
    /**
     * Enables VPC connectivity for standard apps.
     */
    vpcAccessConnector?: pulumi.Input<inputs.AppEngineFlexibleAppVersionVpcAccessConnector>;
}
