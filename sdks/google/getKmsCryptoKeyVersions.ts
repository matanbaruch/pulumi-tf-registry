// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsCryptoKeyVersions(args: GetKmsCryptoKeyVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsCryptoKeyVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getKmsCryptoKeyVersions:getKmsCryptoKeyVersions", {
        "cryptoKey": args.cryptoKey,
        "filter": args.filter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsCryptoKeyVersions.
 */
export interface GetKmsCryptoKeyVersionsArgs {
    cryptoKey: string;
    filter?: string;
    id?: string;
}

/**
 * A collection of values returned by getKmsCryptoKeyVersions.
 */
export interface GetKmsCryptoKeyVersionsResult {
    readonly cryptoKey: string;
    readonly filter?: string;
    readonly id: string;
    readonly publicKeys: outputs.GetKmsCryptoKeyVersionsPublicKey[];
    readonly versions: outputs.GetKmsCryptoKeyVersionsVersion[];
}
export function getKmsCryptoKeyVersionsOutput(args: GetKmsCryptoKeyVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsCryptoKeyVersionsResult> {
    return pulumi.output(args).apply((a: any) => getKmsCryptoKeyVersions(a, opts))
}

/**
 * A collection of arguments for invoking getKmsCryptoKeyVersions.
 */
export interface GetKmsCryptoKeyVersionsOutputArgs {
    cryptoKey: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
