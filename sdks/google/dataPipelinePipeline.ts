// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataPipelinePipeline extends pulumi.CustomResource {
    /**
     * Get an existing DataPipelinePipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataPipelinePipelineState, opts?: pulumi.CustomResourceOptions): DataPipelinePipeline {
        return new DataPipelinePipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/dataPipelinePipeline:DataPipelinePipeline';

    /**
     * Returns true if the given object is an instance of DataPipelinePipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataPipelinePipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataPipelinePipeline.__pulumiType;
    }

    /**
     * The timestamp when the pipeline was initially created. Set by the Data Pipelines service. A timestamp in RFC3339 UTC
     * "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
     * "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores
     * (_).
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Number of jobs.
     */
    public /*out*/ readonly jobCount!: pulumi.Output<number>;
    /**
     * The timestamp when the pipeline was last modified. Set by the Data Pipelines service. A timestamp in RFC3339 UTC "Zulu"
     * format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
     * "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly lastUpdateTime!: pulumi.Output<string>;
    /**
     * "The pipeline name. For example': 'projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID." "- PROJECT_ID can
     * contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see
     * Identifying projects." "LOCATION_ID is the canonical ID for the pipeline's location. The list of available locations can
     * be obtained by calling google.cloud.location.Locations.ListLocations. Note that the Data Pipelines service is not
     * available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in App Engine
     * regions." "PIPELINE_ID is the ID of the pipeline. Must be unique for the selected project and location."
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during
     * pipeline creation. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg",
     * "count": "3" }.
     */
    public readonly pipelineSources!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * A reference to the region
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the
     * schedule. If not, users are responsible for creating jobs externally.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#schedulespec
     */
    public readonly scheduleInfo!: pulumi.Output<outputs.DataPipelinePipelineScheduleInfo | undefined>;
    /**
     * Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine
     * service account will be used.
     */
    public readonly schedulerServiceAccountEmail!: pulumi.Output<string>;
    /**
     * The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State
     * changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through
     * pipelines.patch requests.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#state Possible
     * values: ["STATE_UNSPECIFIED", "STATE_RESUMING", "STATE_ACTIVE", "STATE_STOPPING", "STATE_ARCHIVED", "STATE_PAUSED"]
     */
    public readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataPipelinePipelineTimeouts | undefined>;
    /**
     * The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the
     * pipeline.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#pipelinetype
     * Possible values: ["PIPELINE_TYPE_UNSPECIFIED", "PIPELINE_TYPE_BATCH", "PIPELINE_TYPE_STREAMING"]
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Workload information for creating new jobs.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#workload
     */
    public readonly workload!: pulumi.Output<outputs.DataPipelinePipelineWorkload | undefined>;

    /**
     * Create a DataPipelinePipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataPipelinePipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataPipelinePipelineArgs | DataPipelinePipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataPipelinePipelineState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["jobCount"] = state ? state.jobCount : undefined;
            resourceInputs["lastUpdateTime"] = state ? state.lastUpdateTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pipelineSources"] = state ? state.pipelineSources : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["scheduleInfo"] = state ? state.scheduleInfo : undefined;
            resourceInputs["schedulerServiceAccountEmail"] = state ? state.schedulerServiceAccountEmail : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["workload"] = state ? state.workload : undefined;
        } else {
            const args = argsOrState as DataPipelinePipelineArgs | undefined;
            if ((!args || args.state === undefined) && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pipelineSources"] = args ? args.pipelineSources : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["scheduleInfo"] = args ? args.scheduleInfo : undefined;
            resourceInputs["schedulerServiceAccountEmail"] = args ? args.schedulerServiceAccountEmail : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["workload"] = args ? args.workload : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["jobCount"] = undefined /*out*/;
            resourceInputs["lastUpdateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataPipelinePipeline.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataPipelinePipeline resources.
 */
export interface DataPipelinePipelineState {
    /**
     * The timestamp when the pipeline was initially created. Set by the Data Pipelines service. A timestamp in RFC3339 UTC
     * "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
     * "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores
     * (_).
     */
    displayName?: pulumi.Input<string>;
    /**
     * Number of jobs.
     */
    jobCount?: pulumi.Input<number>;
    /**
     * The timestamp when the pipeline was last modified. Set by the Data Pipelines service. A timestamp in RFC3339 UTC "Zulu"
     * format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
     * "2014-10-02T15:01:23.045123456Z".
     */
    lastUpdateTime?: pulumi.Input<string>;
    /**
     * "The pipeline name. For example': 'projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID." "- PROJECT_ID can
     * contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see
     * Identifying projects." "LOCATION_ID is the canonical ID for the pipeline's location. The list of available locations can
     * be obtained by calling google.cloud.location.Locations.ListLocations. Note that the Data Pipelines service is not
     * available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in App Engine
     * regions." "PIPELINE_ID is the ID of the pipeline. Must be unique for the selected project and location."
     */
    name?: pulumi.Input<string>;
    /**
     * The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during
     * pipeline creation. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg",
     * "count": "3" }.
     */
    pipelineSources?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    project?: pulumi.Input<string>;
    /**
     * A reference to the region
     */
    region?: pulumi.Input<string>;
    /**
     * Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the
     * schedule. If not, users are responsible for creating jobs externally.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#schedulespec
     */
    scheduleInfo?: pulumi.Input<inputs.DataPipelinePipelineScheduleInfo>;
    /**
     * Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine
     * service account will be used.
     */
    schedulerServiceAccountEmail?: pulumi.Input<string>;
    /**
     * The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State
     * changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through
     * pipelines.patch requests.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#state Possible
     * values: ["STATE_UNSPECIFIED", "STATE_RESUMING", "STATE_ACTIVE", "STATE_STOPPING", "STATE_ARCHIVED", "STATE_PAUSED"]
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataPipelinePipelineTimeouts>;
    /**
     * The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the
     * pipeline.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#pipelinetype
     * Possible values: ["PIPELINE_TYPE_UNSPECIFIED", "PIPELINE_TYPE_BATCH", "PIPELINE_TYPE_STREAMING"]
     */
    type?: pulumi.Input<string>;
    /**
     * Workload information for creating new jobs.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#workload
     */
    workload?: pulumi.Input<inputs.DataPipelinePipelineWorkload>;
}

/**
 * The set of arguments for constructing a DataPipelinePipeline resource.
 */
export interface DataPipelinePipelineArgs {
    /**
     * The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores
     * (_).
     */
    displayName?: pulumi.Input<string>;
    /**
     * "The pipeline name. For example': 'projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID." "- PROJECT_ID can
     * contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see
     * Identifying projects." "LOCATION_ID is the canonical ID for the pipeline's location. The list of available locations can
     * be obtained by calling google.cloud.location.Locations.ListLocations. Note that the Data Pipelines service is not
     * available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in App Engine
     * regions." "PIPELINE_ID is the ID of the pipeline. Must be unique for the selected project and location."
     */
    name?: pulumi.Input<string>;
    /**
     * The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during
     * pipeline creation. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg",
     * "count": "3" }.
     */
    pipelineSources?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    project?: pulumi.Input<string>;
    /**
     * A reference to the region
     */
    region?: pulumi.Input<string>;
    /**
     * Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the
     * schedule. If not, users are responsible for creating jobs externally.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#schedulespec
     */
    scheduleInfo?: pulumi.Input<inputs.DataPipelinePipelineScheduleInfo>;
    /**
     * Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine
     * service account will be used.
     */
    schedulerServiceAccountEmail?: pulumi.Input<string>;
    /**
     * The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State
     * changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through
     * pipelines.patch requests.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#state Possible
     * values: ["STATE_UNSPECIFIED", "STATE_RESUMING", "STATE_ACTIVE", "STATE_STOPPING", "STATE_ARCHIVED", "STATE_PAUSED"]
     */
    state: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataPipelinePipelineTimeouts>;
    /**
     * The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the
     * pipeline.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#pipelinetype
     * Possible values: ["PIPELINE_TYPE_UNSPECIFIED", "PIPELINE_TYPE_BATCH", "PIPELINE_TYPE_STREAMING"]
     */
    type: pulumi.Input<string>;
    /**
     * Workload information for creating new jobs.
     * https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#workload
     */
    workload?: pulumi.Input<inputs.DataPipelinePipelineWorkload>;
}
