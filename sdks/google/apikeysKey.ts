// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApikeysKey extends pulumi.CustomResource {
    /**
     * Get an existing ApikeysKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApikeysKeyState, opts?: pulumi.CustomResourceOptions): ApikeysKey {
        return new ApikeysKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/apikeysKey:ApikeysKey';

    /**
     * Returns true if the given object is an instance of ApikeysKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApikeysKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApikeysKey.__pulumiType;
    }

    /**
     * Human-readable display name of this API key. Modifiable by user.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString`
     * method.
     */
    public /*out*/ readonly keyString!: pulumi.Output<string>;
    /**
     * The resource name of the key. The name must be unique within the project, must conform with RFC-1034, is restricted to
     * lower-cased letters, and has a maximum length of 63 characters. In another word, the name must match the regular
     * expression: `a-z?`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The project for the resource
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Key restrictions.
     */
    public readonly restrictions!: pulumi.Output<outputs.ApikeysKeyRestrictions | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ApikeysKeyTimeouts | undefined>;
    /**
     * Output only. Unique id in UUID4 format.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;

    /**
     * Create a ApikeysKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApikeysKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApikeysKeyArgs | ApikeysKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApikeysKeyState | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["keyString"] = state ? state.keyString : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["restrictions"] = state ? state.restrictions : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
        } else {
            const args = argsOrState as ApikeysKeyArgs | undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["restrictions"] = args ? args.restrictions : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["keyString"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keyString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ApikeysKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApikeysKey resources.
 */
export interface ApikeysKeyState {
    /**
     * Human-readable display name of this API key. Modifiable by user.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString`
     * method.
     */
    keyString?: pulumi.Input<string>;
    /**
     * The resource name of the key. The name must be unique within the project, must conform with RFC-1034, is restricted to
     * lower-cased letters, and has a maximum length of 63 characters. In another word, the name must match the regular
     * expression: `a-z?`.
     */
    name?: pulumi.Input<string>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Key restrictions.
     */
    restrictions?: pulumi.Input<inputs.ApikeysKeyRestrictions>;
    timeouts?: pulumi.Input<inputs.ApikeysKeyTimeouts>;
    /**
     * Output only. Unique id in UUID4 format.
     */
    uid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApikeysKey resource.
 */
export interface ApikeysKeyArgs {
    /**
     * Human-readable display name of this API key. Modifiable by user.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The resource name of the key. The name must be unique within the project, must conform with RFC-1034, is restricted to
     * lower-cased letters, and has a maximum length of 63 characters. In another word, the name must match the regular
     * expression: `a-z?`.
     */
    name?: pulumi.Input<string>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Key restrictions.
     */
    restrictions?: pulumi.Input<inputs.ApikeysKeyRestrictions>;
    timeouts?: pulumi.Input<inputs.ApikeysKeyTimeouts>;
}
