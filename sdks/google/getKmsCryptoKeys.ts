// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsCryptoKeys(args: GetKmsCryptoKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsCryptoKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getKmsCryptoKeys:getKmsCryptoKeys", {
        "filter": args.filter,
        "id": args.id,
        "keyRing": args.keyRing,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsCryptoKeys.
 */
export interface GetKmsCryptoKeysArgs {
    filter?: string;
    id?: string;
    keyRing: string;
}

/**
 * A collection of values returned by getKmsCryptoKeys.
 */
export interface GetKmsCryptoKeysResult {
    readonly filter?: string;
    readonly id: string;
    readonly keyRing: string;
    readonly keys: outputs.GetKmsCryptoKeysKey[];
}
export function getKmsCryptoKeysOutput(args: GetKmsCryptoKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsCryptoKeysResult> {
    return pulumi.output(args).apply((a: any) => getKmsCryptoKeys(a, opts))
}

/**
 * A collection of arguments for invoking getKmsCryptoKeys.
 */
export interface GetKmsCryptoKeysOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keyRing: pulumi.Input<string>;
}
