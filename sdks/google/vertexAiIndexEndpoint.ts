// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VertexAiIndexEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing VertexAiIndexEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VertexAiIndexEndpointState, opts?: pulumi.CustomResourceOptions): VertexAiIndexEndpoint {
        return new VertexAiIndexEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/vertexAiIndexEndpoint:VertexAiIndexEndpoint';

    /**
     * Returns true if the given object is an instance of VertexAiIndexEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VertexAiIndexEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VertexAiIndexEndpoint.__pulumiType;
    }

    /**
     * The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the Index.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Used to perform consistent read-modify-write updates.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The resource name of the Index.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The full name of the Google Compute Engine
     * [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
     * peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
     * not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
     * 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
     * network name.
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
     */
    public readonly privateServiceConnectConfig!: pulumi.Output<outputs.VertexAiIndexEndpointPrivateServiceConnectConfig | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
     */
    public /*out*/ readonly publicEndpointDomainName!: pulumi.Output<string>;
    /**
     * If true, the deployed index will be accessible through public endpoint.
     */
    public readonly publicEndpointEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The region of the index endpoint. eg us-central1
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.VertexAiIndexEndpointTimeouts | undefined>;
    /**
     * The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a VertexAiIndexEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VertexAiIndexEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VertexAiIndexEndpointArgs | VertexAiIndexEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VertexAiIndexEndpointState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["privateServiceConnectConfig"] = state ? state.privateServiceConnectConfig : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["publicEndpointDomainName"] = state ? state.publicEndpointDomainName : undefined;
            resourceInputs["publicEndpointEnabled"] = state ? state.publicEndpointEnabled : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as VertexAiIndexEndpointArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["privateServiceConnectConfig"] = args ? args.privateServiceConnectConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["publicEndpointEnabled"] = args ? args.publicEndpointEnabled : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["publicEndpointDomainName"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VertexAiIndexEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VertexAiIndexEndpoint resources.
 */
export interface VertexAiIndexEndpointState {
    /**
     * The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the Index.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Used to perform consistent read-modify-write updates.
     */
    etag?: pulumi.Input<string>;
    /**
     * The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name of the Index.
     */
    name?: pulumi.Input<string>;
    /**
     * The full name of the Google Compute Engine
     * [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
     * peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
     * not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
     * 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
     * network name.
     */
    network?: pulumi.Input<string>;
    /**
     * Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
     */
    privateServiceConnectConfig?: pulumi.Input<inputs.VertexAiIndexEndpointPrivateServiceConnectConfig>;
    project?: pulumi.Input<string>;
    /**
     * If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
     */
    publicEndpointDomainName?: pulumi.Input<string>;
    /**
     * If true, the deployed index will be accessible through public endpoint.
     */
    publicEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * The region of the index endpoint. eg us-central1
     */
    region?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VertexAiIndexEndpointTimeouts>;
    /**
     * The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VertexAiIndexEndpoint resource.
 */
export interface VertexAiIndexEndpointArgs {
    /**
     * The description of the Index.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    displayName: pulumi.Input<string>;
    /**
     * The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The full name of the Google Compute Engine
     * [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
     * peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
     * not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
     * 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
     * network name.
     */
    network?: pulumi.Input<string>;
    /**
     * Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
     */
    privateServiceConnectConfig?: pulumi.Input<inputs.VertexAiIndexEndpointPrivateServiceConnectConfig>;
    project?: pulumi.Input<string>;
    /**
     * If true, the deployed index will be accessible through public endpoint.
     */
    publicEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * The region of the index endpoint. eg us-central1
     */
    region?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VertexAiIndexEndpointTimeouts>;
}
