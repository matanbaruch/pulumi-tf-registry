// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeSnapshot(args?: GetComputeSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getComputeSnapshot:getComputeSnapshot", {
        "filter": args.filter,
        "id": args.id,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeSnapshot.
 */
export interface GetComputeSnapshotArgs {
    filter?: string;
    id?: string;
    mostRecent?: boolean;
    name?: string;
    project?: string;
}

/**
 * A collection of values returned by getComputeSnapshot.
 */
export interface GetComputeSnapshotResult {
    readonly chainName: string;
    readonly creationTimestamp: string;
    readonly description: string;
    readonly diskSizeGb: number;
    readonly effectiveLabels: {[key: string]: string};
    readonly filter?: string;
    readonly id: string;
    readonly labelFingerprint: string;
    readonly labels: {[key: string]: string};
    readonly licenses: string[];
    readonly mostRecent?: boolean;
    readonly name?: string;
    readonly project?: string;
    readonly selfLink: string;
    readonly snapshotEncryptionKeys: outputs.GetComputeSnapshotSnapshotEncryptionKey[];
    readonly snapshotId: number;
    readonly sourceDisk: string;
    readonly sourceDiskEncryptionKeys: outputs.GetComputeSnapshotSourceDiskEncryptionKey[];
    readonly storageBytes: number;
    readonly storageLocations: string[];
    readonly terraformLabels: {[key: string]: string};
    readonly zone: string;
}
export function getComputeSnapshotOutput(args?: GetComputeSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getComputeSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getComputeSnapshot.
 */
export interface GetComputeSnapshotOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
