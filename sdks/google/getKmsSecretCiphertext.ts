// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKmsSecretCiphertext(args: GetKmsSecretCiphertextArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsSecretCiphertextResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getKmsSecretCiphertext:getKmsSecretCiphertext", {
        "cryptoKey": args.cryptoKey,
        "id": args.id,
        "plaintext": args.plaintext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsSecretCiphertext.
 */
export interface GetKmsSecretCiphertextArgs {
    cryptoKey: string;
    id?: string;
    plaintext: string;
}

/**
 * A collection of values returned by getKmsSecretCiphertext.
 */
export interface GetKmsSecretCiphertextResult {
    readonly ciphertext: string;
    readonly cryptoKey: string;
    readonly id: string;
    readonly plaintext: string;
}
export function getKmsSecretCiphertextOutput(args: GetKmsSecretCiphertextOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsSecretCiphertextResult> {
    return pulumi.output(args).apply((a: any) => getKmsSecretCiphertext(a, opts))
}

/**
 * A collection of arguments for invoking getKmsSecretCiphertext.
 */
export interface GetKmsSecretCiphertextOutputArgs {
    cryptoKey: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    plaintext: pulumi.Input<string>;
}
