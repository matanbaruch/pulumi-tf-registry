// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeInterconnect extends pulumi.CustomResource {
    /**
     * Get an existing ComputeInterconnect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeInterconnectState, opts?: pulumi.CustomResourceOptions): ComputeInterconnect {
        return new ComputeInterconnect(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/computeInterconnect:ComputeInterconnect';

    /**
     * Returns true if the given object is an instance of ComputeInterconnect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeInterconnect {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeInterconnect.__pulumiType;
    }

    /**
     * Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
     * traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
     * default, the status is set to true.
     */
    public readonly adminEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * interconnects.list of features available for this Interconnect connection. Can take the value: MACSEC. If present then
     * the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect
     * connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails).
     */
    public /*out*/ readonly availableFeatures!: pulumi.Output<string[]>;
    /**
     * A list of CircuitInfo objects, that describe the individual circuits in this LAG.
     */
    public /*out*/ readonly circuitInfos!: pulumi.Output<outputs.ComputeInterconnectCircuitInfo[]>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.
     */
    public readonly customerName!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * A list of outages expected for this Interconnect.
     */
    public /*out*/ readonly expectedOutages!: pulumi.Output<outputs.ComputeInterconnectExpectedOutage[]>;
    /**
     * IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
     */
    public /*out*/ readonly googleIpAddress!: pulumi.Output<string>;
    /**
     * Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity
     * issues.
     */
    public /*out*/ readonly googleReferenceId!: pulumi.Output<string>;
    /**
     * A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
     */
    public /*out*/ readonly interconnectAttachments!: pulumi.Output<string[]>;
    /**
     * Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
     * following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
     * dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
     */
    public readonly interconnectType!: pulumi.Output<string>;
    /**
     * A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for
     * optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify
     * or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise
     * the request will fail with error 412 conditionNotMet.
     */
    public /*out*/ readonly labelFingerprint!: pulumi.Output<string>;
    /**
     * Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
     * comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
     * the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
     * LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
     * "LINK_TYPE_ETHERNET_100G_LR"]
     */
    public readonly linkType!: pulumi.Output<string>;
    /**
     * URL of the InterconnectLocation object that represents where this connection is to be provisioned.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
     * and your on-premises router.
     */
    public readonly macsec!: pulumi.Output<outputs.ComputeInterconnectMacsec | undefined>;
    /**
     * Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
     */
    public readonly macsecEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
     * specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
     * alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
     * identity federation.
     */
    public readonly nocContactEmail!: pulumi.Output<string | undefined>;
    /**
     * The current status of this Interconnect's functionality, which can take one of the following: - OS_ACTIVE: A valid
     * Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. -
     * OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect.
     * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or
     * updated on this Interconnect.
     */
    public /*out*/ readonly operationalStatus!: pulumi.Output<string>;
    /**
     * IP address configured on the customer side of the Interconnect link. The customer should configure this IP address
     * during turnup when prompted by Google NOC. This can be used only for ping tests.
     */
    public /*out*/ readonly peerIpAddress!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Number of links actually provisioned in this interconnect.
     */
    public /*out*/ readonly provisionedLinkCount!: pulumi.Output<number>;
    /**
     * Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
     * the interconnect is connected to.
     */
    public readonly remoteLocation!: pulumi.Output<string | undefined>;
    /**
     * interconnects.list of features requested for this Interconnect connection. Options: MACSEC ( If specified then the
     * connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
     * non-MACsec capable ports first if available). Possible values: ["MACSEC"]
     */
    public readonly requestedFeatures!: pulumi.Output<string[] | undefined>;
    /**
     * Target number of physical links in the link bundle, as requested by the customer.
     */
    public readonly requestedLinkCount!: pulumi.Output<number>;
    /**
     * Reserved for future use.
     */
    public /*out*/ readonly satisfiesPzs!: pulumi.Output<boolean>;
    /**
     * The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect
     * is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The
     * Interconnect has not completed turnup. No attachments may b provisioned on this Interconnect. - UNDER_MAINTENANCE: The
     * Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeInterconnectTimeouts | undefined>;

    /**
     * Create a ComputeInterconnect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeInterconnectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeInterconnectArgs | ComputeInterconnectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeInterconnectState | undefined;
            resourceInputs["adminEnabled"] = state ? state.adminEnabled : undefined;
            resourceInputs["availableFeatures"] = state ? state.availableFeatures : undefined;
            resourceInputs["circuitInfos"] = state ? state.circuitInfos : undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["customerName"] = state ? state.customerName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["expectedOutages"] = state ? state.expectedOutages : undefined;
            resourceInputs["googleIpAddress"] = state ? state.googleIpAddress : undefined;
            resourceInputs["googleReferenceId"] = state ? state.googleReferenceId : undefined;
            resourceInputs["interconnectAttachments"] = state ? state.interconnectAttachments : undefined;
            resourceInputs["interconnectType"] = state ? state.interconnectType : undefined;
            resourceInputs["labelFingerprint"] = state ? state.labelFingerprint : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["linkType"] = state ? state.linkType : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["macsec"] = state ? state.macsec : undefined;
            resourceInputs["macsecEnabled"] = state ? state.macsecEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nocContactEmail"] = state ? state.nocContactEmail : undefined;
            resourceInputs["operationalStatus"] = state ? state.operationalStatus : undefined;
            resourceInputs["peerIpAddress"] = state ? state.peerIpAddress : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["provisionedLinkCount"] = state ? state.provisionedLinkCount : undefined;
            resourceInputs["remoteLocation"] = state ? state.remoteLocation : undefined;
            resourceInputs["requestedFeatures"] = state ? state.requestedFeatures : undefined;
            resourceInputs["requestedLinkCount"] = state ? state.requestedLinkCount : undefined;
            resourceInputs["satisfiesPzs"] = state ? state.satisfiesPzs : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ComputeInterconnectArgs | undefined;
            if ((!args || args.customerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerName'");
            }
            if ((!args || args.interconnectType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interconnectType'");
            }
            if ((!args || args.linkType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'linkType'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.requestedLinkCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requestedLinkCount'");
            }
            resourceInputs["adminEnabled"] = args ? args.adminEnabled : undefined;
            resourceInputs["customerName"] = args ? args.customerName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["interconnectType"] = args ? args.interconnectType : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["linkType"] = args ? args.linkType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["macsec"] = args ? args.macsec : undefined;
            resourceInputs["macsecEnabled"] = args ? args.macsecEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nocContactEmail"] = args ? args.nocContactEmail : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["remoteLocation"] = args ? args.remoteLocation : undefined;
            resourceInputs["requestedFeatures"] = args ? args.requestedFeatures : undefined;
            resourceInputs["requestedLinkCount"] = args ? args.requestedLinkCount : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["availableFeatures"] = undefined /*out*/;
            resourceInputs["circuitInfos"] = undefined /*out*/;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["expectedOutages"] = undefined /*out*/;
            resourceInputs["googleIpAddress"] = undefined /*out*/;
            resourceInputs["googleReferenceId"] = undefined /*out*/;
            resourceInputs["interconnectAttachments"] = undefined /*out*/;
            resourceInputs["labelFingerprint"] = undefined /*out*/;
            resourceInputs["operationalStatus"] = undefined /*out*/;
            resourceInputs["peerIpAddress"] = undefined /*out*/;
            resourceInputs["provisionedLinkCount"] = undefined /*out*/;
            resourceInputs["satisfiesPzs"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeInterconnect.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeInterconnect resources.
 */
export interface ComputeInterconnectState {
    /**
     * Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
     * traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
     * default, the status is set to true.
     */
    adminEnabled?: pulumi.Input<boolean>;
    /**
     * interconnects.list of features available for this Interconnect connection. Can take the value: MACSEC. If present then
     * the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect
     * connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails).
     */
    availableFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of CircuitInfo objects, that describe the individual circuits in this LAG.
     */
    circuitInfos?: pulumi.Input<pulumi.Input<inputs.ComputeInterconnectCircuitInfo>[]>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.
     */
    customerName?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of outages expected for this Interconnect.
     */
    expectedOutages?: pulumi.Input<pulumi.Input<inputs.ComputeInterconnectExpectedOutage>[]>;
    /**
     * IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
     */
    googleIpAddress?: pulumi.Input<string>;
    /**
     * Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity
     * issues.
     */
    googleReferenceId?: pulumi.Input<string>;
    /**
     * A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
     */
    interconnectAttachments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
     * following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
     * dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
     */
    interconnectType?: pulumi.Input<string>;
    /**
     * A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for
     * optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify
     * or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise
     * the request will fail with error 412 conditionNotMet.
     */
    labelFingerprint?: pulumi.Input<string>;
    /**
     * Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
     * comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
     * the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
     * LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
     * "LINK_TYPE_ETHERNET_100G_LR"]
     */
    linkType?: pulumi.Input<string>;
    /**
     * URL of the InterconnectLocation object that represents where this connection is to be provisioned.
     */
    location?: pulumi.Input<string>;
    /**
     * Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
     * and your on-premises router.
     */
    macsec?: pulumi.Input<inputs.ComputeInterconnectMacsec>;
    /**
     * Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
     */
    macsecEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
     * specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
     * alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
     * identity federation.
     */
    nocContactEmail?: pulumi.Input<string>;
    /**
     * The current status of this Interconnect's functionality, which can take one of the following: - OS_ACTIVE: A valid
     * Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. -
     * OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect.
     * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or
     * updated on this Interconnect.
     */
    operationalStatus?: pulumi.Input<string>;
    /**
     * IP address configured on the customer side of the Interconnect link. The customer should configure this IP address
     * during turnup when prompted by Google NOC. This can be used only for ping tests.
     */
    peerIpAddress?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Number of links actually provisioned in this interconnect.
     */
    provisionedLinkCount?: pulumi.Input<number>;
    /**
     * Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
     * the interconnect is connected to.
     */
    remoteLocation?: pulumi.Input<string>;
    /**
     * interconnects.list of features requested for this Interconnect connection. Options: MACSEC ( If specified then the
     * connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
     * non-MACsec capable ports first if available). Possible values: ["MACSEC"]
     */
    requestedFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Target number of physical links in the link bundle, as requested by the customer.
     */
    requestedLinkCount?: pulumi.Input<number>;
    /**
     * Reserved for future use.
     */
    satisfiesPzs?: pulumi.Input<boolean>;
    /**
     * The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect
     * is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The
     * Interconnect has not completed turnup. No attachments may b provisioned on this Interconnect. - UNDER_MAINTENANCE: The
     * Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ComputeInterconnectTimeouts>;
}

/**
 * The set of arguments for constructing a ComputeInterconnect resource.
 */
export interface ComputeInterconnectArgs {
    /**
     * Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
     * traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
     * default, the status is set to true.
     */
    adminEnabled?: pulumi.Input<boolean>;
    /**
     * Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.
     */
    customerName: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
     * following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
     * dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
     */
    interconnectType: pulumi.Input<string>;
    /**
     * Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
     * comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
     * the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
     * LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
     * "LINK_TYPE_ETHERNET_100G_LR"]
     */
    linkType: pulumi.Input<string>;
    /**
     * URL of the InterconnectLocation object that represents where this connection is to be provisioned.
     */
    location: pulumi.Input<string>;
    /**
     * Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
     * and your on-premises router.
     */
    macsec?: pulumi.Input<inputs.ComputeInterconnectMacsec>;
    /**
     * Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
     */
    macsecEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
     * specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
     * alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
     * identity federation.
     */
    nocContactEmail?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
     * the interconnect is connected to.
     */
    remoteLocation?: pulumi.Input<string>;
    /**
     * interconnects.list of features requested for this Interconnect connection. Options: MACSEC ( If specified then the
     * connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
     * non-MACsec capable ports first if available). Possible values: ["MACSEC"]
     */
    requestedFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Target number of physical links in the link bundle, as requested by the customer.
     */
    requestedLinkCount: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.ComputeInterconnectTimeouts>;
}
