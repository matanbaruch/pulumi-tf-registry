// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatastreamConnectionProfile extends pulumi.CustomResource {
    /**
     * Get an existing DatastreamConnectionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatastreamConnectionProfileState, opts?: pulumi.CustomResourceOptions): DatastreamConnectionProfile {
        return new DatastreamConnectionProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/datastreamConnectionProfile:DatastreamConnectionProfile';

    /**
     * Returns true if the given object is an instance of DatastreamConnectionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatastreamConnectionProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatastreamConnectionProfile.__pulumiType;
    }

    /**
     * BigQuery warehouse profile.
     */
    public readonly bigqueryProfile!: pulumi.Output<outputs.DatastreamConnectionProfileBigqueryProfile | undefined>;
    /**
     * The connection profile identifier.
     */
    public readonly connectionProfileId!: pulumi.Output<string>;
    /**
     * Create the connection profile without validating it.
     */
    public readonly createWithoutValidation!: pulumi.Output<boolean | undefined>;
    /**
     * Display name.
     */
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Forward SSH tunnel connectivity.
     */
    public readonly forwardSshConnectivity!: pulumi.Output<outputs.DatastreamConnectionProfileForwardSshConnectivity | undefined>;
    /**
     * Cloud Storage bucket profile.
     */
    public readonly gcsProfile!: pulumi.Output<outputs.DatastreamConnectionProfileGcsProfile | undefined>;
    /**
     * Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
     * refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the location this connection profile is located in.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * MySQL database profile.
     */
    public readonly mysqlProfile!: pulumi.Output<outputs.DatastreamConnectionProfileMysqlProfile | undefined>;
    /**
     * The resource's name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Oracle database profile.
     */
    public readonly oracleProfile!: pulumi.Output<outputs.DatastreamConnectionProfileOracleProfile | undefined>;
    /**
     * PostgreSQL database profile.
     */
    public readonly postgresqlProfile!: pulumi.Output<outputs.DatastreamConnectionProfilePostgresqlProfile | undefined>;
    /**
     * Private connectivity.
     */
    public readonly privateConnectivity!: pulumi.Output<outputs.DatastreamConnectionProfilePrivateConnectivity | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * SQL Server database profile.
     */
    public readonly sqlServerProfile!: pulumi.Output<outputs.DatastreamConnectionProfileSqlServerProfile | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DatastreamConnectionProfileTimeouts | undefined>;

    /**
     * Create a DatastreamConnectionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatastreamConnectionProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatastreamConnectionProfileArgs | DatastreamConnectionProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatastreamConnectionProfileState | undefined;
            resourceInputs["bigqueryProfile"] = state ? state.bigqueryProfile : undefined;
            resourceInputs["connectionProfileId"] = state ? state.connectionProfileId : undefined;
            resourceInputs["createWithoutValidation"] = state ? state.createWithoutValidation : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["forwardSshConnectivity"] = state ? state.forwardSshConnectivity : undefined;
            resourceInputs["gcsProfile"] = state ? state.gcsProfile : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mysqlProfile"] = state ? state.mysqlProfile : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oracleProfile"] = state ? state.oracleProfile : undefined;
            resourceInputs["postgresqlProfile"] = state ? state.postgresqlProfile : undefined;
            resourceInputs["privateConnectivity"] = state ? state.privateConnectivity : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["sqlServerProfile"] = state ? state.sqlServerProfile : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatastreamConnectionProfileArgs | undefined;
            if ((!args || args.connectionProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionProfileId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["bigqueryProfile"] = args ? args.bigqueryProfile : undefined;
            resourceInputs["connectionProfileId"] = args ? args.connectionProfileId : undefined;
            resourceInputs["createWithoutValidation"] = args ? args.createWithoutValidation : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["forwardSshConnectivity"] = args ? args.forwardSshConnectivity : undefined;
            resourceInputs["gcsProfile"] = args ? args.gcsProfile : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mysqlProfile"] = args ? args.mysqlProfile : undefined;
            resourceInputs["oracleProfile"] = args ? args.oracleProfile : undefined;
            resourceInputs["postgresqlProfile"] = args ? args.postgresqlProfile : undefined;
            resourceInputs["privateConnectivity"] = args ? args.privateConnectivity : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["sqlServerProfile"] = args ? args.sqlServerProfile : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatastreamConnectionProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatastreamConnectionProfile resources.
 */
export interface DatastreamConnectionProfileState {
    /**
     * BigQuery warehouse profile.
     */
    bigqueryProfile?: pulumi.Input<inputs.DatastreamConnectionProfileBigqueryProfile>;
    /**
     * The connection profile identifier.
     */
    connectionProfileId?: pulumi.Input<string>;
    /**
     * Create the connection profile without validating it.
     */
    createWithoutValidation?: pulumi.Input<boolean>;
    /**
     * Display name.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Forward SSH tunnel connectivity.
     */
    forwardSshConnectivity?: pulumi.Input<inputs.DatastreamConnectionProfileForwardSshConnectivity>;
    /**
     * Cloud Storage bucket profile.
     */
    gcsProfile?: pulumi.Input<inputs.DatastreamConnectionProfileGcsProfile>;
    /**
     * Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
     * refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the location this connection profile is located in.
     */
    location?: pulumi.Input<string>;
    /**
     * MySQL database profile.
     */
    mysqlProfile?: pulumi.Input<inputs.DatastreamConnectionProfileMysqlProfile>;
    /**
     * The resource's name.
     */
    name?: pulumi.Input<string>;
    /**
     * Oracle database profile.
     */
    oracleProfile?: pulumi.Input<inputs.DatastreamConnectionProfileOracleProfile>;
    /**
     * PostgreSQL database profile.
     */
    postgresqlProfile?: pulumi.Input<inputs.DatastreamConnectionProfilePostgresqlProfile>;
    /**
     * Private connectivity.
     */
    privateConnectivity?: pulumi.Input<inputs.DatastreamConnectionProfilePrivateConnectivity>;
    project?: pulumi.Input<string>;
    /**
     * SQL Server database profile.
     */
    sqlServerProfile?: pulumi.Input<inputs.DatastreamConnectionProfileSqlServerProfile>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DatastreamConnectionProfileTimeouts>;
}

/**
 * The set of arguments for constructing a DatastreamConnectionProfile resource.
 */
export interface DatastreamConnectionProfileArgs {
    /**
     * BigQuery warehouse profile.
     */
    bigqueryProfile?: pulumi.Input<inputs.DatastreamConnectionProfileBigqueryProfile>;
    /**
     * The connection profile identifier.
     */
    connectionProfileId: pulumi.Input<string>;
    /**
     * Create the connection profile without validating it.
     */
    createWithoutValidation?: pulumi.Input<boolean>;
    /**
     * Display name.
     */
    displayName: pulumi.Input<string>;
    /**
     * Forward SSH tunnel connectivity.
     */
    forwardSshConnectivity?: pulumi.Input<inputs.DatastreamConnectionProfileForwardSshConnectivity>;
    /**
     * Cloud Storage bucket profile.
     */
    gcsProfile?: pulumi.Input<inputs.DatastreamConnectionProfileGcsProfile>;
    /**
     * Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
     * refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the location this connection profile is located in.
     */
    location: pulumi.Input<string>;
    /**
     * MySQL database profile.
     */
    mysqlProfile?: pulumi.Input<inputs.DatastreamConnectionProfileMysqlProfile>;
    /**
     * Oracle database profile.
     */
    oracleProfile?: pulumi.Input<inputs.DatastreamConnectionProfileOracleProfile>;
    /**
     * PostgreSQL database profile.
     */
    postgresqlProfile?: pulumi.Input<inputs.DatastreamConnectionProfilePostgresqlProfile>;
    /**
     * Private connectivity.
     */
    privateConnectivity?: pulumi.Input<inputs.DatastreamConnectionProfilePrivateConnectivity>;
    project?: pulumi.Input<string>;
    /**
     * SQL Server database profile.
     */
    sqlServerProfile?: pulumi.Input<inputs.DatastreamConnectionProfileSqlServerProfile>;
    timeouts?: pulumi.Input<inputs.DatastreamConnectionProfileTimeouts>;
}
