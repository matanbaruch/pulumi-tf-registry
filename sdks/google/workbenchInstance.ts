// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WorkbenchInstance extends pulumi.CustomResource {
    /**
     * Get an existing WorkbenchInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkbenchInstanceState, opts?: pulumi.CustomResourceOptions): WorkbenchInstance {
        return new WorkbenchInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/workbenchInstance:WorkbenchInstance';

    /**
     * Returns true if the given object is an instance of WorkbenchInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkbenchInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkbenchInstance.__pulumiType;
    }

    /**
     * An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ. The milliseconds portion (".SSS") is
     * optional.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Output only. Email address of entity that sent original CreateInstance request.
     */
    public /*out*/ readonly creator!: pulumi.Output<string>;
    /**
     * Desired state of the Workbench Instance. Set this field to 'ACTIVE' to start the Instance, and 'STOPPED' to stop the
     * Instance.
     */
    public readonly desiredState!: pulumi.Output<string | undefined>;
    /**
     * Optional. If true, the workbench instance will not register with the proxy.
     */
    public readonly disableProxyAccess!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The definition of how to configure a VM instance outside of Resources and Identity.
     */
    public readonly gceSetup!: pulumi.Output<outputs.WorkbenchInstanceGceSetup | undefined>;
    /**
     * 'Output only. Additional information about instance health. Example: healthInfo": { "docker_proxy_agent_status": "1",
     * "docker_status": "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409"
     * }'
     */
    public /*out*/ readonly healthInfos!: pulumi.Output<outputs.WorkbenchInstanceHealthInfo[]>;
    /**
     * Output only. Instance health_state.
     */
    public /*out*/ readonly healthState!: pulumi.Output<string>;
    /**
     * Required. User-defined unique ID of this instance.
     */
    public readonly instanceId!: pulumi.Output<string | undefined>;
    /**
     * 'Optional. Input only. The owner of this instance after creation. Format: 'alias@example.com' Currently supports one
     * owner only. If not specified, all of the service account users of your VM instance''s service account can use the
     * instance.'
     */
    public readonly instanceOwners!: pulumi.Output<string[] | undefined>;
    /**
     * Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance method. **Note**: This
     * field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Part of 'parent'. See documentation of 'projectsId'.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of this workbench instance. Format: 'projects/{project_id}/locations/{location}/instances/{instance_id}'
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Output only. The proxy endpoint that is used to access the Jupyter notebook.
     */
    public /*out*/ readonly proxyUri!: pulumi.Output<string>;
    /**
     * Output only. The state of this instance.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.WorkbenchInstanceTimeouts | undefined>;
    /**
     * An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ. The milliseconds portion (".SSS") is
     * optional.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Output only. The upgrade history of this instance.
     */
    public /*out*/ readonly upgradeHistories!: pulumi.Output<outputs.WorkbenchInstanceUpgradeHistory[]>;

    /**
     * Create a WorkbenchInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkbenchInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkbenchInstanceArgs | WorkbenchInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkbenchInstanceState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["desiredState"] = state ? state.desiredState : undefined;
            resourceInputs["disableProxyAccess"] = state ? state.disableProxyAccess : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["gceSetup"] = state ? state.gceSetup : undefined;
            resourceInputs["healthInfos"] = state ? state.healthInfos : undefined;
            resourceInputs["healthState"] = state ? state.healthState : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceOwners"] = state ? state.instanceOwners : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["proxyUri"] = state ? state.proxyUri : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["upgradeHistories"] = state ? state.upgradeHistories : undefined;
        } else {
            const args = argsOrState as WorkbenchInstanceArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["desiredState"] = args ? args.desiredState : undefined;
            resourceInputs["disableProxyAccess"] = args ? args.disableProxyAccess : undefined;
            resourceInputs["gceSetup"] = args ? args.gceSetup : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["instanceOwners"] = args ? args.instanceOwners : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["healthInfos"] = undefined /*out*/;
            resourceInputs["healthState"] = undefined /*out*/;
            resourceInputs["proxyUri"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["upgradeHistories"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkbenchInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WorkbenchInstance resources.
 */
export interface WorkbenchInstanceState {
    /**
     * An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ. The milliseconds portion (".SSS") is
     * optional.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Output only. Email address of entity that sent original CreateInstance request.
     */
    creator?: pulumi.Input<string>;
    /**
     * Desired state of the Workbench Instance. Set this field to 'ACTIVE' to start the Instance, and 'STOPPED' to stop the
     * Instance.
     */
    desiredState?: pulumi.Input<string>;
    /**
     * Optional. If true, the workbench instance will not register with the proxy.
     */
    disableProxyAccess?: pulumi.Input<boolean>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The definition of how to configure a VM instance outside of Resources and Identity.
     */
    gceSetup?: pulumi.Input<inputs.WorkbenchInstanceGceSetup>;
    /**
     * 'Output only. Additional information about instance health. Example: healthInfo": { "docker_proxy_agent_status": "1",
     * "docker_status": "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409"
     * }'
     */
    healthInfos?: pulumi.Input<pulumi.Input<inputs.WorkbenchInstanceHealthInfo>[]>;
    /**
     * Output only. Instance health_state.
     */
    healthState?: pulumi.Input<string>;
    /**
     * Required. User-defined unique ID of this instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * 'Optional. Input only. The owner of this instance after creation. Format: 'alias@example.com' Currently supports one
     * owner only. If not specified, all of the service account users of your VM instance''s service account can use the
     * instance.'
     */
    instanceOwners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance method. **Note**: This
     * field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Part of 'parent'. See documentation of 'projectsId'.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of this workbench instance. Format: 'projects/{project_id}/locations/{location}/instances/{instance_id}'
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Output only. The proxy endpoint that is used to access the Jupyter notebook.
     */
    proxyUri?: pulumi.Input<string>;
    /**
     * Output only. The state of this instance.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.WorkbenchInstanceTimeouts>;
    /**
     * An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ. The milliseconds portion (".SSS") is
     * optional.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Output only. The upgrade history of this instance.
     */
    upgradeHistories?: pulumi.Input<pulumi.Input<inputs.WorkbenchInstanceUpgradeHistory>[]>;
}

/**
 * The set of arguments for constructing a WorkbenchInstance resource.
 */
export interface WorkbenchInstanceArgs {
    /**
     * Desired state of the Workbench Instance. Set this field to 'ACTIVE' to start the Instance, and 'STOPPED' to stop the
     * Instance.
     */
    desiredState?: pulumi.Input<string>;
    /**
     * Optional. If true, the workbench instance will not register with the proxy.
     */
    disableProxyAccess?: pulumi.Input<boolean>;
    /**
     * The definition of how to configure a VM instance outside of Resources and Identity.
     */
    gceSetup?: pulumi.Input<inputs.WorkbenchInstanceGceSetup>;
    /**
     * Required. User-defined unique ID of this instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * 'Optional. Input only. The owner of this instance after creation. Format: 'alias@example.com' Currently supports one
     * owner only. If not specified, all of the service account users of your VM instance''s service account can use the
     * instance.'
     */
    instanceOwners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance method. **Note**: This
     * field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Part of 'parent'. See documentation of 'projectsId'.
     */
    location: pulumi.Input<string>;
    /**
     * The name of this workbench instance. Format: 'projects/{project_id}/locations/{location}/instances/{instance_id}'
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.WorkbenchInstanceTimeouts>;
}
