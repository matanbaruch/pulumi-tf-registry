// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataprocWorkflowTemplate extends pulumi.CustomResource {
    /**
     * Get an existing DataprocWorkflowTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataprocWorkflowTemplateState, opts?: pulumi.CustomResourceOptions): DataprocWorkflowTemplate {
        return new DataprocWorkflowTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/dataprocWorkflowTemplate:DataprocWorkflowTemplate';

    /**
     * Returns true if the given object is an instance of DataprocWorkflowTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataprocWorkflowTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataprocWorkflowTemplate.__pulumiType;
    }

    /**
     * Output only. The time template was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Timeout duration for the DAG of jobs, expressed in seconds (see [JSON representation of
     * duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10
     * minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at
     * the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running
     * on a [managed
     * cluster](https://www.terraform.io/dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster),
     * the cluster is deleted.
     */
    public readonly dagTimeout!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Required. The Directed Acyclic Graph of Jobs to submit.
     */
    public readonly jobs!: pulumi.Output<outputs.DataprocWorkflowTemplateJob[]>;
    /**
     * Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created
     * by the workflow instance. Label **keys** must contain 1 to 63 characters, and must conform to [RFC
     * 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63
     * characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
     * associated with a template. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field `effective_labels` for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location for the resource
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Output only. The resource name of the workflow template, as described in
     * https://cloud.google.com/apis/design/resource_names. * For `projects.regions.workflowTemplates`, the resource name of
     * the template has the following format: `projects/{project_id}/regions/{region}/workflowTemplates/{template_id}` * For
     * `projects.locations.workflowTemplates`, the resource name of the template has the following format:
     * `projects/{project_id}/locations/{location}/workflowTemplates/{template_id}`
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided
     * when the template is instantiated.
     */
    public readonly parameters!: pulumi.Output<outputs.DataprocWorkflowTemplateParameter[] | undefined>;
    /**
     * Required. WorkflowTemplate scheduling information.
     */
    public readonly placement!: pulumi.Output<outputs.DataprocWorkflowTemplatePlacement>;
    /**
     * The project for the resource
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DataprocWorkflowTemplateTimeouts | undefined>;
    /**
     * Output only. The time template was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Output only. The current version of this workflow template.
     *
     * @deprecated Deprecated
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a DataprocWorkflowTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataprocWorkflowTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataprocWorkflowTemplateArgs | DataprocWorkflowTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataprocWorkflowTemplateState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dagTimeout"] = state ? state.dagTimeout : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["jobs"] = state ? state.jobs : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["placement"] = state ? state.placement : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as DataprocWorkflowTemplateArgs | undefined;
            if ((!args || args.jobs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobs'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.placement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'placement'");
            }
            resourceInputs["dagTimeout"] = args ? args.dagTimeout : undefined;
            resourceInputs["jobs"] = args ? args.jobs : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["placement"] = args ? args.placement : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataprocWorkflowTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataprocWorkflowTemplate resources.
 */
export interface DataprocWorkflowTemplateState {
    /**
     * Output only. The time template was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. Timeout duration for the DAG of jobs, expressed in seconds (see [JSON representation of
     * duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10
     * minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at
     * the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running
     * on a [managed
     * cluster](https://www.terraform.io/dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster),
     * the cluster is deleted.
     */
    dagTimeout?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Required. The Directed Acyclic Graph of Jobs to submit.
     */
    jobs?: pulumi.Input<pulumi.Input<inputs.DataprocWorkflowTemplateJob>[]>;
    /**
     * Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created
     * by the workflow instance. Label **keys** must contain 1 to 63 characters, and must conform to [RFC
     * 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63
     * characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
     * associated with a template. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field `effective_labels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    /**
     * Output only. The resource name of the workflow template, as described in
     * https://cloud.google.com/apis/design/resource_names. * For `projects.regions.workflowTemplates`, the resource name of
     * the template has the following format: `projects/{project_id}/regions/{region}/workflowTemplates/{template_id}` * For
     * `projects.locations.workflowTemplates`, the resource name of the template has the following format:
     * `projects/{project_id}/locations/{location}/workflowTemplates/{template_id}`
     */
    name?: pulumi.Input<string>;
    /**
     * Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided
     * when the template is instantiated.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.DataprocWorkflowTemplateParameter>[]>;
    /**
     * Required. WorkflowTemplate scheduling information.
     */
    placement?: pulumi.Input<inputs.DataprocWorkflowTemplatePlacement>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DataprocWorkflowTemplateTimeouts>;
    /**
     * Output only. The time template was last updated.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Output only. The current version of this workflow template.
     *
     * @deprecated Deprecated
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DataprocWorkflowTemplate resource.
 */
export interface DataprocWorkflowTemplateArgs {
    /**
     * Optional. Timeout duration for the DAG of jobs, expressed in seconds (see [JSON representation of
     * duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10
     * minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at
     * the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running
     * on a [managed
     * cluster](https://www.terraform.io/dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster),
     * the cluster is deleted.
     */
    dagTimeout?: pulumi.Input<string>;
    /**
     * Required. The Directed Acyclic Graph of Jobs to submit.
     */
    jobs: pulumi.Input<pulumi.Input<inputs.DataprocWorkflowTemplateJob>[]>;
    /**
     * Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created
     * by the workflow instance. Label **keys** must contain 1 to 63 characters, and must conform to [RFC
     * 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63
     * characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
     * associated with a template. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field `effective_labels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location for the resource
     */
    location: pulumi.Input<string>;
    /**
     * Output only. The resource name of the workflow template, as described in
     * https://cloud.google.com/apis/design/resource_names. * For `projects.regions.workflowTemplates`, the resource name of
     * the template has the following format: `projects/{project_id}/regions/{region}/workflowTemplates/{template_id}` * For
     * `projects.locations.workflowTemplates`, the resource name of the template has the following format:
     * `projects/{project_id}/locations/{location}/workflowTemplates/{template_id}`
     */
    name?: pulumi.Input<string>;
    /**
     * Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided
     * when the template is instantiated.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.DataprocWorkflowTemplateParameter>[]>;
    /**
     * Required. WorkflowTemplate scheduling information.
     */
    placement: pulumi.Input<inputs.DataprocWorkflowTemplatePlacement>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataprocWorkflowTemplateTimeouts>;
    /**
     * Output only. The current version of this workflow template.
     *
     * @deprecated Deprecated
     */
    version?: pulumi.Input<number>;
}
