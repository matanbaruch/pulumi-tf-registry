// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SpannerInstance extends pulumi.CustomResource {
    /**
     * Get an existing SpannerInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpannerInstanceState, opts?: pulumi.CustomResourceOptions): SpannerInstance {
        return new SpannerInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/spannerInstance:SpannerInstance';

    /**
     * Returns true if the given object is an instance of SpannerInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpannerInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpannerInstance.__pulumiType;
    }

    /**
     * The autoscaling configuration. Autoscaling is enabled if this field is set. When autoscaling is enabled, num_nodes and
     * processing_units are treated as, OUTPUT_ONLY fields and reflect the current compute capacity allocated to the instance.
     */
    public readonly autoscalingConfig!: pulumi.Output<outputs.SpannerInstanceAutoscalingConfig | undefined>;
    /**
     * The name of the instance's configuration (similar but not quite the same as a region) which defines the geographic
     * placement and replication of your databases in this instance. It determines where your data is stored. Values are
     * typically of the form 'regional-europe-west1' , 'us-central' etc. In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     */
    public readonly config!: pulumi.Output<string>;
    /**
     * The descriptive name for this instance as it appears in UIs. Must be unique per project and between 4 and 30 characters
     * in length.
     */
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * When deleting a spanner instance, this boolean option will delete all backups of this instance. This must be set to true
     * if you created a backup manually in the console.
     */
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
     * to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A unique identifier for the instance, which cannot be changed after the instance is created. The name must be between 6
     * and 30 characters in length. If not provided, a random string starting with 'tf-' will be selected.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly numNodes!: pulumi.Output<number>;
    public readonly processingUnits!: pulumi.Output<number>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Instance status: 'CREATING' or 'READY'.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.SpannerInstanceTimeouts | undefined>;

    /**
     * Create a SpannerInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpannerInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpannerInstanceArgs | SpannerInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpannerInstanceState | undefined;
            resourceInputs["autoscalingConfig"] = state ? state.autoscalingConfig : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numNodes"] = state ? state.numNodes : undefined;
            resourceInputs["processingUnits"] = state ? state.processingUnits : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SpannerInstanceArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["autoscalingConfig"] = args ? args.autoscalingConfig : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numNodes"] = args ? args.numNodes : undefined;
            resourceInputs["processingUnits"] = args ? args.processingUnits : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpannerInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SpannerInstance resources.
 */
export interface SpannerInstanceState {
    /**
     * The autoscaling configuration. Autoscaling is enabled if this field is set. When autoscaling is enabled, num_nodes and
     * processing_units are treated as, OUTPUT_ONLY fields and reflect the current compute capacity allocated to the instance.
     */
    autoscalingConfig?: pulumi.Input<inputs.SpannerInstanceAutoscalingConfig>;
    /**
     * The name of the instance's configuration (similar but not quite the same as a region) which defines the geographic
     * placement and replication of your databases in this instance. It determines where your data is stored. Values are
     * typically of the form 'regional-europe-west1' , 'us-central' etc. In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     */
    config?: pulumi.Input<string>;
    /**
     * The descriptive name for this instance as it appears in UIs. Must be unique per project and between 4 and 30 characters
     * in length.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * When deleting a spanner instance, this boolean option will delete all backups of this instance. This must be set to true
     * if you created a backup manually in the console.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
     * to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A unique identifier for the instance, which cannot be changed after the instance is created. The name must be between 6
     * and 30 characters in length. If not provided, a random string starting with 'tf-' will be selected.
     */
    name?: pulumi.Input<string>;
    numNodes?: pulumi.Input<number>;
    processingUnits?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * Instance status: 'CREATING' or 'READY'.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.SpannerInstanceTimeouts>;
}

/**
 * The set of arguments for constructing a SpannerInstance resource.
 */
export interface SpannerInstanceArgs {
    /**
     * The autoscaling configuration. Autoscaling is enabled if this field is set. When autoscaling is enabled, num_nodes and
     * processing_units are treated as, OUTPUT_ONLY fields and reflect the current compute capacity allocated to the instance.
     */
    autoscalingConfig?: pulumi.Input<inputs.SpannerInstanceAutoscalingConfig>;
    /**
     * The name of the instance's configuration (similar but not quite the same as a region) which defines the geographic
     * placement and replication of your databases in this instance. It determines where your data is stored. Values are
     * typically of the form 'regional-europe-west1' , 'us-central' etc. In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     */
    config: pulumi.Input<string>;
    /**
     * The descriptive name for this instance as it appears in UIs. Must be unique per project and between 4 and 30 characters
     * in length.
     */
    displayName: pulumi.Input<string>;
    /**
     * When deleting a spanner instance, this boolean option will delete all backups of this instance. This must be set to true
     * if you created a backup manually in the console.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
     * to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A unique identifier for the instance, which cannot be changed after the instance is created. The name must be between 6
     * and 30 characters in length. If not provided, a random string starting with 'tf-' will be selected.
     */
    name?: pulumi.Input<string>;
    numNodes?: pulumi.Input<number>;
    processingUnits?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SpannerInstanceTimeouts>;
}
