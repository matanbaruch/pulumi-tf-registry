// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsCryptoKeyVersion(args: GetKmsCryptoKeyVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsCryptoKeyVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getKmsCryptoKeyVersion:getKmsCryptoKeyVersion", {
        "cryptoKey": args.cryptoKey,
        "id": args.id,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsCryptoKeyVersion.
 */
export interface GetKmsCryptoKeyVersionArgs {
    cryptoKey: string;
    id?: string;
    version?: number;
}

/**
 * A collection of values returned by getKmsCryptoKeyVersion.
 */
export interface GetKmsCryptoKeyVersionResult {
    readonly algorithm: string;
    readonly cryptoKey: string;
    readonly id: string;
    readonly name: string;
    readonly protectionLevel: string;
    readonly publicKeys: outputs.GetKmsCryptoKeyVersionPublicKey[];
    readonly state: string;
    readonly version?: number;
}
export function getKmsCryptoKeyVersionOutput(args: GetKmsCryptoKeyVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsCryptoKeyVersionResult> {
    return pulumi.output(args).apply((a: any) => getKmsCryptoKeyVersion(a, opts))
}

/**
 * A collection of arguments for invoking getKmsCryptoKeyVersion.
 */
export interface GetKmsCryptoKeyVersionOutputArgs {
    cryptoKey: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
