// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeNetworkEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ComputeNetworkEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeNetworkEndpointState, opts?: pulumi.CustomResourceOptions): ComputeNetworkEndpoint {
        return new ComputeNetworkEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/computeNetworkEndpoint:ComputeNetworkEndpoint';

    /**
     * Returns true if the given object is an instance of ComputeNetworkEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeNetworkEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeNetworkEndpoint.__pulumiType;
    }

    /**
     * The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
     * GCE_VM_IP_PORT. The instance must be in the same zone of network endpoint group.
     */
    public readonly instance!: pulumi.Output<string | undefined>;
    /**
     * IPv4 address of network endpoint. The IP address must belong to a VM in GCE (either the primary IP or as part of an
     * aliased IP range).
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * The network endpoint group this endpoint is part of.
     */
    public readonly networkEndpointGroup!: pulumi.Output<string>;
    /**
     * Port number of network endpoint. **Note** 'port' is required unless the Network Endpoint Group is created with the type
     * of 'GCE_VM_IP'
     */
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeNetworkEndpointTimeouts | undefined>;
    /**
     * Zone where the containing network endpoint group is located.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a ComputeNetworkEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeNetworkEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeNetworkEndpointArgs | ComputeNetworkEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeNetworkEndpointState | undefined;
            resourceInputs["instance"] = state ? state.instance : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["networkEndpointGroup"] = state ? state.networkEndpointGroup : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as ComputeNetworkEndpointArgs | undefined;
            if ((!args || args.ipAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAddress'");
            }
            if ((!args || args.networkEndpointGroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkEndpointGroup'");
            }
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["networkEndpointGroup"] = args ? args.networkEndpointGroup : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeNetworkEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeNetworkEndpoint resources.
 */
export interface ComputeNetworkEndpointState {
    /**
     * The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
     * GCE_VM_IP_PORT. The instance must be in the same zone of network endpoint group.
     */
    instance?: pulumi.Input<string>;
    /**
     * IPv4 address of network endpoint. The IP address must belong to a VM in GCE (either the primary IP or as part of an
     * aliased IP range).
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The network endpoint group this endpoint is part of.
     */
    networkEndpointGroup?: pulumi.Input<string>;
    /**
     * Port number of network endpoint. **Note** 'port' is required unless the Network Endpoint Group is created with the type
     * of 'GCE_VM_IP'
     */
    port?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeNetworkEndpointTimeouts>;
    /**
     * Zone where the containing network endpoint group is located.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeNetworkEndpoint resource.
 */
export interface ComputeNetworkEndpointArgs {
    /**
     * The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
     * GCE_VM_IP_PORT. The instance must be in the same zone of network endpoint group.
     */
    instance?: pulumi.Input<string>;
    /**
     * IPv4 address of network endpoint. The IP address must belong to a VM in GCE (either the primary IP or as part of an
     * aliased IP range).
     */
    ipAddress: pulumi.Input<string>;
    /**
     * The network endpoint group this endpoint is part of.
     */
    networkEndpointGroup: pulumi.Input<string>;
    /**
     * Port number of network endpoint. **Note** 'port' is required unless the Network Endpoint Group is created with the type
     * of 'GCE_VM_IP'
     */
    port?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeNetworkEndpointTimeouts>;
    /**
     * Zone where the containing network endpoint group is located.
     */
    zone?: pulumi.Input<string>;
}
