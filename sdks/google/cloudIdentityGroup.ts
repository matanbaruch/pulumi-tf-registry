// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudIdentityGroup extends pulumi.CustomResource {
    /**
     * Get an existing CloudIdentityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudIdentityGroupState, opts?: pulumi.CustomResourceOptions): CloudIdentityGroup {
        return new CloudIdentityGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/cloudIdentityGroup:CloudIdentityGroup';

    /**
     * Returns true if the given object is an instance of CloudIdentityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudIdentityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudIdentityGroup.__pulumiType;
    }

    /**
     * Additional group keys associated with the Group
     */
    public /*out*/ readonly additionalGroupKeys!: pulumi.Output<outputs.CloudIdentityGroupAdditionalGroupKey[]>;
    /**
     * The time when the Group was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the Group.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * EntityKey of the Group.
     */
    public readonly groupKey!: pulumi.Output<outputs.CloudIdentityGroupGroupKey>;
    /**
     * The initial configuration options for creating a Group. See the [API
     * reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
     * values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
     */
    public readonly initialGroupConfig!: pulumi.Output<string | undefined>;
    /**
     * One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
     * Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
     * and an empty value. Existing Google Groups can have an additional label with a key of
     * cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
     * security label cannot be removed once added. Dynamic groups have a label with a key of
     * cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
     * system/groups/external and an empty value.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Resource name of the Group in the format: groups/{group_id}, where group_id is the unique ID assigned to the Group.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
     * form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
     * Groups.
     */
    public readonly parent!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CloudIdentityGroupTimeouts | undefined>;
    /**
     * The time when the Group was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a CloudIdentityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudIdentityGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudIdentityGroupArgs | CloudIdentityGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudIdentityGroupState | undefined;
            resourceInputs["additionalGroupKeys"] = state ? state.additionalGroupKeys : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["groupKey"] = state ? state.groupKey : undefined;
            resourceInputs["initialGroupConfig"] = state ? state.initialGroupConfig : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as CloudIdentityGroupArgs | undefined;
            if ((!args || args.groupKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupKey'");
            }
            if ((!args || args.labels === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labels'");
            }
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["groupKey"] = args ? args.groupKey : undefined;
            resourceInputs["initialGroupConfig"] = args ? args.initialGroupConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["additionalGroupKeys"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudIdentityGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudIdentityGroup resources.
 */
export interface CloudIdentityGroupState {
    /**
     * Additional group keys associated with the Group
     */
    additionalGroupKeys?: pulumi.Input<pulumi.Input<inputs.CloudIdentityGroupAdditionalGroupKey>[]>;
    /**
     * The time when the Group was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Group.
     */
    displayName?: pulumi.Input<string>;
    /**
     * EntityKey of the Group.
     */
    groupKey?: pulumi.Input<inputs.CloudIdentityGroupGroupKey>;
    /**
     * The initial configuration options for creating a Group. See the [API
     * reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
     * values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
     */
    initialGroupConfig?: pulumi.Input<string>;
    /**
     * One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
     * Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
     * and an empty value. Existing Google Groups can have an additional label with a key of
     * cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
     * security label cannot be removed once added. Dynamic groups have a label with a key of
     * cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
     * system/groups/external and an empty value.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource name of the Group in the format: groups/{group_id}, where group_id is the unique ID assigned to the Group.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
     * form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
     * Groups.
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudIdentityGroupTimeouts>;
    /**
     * The time when the Group was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudIdentityGroup resource.
 */
export interface CloudIdentityGroupArgs {
    /**
     * An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Group.
     */
    displayName?: pulumi.Input<string>;
    /**
     * EntityKey of the Group.
     */
    groupKey: pulumi.Input<inputs.CloudIdentityGroupGroupKey>;
    /**
     * The initial configuration options for creating a Group. See the [API
     * reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
     * values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
     */
    initialGroupConfig?: pulumi.Input<string>;
    /**
     * One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
     * Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
     * and an empty value. Existing Google Groups can have an additional label with a key of
     * cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
     * security label cannot be removed once added. Dynamic groups have a label with a key of
     * cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
     * system/groups/external and an empty value.
     */
    labels: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
     * form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
     * Groups.
     */
    parent: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudIdentityGroupTimeouts>;
}
