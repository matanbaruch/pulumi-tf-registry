// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AppEngineApplicationUrlDispatchRules extends pulumi.CustomResource {
    /**
     * Get an existing AppEngineApplicationUrlDispatchRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppEngineApplicationUrlDispatchRulesState, opts?: pulumi.CustomResourceOptions): AppEngineApplicationUrlDispatchRules {
        return new AppEngineApplicationUrlDispatchRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/appEngineApplicationUrlDispatchRules:AppEngineApplicationUrlDispatchRules';

    /**
     * Returns true if the given object is an instance of AppEngineApplicationUrlDispatchRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppEngineApplicationUrlDispatchRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppEngineApplicationUrlDispatchRules.__pulumiType;
    }

    /**
     * Rules to match an HTTP request and dispatch that request to a service.
     */
    public readonly dispatchRules!: pulumi.Output<outputs.AppEngineApplicationUrlDispatchRulesDispatchRule[]>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AppEngineApplicationUrlDispatchRulesTimeouts | undefined>;

    /**
     * Create a AppEngineApplicationUrlDispatchRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppEngineApplicationUrlDispatchRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppEngineApplicationUrlDispatchRulesArgs | AppEngineApplicationUrlDispatchRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppEngineApplicationUrlDispatchRulesState | undefined;
            resourceInputs["dispatchRules"] = state ? state.dispatchRules : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AppEngineApplicationUrlDispatchRulesArgs | undefined;
            if ((!args || args.dispatchRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dispatchRules'");
            }
            resourceInputs["dispatchRules"] = args ? args.dispatchRules : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppEngineApplicationUrlDispatchRules.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppEngineApplicationUrlDispatchRules resources.
 */
export interface AppEngineApplicationUrlDispatchRulesState {
    /**
     * Rules to match an HTTP request and dispatch that request to a service.
     */
    dispatchRules?: pulumi.Input<pulumi.Input<inputs.AppEngineApplicationUrlDispatchRulesDispatchRule>[]>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppEngineApplicationUrlDispatchRulesTimeouts>;
}

/**
 * The set of arguments for constructing a AppEngineApplicationUrlDispatchRules resource.
 */
export interface AppEngineApplicationUrlDispatchRulesArgs {
    /**
     * Rules to match an HTTP request and dispatch that request to a service.
     */
    dispatchRules: pulumi.Input<pulumi.Input<inputs.AppEngineApplicationUrlDispatchRulesDispatchRule>[]>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppEngineApplicationUrlDispatchRulesTimeouts>;
}
