// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeRouterInterface extends pulumi.CustomResource {
    /**
     * Get an existing ComputeRouterInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeRouterInterfaceState, opts?: pulumi.CustomResourceOptions): ComputeRouterInterface {
        return new ComputeRouterInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/computeRouterInterface:ComputeRouterInterface';

    /**
     * Returns true if the given object is an instance of ComputeRouterInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeRouterInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeRouterInterface.__pulumiType;
    }

    /**
     * The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
     * created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
     */
    public readonly interconnectAttachment!: pulumi.Output<string | undefined>;
    /**
     * The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
     * a new interface to be created.
     */
    public readonly ipRange!: pulumi.Output<string>;
    /**
     * IP version of this interface.
     */
    public readonly ipVersion!: pulumi.Output<string>;
    /**
     * A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
     * Router Appliance. Changing this forces a new interface to be created.
     */
    public readonly privateIpAddress!: pulumi.Output<string | undefined>;
    /**
     * The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
     * Changing this forces a new interface to be created.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
     */
    public readonly redundantInterface!: pulumi.Output<string>;
    /**
     * The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
     * new interface to be created.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The name of the router this interface will be attached to. Changing this forces a new interface to be created.
     */
    public readonly router!: pulumi.Output<string>;
    /**
     * The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
     * Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
     * specified.
     */
    public readonly subnetwork!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeRouterInterfaceTimeouts | undefined>;
    /**
     * The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
     * created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
     */
    public readonly vpnTunnel!: pulumi.Output<string | undefined>;

    /**
     * Create a ComputeRouterInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeRouterInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeRouterInterfaceArgs | ComputeRouterInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeRouterInterfaceState | undefined;
            resourceInputs["interconnectAttachment"] = state ? state.interconnectAttachment : undefined;
            resourceInputs["ipRange"] = state ? state.ipRange : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateIpAddress"] = state ? state.privateIpAddress : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["redundantInterface"] = state ? state.redundantInterface : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["router"] = state ? state.router : undefined;
            resourceInputs["subnetwork"] = state ? state.subnetwork : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vpnTunnel"] = state ? state.vpnTunnel : undefined;
        } else {
            const args = argsOrState as ComputeRouterInterfaceArgs | undefined;
            if ((!args || args.router === undefined) && !opts.urn) {
                throw new Error("Missing required property 'router'");
            }
            resourceInputs["interconnectAttachment"] = args ? args.interconnectAttachment : undefined;
            resourceInputs["ipRange"] = args ? args.ipRange : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateIpAddress"] = args ? args.privateIpAddress : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["redundantInterface"] = args ? args.redundantInterface : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["router"] = args ? args.router : undefined;
            resourceInputs["subnetwork"] = args ? args.subnetwork : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpnTunnel"] = args ? args.vpnTunnel : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeRouterInterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeRouterInterface resources.
 */
export interface ComputeRouterInterfaceState {
    /**
     * The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
     * created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
     */
    interconnectAttachment?: pulumi.Input<string>;
    /**
     * The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
     * a new interface to be created.
     */
    ipRange?: pulumi.Input<string>;
    /**
     * IP version of this interface.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
     * Router Appliance. Changing this forces a new interface to be created.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
     * Changing this forces a new interface to be created.
     */
    project?: pulumi.Input<string>;
    /**
     * The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
     */
    redundantInterface?: pulumi.Input<string>;
    /**
     * The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
     * new interface to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the router this interface will be attached to. Changing this forces a new interface to be created.
     */
    router?: pulumi.Input<string>;
    /**
     * The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
     * Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
     * specified.
     */
    subnetwork?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeRouterInterfaceTimeouts>;
    /**
     * The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
     * created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
     */
    vpnTunnel?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeRouterInterface resource.
 */
export interface ComputeRouterInterfaceArgs {
    /**
     * The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
     * created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
     */
    interconnectAttachment?: pulumi.Input<string>;
    /**
     * The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
     * a new interface to be created.
     */
    ipRange?: pulumi.Input<string>;
    /**
     * IP version of this interface.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
     * Router Appliance. Changing this forces a new interface to be created.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
     * Changing this forces a new interface to be created.
     */
    project?: pulumi.Input<string>;
    /**
     * The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
     */
    redundantInterface?: pulumi.Input<string>;
    /**
     * The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
     * new interface to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the router this interface will be attached to. Changing this forces a new interface to be created.
     */
    router: pulumi.Input<string>;
    /**
     * The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
     * Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
     * specified.
     */
    subnetwork?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeRouterInterfaceTimeouts>;
    /**
     * The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
     * created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
     */
    vpnTunnel?: pulumi.Input<string>;
}
