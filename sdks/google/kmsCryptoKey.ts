// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KmsCryptoKey extends pulumi.CustomResource {
    /**
     * Get an existing KmsCryptoKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KmsCryptoKeyState, opts?: pulumi.CustomResourceOptions): KmsCryptoKey {
        return new KmsCryptoKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/kmsCryptoKey:KmsCryptoKey';

    /**
     * Returns true if the given object is an instance of KmsCryptoKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KmsCryptoKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KmsCryptoKey.__pulumiType;
    }

    /**
     * The resource name of the backend environment associated with all CryptoKeyVersions within this CryptoKey. The resource
     * name is in the format "projects/*&#47;locations/*&#47;ekmConnections/*" and only applies to "EXTERNAL_VPC" keys.
     */
    public readonly cryptoKeyBackend!: pulumi.Output<string>;
    /**
     * The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If
     * not specified at creation time, the default duration is 30 days.
     */
    public readonly destroyScheduledDuration!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Whether this key may contain imported versions only.
     */
    public readonly importOnly!: pulumi.Output<boolean>;
    /**
     * The KeyRing that this key belongs to. Format: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}''.
     */
    public readonly keyRing!: pulumi.Output<string>;
    /**
     * Labels with user-defined metadata to apply to this resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The resource name for the CryptoKey.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A copy of the primary CryptoKeyVersion that will be used by cryptoKeys.encrypt when this CryptoKey is given in
     * EncryptRequest.name. Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be unset.
     */
    public /*out*/ readonly primaries!: pulumi.Output<outputs.KmsCryptoKeyPrimary[]>;
    /**
     * The immutable purpose of this CryptoKey. See the [purpose
     * reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
     * for possible inputs. Default value is "ENCRYPT_DECRYPT".
     */
    public readonly purpose!: pulumi.Output<string | undefined>;
    /**
     * Every time this period passes, generate a new CryptoKeyVersion and set it as the primary. The first rotation will take
     * place after the specified period. The rotation period has the format of a decimal number with up to 9 fractional digits,
     * followed by the letter 's' (seconds). It must be greater than a day (ie, 86400).
     */
    public readonly rotationPeriod!: pulumi.Output<string | undefined>;
    /**
     * If set to true, the request will create a CryptoKey without any CryptoKeyVersions. You must use the
     * 'google_kms_crypto_key_version' resource to create a new CryptoKeyVersion or 'google_kms_key_ring_import_job' resource
     * to import the CryptoKeyVersion.
     */
    public readonly skipInitialVersionCreation!: pulumi.Output<boolean | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.KmsCryptoKeyTimeouts | undefined>;
    /**
     * A template describing settings for new crypto key versions.
     */
    public readonly versionTemplate!: pulumi.Output<outputs.KmsCryptoKeyVersionTemplate | undefined>;

    /**
     * Create a KmsCryptoKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KmsCryptoKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KmsCryptoKeyArgs | KmsCryptoKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KmsCryptoKeyState | undefined;
            resourceInputs["cryptoKeyBackend"] = state ? state.cryptoKeyBackend : undefined;
            resourceInputs["destroyScheduledDuration"] = state ? state.destroyScheduledDuration : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["importOnly"] = state ? state.importOnly : undefined;
            resourceInputs["keyRing"] = state ? state.keyRing : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primaries"] = state ? state.primaries : undefined;
            resourceInputs["purpose"] = state ? state.purpose : undefined;
            resourceInputs["rotationPeriod"] = state ? state.rotationPeriod : undefined;
            resourceInputs["skipInitialVersionCreation"] = state ? state.skipInitialVersionCreation : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["versionTemplate"] = state ? state.versionTemplate : undefined;
        } else {
            const args = argsOrState as KmsCryptoKeyArgs | undefined;
            if ((!args || args.keyRing === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyRing'");
            }
            resourceInputs["cryptoKeyBackend"] = args ? args.cryptoKeyBackend : undefined;
            resourceInputs["destroyScheduledDuration"] = args ? args.destroyScheduledDuration : undefined;
            resourceInputs["importOnly"] = args ? args.importOnly : undefined;
            resourceInputs["keyRing"] = args ? args.keyRing : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["purpose"] = args ? args.purpose : undefined;
            resourceInputs["rotationPeriod"] = args ? args.rotationPeriod : undefined;
            resourceInputs["skipInitialVersionCreation"] = args ? args.skipInitialVersionCreation : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["versionTemplate"] = args ? args.versionTemplate : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["primaries"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KmsCryptoKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KmsCryptoKey resources.
 */
export interface KmsCryptoKeyState {
    /**
     * The resource name of the backend environment associated with all CryptoKeyVersions within this CryptoKey. The resource
     * name is in the format "projects/*&#47;locations/*&#47;ekmConnections/*" and only applies to "EXTERNAL_VPC" keys.
     */
    cryptoKeyBackend?: pulumi.Input<string>;
    /**
     * The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If
     * not specified at creation time, the default duration is 30 days.
     */
    destroyScheduledDuration?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether this key may contain imported versions only.
     */
    importOnly?: pulumi.Input<boolean>;
    /**
     * The KeyRing that this key belongs to. Format: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}''.
     */
    keyRing?: pulumi.Input<string>;
    /**
     * Labels with user-defined metadata to apply to this resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name for the CryptoKey.
     */
    name?: pulumi.Input<string>;
    /**
     * A copy of the primary CryptoKeyVersion that will be used by cryptoKeys.encrypt when this CryptoKey is given in
     * EncryptRequest.name. Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be unset.
     */
    primaries?: pulumi.Input<pulumi.Input<inputs.KmsCryptoKeyPrimary>[]>;
    /**
     * The immutable purpose of this CryptoKey. See the [purpose
     * reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
     * for possible inputs. Default value is "ENCRYPT_DECRYPT".
     */
    purpose?: pulumi.Input<string>;
    /**
     * Every time this period passes, generate a new CryptoKeyVersion and set it as the primary. The first rotation will take
     * place after the specified period. The rotation period has the format of a decimal number with up to 9 fractional digits,
     * followed by the letter 's' (seconds). It must be greater than a day (ie, 86400).
     */
    rotationPeriod?: pulumi.Input<string>;
    /**
     * If set to true, the request will create a CryptoKey without any CryptoKeyVersions. You must use the
     * 'google_kms_crypto_key_version' resource to create a new CryptoKeyVersion or 'google_kms_key_ring_import_job' resource
     * to import the CryptoKeyVersion.
     */
    skipInitialVersionCreation?: pulumi.Input<boolean>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.KmsCryptoKeyTimeouts>;
    /**
     * A template describing settings for new crypto key versions.
     */
    versionTemplate?: pulumi.Input<inputs.KmsCryptoKeyVersionTemplate>;
}

/**
 * The set of arguments for constructing a KmsCryptoKey resource.
 */
export interface KmsCryptoKeyArgs {
    /**
     * The resource name of the backend environment associated with all CryptoKeyVersions within this CryptoKey. The resource
     * name is in the format "projects/*&#47;locations/*&#47;ekmConnections/*" and only applies to "EXTERNAL_VPC" keys.
     */
    cryptoKeyBackend?: pulumi.Input<string>;
    /**
     * The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If
     * not specified at creation time, the default duration is 30 days.
     */
    destroyScheduledDuration?: pulumi.Input<string>;
    /**
     * Whether this key may contain imported versions only.
     */
    importOnly?: pulumi.Input<boolean>;
    /**
     * The KeyRing that this key belongs to. Format: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}''.
     */
    keyRing: pulumi.Input<string>;
    /**
     * Labels with user-defined metadata to apply to this resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name for the CryptoKey.
     */
    name?: pulumi.Input<string>;
    /**
     * The immutable purpose of this CryptoKey. See the [purpose
     * reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
     * for possible inputs. Default value is "ENCRYPT_DECRYPT".
     */
    purpose?: pulumi.Input<string>;
    /**
     * Every time this period passes, generate a new CryptoKeyVersion and set it as the primary. The first rotation will take
     * place after the specified period. The rotation period has the format of a decimal number with up to 9 fractional digits,
     * followed by the letter 's' (seconds). It must be greater than a day (ie, 86400).
     */
    rotationPeriod?: pulumi.Input<string>;
    /**
     * If set to true, the request will create a CryptoKey without any CryptoKeyVersions. You must use the
     * 'google_kms_crypto_key_version' resource to create a new CryptoKeyVersion or 'google_kms_key_ring_import_job' resource
     * to import the CryptoKeyVersion.
     */
    skipInitialVersionCreation?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.KmsCryptoKeyTimeouts>;
    /**
     * A template describing settings for new crypto key versions.
     */
    versionTemplate?: pulumi.Input<inputs.KmsCryptoKeyVersionTemplate>;
}
