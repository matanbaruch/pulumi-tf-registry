// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTagsTagKeyIamPolicy(args: GetTagsTagKeyIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetTagsTagKeyIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getTagsTagKeyIamPolicy:getTagsTagKeyIamPolicy", {
        "id": args.id,
        "tagKey": args.tagKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTagsTagKeyIamPolicy.
 */
export interface GetTagsTagKeyIamPolicyArgs {
    id?: string;
    tagKey: string;
}

/**
 * A collection of values returned by getTagsTagKeyIamPolicy.
 */
export interface GetTagsTagKeyIamPolicyResult {
    readonly etag: string;
    readonly id: string;
    readonly policyData: string;
    readonly tagKey: string;
}
export function getTagsTagKeyIamPolicyOutput(args: GetTagsTagKeyIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTagsTagKeyIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getTagsTagKeyIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getTagsTagKeyIamPolicy.
 */
export interface GetTagsTagKeyIamPolicyOutputArgs {
    id?: pulumi.Input<string>;
    tagKey: pulumi.Input<string>;
}
