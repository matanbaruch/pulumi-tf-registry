// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getActiveFolder(args: GetActiveFolderArgs, opts?: pulumi.InvokeOptions): Promise<GetActiveFolderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getActiveFolder:getActiveFolder", {
        "apiMethod": args.apiMethod,
        "displayName": args.displayName,
        "id": args.id,
        "parent": args.parent,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getActiveFolder.
 */
export interface GetActiveFolderArgs {
    apiMethod?: string;
    displayName: string;
    id?: string;
    parent: string;
}

/**
 * A collection of values returned by getActiveFolder.
 */
export interface GetActiveFolderResult {
    readonly apiMethod?: string;
    readonly displayName: string;
    readonly id: string;
    readonly name: string;
    readonly parent: string;
}
export function getActiveFolderOutput(args: GetActiveFolderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActiveFolderResult> {
    return pulumi.output(args).apply((a: any) => getActiveFolder(a, opts))
}

/**
 * A collection of arguments for invoking getActiveFolder.
 */
export interface GetActiveFolderOutputArgs {
    apiMethod?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    parent: pulumi.Input<string>;
}
