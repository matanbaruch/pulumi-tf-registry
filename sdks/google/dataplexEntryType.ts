// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataplexEntryType extends pulumi.CustomResource {
    /**
     * Get an existing DataplexEntryType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataplexEntryTypeState, opts?: pulumi.CustomResourceOptions): DataplexEntryType {
        return new DataplexEntryType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/dataplexEntryType:DataplexEntryType';

    /**
     * Returns true if the given object is an instance of DataplexEntryType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataplexEntryType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataplexEntryType.__pulumiType;
    }

    /**
     * The time when the EntryType was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the EntryType.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * User friendly display name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The entry type id of the entry type.
     */
    public readonly entryTypeId!: pulumi.Output<string | undefined>;
    /**
     * User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location where entry type will be created in.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The relative resource name of the EntryType, of the form:
     * projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The platform that Entries of this type belongs to.
     */
    public readonly platform!: pulumi.Output<string | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * AspectInfo for the entry type.
     */
    public readonly requiredAspects!: pulumi.Output<outputs.DataplexEntryTypeRequiredAspect[] | undefined>;
    /**
     * The system that Entries of this type belongs to.
     */
    public readonly system!: pulumi.Output<string | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DataplexEntryTypeTimeouts | undefined>;
    /**
     * Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
     */
    public readonly typeAliases!: pulumi.Output<string[] | undefined>;
    /**
     * System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and
     * re-created with the same name.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The time when the EntryType was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a DataplexEntryType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataplexEntryTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataplexEntryTypeArgs | DataplexEntryTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataplexEntryTypeState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["entryTypeId"] = state ? state.entryTypeId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["requiredAspects"] = state ? state.requiredAspects : undefined;
            resourceInputs["system"] = state ? state.system : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["typeAliases"] = state ? state.typeAliases : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as DataplexEntryTypeArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["entryTypeId"] = args ? args.entryTypeId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requiredAspects"] = args ? args.requiredAspects : undefined;
            resourceInputs["system"] = args ? args.system : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["typeAliases"] = args ? args.typeAliases : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataplexEntryType.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataplexEntryType resources.
 */
export interface DataplexEntryTypeState {
    /**
     * The time when the EntryType was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the EntryType.
     */
    description?: pulumi.Input<string>;
    /**
     * User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The entry type id of the entry type.
     */
    entryTypeId?: pulumi.Input<string>;
    /**
     * User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where entry type will be created in.
     */
    location?: pulumi.Input<string>;
    /**
     * The relative resource name of the EntryType, of the form:
     * projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
     */
    name?: pulumi.Input<string>;
    /**
     * The platform that Entries of this type belongs to.
     */
    platform?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * AspectInfo for the entry type.
     */
    requiredAspects?: pulumi.Input<pulumi.Input<inputs.DataplexEntryTypeRequiredAspect>[]>;
    /**
     * The system that Entries of this type belongs to.
     */
    system?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DataplexEntryTypeTimeouts>;
    /**
     * Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
     */
    typeAliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and
     * re-created with the same name.
     */
    uid?: pulumi.Input<string>;
    /**
     * The time when the EntryType was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataplexEntryType resource.
 */
export interface DataplexEntryTypeArgs {
    /**
     * Description of the EntryType.
     */
    description?: pulumi.Input<string>;
    /**
     * User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The entry type id of the entry type.
     */
    entryTypeId?: pulumi.Input<string>;
    /**
     * User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where entry type will be created in.
     */
    location?: pulumi.Input<string>;
    /**
     * The platform that Entries of this type belongs to.
     */
    platform?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * AspectInfo for the entry type.
     */
    requiredAspects?: pulumi.Input<pulumi.Input<inputs.DataplexEntryTypeRequiredAspect>[]>;
    /**
     * The system that Entries of this type belongs to.
     */
    system?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataplexEntryTypeTimeouts>;
    /**
     * Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
     */
    typeAliases?: pulumi.Input<pulumi.Input<string>[]>;
}
