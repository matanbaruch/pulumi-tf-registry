// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ContainerAzureCluster extends pulumi.CustomResource {
    /**
     * Get an existing ContainerAzureCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerAzureClusterState, opts?: pulumi.CustomResourceOptions): ContainerAzureCluster {
        return new ContainerAzureCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/containerAzureCluster:ContainerAzureCluster';

    /**
     * Returns true if the given object is an instance of ContainerAzureCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerAzureCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerAzureCluster.__pulumiType;
    }

    /**
     * Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
     * all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required),
     * separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
     * alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
     * non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
     * `effective_annotations` for all of the annotations present on the resource.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configuration related to the cluster RBAC settings.
     */
    public readonly authorization!: pulumi.Output<outputs.ContainerAzureClusterAuthorization>;
    /**
     * The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can
     * call to list all supported Azure regions within a given Google Cloud region.
     */
    public readonly azureRegion!: pulumi.Output<string>;
    /**
     * Azure authentication configuration for management of Azure resources
     */
    public readonly azureServicesAuthentication!: pulumi.Output<outputs.ContainerAzureClusterAzureServicesAuthentication | undefined>;
    /**
     * Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the
     * `AzureCluster`. `AzureClient` names are formatted as
     * `projects/<project-number>/locations/<region>/azureClients/<client-id>`. See Resource Names
     * (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
     */
    public readonly client!: pulumi.Output<string | undefined>;
    /**
     * Configuration related to the cluster control plane.
     */
    public readonly controlPlane!: pulumi.Output<outputs.ContainerAzureClusterControlPlane>;
    /**
     * Output only. The time at which this cluster was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveAnnotations!: pulumi.Output<{[key: string]: string}>;
    /**
     * Output only. The endpoint of the cluster's API server.
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
     * and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Fleet configuration.
     */
    public readonly fleet!: pulumi.Output<outputs.ContainerAzureClusterFleet>;
    /**
     * The location for the resource
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of this resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Cluster-wide networking configuration.
     */
    public readonly networking!: pulumi.Output<outputs.ContainerAzureClusterNetworking>;
    /**
     * The project for the resource
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Output only. If set, there are currently changes in flight to the cluster.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * The ARM ID of the resource group where the cluster resources are deployed. For example:
     * `/subscriptions/*&#47;resourceGroups/*`
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING,
     * STOPPING, ERROR, DEGRADED
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ContainerAzureClusterTimeouts | undefined>;
    /**
     * Output only. A globally unique identifier for the cluster.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * Output only. The time at which this cluster was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Output only. Workload Identity settings.
     */
    public /*out*/ readonly workloadIdentityConfigs!: pulumi.Output<outputs.ContainerAzureClusterWorkloadIdentityConfig[]>;

    /**
     * Create a ContainerAzureCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerAzureClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerAzureClusterArgs | ContainerAzureClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerAzureClusterState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["azureRegion"] = state ? state.azureRegion : undefined;
            resourceInputs["azureServicesAuthentication"] = state ? state.azureServicesAuthentication : undefined;
            resourceInputs["client"] = state ? state.client : undefined;
            resourceInputs["controlPlane"] = state ? state.controlPlane : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveAnnotations"] = state ? state.effectiveAnnotations : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["fleet"] = state ? state.fleet : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networking"] = state ? state.networking : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["reconciling"] = state ? state.reconciling : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["workloadIdentityConfigs"] = state ? state.workloadIdentityConfigs : undefined;
        } else {
            const args = argsOrState as ContainerAzureClusterArgs | undefined;
            if ((!args || args.authorization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authorization'");
            }
            if ((!args || args.azureRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'azureRegion'");
            }
            if ((!args || args.controlPlane === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controlPlane'");
            }
            if ((!args || args.fleet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fleet'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.networking === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networking'");
            }
            if ((!args || args.resourceGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupId'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["azureRegion"] = args ? args.azureRegion : undefined;
            resourceInputs["azureServicesAuthentication"] = args ? args.azureServicesAuthentication : undefined;
            resourceInputs["client"] = args ? args.client : undefined;
            resourceInputs["controlPlane"] = args ? args.controlPlane : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fleet"] = args ? args.fleet : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networking"] = args ? args.networking : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveAnnotations"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["workloadIdentityConfigs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContainerAzureCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ContainerAzureCluster resources.
 */
export interface ContainerAzureClusterState {
    /**
     * Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
     * all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required),
     * separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
     * alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
     * non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
     * `effective_annotations` for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration related to the cluster RBAC settings.
     */
    authorization?: pulumi.Input<inputs.ContainerAzureClusterAuthorization>;
    /**
     * The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can
     * call to list all supported Azure regions within a given Google Cloud region.
     */
    azureRegion?: pulumi.Input<string>;
    /**
     * Azure authentication configuration for management of Azure resources
     */
    azureServicesAuthentication?: pulumi.Input<inputs.ContainerAzureClusterAzureServicesAuthentication>;
    /**
     * Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the
     * `AzureCluster`. `AzureClient` names are formatted as
     * `projects/<project-number>/locations/<region>/azureClients/<client-id>`. See Resource Names
     * (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
     */
    client?: pulumi.Input<string>;
    /**
     * Configuration related to the cluster control plane.
     */
    controlPlane?: pulumi.Input<inputs.ContainerAzureClusterControlPlane>;
    /**
     * Output only. The time at which this cluster was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
     */
    description?: pulumi.Input<string>;
    effectiveAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Output only. The endpoint of the cluster's API server.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
     * and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    etag?: pulumi.Input<string>;
    /**
     * Fleet configuration.
     */
    fleet?: pulumi.Input<inputs.ContainerAzureClusterFleet>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Cluster-wide networking configuration.
     */
    networking?: pulumi.Input<inputs.ContainerAzureClusterNetworking>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Output only. If set, there are currently changes in flight to the cluster.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * The ARM ID of the resource group where the cluster resources are deployed. For example:
     * `/subscriptions/*&#47;resourceGroups/*`
     */
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING,
     * STOPPING, ERROR, DEGRADED
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ContainerAzureClusterTimeouts>;
    /**
     * Output only. A globally unique identifier for the cluster.
     */
    uid?: pulumi.Input<string>;
    /**
     * Output only. The time at which this cluster was last updated.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Output only. Workload Identity settings.
     */
    workloadIdentityConfigs?: pulumi.Input<pulumi.Input<inputs.ContainerAzureClusterWorkloadIdentityConfig>[]>;
}

/**
 * The set of arguments for constructing a ContainerAzureCluster resource.
 */
export interface ContainerAzureClusterArgs {
    /**
     * Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of
     * all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required),
     * separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
     * alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
     * non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
     * `effective_annotations` for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration related to the cluster RBAC settings.
     */
    authorization: pulumi.Input<inputs.ContainerAzureClusterAuthorization>;
    /**
     * The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can
     * call to list all supported Azure regions within a given Google Cloud region.
     */
    azureRegion: pulumi.Input<string>;
    /**
     * Azure authentication configuration for management of Azure resources
     */
    azureServicesAuthentication?: pulumi.Input<inputs.ContainerAzureClusterAzureServicesAuthentication>;
    /**
     * Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the
     * `AzureCluster`. `AzureClient` names are formatted as
     * `projects/<project-number>/locations/<region>/azureClients/<client-id>`. See Resource Names
     * (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
     */
    client?: pulumi.Input<string>;
    /**
     * Configuration related to the cluster control plane.
     */
    controlPlane: pulumi.Input<inputs.ContainerAzureClusterControlPlane>;
    /**
     * Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * Fleet configuration.
     */
    fleet: pulumi.Input<inputs.ContainerAzureClusterFleet>;
    /**
     * The location for the resource
     */
    location: pulumi.Input<string>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Cluster-wide networking configuration.
     */
    networking: pulumi.Input<inputs.ContainerAzureClusterNetworking>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * The ARM ID of the resource group where the cluster resources are deployed. For example:
     * `/subscriptions/*&#47;resourceGroups/*`
     */
    resourceGroupId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ContainerAzureClusterTimeouts>;
}
