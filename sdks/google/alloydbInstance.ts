// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlloydbInstance extends pulumi.CustomResource {
    /**
     * Get an existing AlloydbInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlloydbInstanceState, opts?: pulumi.CustomResourceOptions): AlloydbInstance {
        return new AlloydbInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/alloydbInstance:AlloydbInstance';

    /**
     * Returns true if the given object is an instance of AlloydbInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlloydbInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlloydbInstance.__pulumiType;
    }

    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. **Note**: This
     * field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
     * field 'effective_annotations' for all of the annotations present on the resource.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * 'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances. Note that primary and read
     * instances can have different availability types. Only READ_POOL instance supports ZONAL type. Users can't specify the
     * zone for READ_POOL instance. Zone is automatically chosen from the list of zones in the region specified. Read pool of
     * size 1 can only have zonal availability. Read pools with node count of 2 or more can have regional availability (nodes
     * are present in 2 or more zones in a region).' Possible values: ["AVAILABILITY_TYPE_UNSPECIFIED", "ZONAL", "REGIONAL"]
     */
    public readonly availabilityType!: pulumi.Output<string>;
    /**
     * Client connection specific configurations.
     */
    public readonly clientConnectionConfig!: pulumi.Output<outputs.AlloydbInstanceClientConnectionConfig | undefined>;
    /**
     * Identifies the alloydb cluster. Must be in the format 'projects/{project}/locations/{location}/clusters/{cluster_id}'
     */
    public readonly cluster!: pulumi.Output<string>;
    /**
     * Time the Instance was created in UTC.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read
     * instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read
     * instance. Flags set on read instance may or may not be present on primary.
     */
    public readonly databaseFlags!: pulumi.Output<{[key: string]: string}>;
    /**
     * User-settable and human-readable display name for the Instance.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveAnnotations!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones
     * This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is
     * absent for a ZONAL instance, instance is created in a random zone with available capacity.
     */
    public readonly gceZone!: pulumi.Output<string | undefined>;
    /**
     * The ID of the alloydb instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * The IP address for the Instance. This is the connection endpoint for an end-user application.
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * User-defined labels for the alloydb instance. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configurations for the machines that host the underlying database engine.
     */
    public readonly machineConfig!: pulumi.Output<outputs.AlloydbInstanceMachineConfig | undefined>;
    /**
     * The name of the instance resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Instance level network configuration.
     */
    public readonly networkConfig!: pulumi.Output<outputs.AlloydbInstanceNetworkConfig | undefined>;
    /**
     * Configuration for Private Service Connect (PSC) for the instance.
     */
    public readonly pscInstanceConfig!: pulumi.Output<outputs.AlloydbInstancePscInstanceConfig | undefined>;
    /**
     * The public IP addresses for the Instance. This is available ONLY when networkConfig.enablePublicIp is set to true. This
     * is the connection endpoint for an end-user application.
     */
    public /*out*/ readonly publicIpAddress!: pulumi.Output<string>;
    /**
     * Configuration for query insights.
     */
    public readonly queryInsightsConfig!: pulumi.Output<outputs.AlloydbInstanceQueryInsightsConfig | undefined>;
    /**
     * Read pool specific config. If the instance type is READ_POOL, this configuration must be provided.
     */
    public readonly readPoolConfig!: pulumi.Output<outputs.AlloydbInstanceReadPoolConfig | undefined>;
    /**
     * Set to true if the current state of Instance does not match the user's intended state, and the service is actively
     * updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover
     * or maintenance.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * The current state of the alloydb instance.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.AlloydbInstanceTimeouts | undefined>;
    /**
     * The system-generated UID of the resource.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * Time the Instance was updated in UTC.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AlloydbInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlloydbInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlloydbInstanceArgs | AlloydbInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlloydbInstanceState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["availabilityType"] = state ? state.availabilityType : undefined;
            resourceInputs["clientConnectionConfig"] = state ? state.clientConnectionConfig : undefined;
            resourceInputs["cluster"] = state ? state.cluster : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["databaseFlags"] = state ? state.databaseFlags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveAnnotations"] = state ? state.effectiveAnnotations : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["gceZone"] = state ? state.gceZone : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["machineConfig"] = state ? state.machineConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["pscInstanceConfig"] = state ? state.pscInstanceConfig : undefined;
            resourceInputs["publicIpAddress"] = state ? state.publicIpAddress : undefined;
            resourceInputs["queryInsightsConfig"] = state ? state.queryInsightsConfig : undefined;
            resourceInputs["readPoolConfig"] = state ? state.readPoolConfig : undefined;
            resourceInputs["reconciling"] = state ? state.reconciling : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AlloydbInstanceArgs | undefined;
            if ((!args || args.cluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cluster'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["availabilityType"] = args ? args.availabilityType : undefined;
            resourceInputs["clientConnectionConfig"] = args ? args.clientConnectionConfig : undefined;
            resourceInputs["cluster"] = args ? args.cluster : undefined;
            resourceInputs["databaseFlags"] = args ? args.databaseFlags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["gceZone"] = args ? args.gceZone : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["machineConfig"] = args ? args.machineConfig : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["pscInstanceConfig"] = args ? args.pscInstanceConfig : undefined;
            resourceInputs["queryInsightsConfig"] = args ? args.queryInsightsConfig : undefined;
            resourceInputs["readPoolConfig"] = args ? args.readPoolConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveAnnotations"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["publicIpAddress"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlloydbInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlloydbInstance resources.
 */
export interface AlloydbInstanceState {
    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. **Note**: This
     * field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
     * field 'effective_annotations' for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * 'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances. Note that primary and read
     * instances can have different availability types. Only READ_POOL instance supports ZONAL type. Users can't specify the
     * zone for READ_POOL instance. Zone is automatically chosen from the list of zones in the region specified. Read pool of
     * size 1 can only have zonal availability. Read pools with node count of 2 or more can have regional availability (nodes
     * are present in 2 or more zones in a region).' Possible values: ["AVAILABILITY_TYPE_UNSPECIFIED", "ZONAL", "REGIONAL"]
     */
    availabilityType?: pulumi.Input<string>;
    /**
     * Client connection specific configurations.
     */
    clientConnectionConfig?: pulumi.Input<inputs.AlloydbInstanceClientConnectionConfig>;
    /**
     * Identifies the alloydb cluster. Must be in the format 'projects/{project}/locations/{location}/clusters/{cluster_id}'
     */
    cluster?: pulumi.Input<string>;
    /**
     * Time the Instance was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read
     * instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read
     * instance. Flags set on read instance may or may not be present on primary.
     */
    databaseFlags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User-settable and human-readable display name for the Instance.
     */
    displayName?: pulumi.Input<string>;
    effectiveAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones
     * This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is
     * absent for a ZONAL instance, instance is created in a random zone with available capacity.
     */
    gceZone?: pulumi.Input<string>;
    /**
     * The ID of the alloydb instance.
     */
    instanceId?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    /**
     * The IP address for the Instance. This is the connection endpoint for an end-user application.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * User-defined labels for the alloydb instance. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configurations for the machines that host the underlying database engine.
     */
    machineConfig?: pulumi.Input<inputs.AlloydbInstanceMachineConfig>;
    /**
     * The name of the instance resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Instance level network configuration.
     */
    networkConfig?: pulumi.Input<inputs.AlloydbInstanceNetworkConfig>;
    /**
     * Configuration for Private Service Connect (PSC) for the instance.
     */
    pscInstanceConfig?: pulumi.Input<inputs.AlloydbInstancePscInstanceConfig>;
    /**
     * The public IP addresses for the Instance. This is available ONLY when networkConfig.enablePublicIp is set to true. This
     * is the connection endpoint for an end-user application.
     */
    publicIpAddress?: pulumi.Input<string>;
    /**
     * Configuration for query insights.
     */
    queryInsightsConfig?: pulumi.Input<inputs.AlloydbInstanceQueryInsightsConfig>;
    /**
     * Read pool specific config. If the instance type is READ_POOL, this configuration must be provided.
     */
    readPoolConfig?: pulumi.Input<inputs.AlloydbInstanceReadPoolConfig>;
    /**
     * Set to true if the current state of Instance does not match the user's intended state, and the service is actively
     * updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover
     * or maintenance.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * The current state of the alloydb instance.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AlloydbInstanceTimeouts>;
    /**
     * The system-generated UID of the resource.
     */
    uid?: pulumi.Input<string>;
    /**
     * Time the Instance was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlloydbInstance resource.
 */
export interface AlloydbInstanceArgs {
    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. **Note**: This
     * field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
     * field 'effective_annotations' for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * 'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances. Note that primary and read
     * instances can have different availability types. Only READ_POOL instance supports ZONAL type. Users can't specify the
     * zone for READ_POOL instance. Zone is automatically chosen from the list of zones in the region specified. Read pool of
     * size 1 can only have zonal availability. Read pools with node count of 2 or more can have regional availability (nodes
     * are present in 2 or more zones in a region).' Possible values: ["AVAILABILITY_TYPE_UNSPECIFIED", "ZONAL", "REGIONAL"]
     */
    availabilityType?: pulumi.Input<string>;
    /**
     * Client connection specific configurations.
     */
    clientConnectionConfig?: pulumi.Input<inputs.AlloydbInstanceClientConnectionConfig>;
    /**
     * Identifies the alloydb cluster. Must be in the format 'projects/{project}/locations/{location}/clusters/{cluster_id}'
     */
    cluster: pulumi.Input<string>;
    /**
     * Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read
     * instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read
     * instance. Flags set on read instance may or may not be present on primary.
     */
    databaseFlags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User-settable and human-readable display name for the Instance.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones
     * This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is
     * absent for a ZONAL instance, instance is created in a random zone with available capacity.
     */
    gceZone?: pulumi.Input<string>;
    /**
     * The ID of the alloydb instance.
     */
    instanceId: pulumi.Input<string>;
    instanceType: pulumi.Input<string>;
    /**
     * User-defined labels for the alloydb instance. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configurations for the machines that host the underlying database engine.
     */
    machineConfig?: pulumi.Input<inputs.AlloydbInstanceMachineConfig>;
    /**
     * Instance level network configuration.
     */
    networkConfig?: pulumi.Input<inputs.AlloydbInstanceNetworkConfig>;
    /**
     * Configuration for Private Service Connect (PSC) for the instance.
     */
    pscInstanceConfig?: pulumi.Input<inputs.AlloydbInstancePscInstanceConfig>;
    /**
     * Configuration for query insights.
     */
    queryInsightsConfig?: pulumi.Input<inputs.AlloydbInstanceQueryInsightsConfig>;
    /**
     * Read pool specific config. If the instance type is READ_POOL, this configuration must be provided.
     */
    readPoolConfig?: pulumi.Input<inputs.AlloydbInstanceReadPoolConfig>;
    timeouts?: pulumi.Input<inputs.AlloydbInstanceTimeouts>;
}
