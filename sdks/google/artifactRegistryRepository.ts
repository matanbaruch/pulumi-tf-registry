// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ArtifactRegistryRepository extends pulumi.CustomResource {
    /**
     * Get an existing ArtifactRegistryRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArtifactRegistryRepositoryState, opts?: pulumi.CustomResourceOptions): ArtifactRegistryRepository {
        return new ArtifactRegistryRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/artifactRegistryRepository:ArtifactRegistryRepository';

    /**
     * Returns true if the given object is an instance of ArtifactRegistryRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ArtifactRegistryRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ArtifactRegistryRepository.__pulumiType;
    }

    /**
     * Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
     * deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
     * under 128 characters in length.
     */
    public readonly cleanupPolicies!: pulumi.Output<outputs.ArtifactRegistryRepositoryCleanupPolicy[] | undefined>;
    /**
     * If true, the cleanup pipeline is prevented from deleting versions in this repository.
     */
    public readonly cleanupPolicyDryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The time when the repository was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The user-provided description of the repository.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Docker repository config contains repository level configuration for the repositories of docker type.
     */
    public readonly dockerConfig!: pulumi.Output<outputs.ArtifactRegistryRepositoryDockerConfig | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The format of packages that are stored in the repository. Supported formats can be found
     * [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
     * a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
     */
    public readonly format!: pulumi.Output<string>;
    /**
     * The Cloud KMS resource name of the customer managed encryption key thatâ€™s used to encrypt the contents of the
     * Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
     * be changed after the Repository has been created.
     */
    public readonly kmsKeyName!: pulumi.Output<string | undefined>;
    /**
     * Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
     * 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
     * underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the location this repository is located in.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
     * the maven format type.
     */
    public readonly mavenConfig!: pulumi.Output<outputs.ArtifactRegistryRepositoryMavenConfig | undefined>;
    /**
     * The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
     * Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * The name of the repository, for example: "repo1"
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Configuration specific for a Remote Repository.
     */
    public readonly remoteRepositoryConfig!: pulumi.Output<outputs.ArtifactRegistryRepositoryRemoteRepositoryConfig | undefined>;
    /**
     * The last part of the repository name, for example: "repo1"
     */
    public readonly repositoryId!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.ArtifactRegistryRepositoryTimeouts | undefined>;
    /**
     * The time when the repository was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Configuration specific for a Virtual Repository.
     */
    public readonly virtualRepositoryConfig!: pulumi.Output<outputs.ArtifactRegistryRepositoryVirtualRepositoryConfig | undefined>;

    /**
     * Create a ArtifactRegistryRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArtifactRegistryRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ArtifactRegistryRepositoryArgs | ArtifactRegistryRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ArtifactRegistryRepositoryState | undefined;
            resourceInputs["cleanupPolicies"] = state ? state.cleanupPolicies : undefined;
            resourceInputs["cleanupPolicyDryRun"] = state ? state.cleanupPolicyDryRun : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dockerConfig"] = state ? state.dockerConfig : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["kmsKeyName"] = state ? state.kmsKeyName : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mavenConfig"] = state ? state.mavenConfig : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["remoteRepositoryConfig"] = state ? state.remoteRepositoryConfig : undefined;
            resourceInputs["repositoryId"] = state ? state.repositoryId : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["virtualRepositoryConfig"] = state ? state.virtualRepositoryConfig : undefined;
        } else {
            const args = argsOrState as ArtifactRegistryRepositoryArgs | undefined;
            if ((!args || args.format === undefined) && !opts.urn) {
                throw new Error("Missing required property 'format'");
            }
            if ((!args || args.repositoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryId'");
            }
            resourceInputs["cleanupPolicies"] = args ? args.cleanupPolicies : undefined;
            resourceInputs["cleanupPolicyDryRun"] = args ? args.cleanupPolicyDryRun : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dockerConfig"] = args ? args.dockerConfig : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["kmsKeyName"] = args ? args.kmsKeyName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mavenConfig"] = args ? args.mavenConfig : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["remoteRepositoryConfig"] = args ? args.remoteRepositoryConfig : undefined;
            resourceInputs["repositoryId"] = args ? args.repositoryId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["virtualRepositoryConfig"] = args ? args.virtualRepositoryConfig : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ArtifactRegistryRepository.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ArtifactRegistryRepository resources.
 */
export interface ArtifactRegistryRepositoryState {
    /**
     * Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
     * deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
     * under 128 characters in length.
     */
    cleanupPolicies?: pulumi.Input<pulumi.Input<inputs.ArtifactRegistryRepositoryCleanupPolicy>[]>;
    /**
     * If true, the cleanup pipeline is prevented from deleting versions in this repository.
     */
    cleanupPolicyDryRun?: pulumi.Input<boolean>;
    /**
     * The time when the repository was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The user-provided description of the repository.
     */
    description?: pulumi.Input<string>;
    /**
     * Docker repository config contains repository level configuration for the repositories of docker type.
     */
    dockerConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryDockerConfig>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The format of packages that are stored in the repository. Supported formats can be found
     * [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
     * a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
     */
    format?: pulumi.Input<string>;
    /**
     * The Cloud KMS resource name of the customer managed encryption key thatâ€™s used to encrypt the contents of the
     * Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
     * be changed after the Repository has been created.
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
     * 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
     * underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the location this repository is located in.
     */
    location?: pulumi.Input<string>;
    /**
     * MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
     * the maven format type.
     */
    mavenConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryMavenConfig>;
    /**
     * The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
     * Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
     */
    mode?: pulumi.Input<string>;
    /**
     * The name of the repository, for example: "repo1"
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Configuration specific for a Remote Repository.
     */
    remoteRepositoryConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryRemoteRepositoryConfig>;
    /**
     * The last part of the repository name, for example: "repo1"
     */
    repositoryId?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ArtifactRegistryRepositoryTimeouts>;
    /**
     * The time when the repository was last updated.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Configuration specific for a Virtual Repository.
     */
    virtualRepositoryConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryVirtualRepositoryConfig>;
}

/**
 * The set of arguments for constructing a ArtifactRegistryRepository resource.
 */
export interface ArtifactRegistryRepositoryArgs {
    /**
     * Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
     * deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
     * under 128 characters in length.
     */
    cleanupPolicies?: pulumi.Input<pulumi.Input<inputs.ArtifactRegistryRepositoryCleanupPolicy>[]>;
    /**
     * If true, the cleanup pipeline is prevented from deleting versions in this repository.
     */
    cleanupPolicyDryRun?: pulumi.Input<boolean>;
    /**
     * The user-provided description of the repository.
     */
    description?: pulumi.Input<string>;
    /**
     * Docker repository config contains repository level configuration for the repositories of docker type.
     */
    dockerConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryDockerConfig>;
    /**
     * The format of packages that are stored in the repository. Supported formats can be found
     * [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
     * a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
     */
    format: pulumi.Input<string>;
    /**
     * The Cloud KMS resource name of the customer managed encryption key thatâ€™s used to encrypt the contents of the
     * Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
     * be changed after the Repository has been created.
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
     * 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
     * underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the location this repository is located in.
     */
    location?: pulumi.Input<string>;
    /**
     * MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
     * the maven format type.
     */
    mavenConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryMavenConfig>;
    /**
     * The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
     * Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
     */
    mode?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Configuration specific for a Remote Repository.
     */
    remoteRepositoryConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryRemoteRepositoryConfig>;
    /**
     * The last part of the repository name, for example: "repo1"
     */
    repositoryId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ArtifactRegistryRepositoryTimeouts>;
    /**
     * Configuration specific for a Virtual Repository.
     */
    virtualRepositoryConfig?: pulumi.Input<inputs.ArtifactRegistryRepositoryVirtualRepositoryConfig>;
}
