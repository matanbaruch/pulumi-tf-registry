// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProjectIamPolicy(args: GetProjectIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getProjectIamPolicy:getProjectIamPolicy", {
        "id": args.id,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectIamPolicy.
 */
export interface GetProjectIamPolicyArgs {
    id?: string;
    project: string;
}

/**
 * A collection of values returned by getProjectIamPolicy.
 */
export interface GetProjectIamPolicyResult {
    readonly etag: string;
    readonly id: string;
    readonly policyData: string;
    readonly project: string;
}
export function getProjectIamPolicyOutput(args: GetProjectIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getProjectIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getProjectIamPolicy.
 */
export interface GetProjectIamPolicyOutputArgs {
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
