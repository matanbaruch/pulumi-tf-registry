// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabaseMigrationServiceConnectionProfile extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseMigrationServiceConnectionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseMigrationServiceConnectionProfileState, opts?: pulumi.CustomResourceOptions): DatabaseMigrationServiceConnectionProfile {
        return new DatabaseMigrationServiceConnectionProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/databaseMigrationServiceConnectionProfile:DatabaseMigrationServiceConnectionProfile';

    /**
     * Returns true if the given object is an instance of DatabaseMigrationServiceConnectionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseMigrationServiceConnectionProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseMigrationServiceConnectionProfile.__pulumiType;
    }

    /**
     * Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
     */
    public readonly alloydb!: pulumi.Output<outputs.DatabaseMigrationServiceConnectionProfileAlloydb | undefined>;
    /**
     * Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination
     * database instance.
     */
    public readonly cloudsql!: pulumi.Output<outputs.DatabaseMigrationServiceConnectionProfileCloudsql | undefined>;
    /**
     * The ID of the connection profile.
     */
    public readonly connectionProfileId!: pulumi.Output<string>;
    /**
     * Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to
     * nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The database provider.
     */
    public /*out*/ readonly dbprovider!: pulumi.Output<string>;
    /**
     * The connection profile display name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Output only. The error details in case of state FAILED.
     */
    public /*out*/ readonly errors!: pulumi.Output<outputs.DatabaseMigrationServiceConnectionProfileError[]>;
    /**
     * The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine
     * VMs. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
     * refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location where the connection profile should reside.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Specifies connection parameters required specifically for MySQL databases.
     */
    public readonly mysql!: pulumi.Output<outputs.DatabaseMigrationServiceConnectionProfileMysql | undefined>;
    /**
     * The name of this connection profile resource in the form of
     * projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Specifies connection parameters required specifically for Oracle databases.
     */
    public readonly oracle!: pulumi.Output<outputs.DatabaseMigrationServiceConnectionProfileOracle | undefined>;
    /**
     * Specifies connection parameters required specifically for PostgreSQL databases.
     */
    public readonly postgresql!: pulumi.Output<outputs.DatabaseMigrationServiceConnectionProfilePostgresql | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The current connection profile state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DatabaseMigrationServiceConnectionProfileTimeouts | undefined>;

    /**
     * Create a DatabaseMigrationServiceConnectionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseMigrationServiceConnectionProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseMigrationServiceConnectionProfileArgs | DatabaseMigrationServiceConnectionProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseMigrationServiceConnectionProfileState | undefined;
            resourceInputs["alloydb"] = state ? state.alloydb : undefined;
            resourceInputs["cloudsql"] = state ? state.cloudsql : undefined;
            resourceInputs["connectionProfileId"] = state ? state.connectionProfileId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dbprovider"] = state ? state.dbprovider : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["errors"] = state ? state.errors : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mysql"] = state ? state.mysql : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oracle"] = state ? state.oracle : undefined;
            resourceInputs["postgresql"] = state ? state.postgresql : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatabaseMigrationServiceConnectionProfileArgs | undefined;
            if ((!args || args.connectionProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionProfileId'");
            }
            resourceInputs["alloydb"] = args ? args.alloydb : undefined;
            resourceInputs["cloudsql"] = args ? args.cloudsql : undefined;
            resourceInputs["connectionProfileId"] = args ? args.connectionProfileId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mysql"] = args ? args.mysql : undefined;
            resourceInputs["oracle"] = args ? args.oracle : undefined;
            resourceInputs["postgresql"] = args ? args.postgresql : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dbprovider"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseMigrationServiceConnectionProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabaseMigrationServiceConnectionProfile resources.
 */
export interface DatabaseMigrationServiceConnectionProfileState {
    /**
     * Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
     */
    alloydb?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileAlloydb>;
    /**
     * Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination
     * database instance.
     */
    cloudsql?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileCloudsql>;
    /**
     * The ID of the connection profile.
     */
    connectionProfileId?: pulumi.Input<string>;
    /**
     * Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to
     * nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The database provider.
     */
    dbprovider?: pulumi.Input<string>;
    /**
     * The connection profile display name.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Output only. The error details in case of state FAILED.
     */
    errors?: pulumi.Input<pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileError>[]>;
    /**
     * The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine
     * VMs. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
     * refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the connection profile should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies connection parameters required specifically for MySQL databases.
     */
    mysql?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileMysql>;
    /**
     * The name of this connection profile resource in the form of
     * projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies connection parameters required specifically for Oracle databases.
     */
    oracle?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileOracle>;
    /**
     * Specifies connection parameters required specifically for PostgreSQL databases.
     */
    postgresql?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfilePostgresql>;
    project?: pulumi.Input<string>;
    /**
     * The current connection profile state.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileTimeouts>;
}

/**
 * The set of arguments for constructing a DatabaseMigrationServiceConnectionProfile resource.
 */
export interface DatabaseMigrationServiceConnectionProfileArgs {
    /**
     * Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
     */
    alloydb?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileAlloydb>;
    /**
     * Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination
     * database instance.
     */
    cloudsql?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileCloudsql>;
    /**
     * The ID of the connection profile.
     */
    connectionProfileId: pulumi.Input<string>;
    /**
     * The connection profile display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine
     * VMs. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
     * refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the connection profile should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies connection parameters required specifically for MySQL databases.
     */
    mysql?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileMysql>;
    /**
     * Specifies connection parameters required specifically for Oracle databases.
     */
    oracle?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileOracle>;
    /**
     * Specifies connection parameters required specifically for PostgreSQL databases.
     */
    postgresql?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfilePostgresql>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatabaseMigrationServiceConnectionProfileTimeouts>;
}
