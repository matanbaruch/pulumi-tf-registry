// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContainerAttachedVersions(args: GetContainerAttachedVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerAttachedVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getContainerAttachedVersions:getContainerAttachedVersions", {
        "id": args.id,
        "location": args.location,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerAttachedVersions.
 */
export interface GetContainerAttachedVersionsArgs {
    id?: string;
    location: string;
    project: string;
}

/**
 * A collection of values returned by getContainerAttachedVersions.
 */
export interface GetContainerAttachedVersionsResult {
    readonly id: string;
    readonly location: string;
    readonly project: string;
    readonly validVersions: string[];
}
export function getContainerAttachedVersionsOutput(args: GetContainerAttachedVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerAttachedVersionsResult> {
    return pulumi.output(args).apply((a: any) => getContainerAttachedVersions(a, opts))
}

/**
 * A collection of arguments for invoking getContainerAttachedVersions.
 */
export interface GetContainerAttachedVersionsOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
