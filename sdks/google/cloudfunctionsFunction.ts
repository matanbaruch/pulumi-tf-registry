// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudfunctionsFunction extends pulumi.CustomResource {
    /**
     * Get an existing CloudfunctionsFunction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudfunctionsFunctionState, opts?: pulumi.CustomResourceOptions): CloudfunctionsFunction {
        return new CloudfunctionsFunction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/cloudfunctionsFunction:CloudfunctionsFunction';

    /**
     * Returns true if the given object is an instance of CloudfunctionsFunction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudfunctionsFunction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudfunctionsFunction.__pulumiType;
    }

    /**
     * Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
     */
    public readonly availableMemoryMb!: pulumi.Output<number | undefined>;
    /**
     * A set of key/value environment variable pairs available during build time.
     */
    public readonly buildEnvironmentVariables!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The fully-qualified name of the service account to be used for the build step of deploying this function
     */
    public readonly buildServiceAccount!: pulumi.Output<string>;
    /**
     * Name of the Cloud Build Custom Worker Pool that should be used to build the function.
     */
    public readonly buildWorkerPool!: pulumi.Output<string | undefined>;
    /**
     * Description of the function.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
     * CONTAINER_REGISTRY.
     */
    public readonly dockerRegistry!: pulumi.Output<string>;
    /**
     * User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
     * deployments will use Artifact Registry for storing images built with Cloud Build.
     */
    public readonly dockerRepository!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Name of the function that will be executed when the Google Cloud Function is triggered.
     */
    public readonly entryPoint!: pulumi.Output<string | undefined>;
    /**
     * A set of key/value environment variable pairs to assign to the function.
     */
    public readonly environmentVariables!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
     */
    public readonly eventTrigger!: pulumi.Output<outputs.CloudfunctionsFunctionEventTrigger | undefined>;
    /**
     * The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
     */
    public readonly httpsTriggerSecurityLevel!: pulumi.Output<string>;
    /**
     * URL which triggers function execution. Returned only if trigger_http is used.
     */
    public readonly httpsTriggerUrl!: pulumi.Output<string>;
    /**
     * String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
     * Changes to this field will recreate the cloud function.
     */
    public readonly ingressSettings!: pulumi.Output<string | undefined>;
    /**
     * Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
     */
    public readonly kmsKeyName!: pulumi.Output<string | undefined>;
    /**
     * A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
     * https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The limit on the maximum number of function instances that may coexist at a given time.
     */
    public readonly maxInstances!: pulumi.Output<number>;
    /**
     * The limit on the minimum number of function instances that may coexist at a given time.
     */
    public readonly minInstances!: pulumi.Output<number | undefined>;
    /**
     * A user-defined name of the function. Function names must be unique globally.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Project of the function. If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Region of function. If it is not provided, the provider region is used.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
     */
    public readonly runtime!: pulumi.Output<string>;
    /**
     * Secret environment variables configuration
     */
    public readonly secretEnvironmentVariables!: pulumi.Output<outputs.CloudfunctionsFunctionSecretEnvironmentVariable[] | undefined>;
    /**
     * Secret volumes configuration.
     */
    public readonly secretVolumes!: pulumi.Output<outputs.CloudfunctionsFunctionSecretVolume[] | undefined>;
    /**
     * If provided, the self-provided service account to run the function with.
     */
    public readonly serviceAccountEmail!: pulumi.Output<string>;
    /**
     * The GCS bucket containing the zip archive which contains the function.
     */
    public readonly sourceArchiveBucket!: pulumi.Output<string | undefined>;
    /**
     * The source archive object (file) in archive bucket.
     */
    public readonly sourceArchiveObject!: pulumi.Output<string | undefined>;
    /**
     * Represents parameters related to source repository where a function is hosted. Cannot be set alongside
     * source_archive_bucket or source_archive_object.
     */
    public readonly sourceRepository!: pulumi.Output<outputs.CloudfunctionsFunctionSourceRepository | undefined>;
    /**
     * Describes the current stage of a deployment.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.CloudfunctionsFunctionTimeouts | undefined>;
    /**
     * Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
     * request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
     * trigger_bucket and trigger_topic.
     */
    public readonly triggerHttp!: pulumi.Output<boolean | undefined>;
    /**
     * The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being
     * created.
     */
    public /*out*/ readonly versionId!: pulumi.Output<string>;
    /**
     * The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
     * short name of the network connector resource. The format of this field is projects/*&#47;locations/*&#47;connectors/*.
     */
    public readonly vpcConnector!: pulumi.Output<string | undefined>;
    /**
     * The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
     * and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
     */
    public readonly vpcConnectorEgressSettings!: pulumi.Output<string>;

    /**
     * Create a CloudfunctionsFunction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudfunctionsFunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudfunctionsFunctionArgs | CloudfunctionsFunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudfunctionsFunctionState | undefined;
            resourceInputs["availableMemoryMb"] = state ? state.availableMemoryMb : undefined;
            resourceInputs["buildEnvironmentVariables"] = state ? state.buildEnvironmentVariables : undefined;
            resourceInputs["buildServiceAccount"] = state ? state.buildServiceAccount : undefined;
            resourceInputs["buildWorkerPool"] = state ? state.buildWorkerPool : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dockerRegistry"] = state ? state.dockerRegistry : undefined;
            resourceInputs["dockerRepository"] = state ? state.dockerRepository : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["entryPoint"] = state ? state.entryPoint : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["eventTrigger"] = state ? state.eventTrigger : undefined;
            resourceInputs["httpsTriggerSecurityLevel"] = state ? state.httpsTriggerSecurityLevel : undefined;
            resourceInputs["httpsTriggerUrl"] = state ? state.httpsTriggerUrl : undefined;
            resourceInputs["ingressSettings"] = state ? state.ingressSettings : undefined;
            resourceInputs["kmsKeyName"] = state ? state.kmsKeyName : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maxInstances"] = state ? state.maxInstances : undefined;
            resourceInputs["minInstances"] = state ? state.minInstances : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["runtime"] = state ? state.runtime : undefined;
            resourceInputs["secretEnvironmentVariables"] = state ? state.secretEnvironmentVariables : undefined;
            resourceInputs["secretVolumes"] = state ? state.secretVolumes : undefined;
            resourceInputs["serviceAccountEmail"] = state ? state.serviceAccountEmail : undefined;
            resourceInputs["sourceArchiveBucket"] = state ? state.sourceArchiveBucket : undefined;
            resourceInputs["sourceArchiveObject"] = state ? state.sourceArchiveObject : undefined;
            resourceInputs["sourceRepository"] = state ? state.sourceRepository : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["triggerHttp"] = state ? state.triggerHttp : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["vpcConnector"] = state ? state.vpcConnector : undefined;
            resourceInputs["vpcConnectorEgressSettings"] = state ? state.vpcConnectorEgressSettings : undefined;
        } else {
            const args = argsOrState as CloudfunctionsFunctionArgs | undefined;
            if ((!args || args.runtime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            resourceInputs["availableMemoryMb"] = args ? args.availableMemoryMb : undefined;
            resourceInputs["buildEnvironmentVariables"] = args ? args.buildEnvironmentVariables : undefined;
            resourceInputs["buildServiceAccount"] = args ? args.buildServiceAccount : undefined;
            resourceInputs["buildWorkerPool"] = args ? args.buildWorkerPool : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dockerRegistry"] = args ? args.dockerRegistry : undefined;
            resourceInputs["dockerRepository"] = args ? args.dockerRepository : undefined;
            resourceInputs["entryPoint"] = args ? args.entryPoint : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["eventTrigger"] = args ? args.eventTrigger : undefined;
            resourceInputs["httpsTriggerSecurityLevel"] = args ? args.httpsTriggerSecurityLevel : undefined;
            resourceInputs["httpsTriggerUrl"] = args ? args.httpsTriggerUrl : undefined;
            resourceInputs["ingressSettings"] = args ? args.ingressSettings : undefined;
            resourceInputs["kmsKeyName"] = args ? args.kmsKeyName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maxInstances"] = args ? args.maxInstances : undefined;
            resourceInputs["minInstances"] = args ? args.minInstances : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["runtime"] = args ? args.runtime : undefined;
            resourceInputs["secretEnvironmentVariables"] = args ? args.secretEnvironmentVariables : undefined;
            resourceInputs["secretVolumes"] = args ? args.secretVolumes : undefined;
            resourceInputs["serviceAccountEmail"] = args ? args.serviceAccountEmail : undefined;
            resourceInputs["sourceArchiveBucket"] = args ? args.sourceArchiveBucket : undefined;
            resourceInputs["sourceArchiveObject"] = args ? args.sourceArchiveObject : undefined;
            resourceInputs["sourceRepository"] = args ? args.sourceRepository : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["triggerHttp"] = args ? args.triggerHttp : undefined;
            resourceInputs["vpcConnector"] = args ? args.vpcConnector : undefined;
            resourceInputs["vpcConnectorEgressSettings"] = args ? args.vpcConnectorEgressSettings : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudfunctionsFunction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudfunctionsFunction resources.
 */
export interface CloudfunctionsFunctionState {
    /**
     * Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
     */
    availableMemoryMb?: pulumi.Input<number>;
    /**
     * A set of key/value environment variable pairs available during build time.
     */
    buildEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The fully-qualified name of the service account to be used for the build step of deploying this function
     */
    buildServiceAccount?: pulumi.Input<string>;
    /**
     * Name of the Cloud Build Custom Worker Pool that should be used to build the function.
     */
    buildWorkerPool?: pulumi.Input<string>;
    /**
     * Description of the function.
     */
    description?: pulumi.Input<string>;
    /**
     * Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
     * CONTAINER_REGISTRY.
     */
    dockerRegistry?: pulumi.Input<string>;
    /**
     * User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
     * deployments will use Artifact Registry for storing images built with Cloud Build.
     */
    dockerRepository?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the function that will be executed when the Google Cloud Function is triggered.
     */
    entryPoint?: pulumi.Input<string>;
    /**
     * A set of key/value environment variable pairs to assign to the function.
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
     */
    eventTrigger?: pulumi.Input<inputs.CloudfunctionsFunctionEventTrigger>;
    /**
     * The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
     */
    httpsTriggerSecurityLevel?: pulumi.Input<string>;
    /**
     * URL which triggers function execution. Returned only if trigger_http is used.
     */
    httpsTriggerUrl?: pulumi.Input<string>;
    /**
     * String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
     * Changes to this field will recreate the cloud function.
     */
    ingressSettings?: pulumi.Input<string>;
    /**
     * Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
     * https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The limit on the maximum number of function instances that may coexist at a given time.
     */
    maxInstances?: pulumi.Input<number>;
    /**
     * The limit on the minimum number of function instances that may coexist at a given time.
     */
    minInstances?: pulumi.Input<number>;
    /**
     * A user-defined name of the function. Function names must be unique globally.
     */
    name?: pulumi.Input<string>;
    /**
     * Project of the function. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Region of function. If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
     */
    runtime?: pulumi.Input<string>;
    /**
     * Secret environment variables configuration
     */
    secretEnvironmentVariables?: pulumi.Input<pulumi.Input<inputs.CloudfunctionsFunctionSecretEnvironmentVariable>[]>;
    /**
     * Secret volumes configuration.
     */
    secretVolumes?: pulumi.Input<pulumi.Input<inputs.CloudfunctionsFunctionSecretVolume>[]>;
    /**
     * If provided, the self-provided service account to run the function with.
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * The GCS bucket containing the zip archive which contains the function.
     */
    sourceArchiveBucket?: pulumi.Input<string>;
    /**
     * The source archive object (file) in archive bucket.
     */
    sourceArchiveObject?: pulumi.Input<string>;
    /**
     * Represents parameters related to source repository where a function is hosted. Cannot be set alongside
     * source_archive_bucket or source_archive_object.
     */
    sourceRepository?: pulumi.Input<inputs.CloudfunctionsFunctionSourceRepository>;
    /**
     * Describes the current stage of a deployment.
     */
    status?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
     */
    timeout?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.CloudfunctionsFunctionTimeouts>;
    /**
     * Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
     * request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
     * trigger_bucket and trigger_topic.
     */
    triggerHttp?: pulumi.Input<boolean>;
    /**
     * The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being
     * created.
     */
    versionId?: pulumi.Input<string>;
    /**
     * The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
     * short name of the network connector resource. The format of this field is projects/*&#47;locations/*&#47;connectors/*.
     */
    vpcConnector?: pulumi.Input<string>;
    /**
     * The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
     * and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
     */
    vpcConnectorEgressSettings?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudfunctionsFunction resource.
 */
export interface CloudfunctionsFunctionArgs {
    /**
     * Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
     */
    availableMemoryMb?: pulumi.Input<number>;
    /**
     * A set of key/value environment variable pairs available during build time.
     */
    buildEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The fully-qualified name of the service account to be used for the build step of deploying this function
     */
    buildServiceAccount?: pulumi.Input<string>;
    /**
     * Name of the Cloud Build Custom Worker Pool that should be used to build the function.
     */
    buildWorkerPool?: pulumi.Input<string>;
    /**
     * Description of the function.
     */
    description?: pulumi.Input<string>;
    /**
     * Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
     * CONTAINER_REGISTRY.
     */
    dockerRegistry?: pulumi.Input<string>;
    /**
     * User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
     * deployments will use Artifact Registry for storing images built with Cloud Build.
     */
    dockerRepository?: pulumi.Input<string>;
    /**
     * Name of the function that will be executed when the Google Cloud Function is triggered.
     */
    entryPoint?: pulumi.Input<string>;
    /**
     * A set of key/value environment variable pairs to assign to the function.
     */
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
     */
    eventTrigger?: pulumi.Input<inputs.CloudfunctionsFunctionEventTrigger>;
    /**
     * The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
     */
    httpsTriggerSecurityLevel?: pulumi.Input<string>;
    /**
     * URL which triggers function execution. Returned only if trigger_http is used.
     */
    httpsTriggerUrl?: pulumi.Input<string>;
    /**
     * String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
     * Changes to this field will recreate the cloud function.
     */
    ingressSettings?: pulumi.Input<string>;
    /**
     * Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
     * https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The limit on the maximum number of function instances that may coexist at a given time.
     */
    maxInstances?: pulumi.Input<number>;
    /**
     * The limit on the minimum number of function instances that may coexist at a given time.
     */
    minInstances?: pulumi.Input<number>;
    /**
     * A user-defined name of the function. Function names must be unique globally.
     */
    name?: pulumi.Input<string>;
    /**
     * Project of the function. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Region of function. If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
     */
    runtime: pulumi.Input<string>;
    /**
     * Secret environment variables configuration
     */
    secretEnvironmentVariables?: pulumi.Input<pulumi.Input<inputs.CloudfunctionsFunctionSecretEnvironmentVariable>[]>;
    /**
     * Secret volumes configuration.
     */
    secretVolumes?: pulumi.Input<pulumi.Input<inputs.CloudfunctionsFunctionSecretVolume>[]>;
    /**
     * If provided, the self-provided service account to run the function with.
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * The GCS bucket containing the zip archive which contains the function.
     */
    sourceArchiveBucket?: pulumi.Input<string>;
    /**
     * The source archive object (file) in archive bucket.
     */
    sourceArchiveObject?: pulumi.Input<string>;
    /**
     * Represents parameters related to source repository where a function is hosted. Cannot be set alongside
     * source_archive_bucket or source_archive_object.
     */
    sourceRepository?: pulumi.Input<inputs.CloudfunctionsFunctionSourceRepository>;
    /**
     * Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
     */
    timeout?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.CloudfunctionsFunctionTimeouts>;
    /**
     * Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
     * request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
     * trigger_bucket and trigger_topic.
     */
    triggerHttp?: pulumi.Input<boolean>;
    /**
     * The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
     * short name of the network connector resource. The format of this field is projects/*&#47;locations/*&#47;connectors/*.
     */
    vpcConnector?: pulumi.Input<string>;
    /**
     * The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
     * and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
     */
    vpcConnectorEgressSettings?: pulumi.Input<string>;
}
