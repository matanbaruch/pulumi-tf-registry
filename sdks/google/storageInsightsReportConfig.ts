// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StorageInsightsReportConfig extends pulumi.CustomResource {
    /**
     * Get an existing StorageInsightsReportConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageInsightsReportConfigState, opts?: pulumi.CustomResourceOptions): StorageInsightsReportConfig {
        return new StorageInsightsReportConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/storageInsightsReportConfig:StorageInsightsReportConfig';

    /**
     * Returns true if the given object is an instance of StorageInsightsReportConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageInsightsReportConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageInsightsReportConfig.__pulumiType;
    }

    /**
     * Options for configuring the format of the inventory report CSV file.
     */
    public readonly csvOptions!: pulumi.Output<outputs.StorageInsightsReportConfigCsvOptions>;
    /**
     * The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Options for configuring how inventory reports are generated.
     */
    public readonly frequencyOptions!: pulumi.Output<outputs.StorageInsightsReportConfigFrequencyOptions | undefined>;
    /**
     * The location of the ReportConfig. The source and destination buckets specified in the ReportConfig must be in the same
     * location.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The UUID of the inventory report configuration.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Options for including metadata in an inventory report.
     */
    public readonly objectMetadataReportOptions!: pulumi.Output<outputs.StorageInsightsReportConfigObjectMetadataReportOptions | undefined>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.StorageInsightsReportConfigTimeouts | undefined>;

    /**
     * Create a StorageInsightsReportConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageInsightsReportConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageInsightsReportConfigArgs | StorageInsightsReportConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageInsightsReportConfigState | undefined;
            resourceInputs["csvOptions"] = state ? state.csvOptions : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["frequencyOptions"] = state ? state.frequencyOptions : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectMetadataReportOptions"] = state ? state.objectMetadataReportOptions : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as StorageInsightsReportConfigArgs | undefined;
            if ((!args || args.csvOptions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'csvOptions'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["csvOptions"] = args ? args.csvOptions : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["frequencyOptions"] = args ? args.frequencyOptions : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["objectMetadataReportOptions"] = args ? args.objectMetadataReportOptions : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageInsightsReportConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageInsightsReportConfig resources.
 */
export interface StorageInsightsReportConfigState {
    /**
     * Options for configuring the format of the inventory report CSV file.
     */
    csvOptions?: pulumi.Input<inputs.StorageInsightsReportConfigCsvOptions>;
    /**
     * The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Options for configuring how inventory reports are generated.
     */
    frequencyOptions?: pulumi.Input<inputs.StorageInsightsReportConfigFrequencyOptions>;
    /**
     * The location of the ReportConfig. The source and destination buckets specified in the ReportConfig must be in the same
     * location.
     */
    location?: pulumi.Input<string>;
    /**
     * The UUID of the inventory report configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * Options for including metadata in an inventory report.
     */
    objectMetadataReportOptions?: pulumi.Input<inputs.StorageInsightsReportConfigObjectMetadataReportOptions>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageInsightsReportConfigTimeouts>;
}

/**
 * The set of arguments for constructing a StorageInsightsReportConfig resource.
 */
export interface StorageInsightsReportConfigArgs {
    /**
     * Options for configuring the format of the inventory report CSV file.
     */
    csvOptions: pulumi.Input<inputs.StorageInsightsReportConfigCsvOptions>;
    /**
     * The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Options for configuring how inventory reports are generated.
     */
    frequencyOptions?: pulumi.Input<inputs.StorageInsightsReportConfigFrequencyOptions>;
    /**
     * The location of the ReportConfig. The source and destination buckets specified in the ReportConfig must be in the same
     * location.
     */
    location: pulumi.Input<string>;
    /**
     * Options for including metadata in an inventory report.
     */
    objectMetadataReportOptions?: pulumi.Input<inputs.StorageInsightsReportConfigObjectMetadataReportOptions>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageInsightsReportConfigTimeouts>;
}
