// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirebaseAppCheckRecaptchaV3Config extends pulumi.CustomResource {
    /**
     * Get an existing FirebaseAppCheckRecaptchaV3Config resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirebaseAppCheckRecaptchaV3ConfigState, opts?: pulumi.CustomResourceOptions): FirebaseAppCheckRecaptchaV3Config {
        return new FirebaseAppCheckRecaptchaV3Config(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/firebaseAppCheckRecaptchaV3Config:FirebaseAppCheckRecaptchaV3Config';

    /**
     * Returns true if the given object is an instance of FirebaseAppCheckRecaptchaV3Config.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirebaseAppCheckRecaptchaV3Config {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirebaseAppCheckRecaptchaV3Config.__pulumiType;
    }

    /**
     * The ID of an [Web
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The relative resource name of the reCAPTCHA V3 configuration object
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
     * be populated in any response.
     */
    public readonly siteSecret!: pulumi.Output<string>;
    /**
     * Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way
     * to find out whether it was previously set.
     */
    public /*out*/ readonly siteSecretSet!: pulumi.Output<boolean>;
    public readonly timeouts!: pulumi.Output<outputs.FirebaseAppCheckRecaptchaV3ConfigTimeouts | undefined>;
    /**
     * Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
     * default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
     * nine fractional digits, ending with 's'. Example: "3.5s".
     */
    public readonly tokenTtl!: pulumi.Output<string>;

    /**
     * Create a FirebaseAppCheckRecaptchaV3Config resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirebaseAppCheckRecaptchaV3ConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirebaseAppCheckRecaptchaV3ConfigArgs | FirebaseAppCheckRecaptchaV3ConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirebaseAppCheckRecaptchaV3ConfigState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["siteSecret"] = state ? state.siteSecret : undefined;
            resourceInputs["siteSecretSet"] = state ? state.siteSecretSet : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["tokenTtl"] = state ? state.tokenTtl : undefined;
        } else {
            const args = argsOrState as FirebaseAppCheckRecaptchaV3ConfigArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.siteSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteSecret'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["siteSecret"] = args?.siteSecret ? pulumi.secret(args.siteSecret) : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["tokenTtl"] = args ? args.tokenTtl : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["siteSecretSet"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["siteSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FirebaseAppCheckRecaptchaV3Config.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirebaseAppCheckRecaptchaV3Config resources.
 */
export interface FirebaseAppCheckRecaptchaV3ConfigState {
    /**
     * The ID of an [Web
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
     */
    appId?: pulumi.Input<string>;
    /**
     * The relative resource name of the reCAPTCHA V3 configuration object
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
     * be populated in any response.
     */
    siteSecret?: pulumi.Input<string>;
    /**
     * Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way
     * to find out whether it was previously set.
     */
    siteSecretSet?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.FirebaseAppCheckRecaptchaV3ConfigTimeouts>;
    /**
     * Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
     * default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
     * nine fractional digits, ending with 's'. Example: "3.5s".
     */
    tokenTtl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirebaseAppCheckRecaptchaV3Config resource.
 */
export interface FirebaseAppCheckRecaptchaV3ConfigArgs {
    /**
     * The ID of an [Web
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
     */
    appId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
     * be populated in any response.
     */
    siteSecret: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FirebaseAppCheckRecaptchaV3ConfigTimeouts>;
    /**
     * Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
     * default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
     * nine fractional digits, ending with 's'. Example: "3.5s".
     */
    tokenTtl?: pulumi.Input<string>;
}
