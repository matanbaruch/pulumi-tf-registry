// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeNetwork(args: GetComputeNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getComputeNetwork:getComputeNetwork", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeNetwork.
 */
export interface GetComputeNetworkArgs {
    id?: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getComputeNetwork.
 */
export interface GetComputeNetworkResult {
    readonly description: string;
    readonly gatewayIpv4: string;
    readonly id: string;
    readonly internalIpv6Range: string;
    readonly name: string;
    readonly project?: string;
    readonly selfLink: string;
    readonly subnetworksSelfLinks: string[];
}
export function getComputeNetworkOutput(args: GetComputeNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeNetworkResult> {
    return pulumi.output(args).apply((a: any) => getComputeNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getComputeNetwork.
 */
export interface GetComputeNetworkOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
