// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AppEngineFirewallRule extends pulumi.CustomResource {
    /**
     * Get an existing AppEngineFirewallRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppEngineFirewallRuleState, opts?: pulumi.CustomResourceOptions): AppEngineFirewallRule {
        return new AppEngineFirewallRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/appEngineFirewallRule:AppEngineFirewallRule';

    /**
     * Returns true if the given object is an instance of AppEngineFirewallRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppEngineFirewallRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppEngineFirewallRule.__pulumiType;
    }

    /**
     * The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * An optional string description of this rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
     * default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
     * of this rule can be modified by the user.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * IP address or range, defined using CIDR notation, of requests that this rule applies to.
     */
    public readonly sourceRange!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AppEngineFirewallRuleTimeouts | undefined>;

    /**
     * Create a AppEngineFirewallRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppEngineFirewallRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppEngineFirewallRuleArgs | AppEngineFirewallRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppEngineFirewallRuleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["sourceRange"] = state ? state.sourceRange : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AppEngineFirewallRuleArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.sourceRange === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRange'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["sourceRange"] = args ? args.sourceRange : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppEngineFirewallRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppEngineFirewallRule resources.
 */
export interface AppEngineFirewallRuleState {
    /**
     * The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
     */
    action?: pulumi.Input<string>;
    /**
     * An optional string description of this rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
     * default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
     * of this rule can be modified by the user.
     */
    priority?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * IP address or range, defined using CIDR notation, of requests that this rule applies to.
     */
    sourceRange?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppEngineFirewallRuleTimeouts>;
}

/**
 * The set of arguments for constructing a AppEngineFirewallRule resource.
 */
export interface AppEngineFirewallRuleArgs {
    /**
     * The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
     */
    action: pulumi.Input<string>;
    /**
     * An optional string description of this rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
     * default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
     * of this rule can be modified by the user.
     */
    priority?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * IP address or range, defined using CIDR notation, of requests that this rule applies to.
     */
    sourceRange: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppEngineFirewallRuleTimeouts>;
}
