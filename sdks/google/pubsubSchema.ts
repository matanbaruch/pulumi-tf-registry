// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PubsubSchema extends pulumi.CustomResource {
    /**
     * Get an existing PubsubSchema resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PubsubSchemaState, opts?: pulumi.CustomResourceOptions): PubsubSchema {
        return new PubsubSchema(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/pubsubSchema:PubsubSchema';

    /**
     * Returns true if the given object is an instance of PubsubSchema.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PubsubSchema {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PubsubSchema.__pulumiType;
    }

    /**
     * The definition of the schema. This should contain a string representing the full definition of the schema that is a
     * valid schema definition of the type specified in type. Changes to the definition commit new [schema
     * revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
     * updates that fail with an error indicating that the limit has been reached require manually [deleting old
     * revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
     */
    public readonly definition!: pulumi.Output<string | undefined>;
    /**
     * The ID to use for the schema, which will become the final component of the schema's resource name.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.PubsubSchemaTimeouts | undefined>;
    /**
     * The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
     * "PROTOCOL_BUFFER", "AVRO"]
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a PubsubSchema resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PubsubSchemaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PubsubSchemaArgs | PubsubSchemaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PubsubSchemaState | undefined;
            resourceInputs["definition"] = state ? state.definition : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as PubsubSchemaArgs | undefined;
            resourceInputs["definition"] = args ? args.definition : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PubsubSchema.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PubsubSchema resources.
 */
export interface PubsubSchemaState {
    /**
     * The definition of the schema. This should contain a string representing the full definition of the schema that is a
     * valid schema definition of the type specified in type. Changes to the definition commit new [schema
     * revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
     * updates that fail with an error indicating that the limit has been reached require manually [deleting old
     * revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
     */
    definition?: pulumi.Input<string>;
    /**
     * The ID to use for the schema, which will become the final component of the schema's resource name.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PubsubSchemaTimeouts>;
    /**
     * The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
     * "PROTOCOL_BUFFER", "AVRO"]
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PubsubSchema resource.
 */
export interface PubsubSchemaArgs {
    /**
     * The definition of the schema. This should contain a string representing the full definition of the schema that is a
     * valid schema definition of the type specified in type. Changes to the definition commit new [schema
     * revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
     * updates that fail with an error indicating that the limit has been reached require manually [deleting old
     * revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
     */
    definition?: pulumi.Input<string>;
    /**
     * The ID to use for the schema, which will become the final component of the schema's resource name.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PubsubSchemaTimeouts>;
    /**
     * The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
     * "PROTOCOL_BUFFER", "AVRO"]
     */
    type?: pulumi.Input<string>;
}
