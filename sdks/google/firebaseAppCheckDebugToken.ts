// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirebaseAppCheckDebugToken extends pulumi.CustomResource {
    /**
     * Get an existing FirebaseAppCheckDebugToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirebaseAppCheckDebugTokenState, opts?: pulumi.CustomResourceOptions): FirebaseAppCheckDebugToken {
        return new FirebaseAppCheckDebugToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/firebaseAppCheckDebugToken:FirebaseAppCheckDebugToken';

    /**
     * Returns true if the given object is an instance of FirebaseAppCheckDebugToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirebaseAppCheckDebugToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirebaseAppCheckDebugToken.__pulumiType;
    }

    /**
     * The ID of a [Web
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id),
     * [Apple
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id),
     * or [Android
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.androidApps#AndroidApp.FIELDS.app_id)
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The last segment of the resource name of the debug token.
     */
    public /*out*/ readonly debugTokenId!: pulumi.Output<string>;
    /**
     * A human readable display name used to identify this debug token.
     */
    public readonly displayName!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.FirebaseAppCheckDebugTokenTimeouts | undefined>;
    /**
     * The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. You may use a method
     * of your choice such as random/random_uuid to generate the token. This field is immutable once set, and cannot be
     * updated. You can, however, delete this debug token to revoke it. For security reasons, this field will never be
     * populated in any response.
     */
    public readonly token!: pulumi.Output<string>;

    /**
     * Create a FirebaseAppCheckDebugToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirebaseAppCheckDebugTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirebaseAppCheckDebugTokenArgs | FirebaseAppCheckDebugTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirebaseAppCheckDebugTokenState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["debugTokenId"] = state ? state.debugTokenId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
        } else {
            const args = argsOrState as FirebaseAppCheckDebugTokenArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.token === undefined) && !opts.urn) {
                throw new Error("Missing required property 'token'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["token"] = args?.token ? pulumi.secret(args.token) : undefined;
            resourceInputs["debugTokenId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["token"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FirebaseAppCheckDebugToken.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirebaseAppCheckDebugToken resources.
 */
export interface FirebaseAppCheckDebugTokenState {
    /**
     * The ID of a [Web
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id),
     * [Apple
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id),
     * or [Android
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.androidApps#AndroidApp.FIELDS.app_id)
     */
    appId?: pulumi.Input<string>;
    /**
     * The last segment of the resource name of the debug token.
     */
    debugTokenId?: pulumi.Input<string>;
    /**
     * A human readable display name used to identify this debug token.
     */
    displayName?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FirebaseAppCheckDebugTokenTimeouts>;
    /**
     * The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. You may use a method
     * of your choice such as random/random_uuid to generate the token. This field is immutable once set, and cannot be
     * updated. You can, however, delete this debug token to revoke it. For security reasons, this field will never be
     * populated in any response.
     */
    token?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirebaseAppCheckDebugToken resource.
 */
export interface FirebaseAppCheckDebugTokenArgs {
    /**
     * The ID of a [Web
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id),
     * [Apple
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id),
     * or [Android
     * App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.androidApps#AndroidApp.FIELDS.app_id)
     */
    appId: pulumi.Input<string>;
    /**
     * A human readable display name used to identify this debug token.
     */
    displayName: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FirebaseAppCheckDebugTokenTimeouts>;
    /**
     * The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. You may use a method
     * of your choice such as random/random_uuid to generate the token. This field is immutable once set, and cannot be
     * updated. You can, however, delete this debug token to revoke it. For security reasons, this field will never be
     * populated in any response.
     */
    token: pulumi.Input<string>;
}
