// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VertexAiFeatureOnlineStore extends pulumi.CustomResource {
    /**
     * Get an existing VertexAiFeatureOnlineStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VertexAiFeatureOnlineStoreState, opts?: pulumi.CustomResourceOptions): VertexAiFeatureOnlineStore {
        return new VertexAiFeatureOnlineStore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/vertexAiFeatureOnlineStore:VertexAiFeatureOnlineStore';

    /**
     * Returns true if the given object is an instance of VertexAiFeatureOnlineStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VertexAiFeatureOnlineStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VertexAiFeatureOnlineStore.__pulumiType;
    }

    /**
     * Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
     * FeatureOnlineStore.
     */
    public readonly bigtable!: pulumi.Output<outputs.VertexAiFeatureOnlineStoreBigtable | undefined>;
    /**
     * The timestamp of when the feature online store was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
     * need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
     * default.
     */
    public readonly dedicatedServingEndpoint!: pulumi.Output<outputs.VertexAiFeatureOnlineStoreDedicatedServingEndpoint | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Used to perform consistent read-modify-write updates.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
     */
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
     * and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
     * the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
     * [a-z0-9_]. The first character cannot be a number.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
     * FeatureOnlineStore
     */
    public readonly optimized!: pulumi.Output<outputs.VertexAiFeatureOnlineStoreOptimized | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The region of feature online store. eg us-central1
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The state of the Feature Online Store. See the possible states in [this
     * link](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#state).
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.VertexAiFeatureOnlineStoreTimeouts | undefined>;
    /**
     * The timestamp of when the feature online store was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
     * and up to nine fractional digits.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a VertexAiFeatureOnlineStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VertexAiFeatureOnlineStoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VertexAiFeatureOnlineStoreArgs | VertexAiFeatureOnlineStoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VertexAiFeatureOnlineStoreState | undefined;
            resourceInputs["bigtable"] = state ? state.bigtable : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dedicatedServingEndpoint"] = state ? state.dedicatedServingEndpoint : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["optimized"] = state ? state.optimized : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as VertexAiFeatureOnlineStoreArgs | undefined;
            resourceInputs["bigtable"] = args ? args.bigtable : undefined;
            resourceInputs["dedicatedServingEndpoint"] = args ? args.dedicatedServingEndpoint : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["optimized"] = args ? args.optimized : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VertexAiFeatureOnlineStore.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VertexAiFeatureOnlineStore resources.
 */
export interface VertexAiFeatureOnlineStoreState {
    /**
     * Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
     * FeatureOnlineStore.
     */
    bigtable?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreBigtable>;
    /**
     * The timestamp of when the feature online store was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
     * need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
     * default.
     */
    dedicatedServingEndpoint?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreDedicatedServingEndpoint>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Used to perform consistent read-modify-write updates.
     */
    etag?: pulumi.Input<string>;
    /**
     * If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
     * and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
     * the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
     * [a-z0-9_]. The first character cannot be a number.
     */
    name?: pulumi.Input<string>;
    /**
     * Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
     * FeatureOnlineStore
     */
    optimized?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreOptimized>;
    project?: pulumi.Input<string>;
    /**
     * The region of feature online store. eg us-central1
     */
    region?: pulumi.Input<string>;
    /**
     * The state of the Feature Online Store. See the possible states in [this
     * link](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#state).
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreTimeouts>;
    /**
     * The timestamp of when the feature online store was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
     * and up to nine fractional digits.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VertexAiFeatureOnlineStore resource.
 */
export interface VertexAiFeatureOnlineStoreArgs {
    /**
     * Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
     * FeatureOnlineStore.
     */
    bigtable?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreBigtable>;
    /**
     * The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
     * need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
     * default.
     */
    dedicatedServingEndpoint?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreDedicatedServingEndpoint>;
    /**
     * If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
     * and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
     * the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
     * [a-z0-9_]. The first character cannot be a number.
     */
    name?: pulumi.Input<string>;
    /**
     * Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
     * FeatureOnlineStore
     */
    optimized?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreOptimized>;
    project?: pulumi.Input<string>;
    /**
     * The region of feature online store. eg us-central1
     */
    region?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VertexAiFeatureOnlineStoreTimeouts>;
}
