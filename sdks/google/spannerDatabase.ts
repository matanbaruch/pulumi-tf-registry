// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SpannerDatabase extends pulumi.CustomResource {
    /**
     * Get an existing SpannerDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpannerDatabaseState, opts?: pulumi.CustomResourceOptions): SpannerDatabase {
        return new SpannerDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/spannerDatabase:SpannerDatabase';

    /**
     * Returns true if the given object is an instance of SpannerDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpannerDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpannerDatabase.__pulumiType;
    }

    /**
     * The dialect of the Cloud Spanner Database. If it is not provided, "GOOGLE_STANDARD_SQL" will be used. Possible values:
     * ["GOOGLE_STANDARD_SQL", "POSTGRESQL"]
     */
    public readonly databaseDialect!: pulumi.Output<string>;
    /**
     * An optional list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc.
     * These statements execute atomically with the creation of the database: if there is an error in any statement, the
     * database is not created.
     */
    public readonly ddls!: pulumi.Output<string[] | undefined>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    public readonly enableDropProtection!: pulumi.Output<boolean | undefined>;
    /**
     * Encryption configuration for the database
     */
    public readonly encryptionConfig!: pulumi.Output<outputs.SpannerDatabaseEncryptionConfig | undefined>;
    /**
     * The instance to create the database on.
     */
    public readonly instance!: pulumi.Output<string>;
    /**
     * A unique identifier for the database, which cannot be changed after the instance is created. Values are of the form
     * [a-z][-a-z0-9]*[a-z0-9].
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * An explanation of the status of the database.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SpannerDatabaseTimeouts | undefined>;
    /**
     * The retention period for the database. The retention period must be between 1 hour and 7 days, and can be specified in
     * days, hours, minutes, or seconds. For example, the values 1d, 24h, 1440m, and 86400s are equivalent. Default value is
     * 1h. If this property is used, you must avoid adding new DDL statements to 'ddl' that update the database's
     * version_retention_period.
     */
    public readonly versionRetentionPeriod!: pulumi.Output<string>;

    /**
     * Create a SpannerDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpannerDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpannerDatabaseArgs | SpannerDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpannerDatabaseState | undefined;
            resourceInputs["databaseDialect"] = state ? state.databaseDialect : undefined;
            resourceInputs["ddls"] = state ? state.ddls : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["enableDropProtection"] = state ? state.enableDropProtection : undefined;
            resourceInputs["encryptionConfig"] = state ? state.encryptionConfig : undefined;
            resourceInputs["instance"] = state ? state.instance : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["versionRetentionPeriod"] = state ? state.versionRetentionPeriod : undefined;
        } else {
            const args = argsOrState as SpannerDatabaseArgs | undefined;
            if ((!args || args.instance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instance'");
            }
            resourceInputs["databaseDialect"] = args ? args.databaseDialect : undefined;
            resourceInputs["ddls"] = args ? args.ddls : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["enableDropProtection"] = args ? args.enableDropProtection : undefined;
            resourceInputs["encryptionConfig"] = args ? args.encryptionConfig : undefined;
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["versionRetentionPeriod"] = args ? args.versionRetentionPeriod : undefined;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpannerDatabase.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SpannerDatabase resources.
 */
export interface SpannerDatabaseState {
    /**
     * The dialect of the Cloud Spanner Database. If it is not provided, "GOOGLE_STANDARD_SQL" will be used. Possible values:
     * ["GOOGLE_STANDARD_SQL", "POSTGRESQL"]
     */
    databaseDialect?: pulumi.Input<string>;
    /**
     * An optional list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc.
     * These statements execute atomically with the creation of the database: if there is an error in any statement, the
     * database is not created.
     */
    ddls?: pulumi.Input<pulumi.Input<string>[]>;
    deletionProtection?: pulumi.Input<boolean>;
    enableDropProtection?: pulumi.Input<boolean>;
    /**
     * Encryption configuration for the database
     */
    encryptionConfig?: pulumi.Input<inputs.SpannerDatabaseEncryptionConfig>;
    /**
     * The instance to create the database on.
     */
    instance?: pulumi.Input<string>;
    /**
     * A unique identifier for the database, which cannot be changed after the instance is created. Values are of the form
     * [a-z][-a-z0-9]*[a-z0-9].
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * An explanation of the status of the database.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SpannerDatabaseTimeouts>;
    /**
     * The retention period for the database. The retention period must be between 1 hour and 7 days, and can be specified in
     * days, hours, minutes, or seconds. For example, the values 1d, 24h, 1440m, and 86400s are equivalent. Default value is
     * 1h. If this property is used, you must avoid adding new DDL statements to 'ddl' that update the database's
     * version_retention_period.
     */
    versionRetentionPeriod?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SpannerDatabase resource.
 */
export interface SpannerDatabaseArgs {
    /**
     * The dialect of the Cloud Spanner Database. If it is not provided, "GOOGLE_STANDARD_SQL" will be used. Possible values:
     * ["GOOGLE_STANDARD_SQL", "POSTGRESQL"]
     */
    databaseDialect?: pulumi.Input<string>;
    /**
     * An optional list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc.
     * These statements execute atomically with the creation of the database: if there is an error in any statement, the
     * database is not created.
     */
    ddls?: pulumi.Input<pulumi.Input<string>[]>;
    deletionProtection?: pulumi.Input<boolean>;
    enableDropProtection?: pulumi.Input<boolean>;
    /**
     * Encryption configuration for the database
     */
    encryptionConfig?: pulumi.Input<inputs.SpannerDatabaseEncryptionConfig>;
    /**
     * The instance to create the database on.
     */
    instance: pulumi.Input<string>;
    /**
     * A unique identifier for the database, which cannot be changed after the instance is created. Values are of the form
     * [a-z][-a-z0-9]*[a-z0-9].
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SpannerDatabaseTimeouts>;
    /**
     * The retention period for the database. The retention period must be between 1 hour and 7 days, and can be specified in
     * days, hours, minutes, or seconds. For example, the values 1d, 24h, 1440m, and 86400s are equivalent. Default value is
     * 1h. If this property is used, you must avoid adding new DDL statements to 'ddl' that update the database's
     * version_retention_period.
     */
    versionRetentionPeriod?: pulumi.Input<string>;
}
