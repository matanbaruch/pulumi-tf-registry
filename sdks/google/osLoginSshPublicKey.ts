// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OsLoginSshPublicKey extends pulumi.CustomResource {
    /**
     * Get an existing OsLoginSshPublicKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OsLoginSshPublicKeyState, opts?: pulumi.CustomResourceOptions): OsLoginSshPublicKey {
        return new OsLoginSshPublicKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/osLoginSshPublicKey:OsLoginSshPublicKey';

    /**
     * Returns true if the given object is an instance of OsLoginSshPublicKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OsLoginSshPublicKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OsLoginSshPublicKey.__pulumiType;
    }

    /**
     * An expiration time in microseconds since epoch.
     */
    public readonly expirationTimeUsec!: pulumi.Output<string | undefined>;
    /**
     * The SHA-256 fingerprint of the SSH public key.
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * Public key text in SSH format, defined by RFC4253 section 6.6.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The project ID of the Google Cloud Platform project.
     */
    public readonly project!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.OsLoginSshPublicKeyTimeouts | undefined>;
    /**
     * The user email.
     */
    public readonly user!: pulumi.Output<string>;

    /**
     * Create a OsLoginSshPublicKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OsLoginSshPublicKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OsLoginSshPublicKeyArgs | OsLoginSshPublicKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OsLoginSshPublicKeyState | undefined;
            resourceInputs["expirationTimeUsec"] = state ? state.expirationTimeUsec : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
        } else {
            const args = argsOrState as OsLoginSshPublicKeyArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.user === undefined) && !opts.urn) {
                throw new Error("Missing required property 'user'");
            }
            resourceInputs["expirationTimeUsec"] = args ? args.expirationTimeUsec : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
            resourceInputs["fingerprint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OsLoginSshPublicKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OsLoginSshPublicKey resources.
 */
export interface OsLoginSshPublicKeyState {
    /**
     * An expiration time in microseconds since epoch.
     */
    expirationTimeUsec?: pulumi.Input<string>;
    /**
     * The SHA-256 fingerprint of the SSH public key.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Public key text in SSH format, defined by RFC4253 section 6.6.
     */
    key?: pulumi.Input<string>;
    /**
     * The project ID of the Google Cloud Platform project.
     */
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OsLoginSshPublicKeyTimeouts>;
    /**
     * The user email.
     */
    user?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OsLoginSshPublicKey resource.
 */
export interface OsLoginSshPublicKeyArgs {
    /**
     * An expiration time in microseconds since epoch.
     */
    expirationTimeUsec?: pulumi.Input<string>;
    /**
     * Public key text in SSH format, defined by RFC4253 section 6.6.
     */
    key: pulumi.Input<string>;
    /**
     * The project ID of the Google Cloud Platform project.
     */
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.OsLoginSshPublicKeyTimeouts>;
    /**
     * The user email.
     */
    user: pulumi.Input<string>;
}
