// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DialogflowCxEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing DialogflowCxEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DialogflowCxEnvironmentState, opts?: pulumi.CustomResourceOptions): DialogflowCxEnvironment {
        return new DialogflowCxEnvironment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/dialogflowCxEnvironment:DialogflowCxEnvironment';

    /**
     * Returns true if the given object is an instance of DialogflowCxEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DialogflowCxEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DialogflowCxEnvironment.__pulumiType;
    }

    /**
     * The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
     * rejected.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The human-readable name of the environment (unique in an agent). Limit of 64 characters.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The name of the environment.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    public readonly parent!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DialogflowCxEnvironmentTimeouts | undefined>;
    /**
     * Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * A list of configurations for flow versions. You should include version configs for all flows that are reachable from
     * [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
     */
    public readonly versionConfigs!: pulumi.Output<outputs.DialogflowCxEnvironmentVersionConfig[]>;

    /**
     * Create a DialogflowCxEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DialogflowCxEnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DialogflowCxEnvironmentArgs | DialogflowCxEnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DialogflowCxEnvironmentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["versionConfigs"] = state ? state.versionConfigs : undefined;
        } else {
            const args = argsOrState as DialogflowCxEnvironmentArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.versionConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionConfigs'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["versionConfigs"] = args ? args.versionConfigs : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DialogflowCxEnvironment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DialogflowCxEnvironment resources.
 */
export interface DialogflowCxEnvironmentState {
    /**
     * The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
     * rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the environment (unique in an agent). Limit of 64 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowCxEnvironmentTimeouts>;
    /**
     * Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
    /**
     * A list of configurations for flow versions. You should include version configs for all flows that are reachable from
     * [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
     */
    versionConfigs?: pulumi.Input<pulumi.Input<inputs.DialogflowCxEnvironmentVersionConfig>[]>;
}

/**
 * The set of arguments for constructing a DialogflowCxEnvironment resource.
 */
export interface DialogflowCxEnvironmentArgs {
    /**
     * The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
     * rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the environment (unique in an agent). Limit of 64 characters.
     */
    displayName: pulumi.Input<string>;
    /**
     * The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowCxEnvironmentTimeouts>;
    /**
     * A list of configurations for flow versions. You should include version configs for all flows that are reachable from
     * [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
     */
    versionConfigs: pulumi.Input<pulumi.Input<inputs.DialogflowCxEnvironmentVersionConfig>[]>;
}
