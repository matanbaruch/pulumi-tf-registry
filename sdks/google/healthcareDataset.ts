// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HealthcareDataset extends pulumi.CustomResource {
    /**
     * Get an existing HealthcareDataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HealthcareDatasetState, opts?: pulumi.CustomResourceOptions): HealthcareDataset {
        return new HealthcareDataset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/healthcareDataset:HealthcareDataset';

    /**
     * Returns true if the given object is an instance of HealthcareDataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HealthcareDataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HealthcareDataset.__pulumiType;
    }

    /**
     * A nested object resource
     */
    public readonly encryptionSpec!: pulumi.Output<outputs.HealthcareDatasetEncryptionSpec | undefined>;
    /**
     * The location for the Dataset.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The resource name for the Dataset.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The fully qualified name of this dataset
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The default timezone used by this dataset. Must be a either a valid IANA time zone name such as "America/New_York" or
     * empty, which defaults to UTC. This is used for parsing times in resources (e.g., HL7 messages) where no explicit
     * timezone is specified.
     */
    public readonly timeZone!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.HealthcareDatasetTimeouts | undefined>;

    /**
     * Create a HealthcareDataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HealthcareDatasetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HealthcareDatasetArgs | HealthcareDatasetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HealthcareDatasetState | undefined;
            resourceInputs["encryptionSpec"] = state ? state.encryptionSpec : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as HealthcareDatasetArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["encryptionSpec"] = args ? args.encryptionSpec : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["selfLink"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HealthcareDataset.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HealthcareDataset resources.
 */
export interface HealthcareDatasetState {
    /**
     * A nested object resource
     */
    encryptionSpec?: pulumi.Input<inputs.HealthcareDatasetEncryptionSpec>;
    /**
     * The location for the Dataset.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name for the Dataset.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The fully qualified name of this dataset
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The default timezone used by this dataset. Must be a either a valid IANA time zone name such as "America/New_York" or
     * empty, which defaults to UTC. This is used for parsing times in resources (e.g., HL7 messages) where no explicit
     * timezone is specified.
     */
    timeZone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.HealthcareDatasetTimeouts>;
}

/**
 * The set of arguments for constructing a HealthcareDataset resource.
 */
export interface HealthcareDatasetArgs {
    /**
     * A nested object resource
     */
    encryptionSpec?: pulumi.Input<inputs.HealthcareDatasetEncryptionSpec>;
    /**
     * The location for the Dataset.
     */
    location: pulumi.Input<string>;
    /**
     * The resource name for the Dataset.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The default timezone used by this dataset. Must be a either a valid IANA time zone name such as "America/New_York" or
     * empty, which defaults to UTC. This is used for parsing times in resources (e.g., HL7 messages) where no explicit
     * timezone is specified.
     */
    timeZone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.HealthcareDatasetTimeouts>;
}
