// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProjectOrganizationPolicy(args: GetProjectOrganizationPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectOrganizationPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getProjectOrganizationPolicy:getProjectOrganizationPolicy", {
        "constraint": args.constraint,
        "id": args.id,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectOrganizationPolicy.
 */
export interface GetProjectOrganizationPolicyArgs {
    constraint: string;
    id?: string;
    project: string;
}

/**
 * A collection of values returned by getProjectOrganizationPolicy.
 */
export interface GetProjectOrganizationPolicyResult {
    readonly booleanPolicies: outputs.GetProjectOrganizationPolicyBooleanPolicy[];
    readonly constraint: string;
    readonly etag: string;
    readonly id: string;
    readonly listPolicies: outputs.GetProjectOrganizationPolicyListPolicy[];
    readonly project: string;
    readonly restorePolicies: outputs.GetProjectOrganizationPolicyRestorePolicy[];
    readonly updateTime: string;
    readonly version: number;
}
export function getProjectOrganizationPolicyOutput(args: GetProjectOrganizationPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectOrganizationPolicyResult> {
    return pulumi.output(args).apply((a: any) => getProjectOrganizationPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getProjectOrganizationPolicy.
 */
export interface GetProjectOrganizationPolicyOutputArgs {
    constraint: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
