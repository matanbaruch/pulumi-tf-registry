// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApphubApplication extends pulumi.CustomResource {
    /**
     * Get an existing ApphubApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApphubApplicationState, opts?: pulumi.CustomResourceOptions): ApphubApplication {
        return new ApphubApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/apphubApplication:ApphubApplication';

    /**
     * Returns true if the given object is an instance of ApphubApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApphubApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApphubApplication.__pulumiType;
    }

    /**
     * Required. The Application identifier.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Consumer provided attributes.
     */
    public readonly attributes!: pulumi.Output<outputs.ApphubApplicationAttributes | undefined>;
    /**
     * Output only. Create time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. User-defined description of an Application.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Optional. User-defined name for the Application.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Part of 'parent'. See documentation of 'projectsId'.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Identifier. The resource name of an Application. Format:
     * "projects/{host-project-id}/locations/{location}/applications/{application-id}"
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Scope of an application.
     */
    public readonly scope!: pulumi.Output<outputs.ApphubApplicationScope>;
    /**
     * Output only. Application state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApphubApplicationTimeouts | undefined>;
    /**
     * Output only. A universally unique identifier (in UUID4 format) for the 'Application'.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * Output only. Update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ApphubApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApphubApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApphubApplicationArgs | ApphubApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApphubApplicationState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as ApphubApplicationArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApphubApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApphubApplication resources.
 */
export interface ApphubApplicationState {
    /**
     * Required. The Application identifier.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Consumer provided attributes.
     */
    attributes?: pulumi.Input<inputs.ApphubApplicationAttributes>;
    /**
     * Output only. Create time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. User-defined description of an Application.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. User-defined name for the Application.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Part of 'parent'. See documentation of 'projectsId'.
     */
    location?: pulumi.Input<string>;
    /**
     * Identifier. The resource name of an Application. Format:
     * "projects/{host-project-id}/locations/{location}/applications/{application-id}"
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Scope of an application.
     */
    scope?: pulumi.Input<inputs.ApphubApplicationScope>;
    /**
     * Output only. Application state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApphubApplicationTimeouts>;
    /**
     * Output only. A universally unique identifier (in UUID4 format) for the 'Application'.
     */
    uid?: pulumi.Input<string>;
    /**
     * Output only. Update time.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApphubApplication resource.
 */
export interface ApphubApplicationArgs {
    /**
     * Required. The Application identifier.
     */
    applicationId: pulumi.Input<string>;
    /**
     * Consumer provided attributes.
     */
    attributes?: pulumi.Input<inputs.ApphubApplicationAttributes>;
    /**
     * Optional. User-defined description of an Application.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. User-defined name for the Application.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Part of 'parent'. See documentation of 'projectsId'.
     */
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Scope of an application.
     */
    scope: pulumi.Input<inputs.ApphubApplicationScope>;
    timeouts?: pulumi.Input<inputs.ApphubApplicationTimeouts>;
}
