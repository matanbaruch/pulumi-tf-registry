// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataprocMetastoreService(args: GetDataprocMetastoreServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetDataprocMetastoreServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getDataprocMetastoreService:getDataprocMetastoreService", {
        "id": args.id,
        "location": args.location,
        "project": args.project,
        "serviceId": args.serviceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataprocMetastoreService.
 */
export interface GetDataprocMetastoreServiceArgs {
    id?: string;
    location: string;
    project?: string;
    serviceId: string;
}

/**
 * A collection of values returned by getDataprocMetastoreService.
 */
export interface GetDataprocMetastoreServiceResult {
    readonly artifactGcsUri: string;
    readonly databaseType: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly encryptionConfigs: outputs.GetDataprocMetastoreServiceEncryptionConfig[];
    readonly endpointUri: string;
    readonly hiveMetastoreConfigs: outputs.GetDataprocMetastoreServiceHiveMetastoreConfig[];
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly location: string;
    readonly maintenanceWindows: outputs.GetDataprocMetastoreServiceMaintenanceWindow[];
    readonly metadataIntegrations: outputs.GetDataprocMetastoreServiceMetadataIntegration[];
    readonly name: string;
    readonly network: string;
    readonly networkConfigs: outputs.GetDataprocMetastoreServiceNetworkConfig[];
    readonly port: number;
    readonly project?: string;
    readonly releaseChannel: string;
    readonly scalingConfigs: outputs.GetDataprocMetastoreServiceScalingConfig[];
    readonly scheduledBackups: outputs.GetDataprocMetastoreServiceScheduledBackup[];
    readonly serviceId: string;
    readonly state: string;
    readonly stateMessage: string;
    readonly telemetryConfigs: outputs.GetDataprocMetastoreServiceTelemetryConfig[];
    readonly terraformLabels: {[key: string]: string};
    readonly tier: string;
    readonly uid: string;
}
export function getDataprocMetastoreServiceOutput(args: GetDataprocMetastoreServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataprocMetastoreServiceResult> {
    return pulumi.output(args).apply((a: any) => getDataprocMetastoreService(a, opts))
}

/**
 * A collection of arguments for invoking getDataprocMetastoreService.
 */
export interface GetDataprocMetastoreServiceOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    serviceId: pulumi.Input<string>;
}
