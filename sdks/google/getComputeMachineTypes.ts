// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeMachineTypes(args?: GetComputeMachineTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeMachineTypesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getComputeMachineTypes:getComputeMachineTypes", {
        "filter": args.filter,
        "id": args.id,
        "project": args.project,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeMachineTypes.
 */
export interface GetComputeMachineTypesArgs {
    filter?: string;
    id?: string;
    project?: string;
    zone?: string;
}

/**
 * A collection of values returned by getComputeMachineTypes.
 */
export interface GetComputeMachineTypesResult {
    readonly filter?: string;
    readonly id: string;
    readonly machineTypes: outputs.GetComputeMachineTypesMachineType[];
    readonly project: string;
    readonly zone: string;
}
export function getComputeMachineTypesOutput(args?: GetComputeMachineTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeMachineTypesResult> {
    return pulumi.output(args).apply((a: any) => getComputeMachineTypes(a, opts))
}

/**
 * A collection of arguments for invoking getComputeMachineTypes.
 */
export interface GetComputeMachineTypesOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
