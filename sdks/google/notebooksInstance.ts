// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NotebooksInstance extends pulumi.CustomResource {
    /**
     * Get an existing NotebooksInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotebooksInstanceState, opts?: pulumi.CustomResourceOptions): NotebooksInstance {
        return new NotebooksInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/notebooksInstance:NotebooksInstance';

    /**
     * Returns true if the given object is an instance of NotebooksInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NotebooksInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotebooksInstance.__pulumiType;
    }

    /**
     * The hardware accelerator used on this instance. If you use accelerators, make sure that your configuration has enough
     * vCPUs and memory to support the machineType you have selected.
     */
    public readonly acceleratorConfig!: pulumi.Output<outputs.NotebooksInstanceAcceleratorConfig | undefined>;
    /**
     * The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended
     * value is 100 GB. If not specified, this defaults to 100.
     */
    public readonly bootDiskSizeGb!: pulumi.Output<number | undefined>;
    /**
     * Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD",
     * "PD_BALANCED", "PD_EXTREME"]
     */
    public readonly bootDiskType!: pulumi.Output<string | undefined>;
    /**
     * Use a container image to start the notebook instance.
     */
    public readonly containerImage!: pulumi.Output<outputs.NotebooksInstanceContainerImage | undefined>;
    /**
     * Instance creation time
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from
     * official GPU drivers.
     */
    public readonly customGpuDriverPath!: pulumi.Output<string | undefined>;
    /**
     * The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size
     * of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100.
     */
    public readonly dataDiskSizeGb!: pulumi.Output<number | undefined>;
    /**
     * Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD",
     * "PD_BALANCED", "PD_EXTREME"]
     */
    public readonly dataDiskType!: pulumi.Output<string | undefined>;
    /**
     * Desired state of the Notebook Instance. Set this field to 'ACTIVE' to start the Instance, and 'STOPPED' to stop the
     * Instance.
     */
    public readonly desiredState!: pulumi.Output<string | undefined>;
    /**
     * Disk encryption method used on the boot and data disks, defaults to GMEK. Possible values:
     * ["DISK_ENCRYPTION_UNSPECIFIED", "GMEK", "CMEK"]
     */
    public readonly diskEncryption!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to
     * false, the GPU driver won't be installed. Only applicable to instances with GPUs.
     */
    public readonly installGpuDriver!: pulumi.Output<boolean | undefined>;
    /**
     * The list of owners of this instance after creation. Format: alias@example.com. Currently supports one owner only. If not
     * specified, all of the service account users of your VM instance's service account can use the instance.
     */
    public readonly instanceOwners!: pulumi.Output<string[] | undefined>;
    /**
     * The KMS key used to encrypt the disks, only applicable if diskEncryption is CMEK. Format:
     * projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}
     */
    public readonly kmsKey!: pulumi.Output<string | undefined>;
    /**
     * Labels to apply to this instance. These can be later modified by the setLabels method. An object containing a list of
     * "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A reference to the zone where the machine resides.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * A reference to a machine type which defines VM kind.
     */
    public readonly machineType!: pulumi.Output<string>;
    /**
     * Custom metadata to apply to this instance. An object containing a list of "key": value pairs. Example: { "name":
     * "wrench", "mass": "1.3kg", "count": "3" }.
     */
    public readonly metadata!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name specified for the Notebook instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the VPC that this instance is in. Format: projects/{project_id}/global/networks/{network_id}
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * The type of vNIC driver. Possible values: ["UNSPECIFIED_NIC_TYPE", "VIRTIO_NET", "GVNIC"]
     */
    public readonly nicType!: pulumi.Output<string | undefined>;
    /**
     * The notebook instance will not register with the proxy..
     */
    public readonly noProxyAccess!: pulumi.Output<boolean | undefined>;
    /**
     * No public IP will be assigned to this instance.
     */
    public readonly noPublicIp!: pulumi.Output<boolean | undefined>;
    /**
     * If true, the data disk will not be auto deleted when deleting the instance.
     */
    public readonly noRemoveDataDisk!: pulumi.Output<boolean | undefined>;
    /**
     * Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud
     * Storage path (gs://path-to-file/file-name).
     */
    public readonly postStartupScript!: pulumi.Output<string | undefined>;
    public readonly project!: pulumi.Output<string>;
    public /*out*/ readonly proxyUri!: pulumi.Output<string>;
    /**
     * Reservation Affinity for consuming Zonal reservation.
     */
    public readonly reservationAffinity!: pulumi.Output<outputs.NotebooksInstanceReservationAffinity | undefined>;
    /**
     * The service account on this instance, giving access to other Google Cloud services. You can use any service account
     * within the same project, but you must have the service account user permission to use the instance. If not specified,
     * the Compute Engine default service account is used.
     */
    public readonly serviceAccount!: pulumi.Output<string>;
    /**
     * Optional. The URIs of service account scopes to be included in Compute Engine instances. If not specified, the following
     * scopes are defined: - https://www.googleapis.com/auth/cloud-platform - https://www.googleapis.com/auth/userinfo.email
     */
    public readonly serviceAccountScopes!: pulumi.Output<string[]>;
    /**
     * A set of Shielded Instance options. Check [Images using supported Shielded VM features] Not all combinations are valid
     */
    public readonly shieldedInstanceConfig!: pulumi.Output<outputs.NotebooksInstanceShieldedInstanceConfig | undefined>;
    /**
     * The state of this instance.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The name of the subnet that this instance is in. Format:
     * projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}
     */
    public readonly subnet!: pulumi.Output<string>;
    /**
     * The Compute Engine tags to add to instance.
     */
    public readonly tags!: pulumi.Output<string[]>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.NotebooksInstanceTimeouts | undefined>;
    /**
     * Instance update time.
     */
    public readonly updateTime!: pulumi.Output<string>;
    /**
     * Use a Compute Engine VM image to start the notebook instance.
     */
    public readonly vmImage!: pulumi.Output<outputs.NotebooksInstanceVmImage | undefined>;

    /**
     * Create a NotebooksInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotebooksInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NotebooksInstanceArgs | NotebooksInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NotebooksInstanceState | undefined;
            resourceInputs["acceleratorConfig"] = state ? state.acceleratorConfig : undefined;
            resourceInputs["bootDiskSizeGb"] = state ? state.bootDiskSizeGb : undefined;
            resourceInputs["bootDiskType"] = state ? state.bootDiskType : undefined;
            resourceInputs["containerImage"] = state ? state.containerImage : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customGpuDriverPath"] = state ? state.customGpuDriverPath : undefined;
            resourceInputs["dataDiskSizeGb"] = state ? state.dataDiskSizeGb : undefined;
            resourceInputs["dataDiskType"] = state ? state.dataDiskType : undefined;
            resourceInputs["desiredState"] = state ? state.desiredState : undefined;
            resourceInputs["diskEncryption"] = state ? state.diskEncryption : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["installGpuDriver"] = state ? state.installGpuDriver : undefined;
            resourceInputs["instanceOwners"] = state ? state.instanceOwners : undefined;
            resourceInputs["kmsKey"] = state ? state.kmsKey : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["machineType"] = state ? state.machineType : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["nicType"] = state ? state.nicType : undefined;
            resourceInputs["noProxyAccess"] = state ? state.noProxyAccess : undefined;
            resourceInputs["noPublicIp"] = state ? state.noPublicIp : undefined;
            resourceInputs["noRemoveDataDisk"] = state ? state.noRemoveDataDisk : undefined;
            resourceInputs["postStartupScript"] = state ? state.postStartupScript : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["proxyUri"] = state ? state.proxyUri : undefined;
            resourceInputs["reservationAffinity"] = state ? state.reservationAffinity : undefined;
            resourceInputs["serviceAccount"] = state ? state.serviceAccount : undefined;
            resourceInputs["serviceAccountScopes"] = state ? state.serviceAccountScopes : undefined;
            resourceInputs["shieldedInstanceConfig"] = state ? state.shieldedInstanceConfig : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["vmImage"] = state ? state.vmImage : undefined;
        } else {
            const args = argsOrState as NotebooksInstanceArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.machineType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'machineType'");
            }
            resourceInputs["acceleratorConfig"] = args ? args.acceleratorConfig : undefined;
            resourceInputs["bootDiskSizeGb"] = args ? args.bootDiskSizeGb : undefined;
            resourceInputs["bootDiskType"] = args ? args.bootDiskType : undefined;
            resourceInputs["containerImage"] = args ? args.containerImage : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["customGpuDriverPath"] = args ? args.customGpuDriverPath : undefined;
            resourceInputs["dataDiskSizeGb"] = args ? args.dataDiskSizeGb : undefined;
            resourceInputs["dataDiskType"] = args ? args.dataDiskType : undefined;
            resourceInputs["desiredState"] = args ? args.desiredState : undefined;
            resourceInputs["diskEncryption"] = args ? args.diskEncryption : undefined;
            resourceInputs["installGpuDriver"] = args ? args.installGpuDriver : undefined;
            resourceInputs["instanceOwners"] = args ? args.instanceOwners : undefined;
            resourceInputs["kmsKey"] = args ? args.kmsKey : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["machineType"] = args ? args.machineType : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["nicType"] = args ? args.nicType : undefined;
            resourceInputs["noProxyAccess"] = args ? args.noProxyAccess : undefined;
            resourceInputs["noPublicIp"] = args ? args.noPublicIp : undefined;
            resourceInputs["noRemoveDataDisk"] = args ? args.noRemoveDataDisk : undefined;
            resourceInputs["postStartupScript"] = args ? args.postStartupScript : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["reservationAffinity"] = args ? args.reservationAffinity : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["serviceAccountScopes"] = args ? args.serviceAccountScopes : undefined;
            resourceInputs["shieldedInstanceConfig"] = args ? args.shieldedInstanceConfig : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["updateTime"] = args ? args.updateTime : undefined;
            resourceInputs["vmImage"] = args ? args.vmImage : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["proxyUri"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NotebooksInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NotebooksInstance resources.
 */
export interface NotebooksInstanceState {
    /**
     * The hardware accelerator used on this instance. If you use accelerators, make sure that your configuration has enough
     * vCPUs and memory to support the machineType you have selected.
     */
    acceleratorConfig?: pulumi.Input<inputs.NotebooksInstanceAcceleratorConfig>;
    /**
     * The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended
     * value is 100 GB. If not specified, this defaults to 100.
     */
    bootDiskSizeGb?: pulumi.Input<number>;
    /**
     * Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD",
     * "PD_BALANCED", "PD_EXTREME"]
     */
    bootDiskType?: pulumi.Input<string>;
    /**
     * Use a container image to start the notebook instance.
     */
    containerImage?: pulumi.Input<inputs.NotebooksInstanceContainerImage>;
    /**
     * Instance creation time
     */
    createTime?: pulumi.Input<string>;
    /**
     * Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from
     * official GPU drivers.
     */
    customGpuDriverPath?: pulumi.Input<string>;
    /**
     * The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size
     * of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100.
     */
    dataDiskSizeGb?: pulumi.Input<number>;
    /**
     * Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD",
     * "PD_BALANCED", "PD_EXTREME"]
     */
    dataDiskType?: pulumi.Input<string>;
    /**
     * Desired state of the Notebook Instance. Set this field to 'ACTIVE' to start the Instance, and 'STOPPED' to stop the
     * Instance.
     */
    desiredState?: pulumi.Input<string>;
    /**
     * Disk encryption method used on the boot and data disks, defaults to GMEK. Possible values:
     * ["DISK_ENCRYPTION_UNSPECIFIED", "GMEK", "CMEK"]
     */
    diskEncryption?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to
     * false, the GPU driver won't be installed. Only applicable to instances with GPUs.
     */
    installGpuDriver?: pulumi.Input<boolean>;
    /**
     * The list of owners of this instance after creation. Format: alias@example.com. Currently supports one owner only. If not
     * specified, all of the service account users of your VM instance's service account can use the instance.
     */
    instanceOwners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The KMS key used to encrypt the disks, only applicable if diskEncryption is CMEK. Format:
     * projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}
     */
    kmsKey?: pulumi.Input<string>;
    /**
     * Labels to apply to this instance. These can be later modified by the setLabels method. An object containing a list of
     * "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A reference to the zone where the machine resides.
     */
    location?: pulumi.Input<string>;
    /**
     * A reference to a machine type which defines VM kind.
     */
    machineType?: pulumi.Input<string>;
    /**
     * Custom metadata to apply to this instance. An object containing a list of "key": value pairs. Example: { "name":
     * "wrench", "mass": "1.3kg", "count": "3" }.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name specified for the Notebook instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the VPC that this instance is in. Format: projects/{project_id}/global/networks/{network_id}
     */
    network?: pulumi.Input<string>;
    /**
     * The type of vNIC driver. Possible values: ["UNSPECIFIED_NIC_TYPE", "VIRTIO_NET", "GVNIC"]
     */
    nicType?: pulumi.Input<string>;
    /**
     * The notebook instance will not register with the proxy..
     */
    noProxyAccess?: pulumi.Input<boolean>;
    /**
     * No public IP will be assigned to this instance.
     */
    noPublicIp?: pulumi.Input<boolean>;
    /**
     * If true, the data disk will not be auto deleted when deleting the instance.
     */
    noRemoveDataDisk?: pulumi.Input<boolean>;
    /**
     * Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud
     * Storage path (gs://path-to-file/file-name).
     */
    postStartupScript?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    proxyUri?: pulumi.Input<string>;
    /**
     * Reservation Affinity for consuming Zonal reservation.
     */
    reservationAffinity?: pulumi.Input<inputs.NotebooksInstanceReservationAffinity>;
    /**
     * The service account on this instance, giving access to other Google Cloud services. You can use any service account
     * within the same project, but you must have the service account user permission to use the instance. If not specified,
     * the Compute Engine default service account is used.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Optional. The URIs of service account scopes to be included in Compute Engine instances. If not specified, the following
     * scopes are defined: - https://www.googleapis.com/auth/cloud-platform - https://www.googleapis.com/auth/userinfo.email
     */
    serviceAccountScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of Shielded Instance options. Check [Images using supported Shielded VM features] Not all combinations are valid
     */
    shieldedInstanceConfig?: pulumi.Input<inputs.NotebooksInstanceShieldedInstanceConfig>;
    /**
     * The state of this instance.
     */
    state?: pulumi.Input<string>;
    /**
     * The name of the subnet that this instance is in. Format:
     * projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}
     */
    subnet?: pulumi.Input<string>;
    /**
     * The Compute Engine tags to add to instance.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.NotebooksInstanceTimeouts>;
    /**
     * Instance update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Use a Compute Engine VM image to start the notebook instance.
     */
    vmImage?: pulumi.Input<inputs.NotebooksInstanceVmImage>;
}

/**
 * The set of arguments for constructing a NotebooksInstance resource.
 */
export interface NotebooksInstanceArgs {
    /**
     * The hardware accelerator used on this instance. If you use accelerators, make sure that your configuration has enough
     * vCPUs and memory to support the machineType you have selected.
     */
    acceleratorConfig?: pulumi.Input<inputs.NotebooksInstanceAcceleratorConfig>;
    /**
     * The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended
     * value is 100 GB. If not specified, this defaults to 100.
     */
    bootDiskSizeGb?: pulumi.Input<number>;
    /**
     * Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD",
     * "PD_BALANCED", "PD_EXTREME"]
     */
    bootDiskType?: pulumi.Input<string>;
    /**
     * Use a container image to start the notebook instance.
     */
    containerImage?: pulumi.Input<inputs.NotebooksInstanceContainerImage>;
    /**
     * Instance creation time
     */
    createTime?: pulumi.Input<string>;
    /**
     * Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from
     * official GPU drivers.
     */
    customGpuDriverPath?: pulumi.Input<string>;
    /**
     * The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size
     * of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100.
     */
    dataDiskSizeGb?: pulumi.Input<number>;
    /**
     * Possible disk types for notebook instances. Possible values: ["DISK_TYPE_UNSPECIFIED", "PD_STANDARD", "PD_SSD",
     * "PD_BALANCED", "PD_EXTREME"]
     */
    dataDiskType?: pulumi.Input<string>;
    /**
     * Desired state of the Notebook Instance. Set this field to 'ACTIVE' to start the Instance, and 'STOPPED' to stop the
     * Instance.
     */
    desiredState?: pulumi.Input<string>;
    /**
     * Disk encryption method used on the boot and data disks, defaults to GMEK. Possible values:
     * ["DISK_ENCRYPTION_UNSPECIFIED", "GMEK", "CMEK"]
     */
    diskEncryption?: pulumi.Input<string>;
    /**
     * Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to
     * false, the GPU driver won't be installed. Only applicable to instances with GPUs.
     */
    installGpuDriver?: pulumi.Input<boolean>;
    /**
     * The list of owners of this instance after creation. Format: alias@example.com. Currently supports one owner only. If not
     * specified, all of the service account users of your VM instance's service account can use the instance.
     */
    instanceOwners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The KMS key used to encrypt the disks, only applicable if diskEncryption is CMEK. Format:
     * projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}
     */
    kmsKey?: pulumi.Input<string>;
    /**
     * Labels to apply to this instance. These can be later modified by the setLabels method. An object containing a list of
     * "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A reference to the zone where the machine resides.
     */
    location: pulumi.Input<string>;
    /**
     * A reference to a machine type which defines VM kind.
     */
    machineType: pulumi.Input<string>;
    /**
     * Custom metadata to apply to this instance. An object containing a list of "key": value pairs. Example: { "name":
     * "wrench", "mass": "1.3kg", "count": "3" }.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name specified for the Notebook instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the VPC that this instance is in. Format: projects/{project_id}/global/networks/{network_id}
     */
    network?: pulumi.Input<string>;
    /**
     * The type of vNIC driver. Possible values: ["UNSPECIFIED_NIC_TYPE", "VIRTIO_NET", "GVNIC"]
     */
    nicType?: pulumi.Input<string>;
    /**
     * The notebook instance will not register with the proxy..
     */
    noProxyAccess?: pulumi.Input<boolean>;
    /**
     * No public IP will be assigned to this instance.
     */
    noPublicIp?: pulumi.Input<boolean>;
    /**
     * If true, the data disk will not be auto deleted when deleting the instance.
     */
    noRemoveDataDisk?: pulumi.Input<boolean>;
    /**
     * Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud
     * Storage path (gs://path-to-file/file-name).
     */
    postStartupScript?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Reservation Affinity for consuming Zonal reservation.
     */
    reservationAffinity?: pulumi.Input<inputs.NotebooksInstanceReservationAffinity>;
    /**
     * The service account on this instance, giving access to other Google Cloud services. You can use any service account
     * within the same project, but you must have the service account user permission to use the instance. If not specified,
     * the Compute Engine default service account is used.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Optional. The URIs of service account scopes to be included in Compute Engine instances. If not specified, the following
     * scopes are defined: - https://www.googleapis.com/auth/cloud-platform - https://www.googleapis.com/auth/userinfo.email
     */
    serviceAccountScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of Shielded Instance options. Check [Images using supported Shielded VM features] Not all combinations are valid
     */
    shieldedInstanceConfig?: pulumi.Input<inputs.NotebooksInstanceShieldedInstanceConfig>;
    /**
     * The name of the subnet that this instance is in. Format:
     * projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}
     */
    subnet?: pulumi.Input<string>;
    /**
     * The Compute Engine tags to add to instance.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.NotebooksInstanceTimeouts>;
    /**
     * Instance update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Use a Compute Engine VM image to start the notebook instance.
     */
    vmImage?: pulumi.Input<inputs.NotebooksInstanceVmImage>;
}
