// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlloydbCluster extends pulumi.CustomResource {
    /**
     * Get an existing AlloydbCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlloydbClusterState, opts?: pulumi.CustomResourceOptions): AlloydbCluster {
        return new AlloydbCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/alloydbCluster:AlloydbCluster';

    /**
     * Returns true if the given object is an instance of AlloydbCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlloydbCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlloydbCluster.__pulumiType;
    }

    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
     * https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
     * "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
     * configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
     */
    public readonly automatedBackupPolicy!: pulumi.Output<outputs.AlloydbClusterAutomatedBackupPolicy | undefined>;
    /**
     * Cluster created from backup.
     */
    public /*out*/ readonly backupSources!: pulumi.Output<outputs.AlloydbClusterBackupSource[]>;
    /**
     * The ID of the alloydb cluster.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
     */
    public readonly clusterType!: pulumi.Output<string | undefined>;
    /**
     * The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
     * default policy takes one backup a day and retains backups for 14 days.
     */
    public readonly continuousBackupConfig!: pulumi.Output<outputs.AlloydbClusterContinuousBackupConfig | undefined>;
    /**
     * ContinuousBackupInfo describes the continuous backup properties of a cluster.
     */
    public /*out*/ readonly continuousBackupInfos!: pulumi.Output<outputs.AlloydbClusterContinuousBackupInfo[]>;
    /**
     * The database engine major version. This is an optional field and it's populated at the Cluster creation time. This field
     * cannot be changed after cluster creation.
     */
    public readonly databaseVersion!: pulumi.Output<string>;
    /**
     * Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
     * all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
     * deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
     * secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
     * forcefully which also deletes the secondary instance.
     */
    public readonly deletionPolicy!: pulumi.Output<string | undefined>;
    /**
     * User-settable and human-readable display name for the Cluster.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveAnnotations!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
     * (customer-managed encryption key).
     */
    public readonly encryptionConfig!: pulumi.Output<outputs.AlloydbClusterEncryptionConfig | undefined>;
    /**
     * EncryptionInfo describes the encryption information of a cluster or a backup.
     */
    public /*out*/ readonly encryptionInfos!: pulumi.Output<outputs.AlloydbClusterEncryptionInfo[]>;
    /**
     * For Resource freshness validation (https://google.aip.dev/154)
     */
    public readonly etag!: pulumi.Output<string | undefined>;
    /**
     * Initial user to setup during cluster creation.
     */
    public readonly initialUser!: pulumi.Output<outputs.AlloydbClusterInitialUser | undefined>;
    /**
     * User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location where the alloydb cluster should reside.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * MaintenanceUpdatePolicy defines the policy for system updates.
     */
    public readonly maintenanceUpdatePolicy!: pulumi.Output<outputs.AlloydbClusterMaintenanceUpdatePolicy | undefined>;
    /**
     * Cluster created via DMS migration.
     */
    public /*out*/ readonly migrationSources!: pulumi.Output<outputs.AlloydbClusterMigrationSource[]>;
    /**
     * The name of the cluster resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Metadata related to network configuration.
     */
    public readonly networkConfig!: pulumi.Output<outputs.AlloydbClusterNetworkConfig | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Configuration for Private Service Connect (PSC) for the cluster.
     */
    public readonly pscConfig!: pulumi.Output<outputs.AlloydbClusterPscConfig | undefined>;
    /**
     * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does
     * not match the user's intended state, and the service is actively updating the resource to reconcile them. This can
     * happen due to user-triggered updates or system actions like failover or maintenance.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
     */
    public readonly restoreBackupSource!: pulumi.Output<outputs.AlloydbClusterRestoreBackupSource | undefined>;
    /**
     * The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
     * together.
     */
    public readonly restoreContinuousBackupSource!: pulumi.Output<outputs.AlloydbClusterRestoreContinuousBackupSource | undefined>;
    /**
     * Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
     * type SECONDARY.
     */
    public readonly secondaryConfig!: pulumi.Output<outputs.AlloydbClusterSecondaryConfig | undefined>;
    /**
     * Output only. The current serving state of the cluster.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.AlloydbClusterTimeouts | undefined>;
    /**
     * The system-generated UID of the resource.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;

    /**
     * Create a AlloydbCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlloydbClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlloydbClusterArgs | AlloydbClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlloydbClusterState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["automatedBackupPolicy"] = state ? state.automatedBackupPolicy : undefined;
            resourceInputs["backupSources"] = state ? state.backupSources : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterType"] = state ? state.clusterType : undefined;
            resourceInputs["continuousBackupConfig"] = state ? state.continuousBackupConfig : undefined;
            resourceInputs["continuousBackupInfos"] = state ? state.continuousBackupInfos : undefined;
            resourceInputs["databaseVersion"] = state ? state.databaseVersion : undefined;
            resourceInputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveAnnotations"] = state ? state.effectiveAnnotations : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["encryptionConfig"] = state ? state.encryptionConfig : undefined;
            resourceInputs["encryptionInfos"] = state ? state.encryptionInfos : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["initialUser"] = state ? state.initialUser : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maintenanceUpdatePolicy"] = state ? state.maintenanceUpdatePolicy : undefined;
            resourceInputs["migrationSources"] = state ? state.migrationSources : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pscConfig"] = state ? state.pscConfig : undefined;
            resourceInputs["reconciling"] = state ? state.reconciling : undefined;
            resourceInputs["restoreBackupSource"] = state ? state.restoreBackupSource : undefined;
            resourceInputs["restoreContinuousBackupSource"] = state ? state.restoreContinuousBackupSource : undefined;
            resourceInputs["secondaryConfig"] = state ? state.secondaryConfig : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
        } else {
            const args = argsOrState as AlloydbClusterArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["automatedBackupPolicy"] = args ? args.automatedBackupPolicy : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["clusterType"] = args ? args.clusterType : undefined;
            resourceInputs["continuousBackupConfig"] = args ? args.continuousBackupConfig : undefined;
            resourceInputs["databaseVersion"] = args ? args.databaseVersion : undefined;
            resourceInputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptionConfig"] = args ? args.encryptionConfig : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["initialUser"] = args ? args.initialUser : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maintenanceUpdatePolicy"] = args ? args.maintenanceUpdatePolicy : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["pscConfig"] = args ? args.pscConfig : undefined;
            resourceInputs["restoreBackupSource"] = args ? args.restoreBackupSource : undefined;
            resourceInputs["restoreContinuousBackupSource"] = args ? args.restoreContinuousBackupSource : undefined;
            resourceInputs["secondaryConfig"] = args ? args.secondaryConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["backupSources"] = undefined /*out*/;
            resourceInputs["continuousBackupInfos"] = undefined /*out*/;
            resourceInputs["effectiveAnnotations"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["encryptionInfos"] = undefined /*out*/;
            resourceInputs["migrationSources"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlloydbCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlloydbCluster resources.
 */
export interface AlloydbClusterState {
    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
     * https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
     * "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
     * configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
     */
    automatedBackupPolicy?: pulumi.Input<inputs.AlloydbClusterAutomatedBackupPolicy>;
    /**
     * Cluster created from backup.
     */
    backupSources?: pulumi.Input<pulumi.Input<inputs.AlloydbClusterBackupSource>[]>;
    /**
     * The ID of the alloydb cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
     */
    clusterType?: pulumi.Input<string>;
    /**
     * The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
     * default policy takes one backup a day and retains backups for 14 days.
     */
    continuousBackupConfig?: pulumi.Input<inputs.AlloydbClusterContinuousBackupConfig>;
    /**
     * ContinuousBackupInfo describes the continuous backup properties of a cluster.
     */
    continuousBackupInfos?: pulumi.Input<pulumi.Input<inputs.AlloydbClusterContinuousBackupInfo>[]>;
    /**
     * The database engine major version. This is an optional field and it's populated at the Cluster creation time. This field
     * cannot be changed after cluster creation.
     */
    databaseVersion?: pulumi.Input<string>;
    /**
     * Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
     * all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
     * deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
     * secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
     * forcefully which also deletes the secondary instance.
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * User-settable and human-readable display name for the Cluster.
     */
    displayName?: pulumi.Input<string>;
    effectiveAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
     * (customer-managed encryption key).
     */
    encryptionConfig?: pulumi.Input<inputs.AlloydbClusterEncryptionConfig>;
    /**
     * EncryptionInfo describes the encryption information of a cluster or a backup.
     */
    encryptionInfos?: pulumi.Input<pulumi.Input<inputs.AlloydbClusterEncryptionInfo>[]>;
    /**
     * For Resource freshness validation (https://google.aip.dev/154)
     */
    etag?: pulumi.Input<string>;
    /**
     * Initial user to setup during cluster creation.
     */
    initialUser?: pulumi.Input<inputs.AlloydbClusterInitialUser>;
    /**
     * User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the alloydb cluster should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * MaintenanceUpdatePolicy defines the policy for system updates.
     */
    maintenanceUpdatePolicy?: pulumi.Input<inputs.AlloydbClusterMaintenanceUpdatePolicy>;
    /**
     * Cluster created via DMS migration.
     */
    migrationSources?: pulumi.Input<pulumi.Input<inputs.AlloydbClusterMigrationSource>[]>;
    /**
     * The name of the cluster resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Metadata related to network configuration.
     */
    networkConfig?: pulumi.Input<inputs.AlloydbClusterNetworkConfig>;
    project?: pulumi.Input<string>;
    /**
     * Configuration for Private Service Connect (PSC) for the cluster.
     */
    pscConfig?: pulumi.Input<inputs.AlloydbClusterPscConfig>;
    /**
     * Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does
     * not match the user's intended state, and the service is actively updating the resource to reconcile them. This can
     * happen due to user-triggered updates or system actions like failover or maintenance.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
     */
    restoreBackupSource?: pulumi.Input<inputs.AlloydbClusterRestoreBackupSource>;
    /**
     * The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
     * together.
     */
    restoreContinuousBackupSource?: pulumi.Input<inputs.AlloydbClusterRestoreContinuousBackupSource>;
    /**
     * Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
     * type SECONDARY.
     */
    secondaryConfig?: pulumi.Input<inputs.AlloydbClusterSecondaryConfig>;
    /**
     * Output only. The current serving state of the cluster.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AlloydbClusterTimeouts>;
    /**
     * The system-generated UID of the resource.
     */
    uid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlloydbCluster resource.
 */
export interface AlloydbClusterArgs {
    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
     * https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
     * "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
     * configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
     */
    automatedBackupPolicy?: pulumi.Input<inputs.AlloydbClusterAutomatedBackupPolicy>;
    /**
     * The ID of the alloydb cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
     */
    clusterType?: pulumi.Input<string>;
    /**
     * The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
     * default policy takes one backup a day and retains backups for 14 days.
     */
    continuousBackupConfig?: pulumi.Input<inputs.AlloydbClusterContinuousBackupConfig>;
    /**
     * The database engine major version. This is an optional field and it's populated at the Cluster creation time. This field
     * cannot be changed after cluster creation.
     */
    databaseVersion?: pulumi.Input<string>;
    /**
     * Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
     * all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
     * deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
     * secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
     * forcefully which also deletes the secondary instance.
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * User-settable and human-readable display name for the Cluster.
     */
    displayName?: pulumi.Input<string>;
    /**
     * EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
     * (customer-managed encryption key).
     */
    encryptionConfig?: pulumi.Input<inputs.AlloydbClusterEncryptionConfig>;
    /**
     * For Resource freshness validation (https://google.aip.dev/154)
     */
    etag?: pulumi.Input<string>;
    /**
     * Initial user to setup during cluster creation.
     */
    initialUser?: pulumi.Input<inputs.AlloydbClusterInitialUser>;
    /**
     * User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
     * present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the alloydb cluster should reside.
     */
    location: pulumi.Input<string>;
    /**
     * MaintenanceUpdatePolicy defines the policy for system updates.
     */
    maintenanceUpdatePolicy?: pulumi.Input<inputs.AlloydbClusterMaintenanceUpdatePolicy>;
    /**
     * Metadata related to network configuration.
     */
    networkConfig?: pulumi.Input<inputs.AlloydbClusterNetworkConfig>;
    project?: pulumi.Input<string>;
    /**
     * Configuration for Private Service Connect (PSC) for the cluster.
     */
    pscConfig?: pulumi.Input<inputs.AlloydbClusterPscConfig>;
    /**
     * The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
     */
    restoreBackupSource?: pulumi.Input<inputs.AlloydbClusterRestoreBackupSource>;
    /**
     * The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
     * together.
     */
    restoreContinuousBackupSource?: pulumi.Input<inputs.AlloydbClusterRestoreContinuousBackupSource>;
    /**
     * Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
     * type SECONDARY.
     */
    secondaryConfig?: pulumi.Input<inputs.AlloydbClusterSecondaryConfig>;
    timeouts?: pulumi.Input<inputs.AlloydbClusterTimeouts>;
}
