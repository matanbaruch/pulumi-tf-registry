// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProjectService(args: GetProjectServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getProjectService:getProjectService", {
        "id": args.id,
        "project": args.project,
        "service": args.service,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectService.
 */
export interface GetProjectServiceArgs {
    id?: string;
    project?: string;
    service: string;
}

/**
 * A collection of values returned by getProjectService.
 */
export interface GetProjectServiceResult {
    readonly disableDependentServices: boolean;
    readonly disableOnDestroy: boolean;
    readonly id: string;
    readonly project?: string;
    readonly service: string;
}
export function getProjectServiceOutput(args: GetProjectServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectServiceResult> {
    return pulumi.output(args).apply((a: any) => getProjectService(a, opts))
}

/**
 * A collection of arguments for invoking getProjectService.
 */
export interface GetProjectServiceOutputArgs {
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    service: pulumi.Input<string>;
}
