// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeReservation(args: GetComputeReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeReservationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google:index/getComputeReservation:getComputeReservation", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeReservation.
 */
export interface GetComputeReservationArgs {
    id?: string;
    name: string;
    project?: string;
    zone: string;
}

/**
 * A collection of values returned by getComputeReservation.
 */
export interface GetComputeReservationResult {
    readonly commitment: string;
    readonly creationTimestamp: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly project?: string;
    readonly selfLink: string;
    readonly shareSettings: outputs.GetComputeReservationShareSetting[];
    readonly specificReservationRequired: boolean;
    readonly specificReservations: outputs.GetComputeReservationSpecificReservation[];
    readonly status: string;
    readonly zone: string;
}
export function getComputeReservationOutput(args: GetComputeReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeReservationResult> {
    return pulumi.output(args).apply((a: any) => getComputeReservation(a, opts))
}

/**
 * A collection of arguments for invoking getComputeReservation.
 */
export interface GetComputeReservationOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
