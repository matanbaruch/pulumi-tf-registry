// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BigqueryConnection extends pulumi.CustomResource {
    /**
     * Get an existing BigqueryConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BigqueryConnectionState, opts?: pulumi.CustomResourceOptions): BigqueryConnection {
        return new BigqueryConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/bigqueryConnection:BigqueryConnection';

    /**
     * Returns true if the given object is an instance of BigqueryConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BigqueryConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BigqueryConnection.__pulumiType;
    }

    /**
     * Connection properties specific to Amazon Web Services.
     */
    public readonly aws!: pulumi.Output<outputs.BigqueryConnectionAws | undefined>;
    /**
     * Container for connection properties specific to Azure.
     */
    public readonly azure!: pulumi.Output<outputs.BigqueryConnectionAzure | undefined>;
    /**
     * Container for connection properties for delegation of access to GCP resources.
     */
    public readonly cloudResource!: pulumi.Output<outputs.BigqueryConnectionCloudResource | undefined>;
    /**
     * Connection properties specific to Cloud Spanner
     */
    public readonly cloudSpanner!: pulumi.Output<outputs.BigqueryConnectionCloudSpanner | undefined>;
    /**
     * Connection properties specific to the Cloud SQL.
     */
    public readonly cloudSql!: pulumi.Output<outputs.BigqueryConnectionCloudSql | undefined>;
    /**
     * Optional connection id that should be assigned to the created connection.
     */
    public readonly connectionId!: pulumi.Output<string>;
    /**
     * A descriptive description for the connection
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A descriptive name for the connection
     */
    public readonly friendlyName!: pulumi.Output<string | undefined>;
    /**
     * True if the connection has credential assigned.
     */
    public /*out*/ readonly hasCredential!: pulumi.Output<boolean>;
    /**
     * Optional. The Cloud KMS key that is used for encryption. Example:
     * projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
     */
    public readonly kmsKeyName!: pulumi.Output<string | undefined>;
    /**
     * The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
     * connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
     * EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
     * regions are aws-us-east-1 Azure allowed regions are azure-eastus2
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The resource name of the connection in the form of:
     * "projects/{project_id}/locations/{location_id}/connections/{connectionId}"
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Container for connection properties to execute stored procedures for Apache Spark. resources.
     */
    public readonly spark!: pulumi.Output<outputs.BigqueryConnectionSpark | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.BigqueryConnectionTimeouts | undefined>;

    /**
     * Create a BigqueryConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BigqueryConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BigqueryConnectionArgs | BigqueryConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BigqueryConnectionState | undefined;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["azure"] = state ? state.azure : undefined;
            resourceInputs["cloudResource"] = state ? state.cloudResource : undefined;
            resourceInputs["cloudSpanner"] = state ? state.cloudSpanner : undefined;
            resourceInputs["cloudSql"] = state ? state.cloudSql : undefined;
            resourceInputs["connectionId"] = state ? state.connectionId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["friendlyName"] = state ? state.friendlyName : undefined;
            resourceInputs["hasCredential"] = state ? state.hasCredential : undefined;
            resourceInputs["kmsKeyName"] = state ? state.kmsKeyName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["spark"] = state ? state.spark : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BigqueryConnectionArgs | undefined;
            resourceInputs["aws"] = args ? args.aws : undefined;
            resourceInputs["azure"] = args ? args.azure : undefined;
            resourceInputs["cloudResource"] = args ? args.cloudResource : undefined;
            resourceInputs["cloudSpanner"] = args ? args.cloudSpanner : undefined;
            resourceInputs["cloudSql"] = args ? args.cloudSql : undefined;
            resourceInputs["connectionId"] = args ? args.connectionId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["friendlyName"] = args ? args.friendlyName : undefined;
            resourceInputs["kmsKeyName"] = args ? args.kmsKeyName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["spark"] = args ? args.spark : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["hasCredential"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BigqueryConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BigqueryConnection resources.
 */
export interface BigqueryConnectionState {
    /**
     * Connection properties specific to Amazon Web Services.
     */
    aws?: pulumi.Input<inputs.BigqueryConnectionAws>;
    /**
     * Container for connection properties specific to Azure.
     */
    azure?: pulumi.Input<inputs.BigqueryConnectionAzure>;
    /**
     * Container for connection properties for delegation of access to GCP resources.
     */
    cloudResource?: pulumi.Input<inputs.BigqueryConnectionCloudResource>;
    /**
     * Connection properties specific to Cloud Spanner
     */
    cloudSpanner?: pulumi.Input<inputs.BigqueryConnectionCloudSpanner>;
    /**
     * Connection properties specific to the Cloud SQL.
     */
    cloudSql?: pulumi.Input<inputs.BigqueryConnectionCloudSql>;
    /**
     * Optional connection id that should be assigned to the created connection.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * A descriptive description for the connection
     */
    description?: pulumi.Input<string>;
    /**
     * A descriptive name for the connection
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * True if the connection has credential assigned.
     */
    hasCredential?: pulumi.Input<boolean>;
    /**
     * Optional. The Cloud KMS key that is used for encryption. Example:
     * projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
     * connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
     * EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
     * regions are aws-us-east-1 Azure allowed regions are azure-eastus2
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the connection in the form of:
     * "projects/{project_id}/locations/{location_id}/connections/{connectionId}"
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Container for connection properties to execute stored procedures for Apache Spark. resources.
     */
    spark?: pulumi.Input<inputs.BigqueryConnectionSpark>;
    timeouts?: pulumi.Input<inputs.BigqueryConnectionTimeouts>;
}

/**
 * The set of arguments for constructing a BigqueryConnection resource.
 */
export interface BigqueryConnectionArgs {
    /**
     * Connection properties specific to Amazon Web Services.
     */
    aws?: pulumi.Input<inputs.BigqueryConnectionAws>;
    /**
     * Container for connection properties specific to Azure.
     */
    azure?: pulumi.Input<inputs.BigqueryConnectionAzure>;
    /**
     * Container for connection properties for delegation of access to GCP resources.
     */
    cloudResource?: pulumi.Input<inputs.BigqueryConnectionCloudResource>;
    /**
     * Connection properties specific to Cloud Spanner
     */
    cloudSpanner?: pulumi.Input<inputs.BigqueryConnectionCloudSpanner>;
    /**
     * Connection properties specific to the Cloud SQL.
     */
    cloudSql?: pulumi.Input<inputs.BigqueryConnectionCloudSql>;
    /**
     * Optional connection id that should be assigned to the created connection.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * A descriptive description for the connection
     */
    description?: pulumi.Input<string>;
    /**
     * A descriptive name for the connection
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Optional. The Cloud KMS key that is used for encryption. Example:
     * projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
     * connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
     * EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
     * regions are aws-us-east-1 Azure allowed regions are azure-eastus2
     */
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Container for connection properties to execute stored procedures for Apache Spark. resources.
     */
    spark?: pulumi.Input<inputs.BigqueryConnectionSpark>;
    timeouts?: pulumi.Input<inputs.BigqueryConnectionTimeouts>;
}
