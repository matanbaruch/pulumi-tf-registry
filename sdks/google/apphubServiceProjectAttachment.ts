// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApphubServiceProjectAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ApphubServiceProjectAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApphubServiceProjectAttachmentState, opts?: pulumi.CustomResourceOptions): ApphubServiceProjectAttachment {
        return new ApphubServiceProjectAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/apphubServiceProjectAttachment:ApphubServiceProjectAttachment';

    /**
     * Returns true if the given object is an instance of ApphubServiceProjectAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApphubServiceProjectAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApphubServiceProjectAttachment.__pulumiType;
    }

    /**
     * Output only. Create time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * "Identifier. The resource name of a ServiceProjectAttachment.
     * Format:\"projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\""
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * "Immutable. Service project name in the format: \"projects/abc\" or \"projects/123\". As input, project name with either
     * project id or number are accepted. As output, this field will contain project number."
     */
    public readonly serviceProject!: pulumi.Output<string | undefined>;
    /**
     * Required. The service project attachment identifier must contain the project_id of the service project specified in the
     * service_project_attachment.service_project field. Hint: "projects/{project_id}"
     */
    public readonly serviceProjectAttachmentId!: pulumi.Output<string>;
    /**
     * ServiceProjectAttachment state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApphubServiceProjectAttachmentTimeouts | undefined>;
    /**
     * Output only. A globally unique identifier (in UUID4 format) for the 'ServiceProjectAttachment'.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;

    /**
     * Create a ApphubServiceProjectAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApphubServiceProjectAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApphubServiceProjectAttachmentArgs | ApphubServiceProjectAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApphubServiceProjectAttachmentState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["serviceProject"] = state ? state.serviceProject : undefined;
            resourceInputs["serviceProjectAttachmentId"] = state ? state.serviceProjectAttachmentId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
        } else {
            const args = argsOrState as ApphubServiceProjectAttachmentArgs | undefined;
            if ((!args || args.serviceProjectAttachmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceProjectAttachmentId'");
            }
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceProject"] = args ? args.serviceProject : undefined;
            resourceInputs["serviceProjectAttachmentId"] = args ? args.serviceProjectAttachmentId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApphubServiceProjectAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApphubServiceProjectAttachment resources.
 */
export interface ApphubServiceProjectAttachmentState {
    /**
     * Output only. Create time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * "Identifier. The resource name of a ServiceProjectAttachment.
     * Format:\"projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\""
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * "Immutable. Service project name in the format: \"projects/abc\" or \"projects/123\". As input, project name with either
     * project id or number are accepted. As output, this field will contain project number."
     */
    serviceProject?: pulumi.Input<string>;
    /**
     * Required. The service project attachment identifier must contain the project_id of the service project specified in the
     * service_project_attachment.service_project field. Hint: "projects/{project_id}"
     */
    serviceProjectAttachmentId?: pulumi.Input<string>;
    /**
     * ServiceProjectAttachment state.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApphubServiceProjectAttachmentTimeouts>;
    /**
     * Output only. A globally unique identifier (in UUID4 format) for the 'ServiceProjectAttachment'.
     */
    uid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApphubServiceProjectAttachment resource.
 */
export interface ApphubServiceProjectAttachmentArgs {
    project?: pulumi.Input<string>;
    /**
     * "Immutable. Service project name in the format: \"projects/abc\" or \"projects/123\". As input, project name with either
     * project id or number are accepted. As output, this field will contain project number."
     */
    serviceProject?: pulumi.Input<string>;
    /**
     * Required. The service project attachment identifier must contain the project_id of the service project specified in the
     * service_project_attachment.service_project field. Hint: "projects/{project_id}"
     */
    serviceProjectAttachmentId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApphubServiceProjectAttachmentTimeouts>;
}
