// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BigtableTable extends pulumi.CustomResource {
    /**
     * Get an existing BigtableTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BigtableTableState, opts?: pulumi.CustomResourceOptions): BigtableTable {
        return new BigtableTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google:index/bigtableTable:BigtableTable';

    /**
     * Returns true if the given object is an instance of BigtableTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BigtableTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BigtableTable.__pulumiType;
    }

    /**
     * Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
     * Retention Period and Frequency to 0.
     */
    public readonly automatedBackupPolicy!: pulumi.Output<outputs.BigtableTableAutomatedBackupPolicy | undefined>;
    /**
     * Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
     */
    public readonly changeStreamRetention!: pulumi.Output<string>;
    /**
     * A group of columns within a table which share a common configuration. This can be specified multiple times.
     */
    public readonly columnFamilies!: pulumi.Output<outputs.BigtableTableColumnFamily[] | undefined>;
    /**
     * A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
     * families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
     * protection will be set to UNPROTECTED as it is the API default value.
     */
    public readonly deletionProtection!: pulumi.Output<string>;
    /**
     * The name of the Bigtable instance.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    public readonly splitKeys!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.BigtableTableTimeouts | undefined>;

    /**
     * Create a BigtableTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BigtableTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BigtableTableArgs | BigtableTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BigtableTableState | undefined;
            resourceInputs["automatedBackupPolicy"] = state ? state.automatedBackupPolicy : undefined;
            resourceInputs["changeStreamRetention"] = state ? state.changeStreamRetention : undefined;
            resourceInputs["columnFamilies"] = state ? state.columnFamilies : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["splitKeys"] = state ? state.splitKeys : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BigtableTableArgs | undefined;
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            resourceInputs["automatedBackupPolicy"] = args ? args.automatedBackupPolicy : undefined;
            resourceInputs["changeStreamRetention"] = args ? args.changeStreamRetention : undefined;
            resourceInputs["columnFamilies"] = args ? args.columnFamilies : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["splitKeys"] = args ? args.splitKeys : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BigtableTable.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BigtableTable resources.
 */
export interface BigtableTableState {
    /**
     * Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
     * Retention Period and Frequency to 0.
     */
    automatedBackupPolicy?: pulumi.Input<inputs.BigtableTableAutomatedBackupPolicy>;
    /**
     * Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
     */
    changeStreamRetention?: pulumi.Input<string>;
    /**
     * A group of columns within a table which share a common configuration. This can be specified multiple times.
     */
    columnFamilies?: pulumi.Input<pulumi.Input<inputs.BigtableTableColumnFamily>[]>;
    /**
     * A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
     * families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
     * protection will be set to UNPROTECTED as it is the API default value.
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * The name of the Bigtable instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    splitKeys?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.BigtableTableTimeouts>;
}

/**
 * The set of arguments for constructing a BigtableTable resource.
 */
export interface BigtableTableArgs {
    /**
     * Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
     * Retention Period and Frequency to 0.
     */
    automatedBackupPolicy?: pulumi.Input<inputs.BigtableTableAutomatedBackupPolicy>;
    /**
     * Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
     */
    changeStreamRetention?: pulumi.Input<string>;
    /**
     * A group of columns within a table which share a common configuration. This can be specified multiple times.
     */
    columnFamilies?: pulumi.Input<pulumi.Input<inputs.BigtableTableColumnFamily>[]>;
    /**
     * A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
     * families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
     * protection will be set to UNPROTECTED as it is the API default value.
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * The name of the Bigtable instance.
     */
    instanceName: pulumi.Input<string>;
    /**
     * The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    splitKeys?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.BigtableTableTimeouts>;
}
