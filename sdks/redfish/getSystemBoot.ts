// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemBoot(args?: GetSystemBootArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemBootResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("redfish:index/getSystemBoot:getSystemBoot", {
        "redfishServers": args.redfishServers,
        "resourceId": args.resourceId,
        "systemId": args.systemId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemBoot.
 */
export interface GetSystemBootArgs {
    redfishServers?: inputs.GetSystemBootRedfishServer[];
    /**
     * @deprecated Deprecated
     */
    resourceId?: string;
    systemId?: string;
}

/**
 * A collection of values returned by getSystemBoot.
 */
export interface GetSystemBootResult {
    readonly bootOrders: string[];
    readonly bootSourceOverrideEnabled: string;
    readonly bootSourceOverrideMode: string;
    readonly bootSourceOverrideTarget: string;
    readonly id: string;
    readonly redfishServers?: outputs.GetSystemBootRedfishServer[];
    /**
     * @deprecated Deprecated
     */
    readonly resourceId: string;
    readonly systemId: string;
    readonly uefiTargetBootSourceOverride: string;
}
export function getSystemBootOutput(args?: GetSystemBootOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemBootResult> {
    return pulumi.output(args).apply((a: any) => getSystemBoot(a, opts))
}

/**
 * A collection of arguments for invoking getSystemBoot.
 */
export interface GetSystemBootOutputArgs {
    redfishServers?: pulumi.Input<pulumi.Input<inputs.GetSystemBootRedfishServerArgs>[]>;
    /**
     * @deprecated Deprecated
     */
    resourceId?: pulumi.Input<string>;
    systemId?: pulumi.Input<string>;
}
