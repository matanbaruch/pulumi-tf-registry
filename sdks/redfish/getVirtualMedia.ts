// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVirtualMedia(args?: GetVirtualMediaArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualMediaResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("redfish:index/getVirtualMedia:getVirtualMedia", {
        "redfishServers": args.redfishServers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVirtualMedia.
 */
export interface GetVirtualMediaArgs {
    redfishServers?: inputs.GetVirtualMediaRedfishServer[];
}

/**
 * A collection of values returned by getVirtualMedia.
 */
export interface GetVirtualMediaResult {
    readonly id: string;
    readonly redfishServers?: outputs.GetVirtualMediaRedfishServer[];
    readonly virtualMedia: outputs.GetVirtualMediaVirtualMedia[];
}
export function getVirtualMediaOutput(args?: GetVirtualMediaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualMediaResult> {
    return pulumi.output(args).apply((a: any) => getVirtualMedia(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualMedia.
 */
export interface GetVirtualMediaOutputArgs {
    redfishServers?: pulumi.Input<pulumi.Input<inputs.GetVirtualMediaRedfishServerArgs>[]>;
}
