// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetwork(args?: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("redfish:index/getNetwork:getNetwork", {
        "nicFilter": args.nicFilter,
        "redfishServers": args.redfishServers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    nicFilter?: inputs.GetNetworkNicFilter;
    redfishServers?: inputs.GetNetworkRedfishServer[];
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly id: string;
    readonly networkInterfaces: outputs.GetNetworkNetworkInterface[];
    readonly nicAttributes: {[key: string]: string};
    readonly nicFilter?: outputs.GetNetworkNicFilter;
    readonly redfishServers?: outputs.GetNetworkRedfishServer[];
}
export function getNetworkOutput(args?: GetNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    nicFilter?: pulumi.Input<inputs.GetNetworkNicFilterArgs>;
    redfishServers?: pulumi.Input<pulumi.Input<inputs.GetNetworkRedfishServerArgs>[]>;
}
