// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorage(args?: GetStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("redfish:index/getStorage:getStorage", {
        "controllerIds": args.controllerIds,
        "controllerNames": args.controllerNames,
        "redfishServers": args.redfishServers,
        "systemId": args.systemId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorage.
 */
export interface GetStorageArgs {
    controllerIds?: string[];
    controllerNames?: string[];
    redfishServers?: inputs.GetStorageRedfishServer[];
    systemId?: string;
}

/**
 * A collection of values returned by getStorage.
 */
export interface GetStorageResult {
    readonly controllerIds?: string[];
    readonly controllerNames?: string[];
    readonly id: string;
    readonly redfishServers?: outputs.GetStorageRedfishServer[];
    readonly storages: outputs.GetStorageStorage[];
    readonly systemId: string;
}
export function getStorageOutput(args?: GetStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageResult> {
    return pulumi.output(args).apply((a: any) => getStorage(a, opts))
}

/**
 * A collection of arguments for invoking getStorage.
 */
export interface GetStorageOutputArgs {
    controllerIds?: pulumi.Input<pulumi.Input<string>[]>;
    controllerNames?: pulumi.Input<pulumi.Input<string>[]>;
    redfishServers?: pulumi.Input<pulumi.Input<inputs.GetStorageRedfishServerArgs>[]>;
    systemId?: pulumi.Input<string>;
}
