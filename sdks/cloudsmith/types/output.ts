// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetEntitlementListEntitlementToken {
    clients: number;
    createdAt: string;
    createdBy: string;
    default: boolean;
    disableUrl: string;
    downloads: number;
    enableUrl: string;
    eulaRequired: boolean;
    hasLimits: boolean;
    identifier: number;
    isActive: boolean;
    isLimited: boolean;
    limitBandwidth: number;
    limitBandwidthUnit: string;
    limitDateRangeFrom: string;
    limitDateRangeTo: string;
    limitNumClients: number;
    limitNumDownloads: number;
    limitPackageQuery: string;
    limitPathQuery: string;
    metadata: {[key: string]: string};
    name: string;
    refreshUrl: string;
    resetUrl: string;
    scheduledResetAt: string;
    scheduledResetPeriod: string;
    selfUrl: string;
    slugPerm: string;
    token: string;
    updatedAt: string;
    updatedBy: string;
    updatedByUrl: string;
    usage: string;
    user: string;
    userUrl: string;
}

export interface GetListOrgMembersMember {
    email: string;
    hasTwoFactor: boolean;
    isActive: boolean;
    joinedAt: string;
    lastLoginAt: string;
    lastLoginMethod: string;
    role: string;
    user: string;
    userId: string;
}

export interface GetPackageListPackage {
    cdnUrl: string;
    format: string;
    isSyncAwaiting: boolean;
    isSyncCompleted: boolean;
    isSyncFailed: boolean;
    isSyncInFlight: boolean;
    isSyncInProgress: boolean;
    name: string;
    namespace: string;
    repository: string;
    slug: string;
    slugPerm: string;
    version: string;
}

export interface GetRepositoryPrivilegesService {
    privilege: string;
    slug: string;
}

export interface GetRepositoryPrivilegesTeam {
    privilege: string;
    slug: string;
}

export interface GetRepositoryPrivilegesUser {
    privilege: string;
    slug: string;
}

export interface ManageTeamMember {
    role: string;
    user: string;
}

export interface RepositoryPrivilegesService {
    privilege: string;
    slug: string;
}

export interface RepositoryPrivilegesTeam {
    privilege: string;
    slug: string;
}

export interface RepositoryPrivilegesUser {
    privilege: string;
    slug: string;
}

export interface ServiceTeam {
    /**
     * The service's role in the organization.
     */
    role: string;
    /**
     * The team the service should be added to.
     */
    slug: string;
}

export interface WebhookTemplate {
    event: string;
    template?: string;
}

