// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEntitlementList(args: GetEntitlementListArgs, opts?: pulumi.InvokeOptions): Promise<GetEntitlementListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudsmith:index/getEntitlementList:getEntitlementList", {
        "activeToken": args.activeToken,
        "id": args.id,
        "namespace": args.namespace,
        "queries": args.queries,
        "repository": args.repository,
        "showToken": args.showToken,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEntitlementList.
 */
export interface GetEntitlementListArgs {
    activeToken?: boolean;
    id?: string;
    namespace: string;
    queries?: string[];
    repository: string;
    showToken?: boolean;
}

/**
 * A collection of values returned by getEntitlementList.
 */
export interface GetEntitlementListResult {
    readonly activeToken?: boolean;
    readonly entitlementTokens: outputs.GetEntitlementListEntitlementToken[];
    readonly id: string;
    readonly namespace: string;
    readonly queries?: string[];
    readonly repository: string;
    readonly showToken?: boolean;
}
export function getEntitlementListOutput(args: GetEntitlementListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntitlementListResult> {
    return pulumi.output(args).apply((a: any) => getEntitlementList(a, opts))
}

/**
 * A collection of arguments for invoking getEntitlementList.
 */
export interface GetEntitlementListOutputArgs {
    activeToken?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    queries?: pulumi.Input<pulumi.Input<string>[]>;
    repository: pulumi.Input<string>;
    showToken?: pulumi.Input<boolean>;
}
