// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgMemberDetails(args: GetOrgMemberDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgMemberDetailsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudsmith:index/getOrgMemberDetails:getOrgMemberDetails", {
        "id": args.id,
        "member": args.member,
        "organization": args.organization,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgMemberDetails.
 */
export interface GetOrgMemberDetailsArgs {
    id?: string;
    member: string;
    organization: string;
}

/**
 * A collection of values returned by getOrgMemberDetails.
 */
export interface GetOrgMemberDetailsResult {
    readonly email: string;
    readonly hasTwoFactor: boolean;
    readonly id: string;
    readonly isActive: boolean;
    readonly joinedAt: string;
    readonly lastLoginAt: string;
    readonly lastLoginMethod: string;
    readonly member: string;
    readonly organization: string;
    readonly role: string;
    readonly user: string;
    readonly userId: string;
    readonly userName: string;
    readonly userUrl: string;
    readonly visibility: string;
}
export function getOrgMemberDetailsOutput(args: GetOrgMemberDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgMemberDetailsResult> {
    return pulumi.output(args).apply((a: any) => getOrgMemberDetails(a, opts))
}

/**
 * A collection of arguments for invoking getOrgMemberDetails.
 */
export interface GetOrgMemberDetailsOutputArgs {
    id?: pulumi.Input<string>;
    member: pulumi.Input<string>;
    organization: pulumi.Input<string>;
}
