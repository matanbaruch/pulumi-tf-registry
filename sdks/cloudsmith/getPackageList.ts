// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPackageList(args: GetPackageListArgs, opts?: pulumi.InvokeOptions): Promise<GetPackageListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudsmith:index/getPackageList:getPackageList", {
        "filters": args.filters,
        "id": args.id,
        "mostRecent": args.mostRecent,
        "namespace": args.namespace,
        "repository": args.repository,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackageList.
 */
export interface GetPackageListArgs {
    filters?: string[];
    id?: string;
    mostRecent?: boolean;
    namespace: string;
    repository: string;
}

/**
 * A collection of values returned by getPackageList.
 */
export interface GetPackageListResult {
    readonly filters?: string[];
    readonly id: string;
    readonly mostRecent?: boolean;
    readonly namespace: string;
    readonly packages: outputs.GetPackageListPackage[];
    readonly repository: string;
}
export function getPackageListOutput(args: GetPackageListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackageListResult> {
    return pulumi.output(args).apply((a: any) => getPackageList(a, opts))
}

/**
 * A collection of arguments for invoking getPackageList.
 */
export interface GetPackageListOutputArgs {
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    namespace: pulumi.Input<string>;
    repository: pulumi.Input<string>;
}
