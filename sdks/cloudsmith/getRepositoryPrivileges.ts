// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRepositoryPrivileges(args: GetRepositoryPrivilegesArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryPrivilegesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudsmith:index/getRepositoryPrivileges:getRepositoryPrivileges", {
        "id": args.id,
        "organization": args.organization,
        "repository": args.repository,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRepositoryPrivileges.
 */
export interface GetRepositoryPrivilegesArgs {
    id?: string;
    organization: string;
    repository: string;
}

/**
 * A collection of values returned by getRepositoryPrivileges.
 */
export interface GetRepositoryPrivilegesResult {
    readonly id: string;
    readonly organization: string;
    readonly repository: string;
    readonly services: outputs.GetRepositoryPrivilegesService[];
    readonly teams: outputs.GetRepositoryPrivilegesTeam[];
    readonly users: outputs.GetRepositoryPrivilegesUser[];
}
export function getRepositoryPrivilegesOutput(args: GetRepositoryPrivilegesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryPrivilegesResult> {
    return pulumi.output(args).apply((a: any) => getRepositoryPrivileges(a, opts))
}

/**
 * A collection of arguments for invoking getRepositoryPrivileges.
 */
export interface GetRepositoryPrivilegesOutputArgs {
    id?: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    repository: pulumi.Input<string>;
}
