// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabaseRole(args: GetDatabaseRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getDatabaseRole:getDatabaseRole", {
        "database": args.database,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseRole.
 */
export interface GetDatabaseRoleArgs {
    database: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getDatabaseRole.
 */
export interface GetDatabaseRoleResult {
    readonly comment: string;
    readonly database: string;
    readonly id: string;
    readonly name: string;
    readonly owner: string;
}
export function getDatabaseRoleOutput(args: GetDatabaseRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseRoleResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseRole(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseRole.
 */
export interface GetDatabaseRoleOutputArgs {
    database: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
