// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTasks(args: GetTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetTasksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getTasks:getTasks", {
        "database": args.database,
        "id": args.id,
        "schema": args.schema,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTasks.
 */
export interface GetTasksArgs {
    database: string;
    id?: string;
    schema: string;
}

/**
 * A collection of values returned by getTasks.
 */
export interface GetTasksResult {
    readonly database: string;
    readonly id: string;
    readonly schema: string;
    readonly tasks: outputs.GetTasksTask[];
}
export function getTasksOutput(args: GetTasksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTasksResult> {
    return pulumi.output(args).apply((a: any) => getTasks(a, opts))
}

/**
 * A collection of arguments for invoking getTasks.
 */
export interface GetTasksOutputArgs {
    database: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    schema: pulumi.Input<string>;
}
