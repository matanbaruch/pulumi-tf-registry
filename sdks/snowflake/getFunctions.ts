// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFunctions(args: GetFunctionsArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getFunctions:getFunctions", {
        "database": args.database,
        "id": args.id,
        "schema": args.schema,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFunctions.
 */
export interface GetFunctionsArgs {
    database: string;
    id?: string;
    schema: string;
}

/**
 * A collection of values returned by getFunctions.
 */
export interface GetFunctionsResult {
    readonly database: string;
    readonly functions: outputs.GetFunctionsFunction[];
    readonly id: string;
    readonly schema: string;
}
export function getFunctionsOutput(args: GetFunctionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionsResult> {
    return pulumi.output(args).apply((a: any) => getFunctions(a, opts))
}

/**
 * A collection of arguments for invoking getFunctions.
 */
export interface GetFunctionsOutputArgs {
    database: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    schema: pulumi.Input<string>;
}
