// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFailoverGroups(args?: GetFailoverGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetFailoverGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getFailoverGroups:getFailoverGroups", {
        "id": args.id,
        "inAccount": args.inAccount,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFailoverGroups.
 */
export interface GetFailoverGroupsArgs {
    id?: string;
    inAccount?: string;
}

/**
 * A collection of values returned by getFailoverGroups.
 */
export interface GetFailoverGroupsResult {
    readonly failoverGroups: outputs.GetFailoverGroupsFailoverGroup[];
    readonly id: string;
    readonly inAccount?: string;
}
export function getFailoverGroupsOutput(args?: GetFailoverGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFailoverGroupsResult> {
    return pulumi.output(args).apply((a: any) => getFailoverGroups(a, opts))
}

/**
 * A collection of arguments for invoking getFailoverGroups.
 */
export interface GetFailoverGroupsOutputArgs {
    id?: pulumi.Input<string>;
    inAccount?: pulumi.Input<string>;
}
