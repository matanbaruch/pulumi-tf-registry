// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseRoles(args: GetDatabaseRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseRolesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getDatabaseRoles:getDatabaseRoles", {
        "id": args.id,
        "inDatabase": args.inDatabase,
        "like": args.like,
        "limit": args.limit,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseRoles.
 */
export interface GetDatabaseRolesArgs {
    id?: string;
    inDatabase: string;
    like?: string;
    limit?: inputs.GetDatabaseRolesLimit;
}

/**
 * A collection of values returned by getDatabaseRoles.
 */
export interface GetDatabaseRolesResult {
    readonly databaseRoles: outputs.GetDatabaseRolesDatabaseRole[];
    readonly id: string;
    readonly inDatabase: string;
    readonly like?: string;
    readonly limit?: outputs.GetDatabaseRolesLimit;
}
export function getDatabaseRolesOutput(args: GetDatabaseRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseRolesResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseRoles(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseRoles.
 */
export interface GetDatabaseRolesOutputArgs {
    id?: pulumi.Input<string>;
    inDatabase: pulumi.Input<string>;
    like?: pulumi.Input<string>;
    limit?: pulumi.Input<inputs.GetDatabaseRolesLimitArgs>;
}
