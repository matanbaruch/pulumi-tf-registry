// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConfigsList(args: GetConfigsListArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigsListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiflexvm:index/getConfigsList:getConfigsList", {
        "accountId": args.accountId,
        "id": args.id,
        "programSerialNumber": args.programSerialNumber,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfigsList.
 */
export interface GetConfigsListArgs {
    accountId?: number;
    id?: string;
    programSerialNumber: string;
}

/**
 * A collection of values returned by getConfigsList.
 */
export interface GetConfigsListResult {
    readonly accountId?: number;
    readonly configs: outputs.GetConfigsListConfig[];
    readonly id: string;
    readonly programSerialNumber: string;
}
export function getConfigsListOutput(args: GetConfigsListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigsListResult> {
    return pulumi.output(args).apply((a: any) => getConfigsList(a, opts))
}

/**
 * A collection of arguments for invoking getConfigsList.
 */
export interface GetConfigsListOutputArgs {
    accountId?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    programSerialNumber: pulumi.Input<string>;
}
