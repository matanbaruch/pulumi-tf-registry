// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Config extends pulumi.CustomResource {
    /**
     * Get an existing Config resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigState, opts?: pulumi.CustomResourceOptions): Config {
        return new Config(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiflexvm:index/config:Config';

    /**
     * Returns true if the given object is an instance of Config.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Config {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Config.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<number>;
    public readonly configId!: pulumi.Output<number>;
    public readonly fadVms!: pulumi.Output<outputs.ConfigFadVm[] | undefined>;
    public readonly fapHws!: pulumi.Output<outputs.ConfigFapHw[] | undefined>;
    public readonly fazVms!: pulumi.Output<outputs.ConfigFazVm[] | undefined>;
    public readonly fcEmsClouds!: pulumi.Output<outputs.ConfigFcEmsCloud[] | undefined>;
    public readonly fcEmsOps!: pulumi.Output<outputs.ConfigFcEmsOp[] | undefined>;
    public readonly fgtHws!: pulumi.Output<outputs.ConfigFgtHw[] | undefined>;
    public readonly fgtVmBundles!: pulumi.Output<outputs.ConfigFgtVmBundle[] | undefined>;
    public readonly fgtVmLcs!: pulumi.Output<outputs.ConfigFgtVmLc[] | undefined>;
    public readonly fmgVms!: pulumi.Output<outputs.ConfigFmgVm[] | undefined>;
    public readonly fortiedrs!: pulumi.Output<outputs.ConfigFortiedr[] | undefined>;
    public readonly fortisases!: pulumi.Output<outputs.ConfigFortisase[] | undefined>;
    public readonly fpcVms!: pulumi.Output<outputs.ConfigFpcVm[] | undefined>;
    public readonly fswHws!: pulumi.Output<outputs.ConfigFswHw[] | undefined>;
    public readonly fwbVms!: pulumi.Output<outputs.ConfigFwbVm[] | undefined>;
    public readonly fwbcPrivates!: pulumi.Output<outputs.ConfigFwbcPrivate[] | undefined>;
    public readonly fwbcPublics!: pulumi.Output<outputs.ConfigFwbcPublic[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Product Type ID, must be one of the following options: FGT_VM_Bundle: FortiGate Virtual Machine - Service Bundle;
     * FMG_VM: FortiManager Virtual Machine; FWB_VM: FortiWeb Virtual Machine - Service Bundle; FGT_VM_LCS: FortiGate Virtual
     * Machine - A La Carte Services; FC_EMS_OP: FortiClient EMS On-Prem; FAZ_VM: FortiAnalyzer Virtual Machine; FPC_VM:
     * FortiPortal Virtual Machine; FAD_VM: FortiADC Virtual Machine; FGT_HW: FortiGate Hardware; FAP_HW: FortiAP Hardware;
     * FSW_HW: FortiSwitch Hardware; FWBC_PRIVATE: FortiWeb Cloud - Private; FWBC_PUBLIC: FortiWeb Cloud - Public;
     * FC_EMS_CLOUD: FortiClient EMS Cloud; FORTISASE: FortiSASE; FORTIEDR: FortiEDR.
     */
    public readonly productType!: pulumi.Output<string>;
    public readonly programSerialNumber!: pulumi.Output<string>;
    /**
     * Configuration status, must be one of the following options: ACTIVE: Enable a configuration; DISABLED: Disable a
     * configuration.
     */
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a Config resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigArgs | ConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["fadVms"] = state ? state.fadVms : undefined;
            resourceInputs["fapHws"] = state ? state.fapHws : undefined;
            resourceInputs["fazVms"] = state ? state.fazVms : undefined;
            resourceInputs["fcEmsClouds"] = state ? state.fcEmsClouds : undefined;
            resourceInputs["fcEmsOps"] = state ? state.fcEmsOps : undefined;
            resourceInputs["fgtHws"] = state ? state.fgtHws : undefined;
            resourceInputs["fgtVmBundles"] = state ? state.fgtVmBundles : undefined;
            resourceInputs["fgtVmLcs"] = state ? state.fgtVmLcs : undefined;
            resourceInputs["fmgVms"] = state ? state.fmgVms : undefined;
            resourceInputs["fortiedrs"] = state ? state.fortiedrs : undefined;
            resourceInputs["fortisases"] = state ? state.fortisases : undefined;
            resourceInputs["fpcVms"] = state ? state.fpcVms : undefined;
            resourceInputs["fswHws"] = state ? state.fswHws : undefined;
            resourceInputs["fwbVms"] = state ? state.fwbVms : undefined;
            resourceInputs["fwbcPrivates"] = state ? state.fwbcPrivates : undefined;
            resourceInputs["fwbcPublics"] = state ? state.fwbcPublics : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["productType"] = state ? state.productType : undefined;
            resourceInputs["programSerialNumber"] = state ? state.programSerialNumber : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ConfigArgs | undefined;
            if ((!args || args.productType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productType'");
            }
            if ((!args || args.programSerialNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'programSerialNumber'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["fadVms"] = args ? args.fadVms : undefined;
            resourceInputs["fapHws"] = args ? args.fapHws : undefined;
            resourceInputs["fazVms"] = args ? args.fazVms : undefined;
            resourceInputs["fcEmsClouds"] = args ? args.fcEmsClouds : undefined;
            resourceInputs["fcEmsOps"] = args ? args.fcEmsOps : undefined;
            resourceInputs["fgtHws"] = args ? args.fgtHws : undefined;
            resourceInputs["fgtVmBundles"] = args ? args.fgtVmBundles : undefined;
            resourceInputs["fgtVmLcs"] = args ? args.fgtVmLcs : undefined;
            resourceInputs["fmgVms"] = args ? args.fmgVms : undefined;
            resourceInputs["fortiedrs"] = args ? args.fortiedrs : undefined;
            resourceInputs["fortisases"] = args ? args.fortisases : undefined;
            resourceInputs["fpcVms"] = args ? args.fpcVms : undefined;
            resourceInputs["fswHws"] = args ? args.fswHws : undefined;
            resourceInputs["fwbVms"] = args ? args.fwbVms : undefined;
            resourceInputs["fwbcPrivates"] = args ? args.fwbcPrivates : undefined;
            resourceInputs["fwbcPublics"] = args ? args.fwbcPublics : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["productType"] = args ? args.productType : undefined;
            resourceInputs["programSerialNumber"] = args ? args.programSerialNumber : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Config.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Config resources.
 */
export interface ConfigState {
    accountId?: pulumi.Input<number>;
    configId?: pulumi.Input<number>;
    fadVms?: pulumi.Input<pulumi.Input<inputs.ConfigFadVm>[]>;
    fapHws?: pulumi.Input<pulumi.Input<inputs.ConfigFapHw>[]>;
    fazVms?: pulumi.Input<pulumi.Input<inputs.ConfigFazVm>[]>;
    fcEmsClouds?: pulumi.Input<pulumi.Input<inputs.ConfigFcEmsCloud>[]>;
    fcEmsOps?: pulumi.Input<pulumi.Input<inputs.ConfigFcEmsOp>[]>;
    fgtHws?: pulumi.Input<pulumi.Input<inputs.ConfigFgtHw>[]>;
    fgtVmBundles?: pulumi.Input<pulumi.Input<inputs.ConfigFgtVmBundle>[]>;
    fgtVmLcs?: pulumi.Input<pulumi.Input<inputs.ConfigFgtVmLc>[]>;
    fmgVms?: pulumi.Input<pulumi.Input<inputs.ConfigFmgVm>[]>;
    fortiedrs?: pulumi.Input<pulumi.Input<inputs.ConfigFortiedr>[]>;
    fortisases?: pulumi.Input<pulumi.Input<inputs.ConfigFortisase>[]>;
    fpcVms?: pulumi.Input<pulumi.Input<inputs.ConfigFpcVm>[]>;
    fswHws?: pulumi.Input<pulumi.Input<inputs.ConfigFswHw>[]>;
    fwbVms?: pulumi.Input<pulumi.Input<inputs.ConfigFwbVm>[]>;
    fwbcPrivates?: pulumi.Input<pulumi.Input<inputs.ConfigFwbcPrivate>[]>;
    fwbcPublics?: pulumi.Input<pulumi.Input<inputs.ConfigFwbcPublic>[]>;
    name?: pulumi.Input<string>;
    /**
     * Product Type ID, must be one of the following options: FGT_VM_Bundle: FortiGate Virtual Machine - Service Bundle;
     * FMG_VM: FortiManager Virtual Machine; FWB_VM: FortiWeb Virtual Machine - Service Bundle; FGT_VM_LCS: FortiGate Virtual
     * Machine - A La Carte Services; FC_EMS_OP: FortiClient EMS On-Prem; FAZ_VM: FortiAnalyzer Virtual Machine; FPC_VM:
     * FortiPortal Virtual Machine; FAD_VM: FortiADC Virtual Machine; FGT_HW: FortiGate Hardware; FAP_HW: FortiAP Hardware;
     * FSW_HW: FortiSwitch Hardware; FWBC_PRIVATE: FortiWeb Cloud - Private; FWBC_PUBLIC: FortiWeb Cloud - Public;
     * FC_EMS_CLOUD: FortiClient EMS Cloud; FORTISASE: FortiSASE; FORTIEDR: FortiEDR.
     */
    productType?: pulumi.Input<string>;
    programSerialNumber?: pulumi.Input<string>;
    /**
     * Configuration status, must be one of the following options: ACTIVE: Enable a configuration; DISABLED: Disable a
     * configuration.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Config resource.
 */
export interface ConfigArgs {
    accountId?: pulumi.Input<number>;
    configId?: pulumi.Input<number>;
    fadVms?: pulumi.Input<pulumi.Input<inputs.ConfigFadVm>[]>;
    fapHws?: pulumi.Input<pulumi.Input<inputs.ConfigFapHw>[]>;
    fazVms?: pulumi.Input<pulumi.Input<inputs.ConfigFazVm>[]>;
    fcEmsClouds?: pulumi.Input<pulumi.Input<inputs.ConfigFcEmsCloud>[]>;
    fcEmsOps?: pulumi.Input<pulumi.Input<inputs.ConfigFcEmsOp>[]>;
    fgtHws?: pulumi.Input<pulumi.Input<inputs.ConfigFgtHw>[]>;
    fgtVmBundles?: pulumi.Input<pulumi.Input<inputs.ConfigFgtVmBundle>[]>;
    fgtVmLcs?: pulumi.Input<pulumi.Input<inputs.ConfigFgtVmLc>[]>;
    fmgVms?: pulumi.Input<pulumi.Input<inputs.ConfigFmgVm>[]>;
    fortiedrs?: pulumi.Input<pulumi.Input<inputs.ConfigFortiedr>[]>;
    fortisases?: pulumi.Input<pulumi.Input<inputs.ConfigFortisase>[]>;
    fpcVms?: pulumi.Input<pulumi.Input<inputs.ConfigFpcVm>[]>;
    fswHws?: pulumi.Input<pulumi.Input<inputs.ConfigFswHw>[]>;
    fwbVms?: pulumi.Input<pulumi.Input<inputs.ConfigFwbVm>[]>;
    fwbcPrivates?: pulumi.Input<pulumi.Input<inputs.ConfigFwbcPrivate>[]>;
    fwbcPublics?: pulumi.Input<pulumi.Input<inputs.ConfigFwbcPublic>[]>;
    name?: pulumi.Input<string>;
    /**
     * Product Type ID, must be one of the following options: FGT_VM_Bundle: FortiGate Virtual Machine - Service Bundle;
     * FMG_VM: FortiManager Virtual Machine; FWB_VM: FortiWeb Virtual Machine - Service Bundle; FGT_VM_LCS: FortiGate Virtual
     * Machine - A La Carte Services; FC_EMS_OP: FortiClient EMS On-Prem; FAZ_VM: FortiAnalyzer Virtual Machine; FPC_VM:
     * FortiPortal Virtual Machine; FAD_VM: FortiADC Virtual Machine; FGT_HW: FortiGate Hardware; FAP_HW: FortiAP Hardware;
     * FSW_HW: FortiSwitch Hardware; FWBC_PRIVATE: FortiWeb Cloud - Private; FWBC_PUBLIC: FortiWeb Cloud - Public;
     * FC_EMS_CLOUD: FortiClient EMS Cloud; FORTISASE: FortiSASE; FORTIEDR: FortiEDR.
     */
    productType: pulumi.Input<string>;
    programSerialNumber: pulumi.Input<string>;
    /**
     * Configuration status, must be one of the following options: ACTIVE: Enable a configuration; DISABLED: Disable a
     * configuration.
     */
    status?: pulumi.Input<string>;
}
