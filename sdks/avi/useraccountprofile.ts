// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Useraccountprofile extends pulumi.CustomResource {
    /**
     * Get an existing Useraccountprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UseraccountprofileState, opts?: pulumi.CustomResourceOptions): Useraccountprofile {
        return new Useraccountprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/useraccountprofile:Useraccountprofile';

    /**
     * Returns true if the given object is an instance of Useraccountprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Useraccountprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Useraccountprofile.__pulumiType;
    }

    public readonly accountLockTimeout!: pulumi.Output<string | undefined>;
    public readonly configpbAttributes!: pulumi.Output<outputs.UseraccountprofileConfigpbAttribute[] | undefined>;
    public readonly credentialsTimeoutThreshold!: pulumi.Output<string | undefined>;
    public readonly loginFailureCountExpiryWindow!: pulumi.Output<string | undefined>;
    public readonly maxConcurrentSessions!: pulumi.Output<string | undefined>;
    public readonly maxLoginFailureCount!: pulumi.Output<string | undefined>;
    public readonly maxPasswordHistoryCount!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Useraccountprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UseraccountprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UseraccountprofileArgs | UseraccountprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UseraccountprofileState | undefined;
            resourceInputs["accountLockTimeout"] = state ? state.accountLockTimeout : undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["credentialsTimeoutThreshold"] = state ? state.credentialsTimeoutThreshold : undefined;
            resourceInputs["loginFailureCountExpiryWindow"] = state ? state.loginFailureCountExpiryWindow : undefined;
            resourceInputs["maxConcurrentSessions"] = state ? state.maxConcurrentSessions : undefined;
            resourceInputs["maxLoginFailureCount"] = state ? state.maxLoginFailureCount : undefined;
            resourceInputs["maxPasswordHistoryCount"] = state ? state.maxPasswordHistoryCount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as UseraccountprofileArgs | undefined;
            resourceInputs["accountLockTimeout"] = args ? args.accountLockTimeout : undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["credentialsTimeoutThreshold"] = args ? args.credentialsTimeoutThreshold : undefined;
            resourceInputs["loginFailureCountExpiryWindow"] = args ? args.loginFailureCountExpiryWindow : undefined;
            resourceInputs["maxConcurrentSessions"] = args ? args.maxConcurrentSessions : undefined;
            resourceInputs["maxLoginFailureCount"] = args ? args.maxLoginFailureCount : undefined;
            resourceInputs["maxPasswordHistoryCount"] = args ? args.maxPasswordHistoryCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Useraccountprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Useraccountprofile resources.
 */
export interface UseraccountprofileState {
    accountLockTimeout?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.UseraccountprofileConfigpbAttribute>[]>;
    credentialsTimeoutThreshold?: pulumi.Input<string>;
    loginFailureCountExpiryWindow?: pulumi.Input<string>;
    maxConcurrentSessions?: pulumi.Input<string>;
    maxLoginFailureCount?: pulumi.Input<string>;
    maxPasswordHistoryCount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Useraccountprofile resource.
 */
export interface UseraccountprofileArgs {
    accountLockTimeout?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.UseraccountprofileConfigpbAttribute>[]>;
    credentialsTimeoutThreshold?: pulumi.Input<string>;
    loginFailureCountExpiryWindow?: pulumi.Input<string>;
    maxConcurrentSessions?: pulumi.Input<string>;
    maxLoginFailureCount?: pulumi.Input<string>;
    maxPasswordHistoryCount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
