// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUseraccountprofile(args?: GetUseraccountprofileArgs, opts?: pulumi.InvokeOptions): Promise<GetUseraccountprofileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("avi:index/getUseraccountprofile:getUseraccountprofile", {
        "id": args.id,
        "name": args.name,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUseraccountprofile.
 */
export interface GetUseraccountprofileArgs {
    id?: string;
    name?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getUseraccountprofile.
 */
export interface GetUseraccountprofileResult {
    readonly accountLockTimeout: string;
    readonly configpbAttributes: outputs.GetUseraccountprofileConfigpbAttribute[];
    readonly credentialsTimeoutThreshold: string;
    readonly id: string;
    readonly loginFailureCountExpiryWindow: string;
    readonly maxConcurrentSessions: string;
    readonly maxLoginFailureCount: string;
    readonly maxPasswordHistoryCount: string;
    readonly name: string;
    readonly uuid: string;
}
export function getUseraccountprofileOutput(args?: GetUseraccountprofileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUseraccountprofileResult> {
    return pulumi.output(args).apply((a: any) => getUseraccountprofile(a, opts))
}

/**
 * A collection of arguments for invoking getUseraccountprofile.
 */
export interface GetUseraccountprofileOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
