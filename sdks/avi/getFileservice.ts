// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFileservice(args: GetFileserviceArgs, opts?: pulumi.InvokeOptions): Promise<GetFileserviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("avi:index/getFileservice:getFileservice", {
        "id": args.id,
        "localFile": args.localFile,
        "upload": args.upload,
        "uri": args.uri,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFileservice.
 */
export interface GetFileserviceArgs {
    id?: string;
    localFile: string;
    upload?: boolean;
    uri: string;
}

/**
 * A collection of values returned by getFileservice.
 */
export interface GetFileserviceResult {
    readonly id: string;
    readonly localFile: string;
    readonly upload?: boolean;
    readonly uri: string;
}
export function getFileserviceOutput(args: GetFileserviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileserviceResult> {
    return pulumi.output(args).apply((a: any) => getFileservice(a, opts))
}

/**
 * A collection of arguments for invoking getFileservice.
 */
export interface GetFileserviceOutputArgs {
    id?: pulumi.Input<string>;
    localFile: pulumi.Input<string>;
    upload?: pulumi.Input<boolean>;
    uri: pulumi.Input<string>;
}
