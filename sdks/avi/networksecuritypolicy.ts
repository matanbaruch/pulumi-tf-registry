// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Networksecuritypolicy extends pulumi.CustomResource {
    /**
     * Get an existing Networksecuritypolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworksecuritypolicyState, opts?: pulumi.CustomResourceOptions): Networksecuritypolicy {
        return new Networksecuritypolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/networksecuritypolicy:Networksecuritypolicy';

    /**
     * Returns true if the given object is an instance of Networksecuritypolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Networksecuritypolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Networksecuritypolicy.__pulumiType;
    }

    public readonly cloudConfigCksum!: pulumi.Output<string>;
    public readonly configpbAttributes!: pulumi.Output<outputs.NetworksecuritypolicyConfigpbAttribute[] | undefined>;
    public readonly createdBy!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly geoDbRef!: pulumi.Output<string>;
    public readonly internal!: pulumi.Output<string>;
    public readonly ipReputationDbRef!: pulumi.Output<string>;
    public readonly markers!: pulumi.Output<outputs.NetworksecuritypolicyMarker[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly rules!: pulumi.Output<outputs.NetworksecuritypolicyRule[] | undefined>;
    public readonly tenantRef!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Networksecuritypolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworksecuritypolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworksecuritypolicyArgs | NetworksecuritypolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworksecuritypolicyState | undefined;
            resourceInputs["cloudConfigCksum"] = state ? state.cloudConfigCksum : undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["geoDbRef"] = state ? state.geoDbRef : undefined;
            resourceInputs["internal"] = state ? state.internal : undefined;
            resourceInputs["ipReputationDbRef"] = state ? state.ipReputationDbRef : undefined;
            resourceInputs["markers"] = state ? state.markers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["tenantRef"] = state ? state.tenantRef : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as NetworksecuritypolicyArgs | undefined;
            resourceInputs["cloudConfigCksum"] = args ? args.cloudConfigCksum : undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["geoDbRef"] = args ? args.geoDbRef : undefined;
            resourceInputs["internal"] = args ? args.internal : undefined;
            resourceInputs["ipReputationDbRef"] = args ? args.ipReputationDbRef : undefined;
            resourceInputs["markers"] = args ? args.markers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["tenantRef"] = args ? args.tenantRef : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Networksecuritypolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Networksecuritypolicy resources.
 */
export interface NetworksecuritypolicyState {
    cloudConfigCksum?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.NetworksecuritypolicyConfigpbAttribute>[]>;
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    geoDbRef?: pulumi.Input<string>;
    internal?: pulumi.Input<string>;
    ipReputationDbRef?: pulumi.Input<string>;
    markers?: pulumi.Input<pulumi.Input<inputs.NetworksecuritypolicyMarker>[]>;
    name?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.NetworksecuritypolicyRule>[]>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Networksecuritypolicy resource.
 */
export interface NetworksecuritypolicyArgs {
    cloudConfigCksum?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.NetworksecuritypolicyConfigpbAttribute>[]>;
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    geoDbRef?: pulumi.Input<string>;
    internal?: pulumi.Input<string>;
    ipReputationDbRef?: pulumi.Input<string>;
    markers?: pulumi.Input<pulumi.Input<inputs.NetworksecuritypolicyMarker>[]>;
    name?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.NetworksecuritypolicyRule>[]>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
