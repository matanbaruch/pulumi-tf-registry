// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVsgs(args?: GetVsgsArgs, opts?: pulumi.InvokeOptions): Promise<GetVsgsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("avi:index/getVsgs:getVsgs", {
        "id": args.id,
        "name": args.name,
        "tenantRef": args.tenantRef,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVsgs.
 */
export interface GetVsgsArgs {
    id?: string;
    name?: string;
    tenantRef?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getVsgs.
 */
export interface GetVsgsResult {
    readonly configpbAttributes: outputs.GetVsgsConfigpbAttribute[];
    readonly geodbUuid: string;
    readonly gsUuid: string;
    readonly gslbUuid: string;
    readonly id: string;
    readonly name: string;
    readonly tenantRef: string;
    readonly type: string;
    readonly uuid: string;
    readonly vsUuid: string;
}
export function getVsgsOutput(args?: GetVsgsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVsgsResult> {
    return pulumi.output(args).apply((a: any) => getVsgs(a, opts))
}

/**
 * A collection of arguments for invoking getVsgs.
 */
export interface GetVsgsOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
