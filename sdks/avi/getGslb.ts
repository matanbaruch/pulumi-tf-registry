// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslb(args?: GetGslbArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("avi:index/getGslb:getGslb", {
        "id": args.id,
        "name": args.name,
        "tenantRef": args.tenantRef,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslb.
 */
export interface GetGslbArgs {
    id?: string;
    name?: string;
    tenantRef?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getGslb.
 */
export interface GetGslbResult {
    readonly asyncInterval: string;
    readonly clearOnMaxRetries: string;
    readonly clientIpAddrGroups: outputs.GetGslbClientIpAddrGroup[];
    readonly configpbAttributes: outputs.GetGslbConfigpbAttribute[];
    readonly description: string;
    readonly dnsConfigs: outputs.GetGslbDnsConfig[];
    readonly enableConfigByMembers: string;
    readonly errorResyncInterval: string;
    readonly fileobjectMaxFileVersions: string;
    readonly id: string;
    readonly isFederated: string;
    readonly leaderClusterUuid: string;
    readonly maintenanceMode: string;
    readonly name: string;
    readonly replicationPolicies: outputs.GetGslbReplicationPolicy[];
    readonly sendInterval: string;
    readonly sendIntervalPriorToMaintenanceMode: string;
    readonly sites: outputs.GetGslbSite[];
    readonly tenantRef: string;
    readonly tenantScoped: string;
    readonly thirdPartySites: outputs.GetGslbThirdPartySite[];
    readonly uuid: string;
    readonly viewId: string;
}
export function getGslbOutput(args?: GetGslbOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbResult> {
    return pulumi.output(args).apply((a: any) => getGslb(a, opts))
}

/**
 * A collection of arguments for invoking getGslb.
 */
export interface GetGslbOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
