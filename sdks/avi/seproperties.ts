// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Seproperties extends pulumi.CustomResource {
    /**
     * Get an existing Seproperties resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SepropertiesState, opts?: pulumi.CustomResourceOptions): Seproperties {
        return new Seproperties(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/seproperties:Seproperties';

    /**
     * Returns true if the given object is an instance of Seproperties.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Seproperties {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Seproperties.__pulumiType;
    }

    public readonly configpbAttributes!: pulumi.Output<outputs.SepropertiesConfigpbAttribute[] | undefined>;
    public readonly seAgentProperties!: pulumi.Output<outputs.SepropertiesSeAgentProperty[] | undefined>;
    public readonly seBootupProperties!: pulumi.Output<outputs.SepropertiesSeBootupProperty[] | undefined>;
    public readonly seRuntimeProperties!: pulumi.Output<outputs.SepropertiesSeRuntimeProperty[] | undefined>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Seproperties resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SepropertiesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SepropertiesArgs | SepropertiesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SepropertiesState | undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["seAgentProperties"] = state ? state.seAgentProperties : undefined;
            resourceInputs["seBootupProperties"] = state ? state.seBootupProperties : undefined;
            resourceInputs["seRuntimeProperties"] = state ? state.seRuntimeProperties : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SepropertiesArgs | undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["seAgentProperties"] = args ? args.seAgentProperties : undefined;
            resourceInputs["seBootupProperties"] = args ? args.seBootupProperties : undefined;
            resourceInputs["seRuntimeProperties"] = args ? args.seRuntimeProperties : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Seproperties.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Seproperties resources.
 */
export interface SepropertiesState {
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.SepropertiesConfigpbAttribute>[]>;
    seAgentProperties?: pulumi.Input<pulumi.Input<inputs.SepropertiesSeAgentProperty>[]>;
    seBootupProperties?: pulumi.Input<pulumi.Input<inputs.SepropertiesSeBootupProperty>[]>;
    seRuntimeProperties?: pulumi.Input<pulumi.Input<inputs.SepropertiesSeRuntimeProperty>[]>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Seproperties resource.
 */
export interface SepropertiesArgs {
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.SepropertiesConfigpbAttribute>[]>;
    seAgentProperties?: pulumi.Input<pulumi.Input<inputs.SepropertiesSeAgentProperty>[]>;
    seBootupProperties?: pulumi.Input<pulumi.Input<inputs.SepropertiesSeBootupProperty>[]>;
    seRuntimeProperties?: pulumi.Input<pulumi.Input<inputs.SepropertiesSeRuntimeProperty>[]>;
    uuid?: pulumi.Input<string>;
}
