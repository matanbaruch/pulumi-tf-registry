// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Siteversion extends pulumi.CustomResource {
    /**
     * Get an existing Siteversion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SiteversionState, opts?: pulumi.CustomResourceOptions): Siteversion {
        return new Siteversion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/siteversion:Siteversion';

    /**
     * Returns true if the given object is an instance of Siteversion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Siteversion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Siteversion.__pulumiType;
    }

    public readonly datetime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly prevTargetVersion!: pulumi.Output<string>;
    public readonly replicationState!: pulumi.Output<string>;
    public readonly siteId!: pulumi.Output<string>;
    public readonly targetTimeline!: pulumi.Output<string>;
    public readonly targetVersion!: pulumi.Output<string>;
    public readonly tenantRef!: pulumi.Output<string>;
    public readonly timeline!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly version!: pulumi.Output<string>;
    public readonly versionType!: pulumi.Output<string>;

    /**
     * Create a Siteversion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SiteversionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SiteversionArgs | SiteversionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SiteversionState | undefined;
            resourceInputs["datetime"] = state ? state.datetime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["prevTargetVersion"] = state ? state.prevTargetVersion : undefined;
            resourceInputs["replicationState"] = state ? state.replicationState : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["targetTimeline"] = state ? state.targetTimeline : undefined;
            resourceInputs["targetVersion"] = state ? state.targetVersion : undefined;
            resourceInputs["tenantRef"] = state ? state.tenantRef : undefined;
            resourceInputs["timeline"] = state ? state.timeline : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionType"] = state ? state.versionType : undefined;
        } else {
            const args = argsOrState as SiteversionArgs | undefined;
            resourceInputs["datetime"] = args ? args.datetime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["prevTargetVersion"] = args ? args.prevTargetVersion : undefined;
            resourceInputs["replicationState"] = args ? args.replicationState : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["targetTimeline"] = args ? args.targetTimeline : undefined;
            resourceInputs["targetVersion"] = args ? args.targetVersion : undefined;
            resourceInputs["tenantRef"] = args ? args.tenantRef : undefined;
            resourceInputs["timeline"] = args ? args.timeline : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["versionType"] = args ? args.versionType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Siteversion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Siteversion resources.
 */
export interface SiteversionState {
    datetime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    prevTargetVersion?: pulumi.Input<string>;
    replicationState?: pulumi.Input<string>;
    siteId?: pulumi.Input<string>;
    targetTimeline?: pulumi.Input<string>;
    targetVersion?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    timeline?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    versionType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Siteversion resource.
 */
export interface SiteversionArgs {
    datetime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    prevTargetVersion?: pulumi.Input<string>;
    replicationState?: pulumi.Input<string>;
    siteId?: pulumi.Input<string>;
    targetTimeline?: pulumi.Input<string>;
    targetVersion?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    timeline?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    versionType?: pulumi.Input<string>;
}
