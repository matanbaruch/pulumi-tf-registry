// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudproperties(args?: GetCloudpropertiesArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudpropertiesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("avi:index/getCloudproperties:getCloudproperties", {
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudproperties.
 */
export interface GetCloudpropertiesArgs {
    id?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getCloudproperties.
 */
export interface GetCloudpropertiesResult {
    readonly ccProps: outputs.GetCloudpropertiesCcProp[];
    readonly ccVtypes: string[];
    readonly configpbAttributes: outputs.GetCloudpropertiesConfigpbAttribute[];
    readonly hypProps: outputs.GetCloudpropertiesHypProp[];
    readonly id: string;
    readonly infos: outputs.GetCloudpropertiesInfo[];
    readonly uuid: string;
}
export function getCloudpropertiesOutput(args?: GetCloudpropertiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudpropertiesResult> {
    return pulumi.output(args).apply((a: any) => getCloudproperties(a, opts))
}

/**
 * A collection of arguments for invoking getCloudproperties.
 */
export interface GetCloudpropertiesOutputArgs {
    id?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
