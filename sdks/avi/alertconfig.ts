// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Alertconfig extends pulumi.CustomResource {
    /**
     * Get an existing Alertconfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertconfigState, opts?: pulumi.CustomResourceOptions): Alertconfig {
        return new Alertconfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/alertconfig:Alertconfig';

    /**
     * Returns true if the given object is an instance of Alertconfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Alertconfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Alertconfig.__pulumiType;
    }

    public readonly actionGroupRef!: pulumi.Output<string>;
    public readonly alertRules!: pulumi.Output<outputs.AlertconfigAlertRule[]>;
    public readonly autoscaleAlert!: pulumi.Output<string>;
    public readonly category!: pulumi.Output<string>;
    public readonly configpbAttributes!: pulumi.Output<outputs.AlertconfigConfigpbAttribute[] | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<string | undefined>;
    public readonly expiryTime!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly objUuid!: pulumi.Output<string>;
    public readonly objectType!: pulumi.Output<string>;
    public readonly recommendation!: pulumi.Output<string>;
    public readonly rollingWindow!: pulumi.Output<string | undefined>;
    public readonly source!: pulumi.Output<string>;
    public readonly summary!: pulumi.Output<string>;
    public readonly tenantRef!: pulumi.Output<string>;
    public readonly threshold!: pulumi.Output<string | undefined>;
    public readonly throttle!: pulumi.Output<string | undefined>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Alertconfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertconfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertconfigArgs | AlertconfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertconfigState | undefined;
            resourceInputs["actionGroupRef"] = state ? state.actionGroupRef : undefined;
            resourceInputs["alertRules"] = state ? state.alertRules : undefined;
            resourceInputs["autoscaleAlert"] = state ? state.autoscaleAlert : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["expiryTime"] = state ? state.expiryTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objUuid"] = state ? state.objUuid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["recommendation"] = state ? state.recommendation : undefined;
            resourceInputs["rollingWindow"] = state ? state.rollingWindow : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["summary"] = state ? state.summary : undefined;
            resourceInputs["tenantRef"] = state ? state.tenantRef : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
            resourceInputs["throttle"] = state ? state.throttle : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AlertconfigArgs | undefined;
            if ((!args || args.alertRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alertRules'");
            }
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["actionGroupRef"] = args ? args.actionGroupRef : undefined;
            resourceInputs["alertRules"] = args ? args.alertRules : undefined;
            resourceInputs["autoscaleAlert"] = args ? args.autoscaleAlert : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["expiryTime"] = args ? args.expiryTime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objUuid"] = args ? args.objUuid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["recommendation"] = args ? args.recommendation : undefined;
            resourceInputs["rollingWindow"] = args ? args.rollingWindow : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["summary"] = args ? args.summary : undefined;
            resourceInputs["tenantRef"] = args ? args.tenantRef : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["throttle"] = args ? args.throttle : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Alertconfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Alertconfig resources.
 */
export interface AlertconfigState {
    actionGroupRef?: pulumi.Input<string>;
    alertRules?: pulumi.Input<pulumi.Input<inputs.AlertconfigAlertRule>[]>;
    autoscaleAlert?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.AlertconfigConfigpbAttribute>[]>;
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<string>;
    expiryTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objUuid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    recommendation?: pulumi.Input<string>;
    rollingWindow?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    threshold?: pulumi.Input<string>;
    throttle?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Alertconfig resource.
 */
export interface AlertconfigArgs {
    actionGroupRef?: pulumi.Input<string>;
    alertRules: pulumi.Input<pulumi.Input<inputs.AlertconfigAlertRule>[]>;
    autoscaleAlert?: pulumi.Input<string>;
    category: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.AlertconfigConfigpbAttribute>[]>;
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<string>;
    expiryTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objUuid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    recommendation?: pulumi.Input<string>;
    rollingWindow?: pulumi.Input<string>;
    source: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    threshold?: pulumi.Input<string>;
    throttle?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
