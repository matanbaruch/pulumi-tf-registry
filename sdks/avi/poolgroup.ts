// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Poolgroup extends pulumi.CustomResource {
    /**
     * Get an existing Poolgroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PoolgroupState, opts?: pulumi.CustomResourceOptions): Poolgroup {
        return new Poolgroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/poolgroup:Poolgroup';

    /**
     * Returns true if the given object is an instance of Poolgroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Poolgroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Poolgroup.__pulumiType;
    }

    public readonly cloudConfigCksum!: pulumi.Output<string>;
    public readonly cloudRef!: pulumi.Output<string>;
    public readonly configpbAttributes!: pulumi.Output<outputs.PoolgroupConfigpbAttribute[] | undefined>;
    public readonly createdBy!: pulumi.Output<string>;
    public readonly deactivatePrimaryPoolOnDown!: pulumi.Output<string | undefined>;
    public readonly deploymentPolicyRef!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly failActions!: pulumi.Output<outputs.PoolgroupFailAction[] | undefined>;
    public readonly implicitPriorityLabels!: pulumi.Output<string | undefined>;
    public readonly markers!: pulumi.Output<outputs.PoolgroupMarker[] | undefined>;
    public readonly members!: pulumi.Output<outputs.PoolgroupMember[] | undefined>;
    public readonly minServers!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly priorityLabelsRef!: pulumi.Output<string>;
    public readonly serviceMetadata!: pulumi.Output<string>;
    public readonly tenantRef!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Poolgroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PoolgroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PoolgroupArgs | PoolgroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PoolgroupState | undefined;
            resourceInputs["cloudConfigCksum"] = state ? state.cloudConfigCksum : undefined;
            resourceInputs["cloudRef"] = state ? state.cloudRef : undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["deactivatePrimaryPoolOnDown"] = state ? state.deactivatePrimaryPoolOnDown : undefined;
            resourceInputs["deploymentPolicyRef"] = state ? state.deploymentPolicyRef : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["failActions"] = state ? state.failActions : undefined;
            resourceInputs["implicitPriorityLabels"] = state ? state.implicitPriorityLabels : undefined;
            resourceInputs["markers"] = state ? state.markers : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["minServers"] = state ? state.minServers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priorityLabelsRef"] = state ? state.priorityLabelsRef : undefined;
            resourceInputs["serviceMetadata"] = state ? state.serviceMetadata : undefined;
            resourceInputs["tenantRef"] = state ? state.tenantRef : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as PoolgroupArgs | undefined;
            resourceInputs["cloudConfigCksum"] = args ? args.cloudConfigCksum : undefined;
            resourceInputs["cloudRef"] = args ? args.cloudRef : undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["deactivatePrimaryPoolOnDown"] = args ? args.deactivatePrimaryPoolOnDown : undefined;
            resourceInputs["deploymentPolicyRef"] = args ? args.deploymentPolicyRef : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["failActions"] = args ? args.failActions : undefined;
            resourceInputs["implicitPriorityLabels"] = args ? args.implicitPriorityLabels : undefined;
            resourceInputs["markers"] = args ? args.markers : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["minServers"] = args ? args.minServers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priorityLabelsRef"] = args ? args.priorityLabelsRef : undefined;
            resourceInputs["serviceMetadata"] = args ? args.serviceMetadata : undefined;
            resourceInputs["tenantRef"] = args ? args.tenantRef : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Poolgroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Poolgroup resources.
 */
export interface PoolgroupState {
    cloudConfigCksum?: pulumi.Input<string>;
    cloudRef?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.PoolgroupConfigpbAttribute>[]>;
    createdBy?: pulumi.Input<string>;
    deactivatePrimaryPoolOnDown?: pulumi.Input<string>;
    deploymentPolicyRef?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    failActions?: pulumi.Input<pulumi.Input<inputs.PoolgroupFailAction>[]>;
    implicitPriorityLabels?: pulumi.Input<string>;
    markers?: pulumi.Input<pulumi.Input<inputs.PoolgroupMarker>[]>;
    members?: pulumi.Input<pulumi.Input<inputs.PoolgroupMember>[]>;
    minServers?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priorityLabelsRef?: pulumi.Input<string>;
    serviceMetadata?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Poolgroup resource.
 */
export interface PoolgroupArgs {
    cloudConfigCksum?: pulumi.Input<string>;
    cloudRef?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.PoolgroupConfigpbAttribute>[]>;
    createdBy?: pulumi.Input<string>;
    deactivatePrimaryPoolOnDown?: pulumi.Input<string>;
    deploymentPolicyRef?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    failActions?: pulumi.Input<pulumi.Input<inputs.PoolgroupFailAction>[]>;
    implicitPriorityLabels?: pulumi.Input<string>;
    markers?: pulumi.Input<pulumi.Input<inputs.PoolgroupMarker>[]>;
    members?: pulumi.Input<pulumi.Input<inputs.PoolgroupMember>[]>;
    minServers?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priorityLabelsRef?: pulumi.Input<string>;
    serviceMetadata?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
