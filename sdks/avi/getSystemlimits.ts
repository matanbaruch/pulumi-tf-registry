// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemlimits(args?: GetSystemlimitsArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemlimitsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("avi:index/getSystemlimits:getSystemlimits", {
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemlimits.
 */
export interface GetSystemlimitsArgs {
    id?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getSystemlimits.
 */
export interface GetSystemlimitsResult {
    readonly configpbAttributes: outputs.GetSystemlimitsConfigpbAttribute[];
    readonly controllerLimits: outputs.GetSystemlimitsControllerLimit[];
    readonly controllerSizes: outputs.GetSystemlimitsControllerSize[];
    readonly id: string;
    readonly serviceengineLimits: outputs.GetSystemlimitsServiceengineLimit[];
    readonly uuid: string;
}
export function getSystemlimitsOutput(args?: GetSystemlimitsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemlimitsResult> {
    return pulumi.output(args).apply((a: any) => getSystemlimits(a, opts))
}

/**
 * A collection of arguments for invoking getSystemlimits.
 */
export interface GetSystemlimitsOutputArgs {
    id?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
