// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Icapprofile extends pulumi.CustomResource {
    /**
     * Get an existing Icapprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IcapprofileState, opts?: pulumi.CustomResourceOptions): Icapprofile {
        return new Icapprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/icapprofile:Icapprofile';

    /**
     * Returns true if the given object is an instance of Icapprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Icapprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Icapprofile.__pulumiType;
    }

    public readonly allow204!: pulumi.Output<string | undefined>;
    public readonly bufferSize!: pulumi.Output<string | undefined>;
    public readonly bufferSizeExceedAction!: pulumi.Output<string | undefined>;
    public readonly cloudRef!: pulumi.Output<string>;
    public readonly configpbAttributes!: pulumi.Output<outputs.IcapprofileConfigpbAttribute[] | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly enablePreview!: pulumi.Output<string | undefined>;
    public readonly failAction!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nsxDefenderConfigs!: pulumi.Output<outputs.IcapprofileNsxDefenderConfig[] | undefined>;
    public readonly poolGroupRef!: pulumi.Output<string>;
    public readonly previewSize!: pulumi.Output<string | undefined>;
    public readonly responseTimeout!: pulumi.Output<string | undefined>;
    public readonly serviceUri!: pulumi.Output<string>;
    public readonly slowResponseWarningThreshold!: pulumi.Output<string | undefined>;
    public readonly tenantRef!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly vendor!: pulumi.Output<string | undefined>;

    /**
     * Create a Icapprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IcapprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IcapprofileArgs | IcapprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IcapprofileState | undefined;
            resourceInputs["allow204"] = state ? state.allow204 : undefined;
            resourceInputs["bufferSize"] = state ? state.bufferSize : undefined;
            resourceInputs["bufferSizeExceedAction"] = state ? state.bufferSizeExceedAction : undefined;
            resourceInputs["cloudRef"] = state ? state.cloudRef : undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enablePreview"] = state ? state.enablePreview : undefined;
            resourceInputs["failAction"] = state ? state.failAction : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nsxDefenderConfigs"] = state ? state.nsxDefenderConfigs : undefined;
            resourceInputs["poolGroupRef"] = state ? state.poolGroupRef : undefined;
            resourceInputs["previewSize"] = state ? state.previewSize : undefined;
            resourceInputs["responseTimeout"] = state ? state.responseTimeout : undefined;
            resourceInputs["serviceUri"] = state ? state.serviceUri : undefined;
            resourceInputs["slowResponseWarningThreshold"] = state ? state.slowResponseWarningThreshold : undefined;
            resourceInputs["tenantRef"] = state ? state.tenantRef : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
        } else {
            const args = argsOrState as IcapprofileArgs | undefined;
            if ((!args || args.poolGroupRef === undefined) && !opts.urn) {
                throw new Error("Missing required property 'poolGroupRef'");
            }
            if ((!args || args.serviceUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceUri'");
            }
            resourceInputs["allow204"] = args ? args.allow204 : undefined;
            resourceInputs["bufferSize"] = args ? args.bufferSize : undefined;
            resourceInputs["bufferSizeExceedAction"] = args ? args.bufferSizeExceedAction : undefined;
            resourceInputs["cloudRef"] = args ? args.cloudRef : undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enablePreview"] = args ? args.enablePreview : undefined;
            resourceInputs["failAction"] = args ? args.failAction : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nsxDefenderConfigs"] = args ? args.nsxDefenderConfigs : undefined;
            resourceInputs["poolGroupRef"] = args ? args.poolGroupRef : undefined;
            resourceInputs["previewSize"] = args ? args.previewSize : undefined;
            resourceInputs["responseTimeout"] = args ? args.responseTimeout : undefined;
            resourceInputs["serviceUri"] = args ? args.serviceUri : undefined;
            resourceInputs["slowResponseWarningThreshold"] = args ? args.slowResponseWarningThreshold : undefined;
            resourceInputs["tenantRef"] = args ? args.tenantRef : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vendor"] = args ? args.vendor : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Icapprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Icapprofile resources.
 */
export interface IcapprofileState {
    allow204?: pulumi.Input<string>;
    bufferSize?: pulumi.Input<string>;
    bufferSizeExceedAction?: pulumi.Input<string>;
    cloudRef?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.IcapprofileConfigpbAttribute>[]>;
    description?: pulumi.Input<string>;
    enablePreview?: pulumi.Input<string>;
    failAction?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nsxDefenderConfigs?: pulumi.Input<pulumi.Input<inputs.IcapprofileNsxDefenderConfig>[]>;
    poolGroupRef?: pulumi.Input<string>;
    previewSize?: pulumi.Input<string>;
    responseTimeout?: pulumi.Input<string>;
    serviceUri?: pulumi.Input<string>;
    slowResponseWarningThreshold?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Icapprofile resource.
 */
export interface IcapprofileArgs {
    allow204?: pulumi.Input<string>;
    bufferSize?: pulumi.Input<string>;
    bufferSizeExceedAction?: pulumi.Input<string>;
    cloudRef?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.IcapprofileConfigpbAttribute>[]>;
    description?: pulumi.Input<string>;
    enablePreview?: pulumi.Input<string>;
    failAction?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nsxDefenderConfigs?: pulumi.Input<pulumi.Input<inputs.IcapprofileNsxDefenderConfig>[]>;
    poolGroupRef: pulumi.Input<string>;
    previewSize?: pulumi.Input<string>;
    responseTimeout?: pulumi.Input<string>;
    serviceUri: pulumi.Input<string>;
    slowResponseWarningThreshold?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}
