// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getControllerportalregistration(args?: GetControllerportalregistrationArgs, opts?: pulumi.InvokeOptions): Promise<GetControllerportalregistrationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("avi:index/getControllerportalregistration:getControllerportalregistration", {
        "id": args.id,
        "name": args.name,
        "tenantRef": args.tenantRef,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getControllerportalregistration.
 */
export interface GetControllerportalregistrationArgs {
    id?: string;
    name?: string;
    tenantRef?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getControllerportalregistration.
 */
export interface GetControllerportalregistrationResult {
    readonly assets: outputs.GetControllerportalregistrationAsset[];
    readonly id: string;
    readonly name: string;
    readonly portalAuths: outputs.GetControllerportalregistrationPortalAuth[];
    readonly tenantRef: string;
    readonly uuid: string;
}
export function getControllerportalregistrationOutput(args?: GetControllerportalregistrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetControllerportalregistrationResult> {
    return pulumi.output(args).apply((a: any) => getControllerportalregistration(a, opts))
}

/**
 * A collection of arguments for invoking getControllerportalregistration.
 */
export interface GetControllerportalregistrationOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
