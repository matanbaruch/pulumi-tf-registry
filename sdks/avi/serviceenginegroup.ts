// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Serviceenginegroup extends pulumi.CustomResource {
    /**
     * Get an existing Serviceenginegroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceenginegroupState, opts?: pulumi.CustomResourceOptions): Serviceenginegroup {
        return new Serviceenginegroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/serviceenginegroup:Serviceenginegroup';

    /**
     * Returns true if the given object is an instance of Serviceenginegroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Serviceenginegroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Serviceenginegroup.__pulumiType;
    }

    public readonly acceleratedNetworking!: pulumi.Output<string>;
    public readonly activeStandby!: pulumi.Output<string | undefined>;
    public readonly aggressiveFailureDetection!: pulumi.Output<string | undefined>;
    public readonly algo!: pulumi.Output<string | undefined>;
    public readonly allowBurst!: pulumi.Output<string>;
    public readonly appCachePercent!: pulumi.Output<string | undefined>;
    public readonly appCacheThreshold!: pulumi.Output<string | undefined>;
    public readonly appLearningMemoryPercent!: pulumi.Output<string | undefined>;
    public readonly archiveShmLimit!: pulumi.Output<string | undefined>;
    public readonly asyncSsl!: pulumi.Output<string | undefined>;
    public readonly asyncSslThreads!: pulumi.Output<string | undefined>;
    public readonly autoRebalance!: pulumi.Output<string | undefined>;
    public readonly autoRebalanceCapacityPerSes!: pulumi.Output<number[] | undefined>;
    public readonly autoRebalanceCriterias!: pulumi.Output<string[] | undefined>;
    public readonly autoRebalanceInterval!: pulumi.Output<string | undefined>;
    public readonly autoRedistributeActiveStandbyLoad!: pulumi.Output<string | undefined>;
    public readonly availabilityZoneRefs!: pulumi.Output<string[] | undefined>;
    public readonly baremetalDispatcherHandlesFlows!: pulumi.Output<string | undefined>;
    public readonly bgpPeerMonitorFailoverEnabled!: pulumi.Output<string | undefined>;
    public readonly bgpStateUpdateInterval!: pulumi.Output<string | undefined>;
    public readonly bufferSe!: pulumi.Output<string | undefined>;
    public readonly cloudRef!: pulumi.Output<string>;
    public readonly compressIpRulesForEachNsSubnet!: pulumi.Output<string | undefined>;
    public readonly configDebugsOnAllCores!: pulumi.Output<string | undefined>;
    public readonly configpbAttributes!: pulumi.Output<outputs.ServiceenginegroupConfigpbAttribute[] | undefined>;
    public readonly connectionMemoryPercentage!: pulumi.Output<string | undefined>;
    public readonly coreShmAppCache!: pulumi.Output<string | undefined>;
    public readonly coreShmAppLearning!: pulumi.Output<string | undefined>;
    public readonly cpuReserve!: pulumi.Output<string | undefined>;
    public readonly cpuSocketAffinity!: pulumi.Output<string | undefined>;
    public readonly customSecuritygroupsDatas!: pulumi.Output<string[] | undefined>;
    public readonly customSecuritygroupsMgmts!: pulumi.Output<string[] | undefined>;
    public readonly customTags!: pulumi.Output<outputs.ServiceenginegroupCustomTag[] | undefined>;
    public readonly dataNetworkId!: pulumi.Output<string>;
    public readonly datascriptTimeout!: pulumi.Output<string | undefined>;
    public readonly deactivateIpv6Discovery!: pulumi.Output<string>;
    public readonly deactivateKniFilteringAtDispatcher!: pulumi.Output<string>;
    public readonly dedicatedDispatcherCore!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly disableAviSecuritygroups!: pulumi.Output<string | undefined>;
    public readonly disableCsumOffloads!: pulumi.Output<string | undefined>;
    public readonly disableFlowProbes!: pulumi.Output<string | undefined>;
    public readonly disableGro!: pulumi.Output<string>;
    public readonly disableSeMemoryCheck!: pulumi.Output<string | undefined>;
    public readonly disableTso!: pulumi.Output<string | undefined>;
    public readonly diskPerSe!: pulumi.Output<string | undefined>;
    public readonly distributeLoadActiveStandby!: pulumi.Output<string | undefined>;
    public readonly distributeQueues!: pulumi.Output<string | undefined>;
    public readonly distributeVnics!: pulumi.Output<string | undefined>;
    public readonly downstreamSendTimeout!: pulumi.Output<string | undefined>;
    public readonly dpAggressiveDeqIntervalMsec!: pulumi.Output<string | undefined>;
    public readonly dpAggressiveEnqIntervalMsec!: pulumi.Output<string | undefined>;
    public readonly dpAggressiveHbFrequency!: pulumi.Output<string | undefined>;
    public readonly dpAggressiveHbTimeoutCount!: pulumi.Output<string | undefined>;
    public readonly dpDeqIntervalMsec!: pulumi.Output<string | undefined>;
    public readonly dpEnqIntervalMsec!: pulumi.Output<string | undefined>;
    public readonly dpHbFrequency!: pulumi.Output<string | undefined>;
    public readonly dpHbTimeoutCount!: pulumi.Output<string | undefined>;
    public readonly dpdkGroTimeoutInterval!: pulumi.Output<string | undefined>;
    public readonly enableGratarpPermanent!: pulumi.Output<string | undefined>;
    public readonly enableHsmLog!: pulumi.Output<string | undefined>;
    public readonly enableHsmPriming!: pulumi.Output<string | undefined>;
    public readonly enableMultiLb!: pulumi.Output<string | undefined>;
    public readonly enablePcapTxRing!: pulumi.Output<string>;
    public readonly ephemeralPortrangeEnd!: pulumi.Output<string>;
    public readonly ephemeralPortrangeStart!: pulumi.Output<string>;
    public readonly extraConfigMultiplier!: pulumi.Output<string | undefined>;
    public readonly extraSharedConfigMemory!: pulumi.Output<string | undefined>;
    public readonly flowTableNewSynMaxEntries!: pulumi.Output<string | undefined>;
    public readonly freeListSize!: pulumi.Output<string | undefined>;
    public readonly gcpConfigs!: pulumi.Output<outputs.ServiceenginegroupGcpConfig[] | undefined>;
    public readonly gratarpPermanentPeriodicity!: pulumi.Output<string | undefined>;
    public readonly grpcChannelConnectTimeout!: pulumi.Output<string | undefined>;
    public readonly haMode!: pulumi.Output<string | undefined>;
    public readonly handlePerPktAttack!: pulumi.Output<string | undefined>;
    public readonly hardwaresecuritymodulegroupRef!: pulumi.Output<string>;
    public readonly heapMinimumConfigMemory!: pulumi.Output<string | undefined>;
    public readonly hmOnStandby!: pulumi.Output<string | undefined>;
    public readonly hostAttributeKey!: pulumi.Output<string>;
    public readonly hostAttributeValue!: pulumi.Output<string>;
    public readonly hostGatewayMonitor!: pulumi.Output<string | undefined>;
    public readonly httpRumConsoleLog!: pulumi.Output<string | undefined>;
    public readonly httpRumMinContentLength!: pulumi.Output<string | undefined>;
    public readonly hybridRssMode!: pulumi.Output<string | undefined>;
    public readonly hypervisor!: pulumi.Output<string>;
    public readonly ignoreDockerMacChange!: pulumi.Output<string | undefined>;
    public readonly ignoreRttThreshold!: pulumi.Output<string | undefined>;
    public readonly ingressAccessData!: pulumi.Output<string | undefined>;
    public readonly ingressAccessMgmt!: pulumi.Output<string | undefined>;
    public readonly instanceFlavor!: pulumi.Output<string>;
    public readonly instanceFlavorInfos!: pulumi.Output<outputs.ServiceenginegroupInstanceFlavorInfo[] | undefined>;
    public readonly iptables!: pulumi.Output<outputs.ServiceenginegroupIptable[] | undefined>;
    public readonly kniAllowedServerPorts!: pulumi.Output<outputs.ServiceenginegroupKniAllowedServerPort[] | undefined>;
    public readonly l7ConnsPerCore!: pulumi.Output<string | undefined>;
    public readonly l7ResvdListenConnsPerCore!: pulumi.Output<string | undefined>;
    public readonly labels!: pulumi.Output<outputs.ServiceenginegroupLabel[] | undefined>;
    public readonly lbactionNumRequestsToDispatch!: pulumi.Output<string | undefined>;
    public readonly lbactionRqPerRequestMaxRetries!: pulumi.Output<string | undefined>;
    public readonly leastLoadCoreSelection!: pulumi.Output<string | undefined>;
    public readonly licenseTier!: pulumi.Output<string>;
    public readonly licenseType!: pulumi.Output<string>;
    public readonly logAgentCompressLogs!: pulumi.Output<string | undefined>;
    public readonly logAgentDebugEnabled!: pulumi.Output<string | undefined>;
    public readonly logAgentFileSzAppl!: pulumi.Output<string | undefined>;
    public readonly logAgentFileSzConn!: pulumi.Output<string | undefined>;
    public readonly logAgentFileSzDebug!: pulumi.Output<string | undefined>;
    public readonly logAgentFileSzEvent!: pulumi.Output<string | undefined>;
    public readonly logAgentLogStorageMinSz!: pulumi.Output<string | undefined>;
    public readonly logAgentMaxConcurrentRsync!: pulumi.Output<string | undefined>;
    public readonly logAgentMaxStorageExcessPercent!: pulumi.Output<string | undefined>;
    public readonly logAgentMaxStorageIgnorePercent!: pulumi.Output<string | undefined>;
    public readonly logAgentMinStoragePerVs!: pulumi.Output<string | undefined>;
    public readonly logAgentSleepInterval!: pulumi.Output<string | undefined>;
    public readonly logAgentTraceEnabled!: pulumi.Output<string | undefined>;
    public readonly logAgentUnknownVsTimer!: pulumi.Output<string | undefined>;
    public readonly logDisksz!: pulumi.Output<string | undefined>;
    public readonly logMallocFailure!: pulumi.Output<string | undefined>;
    public readonly logMessageMaxFileListSize!: pulumi.Output<string | undefined>;
    public readonly markers!: pulumi.Output<outputs.ServiceenginegroupMarker[] | undefined>;
    public readonly maxConcurrentExternalHm!: pulumi.Output<string>;
    public readonly maxCpuUsage!: pulumi.Output<string | undefined>;
    public readonly maxMemoryPerMempool!: pulumi.Output<string | undefined>;
    public readonly maxNumHttpSessionsToStore!: pulumi.Output<string | undefined>;
    public readonly maxNumSeDps!: pulumi.Output<string>;
    public readonly maxPublicIpsPerLb!: pulumi.Output<string | undefined>;
    public readonly maxQueuesPerVnic!: pulumi.Output<string | undefined>;
    public readonly maxRulesPerLb!: pulumi.Output<string | undefined>;
    public readonly maxScaleoutPerVs!: pulumi.Output<string | undefined>;
    public readonly maxSe!: pulumi.Output<string | undefined>;
    public readonly maxSkbFrags!: pulumi.Output<string | undefined>;
    public readonly maxVsPerSe!: pulumi.Output<string | undefined>;
    public readonly memReserve!: pulumi.Output<string | undefined>;
    public readonly memoryForConfigUpdate!: pulumi.Output<string | undefined>;
    public readonly memoryPerSe!: pulumi.Output<string | undefined>;
    public readonly metricsCollectionMode!: pulumi.Output<string | undefined>;
    public readonly mgmtNetworkRef!: pulumi.Output<string>;
    public readonly mgmtSubnets!: pulumi.Output<outputs.ServiceenginegroupMgmtSubnet[] | undefined>;
    public readonly minCpuUsage!: pulumi.Output<string | undefined>;
    public readonly minScaleoutPerVs!: pulumi.Output<string | undefined>;
    public readonly minSe!: pulumi.Output<string | undefined>;
    public readonly minimumConnectionMemory!: pulumi.Output<string | undefined>;
    public readonly multicastEnable!: pulumi.Output<string | undefined>;
    public readonly nLogStreamingThreads!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly netlinkPollerThreads!: pulumi.Output<string | undefined>;
    public readonly netlinkSockBufSize!: pulumi.Output<string | undefined>;
    public readonly ngxFreeConnectionStack!: pulumi.Output<string | undefined>;
    public readonly nonSignificantLogThrottle!: pulumi.Output<string | undefined>;
    public readonly nsHelperDeqIntervalMsec!: pulumi.Output<string | undefined>;
    public readonly ntpSyncFailEvent!: pulumi.Output<string | undefined>;
    public readonly ntpSyncStatusInterval!: pulumi.Output<string | undefined>;
    public readonly numDispatcherCores!: pulumi.Output<string | undefined>;
    public readonly numDispatcherQueues!: pulumi.Output<string | undefined>;
    public readonly numFlowCoresSumChangesToIgnore!: pulumi.Output<string | undefined>;
    public readonly objsyncConfigs!: pulumi.Output<outputs.ServiceenginegroupObjsyncConfig[] | undefined>;
    public readonly objsyncPort!: pulumi.Output<string | undefined>;
    public readonly openstackAvailabilityZones!: pulumi.Output<string[] | undefined>;
    public readonly openstackMgmtNetworkName!: pulumi.Output<string>;
    public readonly openstackMgmtNetworkUuid!: pulumi.Output<string>;
    public readonly osReservedMemory!: pulumi.Output<string | undefined>;
    public readonly pathMtuDiscoveryV4!: pulumi.Output<string | undefined>;
    public readonly pathMtuDiscoveryV6!: pulumi.Output<string | undefined>;
    public readonly pcapTxMode!: pulumi.Output<string | undefined>;
    public readonly pcapTxRingRdBalancingFactor!: pulumi.Output<string | undefined>;
    public readonly perApp!: pulumi.Output<string | undefined>;
    public readonly perVsAdmissionControl!: pulumi.Output<string | undefined>;
    public readonly placementMode!: pulumi.Output<string | undefined>;
    public readonly realtimeSeMetrics!: pulumi.Output<outputs.ServiceenginegroupRealtimeSeMetric[] | undefined>;
    public readonly rebootOnPanic!: pulumi.Output<string | undefined>;
    public readonly replayVrfRoutesInterval!: pulumi.Output<string | undefined>;
    public readonly resyncTimeInterval!: pulumi.Output<string | undefined>;
    public readonly sdbFlushInterval!: pulumi.Output<string | undefined>;
    public readonly sdbPipelineSize!: pulumi.Output<string | undefined>;
    public readonly sdbScanCount!: pulumi.Output<string | undefined>;
    public readonly seBandwidthType!: pulumi.Output<string>;
    public readonly seDebugTraceSz!: pulumi.Output<string | undefined>;
    public readonly seDelayedFlowDelete!: pulumi.Output<string | undefined>;
    public readonly seDeprovisionDelay!: pulumi.Output<string | undefined>;
    public readonly seDosProfiles!: pulumi.Output<outputs.ServiceenginegroupSeDosProfile[] | undefined>;
    public readonly seDpHmDrops!: pulumi.Output<string | undefined>;
    public readonly seDpIfStatePollInterval!: pulumi.Output<string | undefined>;
    public readonly seDpIsolation!: pulumi.Output<string | undefined>;
    public readonly seDpIsolationNumNonDpCpus!: pulumi.Output<string | undefined>;
    public readonly seDpLogNfEnqueuePercent!: pulumi.Output<string | undefined>;
    public readonly seDpLogUdfEnqueuePercent!: pulumi.Output<string | undefined>;
    public readonly seDpMaxHbVersion!: pulumi.Output<string | undefined>;
    public readonly seDpVnicQueueStallEventSleep!: pulumi.Output<string | undefined>;
    public readonly seDpVnicQueueStallThreshold!: pulumi.Output<string | undefined>;
    public readonly seDpVnicQueueStallTimeout!: pulumi.Output<string | undefined>;
    public readonly seDpVnicRestartOnQueueStallCount!: pulumi.Output<string | undefined>;
    public readonly seDpVnicStallSeRestartWindow!: pulumi.Output<string | undefined>;
    public readonly seDpdkPmd!: pulumi.Output<string | undefined>;
    public readonly seDumpCoreOnAssert!: pulumi.Output<string | undefined>;
    public readonly seEmulatedCores!: pulumi.Output<string | undefined>;
    public readonly seFlowProbeRetries!: pulumi.Output<string | undefined>;
    public readonly seFlowProbeRetryTimer!: pulumi.Output<string | undefined>;
    public readonly seGroupAnalyticsPolicies!: pulumi.Output<outputs.ServiceenginegroupSeGroupAnalyticsPolicy[] | undefined>;
    public readonly seHyperthreadedMode!: pulumi.Output<string | undefined>;
    public readonly seIpEncapIpc!: pulumi.Output<string | undefined>;
    public readonly seKniBurstFactor!: pulumi.Output<string | undefined>;
    public readonly seL3EncapIpc!: pulumi.Output<string | undefined>;
    public readonly seLogBufferAppBlockingDequeue!: pulumi.Output<string | undefined>;
    public readonly seLogBufferConnBlockingDequeue!: pulumi.Output<string | undefined>;
    public readonly seLogBufferEventsBlockingDequeue!: pulumi.Output<string | undefined>;
    public readonly seLro!: pulumi.Output<string>;
    public readonly seMpRingRetryCount!: pulumi.Output<string | undefined>;
    public readonly seMtu!: pulumi.Output<string>;
    public readonly seNamePrefix!: pulumi.Output<string | undefined>;
    public readonly sePacketBufferMax!: pulumi.Output<string | undefined>;
    public readonly sePcapLookahead!: pulumi.Output<string | undefined>;
    public readonly sePcapPktCount!: pulumi.Output<string | undefined>;
    public readonly sePcapPktSz!: pulumi.Output<string | undefined>;
    public readonly sePcapQdiscBypass!: pulumi.Output<string | undefined>;
    public readonly sePcapReinitFrequency!: pulumi.Output<string | undefined>;
    public readonly sePcapReinitThreshold!: pulumi.Output<string | undefined>;
    public readonly seProbePort!: pulumi.Output<string | undefined>;
    public readonly seRlProps!: pulumi.Output<outputs.ServiceenginegroupSeRlProp[] | undefined>;
    public readonly seRumSamplingNavInterval!: pulumi.Output<string | undefined>;
    public readonly seRumSamplingNavPercent!: pulumi.Output<string | undefined>;
    public readonly seRumSamplingResInterval!: pulumi.Output<string | undefined>;
    public readonly seRumSamplingResPercent!: pulumi.Output<string | undefined>;
    public readonly seSbDedicatedCore!: pulumi.Output<string | undefined>;
    public readonly seSbThreads!: pulumi.Output<string | undefined>;
    public readonly seThreadMultiplier!: pulumi.Output<string | undefined>;
    public readonly seTimeTrackerProps!: pulumi.Output<outputs.ServiceenginegroupSeTimeTrackerProp[] | undefined>;
    public readonly seTracertPortRanges!: pulumi.Output<outputs.ServiceenginegroupSeTracertPortRange[] | undefined>;
    public readonly seTunnelMode!: pulumi.Output<string | undefined>;
    public readonly seTunnelUdpPort!: pulumi.Output<string | undefined>;
    public readonly seTxBatchSize!: pulumi.Output<string | undefined>;
    public readonly seTxqThreshold!: pulumi.Output<string | undefined>;
    public readonly seUdpEncapIpc!: pulumi.Output<string | undefined>;
    public readonly seUseDpdk!: pulumi.Output<string | undefined>;
    public readonly seVnicTxSwQueueFlushFrequency!: pulumi.Output<string | undefined>;
    public readonly seVnicTxSwQueueSize!: pulumi.Output<string | undefined>;
    public readonly seVsHbMaxPktsInBatch!: pulumi.Output<string | undefined>;
    public readonly seVsHbMaxVsInPkt!: pulumi.Output<string | undefined>;
    public readonly selfSeElection!: pulumi.Output<string | undefined>;
    public readonly sendSeReadyTimeout!: pulumi.Output<string | undefined>;
    public readonly serviceIp6Subnets!: pulumi.Output<outputs.ServiceenginegroupServiceIp6Subnet[] | undefined>;
    public readonly serviceIpSubnets!: pulumi.Output<outputs.ServiceenginegroupServiceIpSubnet[] | undefined>;
    public readonly shmMinimumConfigMemory!: pulumi.Output<string | undefined>;
    public readonly significantLogThrottle!: pulumi.Output<string | undefined>;
    public readonly sslPreprocessSniHostname!: pulumi.Output<string | undefined>;
    public readonly sslSessCachePerVs!: pulumi.Output<string | undefined>;
    public readonly tenantRef!: pulumi.Output<string>;
    public readonly transientSharedMemoryMax!: pulumi.Output<string | undefined>;
    public readonly udfLogThrottle!: pulumi.Output<string | undefined>;
    public readonly upstreamConnectTimeout!: pulumi.Output<string | undefined>;
    public readonly upstreamConnpoolEnable!: pulumi.Output<string | undefined>;
    public readonly upstreamReadTimeout!: pulumi.Output<string | undefined>;
    public readonly upstreamSendTimeout!: pulumi.Output<string | undefined>;
    public readonly useDpUtilForScaleout!: pulumi.Output<string | undefined>;
    public readonly useHyperthreadedCores!: pulumi.Output<string | undefined>;
    public readonly useLegacyNetlink!: pulumi.Output<string | undefined>;
    public readonly useObjsync!: pulumi.Output<string | undefined>;
    public readonly useStandardAlb!: pulumi.Output<string>;
    public readonly userAgentCacheConfigs!: pulumi.Output<outputs.ServiceenginegroupUserAgentCacheConfig[] | undefined>;
    public readonly userDefinedMetricAge!: pulumi.Output<string | undefined>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly vcenterClusters!: pulumi.Output<outputs.ServiceenginegroupVcenterCluster[] | undefined>;
    public readonly vcenterDatastoreMode!: pulumi.Output<string | undefined>;
    public readonly vcenterDatastores!: pulumi.Output<outputs.ServiceenginegroupVcenterDatastore[] | undefined>;
    public readonly vcenterDatastoresInclude!: pulumi.Output<string | undefined>;
    public readonly vcenterFolder!: pulumi.Output<string | undefined>;
    public readonly vcenterHosts!: pulumi.Output<outputs.ServiceenginegroupVcenterHost[] | undefined>;
    public readonly vcenterParkingVnicPg!: pulumi.Output<string>;
    public readonly vcenters!: pulumi.Output<outputs.ServiceenginegroupVcenter[] | undefined>;
    public readonly vcpusPerSe!: pulumi.Output<string | undefined>;
    public readonly vipAsgs!: pulumi.Output<outputs.ServiceenginegroupVipAsg[] | undefined>;
    public readonly vnicDhcpIpCheckInterval!: pulumi.Output<string | undefined>;
    public readonly vnicDhcpIpMaxRetries!: pulumi.Output<string | undefined>;
    public readonly vnicIpDeleteInterval!: pulumi.Output<string | undefined>;
    public readonly vnicProbeInterval!: pulumi.Output<string | undefined>;
    public readonly vnicRpcRetryInterval!: pulumi.Output<string | undefined>;
    public readonly vnicdbCmdHistorySize!: pulumi.Output<string | undefined>;
    public readonly vsHostRedundancy!: pulumi.Output<string | undefined>;
    public readonly vsScaleinTimeout!: pulumi.Output<string | undefined>;
    public readonly vsScaleinTimeoutForUpgrade!: pulumi.Output<string | undefined>;
    public readonly vsScaleoutTimeout!: pulumi.Output<string | undefined>;
    public readonly vsSePrimarySwitchoverAdditionalWaitTime!: pulumi.Output<string | undefined>;
    public readonly vsSeScaleinAdditionalWaitTime!: pulumi.Output<string | undefined>;
    public readonly vsSeScaleoutAdditionalWaitTime!: pulumi.Output<string | undefined>;
    public readonly vsSeScaleoutReadyTimeout!: pulumi.Output<string | undefined>;
    public readonly vsSwitchoverTimeout!: pulumi.Output<string | undefined>;
    public readonly vssPlacementEnabled!: pulumi.Output<string | undefined>;
    public readonly vssPlacements!: pulumi.Output<outputs.ServiceenginegroupVssPlacement[] | undefined>;
    public readonly wafMempool!: pulumi.Output<string | undefined>;
    public readonly wafMempoolSize!: pulumi.Output<string | undefined>;

    /**
     * Create a Serviceenginegroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceenginegroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceenginegroupArgs | ServiceenginegroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceenginegroupState | undefined;
            resourceInputs["acceleratedNetworking"] = state ? state.acceleratedNetworking : undefined;
            resourceInputs["activeStandby"] = state ? state.activeStandby : undefined;
            resourceInputs["aggressiveFailureDetection"] = state ? state.aggressiveFailureDetection : undefined;
            resourceInputs["algo"] = state ? state.algo : undefined;
            resourceInputs["allowBurst"] = state ? state.allowBurst : undefined;
            resourceInputs["appCachePercent"] = state ? state.appCachePercent : undefined;
            resourceInputs["appCacheThreshold"] = state ? state.appCacheThreshold : undefined;
            resourceInputs["appLearningMemoryPercent"] = state ? state.appLearningMemoryPercent : undefined;
            resourceInputs["archiveShmLimit"] = state ? state.archiveShmLimit : undefined;
            resourceInputs["asyncSsl"] = state ? state.asyncSsl : undefined;
            resourceInputs["asyncSslThreads"] = state ? state.asyncSslThreads : undefined;
            resourceInputs["autoRebalance"] = state ? state.autoRebalance : undefined;
            resourceInputs["autoRebalanceCapacityPerSes"] = state ? state.autoRebalanceCapacityPerSes : undefined;
            resourceInputs["autoRebalanceCriterias"] = state ? state.autoRebalanceCriterias : undefined;
            resourceInputs["autoRebalanceInterval"] = state ? state.autoRebalanceInterval : undefined;
            resourceInputs["autoRedistributeActiveStandbyLoad"] = state ? state.autoRedistributeActiveStandbyLoad : undefined;
            resourceInputs["availabilityZoneRefs"] = state ? state.availabilityZoneRefs : undefined;
            resourceInputs["baremetalDispatcherHandlesFlows"] = state ? state.baremetalDispatcherHandlesFlows : undefined;
            resourceInputs["bgpPeerMonitorFailoverEnabled"] = state ? state.bgpPeerMonitorFailoverEnabled : undefined;
            resourceInputs["bgpStateUpdateInterval"] = state ? state.bgpStateUpdateInterval : undefined;
            resourceInputs["bufferSe"] = state ? state.bufferSe : undefined;
            resourceInputs["cloudRef"] = state ? state.cloudRef : undefined;
            resourceInputs["compressIpRulesForEachNsSubnet"] = state ? state.compressIpRulesForEachNsSubnet : undefined;
            resourceInputs["configDebugsOnAllCores"] = state ? state.configDebugsOnAllCores : undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["connectionMemoryPercentage"] = state ? state.connectionMemoryPercentage : undefined;
            resourceInputs["coreShmAppCache"] = state ? state.coreShmAppCache : undefined;
            resourceInputs["coreShmAppLearning"] = state ? state.coreShmAppLearning : undefined;
            resourceInputs["cpuReserve"] = state ? state.cpuReserve : undefined;
            resourceInputs["cpuSocketAffinity"] = state ? state.cpuSocketAffinity : undefined;
            resourceInputs["customSecuritygroupsDatas"] = state ? state.customSecuritygroupsDatas : undefined;
            resourceInputs["customSecuritygroupsMgmts"] = state ? state.customSecuritygroupsMgmts : undefined;
            resourceInputs["customTags"] = state ? state.customTags : undefined;
            resourceInputs["dataNetworkId"] = state ? state.dataNetworkId : undefined;
            resourceInputs["datascriptTimeout"] = state ? state.datascriptTimeout : undefined;
            resourceInputs["deactivateIpv6Discovery"] = state ? state.deactivateIpv6Discovery : undefined;
            resourceInputs["deactivateKniFilteringAtDispatcher"] = state ? state.deactivateKniFilteringAtDispatcher : undefined;
            resourceInputs["dedicatedDispatcherCore"] = state ? state.dedicatedDispatcherCore : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableAviSecuritygroups"] = state ? state.disableAviSecuritygroups : undefined;
            resourceInputs["disableCsumOffloads"] = state ? state.disableCsumOffloads : undefined;
            resourceInputs["disableFlowProbes"] = state ? state.disableFlowProbes : undefined;
            resourceInputs["disableGro"] = state ? state.disableGro : undefined;
            resourceInputs["disableSeMemoryCheck"] = state ? state.disableSeMemoryCheck : undefined;
            resourceInputs["disableTso"] = state ? state.disableTso : undefined;
            resourceInputs["diskPerSe"] = state ? state.diskPerSe : undefined;
            resourceInputs["distributeLoadActiveStandby"] = state ? state.distributeLoadActiveStandby : undefined;
            resourceInputs["distributeQueues"] = state ? state.distributeQueues : undefined;
            resourceInputs["distributeVnics"] = state ? state.distributeVnics : undefined;
            resourceInputs["downstreamSendTimeout"] = state ? state.downstreamSendTimeout : undefined;
            resourceInputs["dpAggressiveDeqIntervalMsec"] = state ? state.dpAggressiveDeqIntervalMsec : undefined;
            resourceInputs["dpAggressiveEnqIntervalMsec"] = state ? state.dpAggressiveEnqIntervalMsec : undefined;
            resourceInputs["dpAggressiveHbFrequency"] = state ? state.dpAggressiveHbFrequency : undefined;
            resourceInputs["dpAggressiveHbTimeoutCount"] = state ? state.dpAggressiveHbTimeoutCount : undefined;
            resourceInputs["dpDeqIntervalMsec"] = state ? state.dpDeqIntervalMsec : undefined;
            resourceInputs["dpEnqIntervalMsec"] = state ? state.dpEnqIntervalMsec : undefined;
            resourceInputs["dpHbFrequency"] = state ? state.dpHbFrequency : undefined;
            resourceInputs["dpHbTimeoutCount"] = state ? state.dpHbTimeoutCount : undefined;
            resourceInputs["dpdkGroTimeoutInterval"] = state ? state.dpdkGroTimeoutInterval : undefined;
            resourceInputs["enableGratarpPermanent"] = state ? state.enableGratarpPermanent : undefined;
            resourceInputs["enableHsmLog"] = state ? state.enableHsmLog : undefined;
            resourceInputs["enableHsmPriming"] = state ? state.enableHsmPriming : undefined;
            resourceInputs["enableMultiLb"] = state ? state.enableMultiLb : undefined;
            resourceInputs["enablePcapTxRing"] = state ? state.enablePcapTxRing : undefined;
            resourceInputs["ephemeralPortrangeEnd"] = state ? state.ephemeralPortrangeEnd : undefined;
            resourceInputs["ephemeralPortrangeStart"] = state ? state.ephemeralPortrangeStart : undefined;
            resourceInputs["extraConfigMultiplier"] = state ? state.extraConfigMultiplier : undefined;
            resourceInputs["extraSharedConfigMemory"] = state ? state.extraSharedConfigMemory : undefined;
            resourceInputs["flowTableNewSynMaxEntries"] = state ? state.flowTableNewSynMaxEntries : undefined;
            resourceInputs["freeListSize"] = state ? state.freeListSize : undefined;
            resourceInputs["gcpConfigs"] = state ? state.gcpConfigs : undefined;
            resourceInputs["gratarpPermanentPeriodicity"] = state ? state.gratarpPermanentPeriodicity : undefined;
            resourceInputs["grpcChannelConnectTimeout"] = state ? state.grpcChannelConnectTimeout : undefined;
            resourceInputs["haMode"] = state ? state.haMode : undefined;
            resourceInputs["handlePerPktAttack"] = state ? state.handlePerPktAttack : undefined;
            resourceInputs["hardwaresecuritymodulegroupRef"] = state ? state.hardwaresecuritymodulegroupRef : undefined;
            resourceInputs["heapMinimumConfigMemory"] = state ? state.heapMinimumConfigMemory : undefined;
            resourceInputs["hmOnStandby"] = state ? state.hmOnStandby : undefined;
            resourceInputs["hostAttributeKey"] = state ? state.hostAttributeKey : undefined;
            resourceInputs["hostAttributeValue"] = state ? state.hostAttributeValue : undefined;
            resourceInputs["hostGatewayMonitor"] = state ? state.hostGatewayMonitor : undefined;
            resourceInputs["httpRumConsoleLog"] = state ? state.httpRumConsoleLog : undefined;
            resourceInputs["httpRumMinContentLength"] = state ? state.httpRumMinContentLength : undefined;
            resourceInputs["hybridRssMode"] = state ? state.hybridRssMode : undefined;
            resourceInputs["hypervisor"] = state ? state.hypervisor : undefined;
            resourceInputs["ignoreDockerMacChange"] = state ? state.ignoreDockerMacChange : undefined;
            resourceInputs["ignoreRttThreshold"] = state ? state.ignoreRttThreshold : undefined;
            resourceInputs["ingressAccessData"] = state ? state.ingressAccessData : undefined;
            resourceInputs["ingressAccessMgmt"] = state ? state.ingressAccessMgmt : undefined;
            resourceInputs["instanceFlavor"] = state ? state.instanceFlavor : undefined;
            resourceInputs["instanceFlavorInfos"] = state ? state.instanceFlavorInfos : undefined;
            resourceInputs["iptables"] = state ? state.iptables : undefined;
            resourceInputs["kniAllowedServerPorts"] = state ? state.kniAllowedServerPorts : undefined;
            resourceInputs["l7ConnsPerCore"] = state ? state.l7ConnsPerCore : undefined;
            resourceInputs["l7ResvdListenConnsPerCore"] = state ? state.l7ResvdListenConnsPerCore : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["lbactionNumRequestsToDispatch"] = state ? state.lbactionNumRequestsToDispatch : undefined;
            resourceInputs["lbactionRqPerRequestMaxRetries"] = state ? state.lbactionRqPerRequestMaxRetries : undefined;
            resourceInputs["leastLoadCoreSelection"] = state ? state.leastLoadCoreSelection : undefined;
            resourceInputs["licenseTier"] = state ? state.licenseTier : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["logAgentCompressLogs"] = state ? state.logAgentCompressLogs : undefined;
            resourceInputs["logAgentDebugEnabled"] = state ? state.logAgentDebugEnabled : undefined;
            resourceInputs["logAgentFileSzAppl"] = state ? state.logAgentFileSzAppl : undefined;
            resourceInputs["logAgentFileSzConn"] = state ? state.logAgentFileSzConn : undefined;
            resourceInputs["logAgentFileSzDebug"] = state ? state.logAgentFileSzDebug : undefined;
            resourceInputs["logAgentFileSzEvent"] = state ? state.logAgentFileSzEvent : undefined;
            resourceInputs["logAgentLogStorageMinSz"] = state ? state.logAgentLogStorageMinSz : undefined;
            resourceInputs["logAgentMaxConcurrentRsync"] = state ? state.logAgentMaxConcurrentRsync : undefined;
            resourceInputs["logAgentMaxStorageExcessPercent"] = state ? state.logAgentMaxStorageExcessPercent : undefined;
            resourceInputs["logAgentMaxStorageIgnorePercent"] = state ? state.logAgentMaxStorageIgnorePercent : undefined;
            resourceInputs["logAgentMinStoragePerVs"] = state ? state.logAgentMinStoragePerVs : undefined;
            resourceInputs["logAgentSleepInterval"] = state ? state.logAgentSleepInterval : undefined;
            resourceInputs["logAgentTraceEnabled"] = state ? state.logAgentTraceEnabled : undefined;
            resourceInputs["logAgentUnknownVsTimer"] = state ? state.logAgentUnknownVsTimer : undefined;
            resourceInputs["logDisksz"] = state ? state.logDisksz : undefined;
            resourceInputs["logMallocFailure"] = state ? state.logMallocFailure : undefined;
            resourceInputs["logMessageMaxFileListSize"] = state ? state.logMessageMaxFileListSize : undefined;
            resourceInputs["markers"] = state ? state.markers : undefined;
            resourceInputs["maxConcurrentExternalHm"] = state ? state.maxConcurrentExternalHm : undefined;
            resourceInputs["maxCpuUsage"] = state ? state.maxCpuUsage : undefined;
            resourceInputs["maxMemoryPerMempool"] = state ? state.maxMemoryPerMempool : undefined;
            resourceInputs["maxNumHttpSessionsToStore"] = state ? state.maxNumHttpSessionsToStore : undefined;
            resourceInputs["maxNumSeDps"] = state ? state.maxNumSeDps : undefined;
            resourceInputs["maxPublicIpsPerLb"] = state ? state.maxPublicIpsPerLb : undefined;
            resourceInputs["maxQueuesPerVnic"] = state ? state.maxQueuesPerVnic : undefined;
            resourceInputs["maxRulesPerLb"] = state ? state.maxRulesPerLb : undefined;
            resourceInputs["maxScaleoutPerVs"] = state ? state.maxScaleoutPerVs : undefined;
            resourceInputs["maxSe"] = state ? state.maxSe : undefined;
            resourceInputs["maxSkbFrags"] = state ? state.maxSkbFrags : undefined;
            resourceInputs["maxVsPerSe"] = state ? state.maxVsPerSe : undefined;
            resourceInputs["memReserve"] = state ? state.memReserve : undefined;
            resourceInputs["memoryForConfigUpdate"] = state ? state.memoryForConfigUpdate : undefined;
            resourceInputs["memoryPerSe"] = state ? state.memoryPerSe : undefined;
            resourceInputs["metricsCollectionMode"] = state ? state.metricsCollectionMode : undefined;
            resourceInputs["mgmtNetworkRef"] = state ? state.mgmtNetworkRef : undefined;
            resourceInputs["mgmtSubnets"] = state ? state.mgmtSubnets : undefined;
            resourceInputs["minCpuUsage"] = state ? state.minCpuUsage : undefined;
            resourceInputs["minScaleoutPerVs"] = state ? state.minScaleoutPerVs : undefined;
            resourceInputs["minSe"] = state ? state.minSe : undefined;
            resourceInputs["minimumConnectionMemory"] = state ? state.minimumConnectionMemory : undefined;
            resourceInputs["multicastEnable"] = state ? state.multicastEnable : undefined;
            resourceInputs["nLogStreamingThreads"] = state ? state.nLogStreamingThreads : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netlinkPollerThreads"] = state ? state.netlinkPollerThreads : undefined;
            resourceInputs["netlinkSockBufSize"] = state ? state.netlinkSockBufSize : undefined;
            resourceInputs["ngxFreeConnectionStack"] = state ? state.ngxFreeConnectionStack : undefined;
            resourceInputs["nonSignificantLogThrottle"] = state ? state.nonSignificantLogThrottle : undefined;
            resourceInputs["nsHelperDeqIntervalMsec"] = state ? state.nsHelperDeqIntervalMsec : undefined;
            resourceInputs["ntpSyncFailEvent"] = state ? state.ntpSyncFailEvent : undefined;
            resourceInputs["ntpSyncStatusInterval"] = state ? state.ntpSyncStatusInterval : undefined;
            resourceInputs["numDispatcherCores"] = state ? state.numDispatcherCores : undefined;
            resourceInputs["numDispatcherQueues"] = state ? state.numDispatcherQueues : undefined;
            resourceInputs["numFlowCoresSumChangesToIgnore"] = state ? state.numFlowCoresSumChangesToIgnore : undefined;
            resourceInputs["objsyncConfigs"] = state ? state.objsyncConfigs : undefined;
            resourceInputs["objsyncPort"] = state ? state.objsyncPort : undefined;
            resourceInputs["openstackAvailabilityZones"] = state ? state.openstackAvailabilityZones : undefined;
            resourceInputs["openstackMgmtNetworkName"] = state ? state.openstackMgmtNetworkName : undefined;
            resourceInputs["openstackMgmtNetworkUuid"] = state ? state.openstackMgmtNetworkUuid : undefined;
            resourceInputs["osReservedMemory"] = state ? state.osReservedMemory : undefined;
            resourceInputs["pathMtuDiscoveryV4"] = state ? state.pathMtuDiscoveryV4 : undefined;
            resourceInputs["pathMtuDiscoveryV6"] = state ? state.pathMtuDiscoveryV6 : undefined;
            resourceInputs["pcapTxMode"] = state ? state.pcapTxMode : undefined;
            resourceInputs["pcapTxRingRdBalancingFactor"] = state ? state.pcapTxRingRdBalancingFactor : undefined;
            resourceInputs["perApp"] = state ? state.perApp : undefined;
            resourceInputs["perVsAdmissionControl"] = state ? state.perVsAdmissionControl : undefined;
            resourceInputs["placementMode"] = state ? state.placementMode : undefined;
            resourceInputs["realtimeSeMetrics"] = state ? state.realtimeSeMetrics : undefined;
            resourceInputs["rebootOnPanic"] = state ? state.rebootOnPanic : undefined;
            resourceInputs["replayVrfRoutesInterval"] = state ? state.replayVrfRoutesInterval : undefined;
            resourceInputs["resyncTimeInterval"] = state ? state.resyncTimeInterval : undefined;
            resourceInputs["sdbFlushInterval"] = state ? state.sdbFlushInterval : undefined;
            resourceInputs["sdbPipelineSize"] = state ? state.sdbPipelineSize : undefined;
            resourceInputs["sdbScanCount"] = state ? state.sdbScanCount : undefined;
            resourceInputs["seBandwidthType"] = state ? state.seBandwidthType : undefined;
            resourceInputs["seDebugTraceSz"] = state ? state.seDebugTraceSz : undefined;
            resourceInputs["seDelayedFlowDelete"] = state ? state.seDelayedFlowDelete : undefined;
            resourceInputs["seDeprovisionDelay"] = state ? state.seDeprovisionDelay : undefined;
            resourceInputs["seDosProfiles"] = state ? state.seDosProfiles : undefined;
            resourceInputs["seDpHmDrops"] = state ? state.seDpHmDrops : undefined;
            resourceInputs["seDpIfStatePollInterval"] = state ? state.seDpIfStatePollInterval : undefined;
            resourceInputs["seDpIsolation"] = state ? state.seDpIsolation : undefined;
            resourceInputs["seDpIsolationNumNonDpCpus"] = state ? state.seDpIsolationNumNonDpCpus : undefined;
            resourceInputs["seDpLogNfEnqueuePercent"] = state ? state.seDpLogNfEnqueuePercent : undefined;
            resourceInputs["seDpLogUdfEnqueuePercent"] = state ? state.seDpLogUdfEnqueuePercent : undefined;
            resourceInputs["seDpMaxHbVersion"] = state ? state.seDpMaxHbVersion : undefined;
            resourceInputs["seDpVnicQueueStallEventSleep"] = state ? state.seDpVnicQueueStallEventSleep : undefined;
            resourceInputs["seDpVnicQueueStallThreshold"] = state ? state.seDpVnicQueueStallThreshold : undefined;
            resourceInputs["seDpVnicQueueStallTimeout"] = state ? state.seDpVnicQueueStallTimeout : undefined;
            resourceInputs["seDpVnicRestartOnQueueStallCount"] = state ? state.seDpVnicRestartOnQueueStallCount : undefined;
            resourceInputs["seDpVnicStallSeRestartWindow"] = state ? state.seDpVnicStallSeRestartWindow : undefined;
            resourceInputs["seDpdkPmd"] = state ? state.seDpdkPmd : undefined;
            resourceInputs["seDumpCoreOnAssert"] = state ? state.seDumpCoreOnAssert : undefined;
            resourceInputs["seEmulatedCores"] = state ? state.seEmulatedCores : undefined;
            resourceInputs["seFlowProbeRetries"] = state ? state.seFlowProbeRetries : undefined;
            resourceInputs["seFlowProbeRetryTimer"] = state ? state.seFlowProbeRetryTimer : undefined;
            resourceInputs["seGroupAnalyticsPolicies"] = state ? state.seGroupAnalyticsPolicies : undefined;
            resourceInputs["seHyperthreadedMode"] = state ? state.seHyperthreadedMode : undefined;
            resourceInputs["seIpEncapIpc"] = state ? state.seIpEncapIpc : undefined;
            resourceInputs["seKniBurstFactor"] = state ? state.seKniBurstFactor : undefined;
            resourceInputs["seL3EncapIpc"] = state ? state.seL3EncapIpc : undefined;
            resourceInputs["seLogBufferAppBlockingDequeue"] = state ? state.seLogBufferAppBlockingDequeue : undefined;
            resourceInputs["seLogBufferConnBlockingDequeue"] = state ? state.seLogBufferConnBlockingDequeue : undefined;
            resourceInputs["seLogBufferEventsBlockingDequeue"] = state ? state.seLogBufferEventsBlockingDequeue : undefined;
            resourceInputs["seLro"] = state ? state.seLro : undefined;
            resourceInputs["seMpRingRetryCount"] = state ? state.seMpRingRetryCount : undefined;
            resourceInputs["seMtu"] = state ? state.seMtu : undefined;
            resourceInputs["seNamePrefix"] = state ? state.seNamePrefix : undefined;
            resourceInputs["sePacketBufferMax"] = state ? state.sePacketBufferMax : undefined;
            resourceInputs["sePcapLookahead"] = state ? state.sePcapLookahead : undefined;
            resourceInputs["sePcapPktCount"] = state ? state.sePcapPktCount : undefined;
            resourceInputs["sePcapPktSz"] = state ? state.sePcapPktSz : undefined;
            resourceInputs["sePcapQdiscBypass"] = state ? state.sePcapQdiscBypass : undefined;
            resourceInputs["sePcapReinitFrequency"] = state ? state.sePcapReinitFrequency : undefined;
            resourceInputs["sePcapReinitThreshold"] = state ? state.sePcapReinitThreshold : undefined;
            resourceInputs["seProbePort"] = state ? state.seProbePort : undefined;
            resourceInputs["seRlProps"] = state ? state.seRlProps : undefined;
            resourceInputs["seRumSamplingNavInterval"] = state ? state.seRumSamplingNavInterval : undefined;
            resourceInputs["seRumSamplingNavPercent"] = state ? state.seRumSamplingNavPercent : undefined;
            resourceInputs["seRumSamplingResInterval"] = state ? state.seRumSamplingResInterval : undefined;
            resourceInputs["seRumSamplingResPercent"] = state ? state.seRumSamplingResPercent : undefined;
            resourceInputs["seSbDedicatedCore"] = state ? state.seSbDedicatedCore : undefined;
            resourceInputs["seSbThreads"] = state ? state.seSbThreads : undefined;
            resourceInputs["seThreadMultiplier"] = state ? state.seThreadMultiplier : undefined;
            resourceInputs["seTimeTrackerProps"] = state ? state.seTimeTrackerProps : undefined;
            resourceInputs["seTracertPortRanges"] = state ? state.seTracertPortRanges : undefined;
            resourceInputs["seTunnelMode"] = state ? state.seTunnelMode : undefined;
            resourceInputs["seTunnelUdpPort"] = state ? state.seTunnelUdpPort : undefined;
            resourceInputs["seTxBatchSize"] = state ? state.seTxBatchSize : undefined;
            resourceInputs["seTxqThreshold"] = state ? state.seTxqThreshold : undefined;
            resourceInputs["seUdpEncapIpc"] = state ? state.seUdpEncapIpc : undefined;
            resourceInputs["seUseDpdk"] = state ? state.seUseDpdk : undefined;
            resourceInputs["seVnicTxSwQueueFlushFrequency"] = state ? state.seVnicTxSwQueueFlushFrequency : undefined;
            resourceInputs["seVnicTxSwQueueSize"] = state ? state.seVnicTxSwQueueSize : undefined;
            resourceInputs["seVsHbMaxPktsInBatch"] = state ? state.seVsHbMaxPktsInBatch : undefined;
            resourceInputs["seVsHbMaxVsInPkt"] = state ? state.seVsHbMaxVsInPkt : undefined;
            resourceInputs["selfSeElection"] = state ? state.selfSeElection : undefined;
            resourceInputs["sendSeReadyTimeout"] = state ? state.sendSeReadyTimeout : undefined;
            resourceInputs["serviceIp6Subnets"] = state ? state.serviceIp6Subnets : undefined;
            resourceInputs["serviceIpSubnets"] = state ? state.serviceIpSubnets : undefined;
            resourceInputs["shmMinimumConfigMemory"] = state ? state.shmMinimumConfigMemory : undefined;
            resourceInputs["significantLogThrottle"] = state ? state.significantLogThrottle : undefined;
            resourceInputs["sslPreprocessSniHostname"] = state ? state.sslPreprocessSniHostname : undefined;
            resourceInputs["sslSessCachePerVs"] = state ? state.sslSessCachePerVs : undefined;
            resourceInputs["tenantRef"] = state ? state.tenantRef : undefined;
            resourceInputs["transientSharedMemoryMax"] = state ? state.transientSharedMemoryMax : undefined;
            resourceInputs["udfLogThrottle"] = state ? state.udfLogThrottle : undefined;
            resourceInputs["upstreamConnectTimeout"] = state ? state.upstreamConnectTimeout : undefined;
            resourceInputs["upstreamConnpoolEnable"] = state ? state.upstreamConnpoolEnable : undefined;
            resourceInputs["upstreamReadTimeout"] = state ? state.upstreamReadTimeout : undefined;
            resourceInputs["upstreamSendTimeout"] = state ? state.upstreamSendTimeout : undefined;
            resourceInputs["useDpUtilForScaleout"] = state ? state.useDpUtilForScaleout : undefined;
            resourceInputs["useHyperthreadedCores"] = state ? state.useHyperthreadedCores : undefined;
            resourceInputs["useLegacyNetlink"] = state ? state.useLegacyNetlink : undefined;
            resourceInputs["useObjsync"] = state ? state.useObjsync : undefined;
            resourceInputs["useStandardAlb"] = state ? state.useStandardAlb : undefined;
            resourceInputs["userAgentCacheConfigs"] = state ? state.userAgentCacheConfigs : undefined;
            resourceInputs["userDefinedMetricAge"] = state ? state.userDefinedMetricAge : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vcenterClusters"] = state ? state.vcenterClusters : undefined;
            resourceInputs["vcenterDatastoreMode"] = state ? state.vcenterDatastoreMode : undefined;
            resourceInputs["vcenterDatastores"] = state ? state.vcenterDatastores : undefined;
            resourceInputs["vcenterDatastoresInclude"] = state ? state.vcenterDatastoresInclude : undefined;
            resourceInputs["vcenterFolder"] = state ? state.vcenterFolder : undefined;
            resourceInputs["vcenterHosts"] = state ? state.vcenterHosts : undefined;
            resourceInputs["vcenterParkingVnicPg"] = state ? state.vcenterParkingVnicPg : undefined;
            resourceInputs["vcenters"] = state ? state.vcenters : undefined;
            resourceInputs["vcpusPerSe"] = state ? state.vcpusPerSe : undefined;
            resourceInputs["vipAsgs"] = state ? state.vipAsgs : undefined;
            resourceInputs["vnicDhcpIpCheckInterval"] = state ? state.vnicDhcpIpCheckInterval : undefined;
            resourceInputs["vnicDhcpIpMaxRetries"] = state ? state.vnicDhcpIpMaxRetries : undefined;
            resourceInputs["vnicIpDeleteInterval"] = state ? state.vnicIpDeleteInterval : undefined;
            resourceInputs["vnicProbeInterval"] = state ? state.vnicProbeInterval : undefined;
            resourceInputs["vnicRpcRetryInterval"] = state ? state.vnicRpcRetryInterval : undefined;
            resourceInputs["vnicdbCmdHistorySize"] = state ? state.vnicdbCmdHistorySize : undefined;
            resourceInputs["vsHostRedundancy"] = state ? state.vsHostRedundancy : undefined;
            resourceInputs["vsScaleinTimeout"] = state ? state.vsScaleinTimeout : undefined;
            resourceInputs["vsScaleinTimeoutForUpgrade"] = state ? state.vsScaleinTimeoutForUpgrade : undefined;
            resourceInputs["vsScaleoutTimeout"] = state ? state.vsScaleoutTimeout : undefined;
            resourceInputs["vsSePrimarySwitchoverAdditionalWaitTime"] = state ? state.vsSePrimarySwitchoverAdditionalWaitTime : undefined;
            resourceInputs["vsSeScaleinAdditionalWaitTime"] = state ? state.vsSeScaleinAdditionalWaitTime : undefined;
            resourceInputs["vsSeScaleoutAdditionalWaitTime"] = state ? state.vsSeScaleoutAdditionalWaitTime : undefined;
            resourceInputs["vsSeScaleoutReadyTimeout"] = state ? state.vsSeScaleoutReadyTimeout : undefined;
            resourceInputs["vsSwitchoverTimeout"] = state ? state.vsSwitchoverTimeout : undefined;
            resourceInputs["vssPlacementEnabled"] = state ? state.vssPlacementEnabled : undefined;
            resourceInputs["vssPlacements"] = state ? state.vssPlacements : undefined;
            resourceInputs["wafMempool"] = state ? state.wafMempool : undefined;
            resourceInputs["wafMempoolSize"] = state ? state.wafMempoolSize : undefined;
        } else {
            const args = argsOrState as ServiceenginegroupArgs | undefined;
            resourceInputs["acceleratedNetworking"] = args ? args.acceleratedNetworking : undefined;
            resourceInputs["activeStandby"] = args ? args.activeStandby : undefined;
            resourceInputs["aggressiveFailureDetection"] = args ? args.aggressiveFailureDetection : undefined;
            resourceInputs["algo"] = args ? args.algo : undefined;
            resourceInputs["allowBurst"] = args ? args.allowBurst : undefined;
            resourceInputs["appCachePercent"] = args ? args.appCachePercent : undefined;
            resourceInputs["appCacheThreshold"] = args ? args.appCacheThreshold : undefined;
            resourceInputs["appLearningMemoryPercent"] = args ? args.appLearningMemoryPercent : undefined;
            resourceInputs["archiveShmLimit"] = args ? args.archiveShmLimit : undefined;
            resourceInputs["asyncSsl"] = args ? args.asyncSsl : undefined;
            resourceInputs["asyncSslThreads"] = args ? args.asyncSslThreads : undefined;
            resourceInputs["autoRebalance"] = args ? args.autoRebalance : undefined;
            resourceInputs["autoRebalanceCapacityPerSes"] = args ? args.autoRebalanceCapacityPerSes : undefined;
            resourceInputs["autoRebalanceCriterias"] = args ? args.autoRebalanceCriterias : undefined;
            resourceInputs["autoRebalanceInterval"] = args ? args.autoRebalanceInterval : undefined;
            resourceInputs["autoRedistributeActiveStandbyLoad"] = args ? args.autoRedistributeActiveStandbyLoad : undefined;
            resourceInputs["availabilityZoneRefs"] = args ? args.availabilityZoneRefs : undefined;
            resourceInputs["baremetalDispatcherHandlesFlows"] = args ? args.baremetalDispatcherHandlesFlows : undefined;
            resourceInputs["bgpPeerMonitorFailoverEnabled"] = args ? args.bgpPeerMonitorFailoverEnabled : undefined;
            resourceInputs["bgpStateUpdateInterval"] = args ? args.bgpStateUpdateInterval : undefined;
            resourceInputs["bufferSe"] = args ? args.bufferSe : undefined;
            resourceInputs["cloudRef"] = args ? args.cloudRef : undefined;
            resourceInputs["compressIpRulesForEachNsSubnet"] = args ? args.compressIpRulesForEachNsSubnet : undefined;
            resourceInputs["configDebugsOnAllCores"] = args ? args.configDebugsOnAllCores : undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["connectionMemoryPercentage"] = args ? args.connectionMemoryPercentage : undefined;
            resourceInputs["coreShmAppCache"] = args ? args.coreShmAppCache : undefined;
            resourceInputs["coreShmAppLearning"] = args ? args.coreShmAppLearning : undefined;
            resourceInputs["cpuReserve"] = args ? args.cpuReserve : undefined;
            resourceInputs["cpuSocketAffinity"] = args ? args.cpuSocketAffinity : undefined;
            resourceInputs["customSecuritygroupsDatas"] = args ? args.customSecuritygroupsDatas : undefined;
            resourceInputs["customSecuritygroupsMgmts"] = args ? args.customSecuritygroupsMgmts : undefined;
            resourceInputs["customTags"] = args ? args.customTags : undefined;
            resourceInputs["dataNetworkId"] = args ? args.dataNetworkId : undefined;
            resourceInputs["datascriptTimeout"] = args ? args.datascriptTimeout : undefined;
            resourceInputs["deactivateIpv6Discovery"] = args ? args.deactivateIpv6Discovery : undefined;
            resourceInputs["deactivateKniFilteringAtDispatcher"] = args ? args.deactivateKniFilteringAtDispatcher : undefined;
            resourceInputs["dedicatedDispatcherCore"] = args ? args.dedicatedDispatcherCore : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableAviSecuritygroups"] = args ? args.disableAviSecuritygroups : undefined;
            resourceInputs["disableCsumOffloads"] = args ? args.disableCsumOffloads : undefined;
            resourceInputs["disableFlowProbes"] = args ? args.disableFlowProbes : undefined;
            resourceInputs["disableGro"] = args ? args.disableGro : undefined;
            resourceInputs["disableSeMemoryCheck"] = args ? args.disableSeMemoryCheck : undefined;
            resourceInputs["disableTso"] = args ? args.disableTso : undefined;
            resourceInputs["diskPerSe"] = args ? args.diskPerSe : undefined;
            resourceInputs["distributeLoadActiveStandby"] = args ? args.distributeLoadActiveStandby : undefined;
            resourceInputs["distributeQueues"] = args ? args.distributeQueues : undefined;
            resourceInputs["distributeVnics"] = args ? args.distributeVnics : undefined;
            resourceInputs["downstreamSendTimeout"] = args ? args.downstreamSendTimeout : undefined;
            resourceInputs["dpAggressiveDeqIntervalMsec"] = args ? args.dpAggressiveDeqIntervalMsec : undefined;
            resourceInputs["dpAggressiveEnqIntervalMsec"] = args ? args.dpAggressiveEnqIntervalMsec : undefined;
            resourceInputs["dpAggressiveHbFrequency"] = args ? args.dpAggressiveHbFrequency : undefined;
            resourceInputs["dpAggressiveHbTimeoutCount"] = args ? args.dpAggressiveHbTimeoutCount : undefined;
            resourceInputs["dpDeqIntervalMsec"] = args ? args.dpDeqIntervalMsec : undefined;
            resourceInputs["dpEnqIntervalMsec"] = args ? args.dpEnqIntervalMsec : undefined;
            resourceInputs["dpHbFrequency"] = args ? args.dpHbFrequency : undefined;
            resourceInputs["dpHbTimeoutCount"] = args ? args.dpHbTimeoutCount : undefined;
            resourceInputs["dpdkGroTimeoutInterval"] = args ? args.dpdkGroTimeoutInterval : undefined;
            resourceInputs["enableGratarpPermanent"] = args ? args.enableGratarpPermanent : undefined;
            resourceInputs["enableHsmLog"] = args ? args.enableHsmLog : undefined;
            resourceInputs["enableHsmPriming"] = args ? args.enableHsmPriming : undefined;
            resourceInputs["enableMultiLb"] = args ? args.enableMultiLb : undefined;
            resourceInputs["enablePcapTxRing"] = args ? args.enablePcapTxRing : undefined;
            resourceInputs["ephemeralPortrangeEnd"] = args ? args.ephemeralPortrangeEnd : undefined;
            resourceInputs["ephemeralPortrangeStart"] = args ? args.ephemeralPortrangeStart : undefined;
            resourceInputs["extraConfigMultiplier"] = args ? args.extraConfigMultiplier : undefined;
            resourceInputs["extraSharedConfigMemory"] = args ? args.extraSharedConfigMemory : undefined;
            resourceInputs["flowTableNewSynMaxEntries"] = args ? args.flowTableNewSynMaxEntries : undefined;
            resourceInputs["freeListSize"] = args ? args.freeListSize : undefined;
            resourceInputs["gcpConfigs"] = args ? args.gcpConfigs : undefined;
            resourceInputs["gratarpPermanentPeriodicity"] = args ? args.gratarpPermanentPeriodicity : undefined;
            resourceInputs["grpcChannelConnectTimeout"] = args ? args.grpcChannelConnectTimeout : undefined;
            resourceInputs["haMode"] = args ? args.haMode : undefined;
            resourceInputs["handlePerPktAttack"] = args ? args.handlePerPktAttack : undefined;
            resourceInputs["hardwaresecuritymodulegroupRef"] = args ? args.hardwaresecuritymodulegroupRef : undefined;
            resourceInputs["heapMinimumConfigMemory"] = args ? args.heapMinimumConfigMemory : undefined;
            resourceInputs["hmOnStandby"] = args ? args.hmOnStandby : undefined;
            resourceInputs["hostAttributeKey"] = args ? args.hostAttributeKey : undefined;
            resourceInputs["hostAttributeValue"] = args ? args.hostAttributeValue : undefined;
            resourceInputs["hostGatewayMonitor"] = args ? args.hostGatewayMonitor : undefined;
            resourceInputs["httpRumConsoleLog"] = args ? args.httpRumConsoleLog : undefined;
            resourceInputs["httpRumMinContentLength"] = args ? args.httpRumMinContentLength : undefined;
            resourceInputs["hybridRssMode"] = args ? args.hybridRssMode : undefined;
            resourceInputs["hypervisor"] = args ? args.hypervisor : undefined;
            resourceInputs["ignoreDockerMacChange"] = args ? args.ignoreDockerMacChange : undefined;
            resourceInputs["ignoreRttThreshold"] = args ? args.ignoreRttThreshold : undefined;
            resourceInputs["ingressAccessData"] = args ? args.ingressAccessData : undefined;
            resourceInputs["ingressAccessMgmt"] = args ? args.ingressAccessMgmt : undefined;
            resourceInputs["instanceFlavor"] = args ? args.instanceFlavor : undefined;
            resourceInputs["instanceFlavorInfos"] = args ? args.instanceFlavorInfos : undefined;
            resourceInputs["iptables"] = args ? args.iptables : undefined;
            resourceInputs["kniAllowedServerPorts"] = args ? args.kniAllowedServerPorts : undefined;
            resourceInputs["l7ConnsPerCore"] = args ? args.l7ConnsPerCore : undefined;
            resourceInputs["l7ResvdListenConnsPerCore"] = args ? args.l7ResvdListenConnsPerCore : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lbactionNumRequestsToDispatch"] = args ? args.lbactionNumRequestsToDispatch : undefined;
            resourceInputs["lbactionRqPerRequestMaxRetries"] = args ? args.lbactionRqPerRequestMaxRetries : undefined;
            resourceInputs["leastLoadCoreSelection"] = args ? args.leastLoadCoreSelection : undefined;
            resourceInputs["licenseTier"] = args ? args.licenseTier : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["logAgentCompressLogs"] = args ? args.logAgentCompressLogs : undefined;
            resourceInputs["logAgentDebugEnabled"] = args ? args.logAgentDebugEnabled : undefined;
            resourceInputs["logAgentFileSzAppl"] = args ? args.logAgentFileSzAppl : undefined;
            resourceInputs["logAgentFileSzConn"] = args ? args.logAgentFileSzConn : undefined;
            resourceInputs["logAgentFileSzDebug"] = args ? args.logAgentFileSzDebug : undefined;
            resourceInputs["logAgentFileSzEvent"] = args ? args.logAgentFileSzEvent : undefined;
            resourceInputs["logAgentLogStorageMinSz"] = args ? args.logAgentLogStorageMinSz : undefined;
            resourceInputs["logAgentMaxConcurrentRsync"] = args ? args.logAgentMaxConcurrentRsync : undefined;
            resourceInputs["logAgentMaxStorageExcessPercent"] = args ? args.logAgentMaxStorageExcessPercent : undefined;
            resourceInputs["logAgentMaxStorageIgnorePercent"] = args ? args.logAgentMaxStorageIgnorePercent : undefined;
            resourceInputs["logAgentMinStoragePerVs"] = args ? args.logAgentMinStoragePerVs : undefined;
            resourceInputs["logAgentSleepInterval"] = args ? args.logAgentSleepInterval : undefined;
            resourceInputs["logAgentTraceEnabled"] = args ? args.logAgentTraceEnabled : undefined;
            resourceInputs["logAgentUnknownVsTimer"] = args ? args.logAgentUnknownVsTimer : undefined;
            resourceInputs["logDisksz"] = args ? args.logDisksz : undefined;
            resourceInputs["logMallocFailure"] = args ? args.logMallocFailure : undefined;
            resourceInputs["logMessageMaxFileListSize"] = args ? args.logMessageMaxFileListSize : undefined;
            resourceInputs["markers"] = args ? args.markers : undefined;
            resourceInputs["maxConcurrentExternalHm"] = args ? args.maxConcurrentExternalHm : undefined;
            resourceInputs["maxCpuUsage"] = args ? args.maxCpuUsage : undefined;
            resourceInputs["maxMemoryPerMempool"] = args ? args.maxMemoryPerMempool : undefined;
            resourceInputs["maxNumHttpSessionsToStore"] = args ? args.maxNumHttpSessionsToStore : undefined;
            resourceInputs["maxNumSeDps"] = args ? args.maxNumSeDps : undefined;
            resourceInputs["maxPublicIpsPerLb"] = args ? args.maxPublicIpsPerLb : undefined;
            resourceInputs["maxQueuesPerVnic"] = args ? args.maxQueuesPerVnic : undefined;
            resourceInputs["maxRulesPerLb"] = args ? args.maxRulesPerLb : undefined;
            resourceInputs["maxScaleoutPerVs"] = args ? args.maxScaleoutPerVs : undefined;
            resourceInputs["maxSe"] = args ? args.maxSe : undefined;
            resourceInputs["maxSkbFrags"] = args ? args.maxSkbFrags : undefined;
            resourceInputs["maxVsPerSe"] = args ? args.maxVsPerSe : undefined;
            resourceInputs["memReserve"] = args ? args.memReserve : undefined;
            resourceInputs["memoryForConfigUpdate"] = args ? args.memoryForConfigUpdate : undefined;
            resourceInputs["memoryPerSe"] = args ? args.memoryPerSe : undefined;
            resourceInputs["metricsCollectionMode"] = args ? args.metricsCollectionMode : undefined;
            resourceInputs["mgmtNetworkRef"] = args ? args.mgmtNetworkRef : undefined;
            resourceInputs["mgmtSubnets"] = args ? args.mgmtSubnets : undefined;
            resourceInputs["minCpuUsage"] = args ? args.minCpuUsage : undefined;
            resourceInputs["minScaleoutPerVs"] = args ? args.minScaleoutPerVs : undefined;
            resourceInputs["minSe"] = args ? args.minSe : undefined;
            resourceInputs["minimumConnectionMemory"] = args ? args.minimumConnectionMemory : undefined;
            resourceInputs["multicastEnable"] = args ? args.multicastEnable : undefined;
            resourceInputs["nLogStreamingThreads"] = args ? args.nLogStreamingThreads : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netlinkPollerThreads"] = args ? args.netlinkPollerThreads : undefined;
            resourceInputs["netlinkSockBufSize"] = args ? args.netlinkSockBufSize : undefined;
            resourceInputs["ngxFreeConnectionStack"] = args ? args.ngxFreeConnectionStack : undefined;
            resourceInputs["nonSignificantLogThrottle"] = args ? args.nonSignificantLogThrottle : undefined;
            resourceInputs["nsHelperDeqIntervalMsec"] = args ? args.nsHelperDeqIntervalMsec : undefined;
            resourceInputs["ntpSyncFailEvent"] = args ? args.ntpSyncFailEvent : undefined;
            resourceInputs["ntpSyncStatusInterval"] = args ? args.ntpSyncStatusInterval : undefined;
            resourceInputs["numDispatcherCores"] = args ? args.numDispatcherCores : undefined;
            resourceInputs["numDispatcherQueues"] = args ? args.numDispatcherQueues : undefined;
            resourceInputs["numFlowCoresSumChangesToIgnore"] = args ? args.numFlowCoresSumChangesToIgnore : undefined;
            resourceInputs["objsyncConfigs"] = args ? args.objsyncConfigs : undefined;
            resourceInputs["objsyncPort"] = args ? args.objsyncPort : undefined;
            resourceInputs["openstackAvailabilityZones"] = args ? args.openstackAvailabilityZones : undefined;
            resourceInputs["openstackMgmtNetworkName"] = args ? args.openstackMgmtNetworkName : undefined;
            resourceInputs["openstackMgmtNetworkUuid"] = args ? args.openstackMgmtNetworkUuid : undefined;
            resourceInputs["osReservedMemory"] = args ? args.osReservedMemory : undefined;
            resourceInputs["pathMtuDiscoveryV4"] = args ? args.pathMtuDiscoveryV4 : undefined;
            resourceInputs["pathMtuDiscoveryV6"] = args ? args.pathMtuDiscoveryV6 : undefined;
            resourceInputs["pcapTxMode"] = args ? args.pcapTxMode : undefined;
            resourceInputs["pcapTxRingRdBalancingFactor"] = args ? args.pcapTxRingRdBalancingFactor : undefined;
            resourceInputs["perApp"] = args ? args.perApp : undefined;
            resourceInputs["perVsAdmissionControl"] = args ? args.perVsAdmissionControl : undefined;
            resourceInputs["placementMode"] = args ? args.placementMode : undefined;
            resourceInputs["realtimeSeMetrics"] = args ? args.realtimeSeMetrics : undefined;
            resourceInputs["rebootOnPanic"] = args ? args.rebootOnPanic : undefined;
            resourceInputs["replayVrfRoutesInterval"] = args ? args.replayVrfRoutesInterval : undefined;
            resourceInputs["resyncTimeInterval"] = args ? args.resyncTimeInterval : undefined;
            resourceInputs["sdbFlushInterval"] = args ? args.sdbFlushInterval : undefined;
            resourceInputs["sdbPipelineSize"] = args ? args.sdbPipelineSize : undefined;
            resourceInputs["sdbScanCount"] = args ? args.sdbScanCount : undefined;
            resourceInputs["seBandwidthType"] = args ? args.seBandwidthType : undefined;
            resourceInputs["seDebugTraceSz"] = args ? args.seDebugTraceSz : undefined;
            resourceInputs["seDelayedFlowDelete"] = args ? args.seDelayedFlowDelete : undefined;
            resourceInputs["seDeprovisionDelay"] = args ? args.seDeprovisionDelay : undefined;
            resourceInputs["seDosProfiles"] = args ? args.seDosProfiles : undefined;
            resourceInputs["seDpHmDrops"] = args ? args.seDpHmDrops : undefined;
            resourceInputs["seDpIfStatePollInterval"] = args ? args.seDpIfStatePollInterval : undefined;
            resourceInputs["seDpIsolation"] = args ? args.seDpIsolation : undefined;
            resourceInputs["seDpIsolationNumNonDpCpus"] = args ? args.seDpIsolationNumNonDpCpus : undefined;
            resourceInputs["seDpLogNfEnqueuePercent"] = args ? args.seDpLogNfEnqueuePercent : undefined;
            resourceInputs["seDpLogUdfEnqueuePercent"] = args ? args.seDpLogUdfEnqueuePercent : undefined;
            resourceInputs["seDpMaxHbVersion"] = args ? args.seDpMaxHbVersion : undefined;
            resourceInputs["seDpVnicQueueStallEventSleep"] = args ? args.seDpVnicQueueStallEventSleep : undefined;
            resourceInputs["seDpVnicQueueStallThreshold"] = args ? args.seDpVnicQueueStallThreshold : undefined;
            resourceInputs["seDpVnicQueueStallTimeout"] = args ? args.seDpVnicQueueStallTimeout : undefined;
            resourceInputs["seDpVnicRestartOnQueueStallCount"] = args ? args.seDpVnicRestartOnQueueStallCount : undefined;
            resourceInputs["seDpVnicStallSeRestartWindow"] = args ? args.seDpVnicStallSeRestartWindow : undefined;
            resourceInputs["seDpdkPmd"] = args ? args.seDpdkPmd : undefined;
            resourceInputs["seDumpCoreOnAssert"] = args ? args.seDumpCoreOnAssert : undefined;
            resourceInputs["seEmulatedCores"] = args ? args.seEmulatedCores : undefined;
            resourceInputs["seFlowProbeRetries"] = args ? args.seFlowProbeRetries : undefined;
            resourceInputs["seFlowProbeRetryTimer"] = args ? args.seFlowProbeRetryTimer : undefined;
            resourceInputs["seGroupAnalyticsPolicies"] = args ? args.seGroupAnalyticsPolicies : undefined;
            resourceInputs["seHyperthreadedMode"] = args ? args.seHyperthreadedMode : undefined;
            resourceInputs["seIpEncapIpc"] = args ? args.seIpEncapIpc : undefined;
            resourceInputs["seKniBurstFactor"] = args ? args.seKniBurstFactor : undefined;
            resourceInputs["seL3EncapIpc"] = args ? args.seL3EncapIpc : undefined;
            resourceInputs["seLogBufferAppBlockingDequeue"] = args ? args.seLogBufferAppBlockingDequeue : undefined;
            resourceInputs["seLogBufferConnBlockingDequeue"] = args ? args.seLogBufferConnBlockingDequeue : undefined;
            resourceInputs["seLogBufferEventsBlockingDequeue"] = args ? args.seLogBufferEventsBlockingDequeue : undefined;
            resourceInputs["seLro"] = args ? args.seLro : undefined;
            resourceInputs["seMpRingRetryCount"] = args ? args.seMpRingRetryCount : undefined;
            resourceInputs["seMtu"] = args ? args.seMtu : undefined;
            resourceInputs["seNamePrefix"] = args ? args.seNamePrefix : undefined;
            resourceInputs["sePacketBufferMax"] = args ? args.sePacketBufferMax : undefined;
            resourceInputs["sePcapLookahead"] = args ? args.sePcapLookahead : undefined;
            resourceInputs["sePcapPktCount"] = args ? args.sePcapPktCount : undefined;
            resourceInputs["sePcapPktSz"] = args ? args.sePcapPktSz : undefined;
            resourceInputs["sePcapQdiscBypass"] = args ? args.sePcapQdiscBypass : undefined;
            resourceInputs["sePcapReinitFrequency"] = args ? args.sePcapReinitFrequency : undefined;
            resourceInputs["sePcapReinitThreshold"] = args ? args.sePcapReinitThreshold : undefined;
            resourceInputs["seProbePort"] = args ? args.seProbePort : undefined;
            resourceInputs["seRlProps"] = args ? args.seRlProps : undefined;
            resourceInputs["seRumSamplingNavInterval"] = args ? args.seRumSamplingNavInterval : undefined;
            resourceInputs["seRumSamplingNavPercent"] = args ? args.seRumSamplingNavPercent : undefined;
            resourceInputs["seRumSamplingResInterval"] = args ? args.seRumSamplingResInterval : undefined;
            resourceInputs["seRumSamplingResPercent"] = args ? args.seRumSamplingResPercent : undefined;
            resourceInputs["seSbDedicatedCore"] = args ? args.seSbDedicatedCore : undefined;
            resourceInputs["seSbThreads"] = args ? args.seSbThreads : undefined;
            resourceInputs["seThreadMultiplier"] = args ? args.seThreadMultiplier : undefined;
            resourceInputs["seTimeTrackerProps"] = args ? args.seTimeTrackerProps : undefined;
            resourceInputs["seTracertPortRanges"] = args ? args.seTracertPortRanges : undefined;
            resourceInputs["seTunnelMode"] = args ? args.seTunnelMode : undefined;
            resourceInputs["seTunnelUdpPort"] = args ? args.seTunnelUdpPort : undefined;
            resourceInputs["seTxBatchSize"] = args ? args.seTxBatchSize : undefined;
            resourceInputs["seTxqThreshold"] = args ? args.seTxqThreshold : undefined;
            resourceInputs["seUdpEncapIpc"] = args ? args.seUdpEncapIpc : undefined;
            resourceInputs["seUseDpdk"] = args ? args.seUseDpdk : undefined;
            resourceInputs["seVnicTxSwQueueFlushFrequency"] = args ? args.seVnicTxSwQueueFlushFrequency : undefined;
            resourceInputs["seVnicTxSwQueueSize"] = args ? args.seVnicTxSwQueueSize : undefined;
            resourceInputs["seVsHbMaxPktsInBatch"] = args ? args.seVsHbMaxPktsInBatch : undefined;
            resourceInputs["seVsHbMaxVsInPkt"] = args ? args.seVsHbMaxVsInPkt : undefined;
            resourceInputs["selfSeElection"] = args ? args.selfSeElection : undefined;
            resourceInputs["sendSeReadyTimeout"] = args ? args.sendSeReadyTimeout : undefined;
            resourceInputs["serviceIp6Subnets"] = args ? args.serviceIp6Subnets : undefined;
            resourceInputs["serviceIpSubnets"] = args ? args.serviceIpSubnets : undefined;
            resourceInputs["shmMinimumConfigMemory"] = args ? args.shmMinimumConfigMemory : undefined;
            resourceInputs["significantLogThrottle"] = args ? args.significantLogThrottle : undefined;
            resourceInputs["sslPreprocessSniHostname"] = args ? args.sslPreprocessSniHostname : undefined;
            resourceInputs["sslSessCachePerVs"] = args ? args.sslSessCachePerVs : undefined;
            resourceInputs["tenantRef"] = args ? args.tenantRef : undefined;
            resourceInputs["transientSharedMemoryMax"] = args ? args.transientSharedMemoryMax : undefined;
            resourceInputs["udfLogThrottle"] = args ? args.udfLogThrottle : undefined;
            resourceInputs["upstreamConnectTimeout"] = args ? args.upstreamConnectTimeout : undefined;
            resourceInputs["upstreamConnpoolEnable"] = args ? args.upstreamConnpoolEnable : undefined;
            resourceInputs["upstreamReadTimeout"] = args ? args.upstreamReadTimeout : undefined;
            resourceInputs["upstreamSendTimeout"] = args ? args.upstreamSendTimeout : undefined;
            resourceInputs["useDpUtilForScaleout"] = args ? args.useDpUtilForScaleout : undefined;
            resourceInputs["useHyperthreadedCores"] = args ? args.useHyperthreadedCores : undefined;
            resourceInputs["useLegacyNetlink"] = args ? args.useLegacyNetlink : undefined;
            resourceInputs["useObjsync"] = args ? args.useObjsync : undefined;
            resourceInputs["useStandardAlb"] = args ? args.useStandardAlb : undefined;
            resourceInputs["userAgentCacheConfigs"] = args ? args.userAgentCacheConfigs : undefined;
            resourceInputs["userDefinedMetricAge"] = args ? args.userDefinedMetricAge : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vcenterClusters"] = args ? args.vcenterClusters : undefined;
            resourceInputs["vcenterDatastoreMode"] = args ? args.vcenterDatastoreMode : undefined;
            resourceInputs["vcenterDatastores"] = args ? args.vcenterDatastores : undefined;
            resourceInputs["vcenterDatastoresInclude"] = args ? args.vcenterDatastoresInclude : undefined;
            resourceInputs["vcenterFolder"] = args ? args.vcenterFolder : undefined;
            resourceInputs["vcenterHosts"] = args ? args.vcenterHosts : undefined;
            resourceInputs["vcenterParkingVnicPg"] = args ? args.vcenterParkingVnicPg : undefined;
            resourceInputs["vcenters"] = args ? args.vcenters : undefined;
            resourceInputs["vcpusPerSe"] = args ? args.vcpusPerSe : undefined;
            resourceInputs["vipAsgs"] = args ? args.vipAsgs : undefined;
            resourceInputs["vnicDhcpIpCheckInterval"] = args ? args.vnicDhcpIpCheckInterval : undefined;
            resourceInputs["vnicDhcpIpMaxRetries"] = args ? args.vnicDhcpIpMaxRetries : undefined;
            resourceInputs["vnicIpDeleteInterval"] = args ? args.vnicIpDeleteInterval : undefined;
            resourceInputs["vnicProbeInterval"] = args ? args.vnicProbeInterval : undefined;
            resourceInputs["vnicRpcRetryInterval"] = args ? args.vnicRpcRetryInterval : undefined;
            resourceInputs["vnicdbCmdHistorySize"] = args ? args.vnicdbCmdHistorySize : undefined;
            resourceInputs["vsHostRedundancy"] = args ? args.vsHostRedundancy : undefined;
            resourceInputs["vsScaleinTimeout"] = args ? args.vsScaleinTimeout : undefined;
            resourceInputs["vsScaleinTimeoutForUpgrade"] = args ? args.vsScaleinTimeoutForUpgrade : undefined;
            resourceInputs["vsScaleoutTimeout"] = args ? args.vsScaleoutTimeout : undefined;
            resourceInputs["vsSePrimarySwitchoverAdditionalWaitTime"] = args ? args.vsSePrimarySwitchoverAdditionalWaitTime : undefined;
            resourceInputs["vsSeScaleinAdditionalWaitTime"] = args ? args.vsSeScaleinAdditionalWaitTime : undefined;
            resourceInputs["vsSeScaleoutAdditionalWaitTime"] = args ? args.vsSeScaleoutAdditionalWaitTime : undefined;
            resourceInputs["vsSeScaleoutReadyTimeout"] = args ? args.vsSeScaleoutReadyTimeout : undefined;
            resourceInputs["vsSwitchoverTimeout"] = args ? args.vsSwitchoverTimeout : undefined;
            resourceInputs["vssPlacementEnabled"] = args ? args.vssPlacementEnabled : undefined;
            resourceInputs["vssPlacements"] = args ? args.vssPlacements : undefined;
            resourceInputs["wafMempool"] = args ? args.wafMempool : undefined;
            resourceInputs["wafMempoolSize"] = args ? args.wafMempoolSize : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Serviceenginegroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Serviceenginegroup resources.
 */
export interface ServiceenginegroupState {
    acceleratedNetworking?: pulumi.Input<string>;
    activeStandby?: pulumi.Input<string>;
    aggressiveFailureDetection?: pulumi.Input<string>;
    algo?: pulumi.Input<string>;
    allowBurst?: pulumi.Input<string>;
    appCachePercent?: pulumi.Input<string>;
    appCacheThreshold?: pulumi.Input<string>;
    appLearningMemoryPercent?: pulumi.Input<string>;
    archiveShmLimit?: pulumi.Input<string>;
    asyncSsl?: pulumi.Input<string>;
    asyncSslThreads?: pulumi.Input<string>;
    autoRebalance?: pulumi.Input<string>;
    autoRebalanceCapacityPerSes?: pulumi.Input<pulumi.Input<number>[]>;
    autoRebalanceCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    autoRebalanceInterval?: pulumi.Input<string>;
    autoRedistributeActiveStandbyLoad?: pulumi.Input<string>;
    availabilityZoneRefs?: pulumi.Input<pulumi.Input<string>[]>;
    baremetalDispatcherHandlesFlows?: pulumi.Input<string>;
    bgpPeerMonitorFailoverEnabled?: pulumi.Input<string>;
    bgpStateUpdateInterval?: pulumi.Input<string>;
    bufferSe?: pulumi.Input<string>;
    cloudRef?: pulumi.Input<string>;
    compressIpRulesForEachNsSubnet?: pulumi.Input<string>;
    configDebugsOnAllCores?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupConfigpbAttribute>[]>;
    connectionMemoryPercentage?: pulumi.Input<string>;
    coreShmAppCache?: pulumi.Input<string>;
    coreShmAppLearning?: pulumi.Input<string>;
    cpuReserve?: pulumi.Input<string>;
    cpuSocketAffinity?: pulumi.Input<string>;
    customSecuritygroupsDatas?: pulumi.Input<pulumi.Input<string>[]>;
    customSecuritygroupsMgmts?: pulumi.Input<pulumi.Input<string>[]>;
    customTags?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupCustomTag>[]>;
    dataNetworkId?: pulumi.Input<string>;
    datascriptTimeout?: pulumi.Input<string>;
    deactivateIpv6Discovery?: pulumi.Input<string>;
    deactivateKniFilteringAtDispatcher?: pulumi.Input<string>;
    dedicatedDispatcherCore?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disableAviSecuritygroups?: pulumi.Input<string>;
    disableCsumOffloads?: pulumi.Input<string>;
    disableFlowProbes?: pulumi.Input<string>;
    disableGro?: pulumi.Input<string>;
    disableSeMemoryCheck?: pulumi.Input<string>;
    disableTso?: pulumi.Input<string>;
    diskPerSe?: pulumi.Input<string>;
    distributeLoadActiveStandby?: pulumi.Input<string>;
    distributeQueues?: pulumi.Input<string>;
    distributeVnics?: pulumi.Input<string>;
    downstreamSendTimeout?: pulumi.Input<string>;
    dpAggressiveDeqIntervalMsec?: pulumi.Input<string>;
    dpAggressiveEnqIntervalMsec?: pulumi.Input<string>;
    dpAggressiveHbFrequency?: pulumi.Input<string>;
    dpAggressiveHbTimeoutCount?: pulumi.Input<string>;
    dpDeqIntervalMsec?: pulumi.Input<string>;
    dpEnqIntervalMsec?: pulumi.Input<string>;
    dpHbFrequency?: pulumi.Input<string>;
    dpHbTimeoutCount?: pulumi.Input<string>;
    dpdkGroTimeoutInterval?: pulumi.Input<string>;
    enableGratarpPermanent?: pulumi.Input<string>;
    enableHsmLog?: pulumi.Input<string>;
    enableHsmPriming?: pulumi.Input<string>;
    enableMultiLb?: pulumi.Input<string>;
    enablePcapTxRing?: pulumi.Input<string>;
    ephemeralPortrangeEnd?: pulumi.Input<string>;
    ephemeralPortrangeStart?: pulumi.Input<string>;
    extraConfigMultiplier?: pulumi.Input<string>;
    extraSharedConfigMemory?: pulumi.Input<string>;
    flowTableNewSynMaxEntries?: pulumi.Input<string>;
    freeListSize?: pulumi.Input<string>;
    gcpConfigs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupGcpConfig>[]>;
    gratarpPermanentPeriodicity?: pulumi.Input<string>;
    grpcChannelConnectTimeout?: pulumi.Input<string>;
    haMode?: pulumi.Input<string>;
    handlePerPktAttack?: pulumi.Input<string>;
    hardwaresecuritymodulegroupRef?: pulumi.Input<string>;
    heapMinimumConfigMemory?: pulumi.Input<string>;
    hmOnStandby?: pulumi.Input<string>;
    hostAttributeKey?: pulumi.Input<string>;
    hostAttributeValue?: pulumi.Input<string>;
    hostGatewayMonitor?: pulumi.Input<string>;
    httpRumConsoleLog?: pulumi.Input<string>;
    httpRumMinContentLength?: pulumi.Input<string>;
    hybridRssMode?: pulumi.Input<string>;
    hypervisor?: pulumi.Input<string>;
    ignoreDockerMacChange?: pulumi.Input<string>;
    ignoreRttThreshold?: pulumi.Input<string>;
    ingressAccessData?: pulumi.Input<string>;
    ingressAccessMgmt?: pulumi.Input<string>;
    instanceFlavor?: pulumi.Input<string>;
    instanceFlavorInfos?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupInstanceFlavorInfo>[]>;
    iptables?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupIptable>[]>;
    kniAllowedServerPorts?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupKniAllowedServerPort>[]>;
    l7ConnsPerCore?: pulumi.Input<string>;
    l7ResvdListenConnsPerCore?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupLabel>[]>;
    lbactionNumRequestsToDispatch?: pulumi.Input<string>;
    lbactionRqPerRequestMaxRetries?: pulumi.Input<string>;
    leastLoadCoreSelection?: pulumi.Input<string>;
    licenseTier?: pulumi.Input<string>;
    licenseType?: pulumi.Input<string>;
    logAgentCompressLogs?: pulumi.Input<string>;
    logAgentDebugEnabled?: pulumi.Input<string>;
    logAgentFileSzAppl?: pulumi.Input<string>;
    logAgentFileSzConn?: pulumi.Input<string>;
    logAgentFileSzDebug?: pulumi.Input<string>;
    logAgentFileSzEvent?: pulumi.Input<string>;
    logAgentLogStorageMinSz?: pulumi.Input<string>;
    logAgentMaxConcurrentRsync?: pulumi.Input<string>;
    logAgentMaxStorageExcessPercent?: pulumi.Input<string>;
    logAgentMaxStorageIgnorePercent?: pulumi.Input<string>;
    logAgentMinStoragePerVs?: pulumi.Input<string>;
    logAgentSleepInterval?: pulumi.Input<string>;
    logAgentTraceEnabled?: pulumi.Input<string>;
    logAgentUnknownVsTimer?: pulumi.Input<string>;
    logDisksz?: pulumi.Input<string>;
    logMallocFailure?: pulumi.Input<string>;
    logMessageMaxFileListSize?: pulumi.Input<string>;
    markers?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupMarker>[]>;
    maxConcurrentExternalHm?: pulumi.Input<string>;
    maxCpuUsage?: pulumi.Input<string>;
    maxMemoryPerMempool?: pulumi.Input<string>;
    maxNumHttpSessionsToStore?: pulumi.Input<string>;
    maxNumSeDps?: pulumi.Input<string>;
    maxPublicIpsPerLb?: pulumi.Input<string>;
    maxQueuesPerVnic?: pulumi.Input<string>;
    maxRulesPerLb?: pulumi.Input<string>;
    maxScaleoutPerVs?: pulumi.Input<string>;
    maxSe?: pulumi.Input<string>;
    maxSkbFrags?: pulumi.Input<string>;
    maxVsPerSe?: pulumi.Input<string>;
    memReserve?: pulumi.Input<string>;
    memoryForConfigUpdate?: pulumi.Input<string>;
    memoryPerSe?: pulumi.Input<string>;
    metricsCollectionMode?: pulumi.Input<string>;
    mgmtNetworkRef?: pulumi.Input<string>;
    mgmtSubnets?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupMgmtSubnet>[]>;
    minCpuUsage?: pulumi.Input<string>;
    minScaleoutPerVs?: pulumi.Input<string>;
    minSe?: pulumi.Input<string>;
    minimumConnectionMemory?: pulumi.Input<string>;
    multicastEnable?: pulumi.Input<string>;
    nLogStreamingThreads?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netlinkPollerThreads?: pulumi.Input<string>;
    netlinkSockBufSize?: pulumi.Input<string>;
    ngxFreeConnectionStack?: pulumi.Input<string>;
    nonSignificantLogThrottle?: pulumi.Input<string>;
    nsHelperDeqIntervalMsec?: pulumi.Input<string>;
    ntpSyncFailEvent?: pulumi.Input<string>;
    ntpSyncStatusInterval?: pulumi.Input<string>;
    numDispatcherCores?: pulumi.Input<string>;
    numDispatcherQueues?: pulumi.Input<string>;
    numFlowCoresSumChangesToIgnore?: pulumi.Input<string>;
    objsyncConfigs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupObjsyncConfig>[]>;
    objsyncPort?: pulumi.Input<string>;
    openstackAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    openstackMgmtNetworkName?: pulumi.Input<string>;
    openstackMgmtNetworkUuid?: pulumi.Input<string>;
    osReservedMemory?: pulumi.Input<string>;
    pathMtuDiscoveryV4?: pulumi.Input<string>;
    pathMtuDiscoveryV6?: pulumi.Input<string>;
    pcapTxMode?: pulumi.Input<string>;
    pcapTxRingRdBalancingFactor?: pulumi.Input<string>;
    perApp?: pulumi.Input<string>;
    perVsAdmissionControl?: pulumi.Input<string>;
    placementMode?: pulumi.Input<string>;
    realtimeSeMetrics?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupRealtimeSeMetric>[]>;
    rebootOnPanic?: pulumi.Input<string>;
    replayVrfRoutesInterval?: pulumi.Input<string>;
    resyncTimeInterval?: pulumi.Input<string>;
    sdbFlushInterval?: pulumi.Input<string>;
    sdbPipelineSize?: pulumi.Input<string>;
    sdbScanCount?: pulumi.Input<string>;
    seBandwidthType?: pulumi.Input<string>;
    seDebugTraceSz?: pulumi.Input<string>;
    seDelayedFlowDelete?: pulumi.Input<string>;
    seDeprovisionDelay?: pulumi.Input<string>;
    seDosProfiles?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeDosProfile>[]>;
    seDpHmDrops?: pulumi.Input<string>;
    seDpIfStatePollInterval?: pulumi.Input<string>;
    seDpIsolation?: pulumi.Input<string>;
    seDpIsolationNumNonDpCpus?: pulumi.Input<string>;
    seDpLogNfEnqueuePercent?: pulumi.Input<string>;
    seDpLogUdfEnqueuePercent?: pulumi.Input<string>;
    seDpMaxHbVersion?: pulumi.Input<string>;
    seDpVnicQueueStallEventSleep?: pulumi.Input<string>;
    seDpVnicQueueStallThreshold?: pulumi.Input<string>;
    seDpVnicQueueStallTimeout?: pulumi.Input<string>;
    seDpVnicRestartOnQueueStallCount?: pulumi.Input<string>;
    seDpVnicStallSeRestartWindow?: pulumi.Input<string>;
    seDpdkPmd?: pulumi.Input<string>;
    seDumpCoreOnAssert?: pulumi.Input<string>;
    seEmulatedCores?: pulumi.Input<string>;
    seFlowProbeRetries?: pulumi.Input<string>;
    seFlowProbeRetryTimer?: pulumi.Input<string>;
    seGroupAnalyticsPolicies?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeGroupAnalyticsPolicy>[]>;
    seHyperthreadedMode?: pulumi.Input<string>;
    seIpEncapIpc?: pulumi.Input<string>;
    seKniBurstFactor?: pulumi.Input<string>;
    seL3EncapIpc?: pulumi.Input<string>;
    seLogBufferAppBlockingDequeue?: pulumi.Input<string>;
    seLogBufferConnBlockingDequeue?: pulumi.Input<string>;
    seLogBufferEventsBlockingDequeue?: pulumi.Input<string>;
    seLro?: pulumi.Input<string>;
    seMpRingRetryCount?: pulumi.Input<string>;
    seMtu?: pulumi.Input<string>;
    seNamePrefix?: pulumi.Input<string>;
    sePacketBufferMax?: pulumi.Input<string>;
    sePcapLookahead?: pulumi.Input<string>;
    sePcapPktCount?: pulumi.Input<string>;
    sePcapPktSz?: pulumi.Input<string>;
    sePcapQdiscBypass?: pulumi.Input<string>;
    sePcapReinitFrequency?: pulumi.Input<string>;
    sePcapReinitThreshold?: pulumi.Input<string>;
    seProbePort?: pulumi.Input<string>;
    seRlProps?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeRlProp>[]>;
    seRumSamplingNavInterval?: pulumi.Input<string>;
    seRumSamplingNavPercent?: pulumi.Input<string>;
    seRumSamplingResInterval?: pulumi.Input<string>;
    seRumSamplingResPercent?: pulumi.Input<string>;
    seSbDedicatedCore?: pulumi.Input<string>;
    seSbThreads?: pulumi.Input<string>;
    seThreadMultiplier?: pulumi.Input<string>;
    seTimeTrackerProps?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeTimeTrackerProp>[]>;
    seTracertPortRanges?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeTracertPortRange>[]>;
    seTunnelMode?: pulumi.Input<string>;
    seTunnelUdpPort?: pulumi.Input<string>;
    seTxBatchSize?: pulumi.Input<string>;
    seTxqThreshold?: pulumi.Input<string>;
    seUdpEncapIpc?: pulumi.Input<string>;
    seUseDpdk?: pulumi.Input<string>;
    seVnicTxSwQueueFlushFrequency?: pulumi.Input<string>;
    seVnicTxSwQueueSize?: pulumi.Input<string>;
    seVsHbMaxPktsInBatch?: pulumi.Input<string>;
    seVsHbMaxVsInPkt?: pulumi.Input<string>;
    selfSeElection?: pulumi.Input<string>;
    sendSeReadyTimeout?: pulumi.Input<string>;
    serviceIp6Subnets?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupServiceIp6Subnet>[]>;
    serviceIpSubnets?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupServiceIpSubnet>[]>;
    shmMinimumConfigMemory?: pulumi.Input<string>;
    significantLogThrottle?: pulumi.Input<string>;
    sslPreprocessSniHostname?: pulumi.Input<string>;
    sslSessCachePerVs?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    transientSharedMemoryMax?: pulumi.Input<string>;
    udfLogThrottle?: pulumi.Input<string>;
    upstreamConnectTimeout?: pulumi.Input<string>;
    upstreamConnpoolEnable?: pulumi.Input<string>;
    upstreamReadTimeout?: pulumi.Input<string>;
    upstreamSendTimeout?: pulumi.Input<string>;
    useDpUtilForScaleout?: pulumi.Input<string>;
    useHyperthreadedCores?: pulumi.Input<string>;
    useLegacyNetlink?: pulumi.Input<string>;
    useObjsync?: pulumi.Input<string>;
    useStandardAlb?: pulumi.Input<string>;
    userAgentCacheConfigs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupUserAgentCacheConfig>[]>;
    userDefinedMetricAge?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vcenterClusters?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenterCluster>[]>;
    vcenterDatastoreMode?: pulumi.Input<string>;
    vcenterDatastores?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenterDatastore>[]>;
    vcenterDatastoresInclude?: pulumi.Input<string>;
    vcenterFolder?: pulumi.Input<string>;
    vcenterHosts?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenterHost>[]>;
    vcenterParkingVnicPg?: pulumi.Input<string>;
    vcenters?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenter>[]>;
    vcpusPerSe?: pulumi.Input<string>;
    vipAsgs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVipAsg>[]>;
    vnicDhcpIpCheckInterval?: pulumi.Input<string>;
    vnicDhcpIpMaxRetries?: pulumi.Input<string>;
    vnicIpDeleteInterval?: pulumi.Input<string>;
    vnicProbeInterval?: pulumi.Input<string>;
    vnicRpcRetryInterval?: pulumi.Input<string>;
    vnicdbCmdHistorySize?: pulumi.Input<string>;
    vsHostRedundancy?: pulumi.Input<string>;
    vsScaleinTimeout?: pulumi.Input<string>;
    vsScaleinTimeoutForUpgrade?: pulumi.Input<string>;
    vsScaleoutTimeout?: pulumi.Input<string>;
    vsSePrimarySwitchoverAdditionalWaitTime?: pulumi.Input<string>;
    vsSeScaleinAdditionalWaitTime?: pulumi.Input<string>;
    vsSeScaleoutAdditionalWaitTime?: pulumi.Input<string>;
    vsSeScaleoutReadyTimeout?: pulumi.Input<string>;
    vsSwitchoverTimeout?: pulumi.Input<string>;
    vssPlacementEnabled?: pulumi.Input<string>;
    vssPlacements?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVssPlacement>[]>;
    wafMempool?: pulumi.Input<string>;
    wafMempoolSize?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Serviceenginegroup resource.
 */
export interface ServiceenginegroupArgs {
    acceleratedNetworking?: pulumi.Input<string>;
    activeStandby?: pulumi.Input<string>;
    aggressiveFailureDetection?: pulumi.Input<string>;
    algo?: pulumi.Input<string>;
    allowBurst?: pulumi.Input<string>;
    appCachePercent?: pulumi.Input<string>;
    appCacheThreshold?: pulumi.Input<string>;
    appLearningMemoryPercent?: pulumi.Input<string>;
    archiveShmLimit?: pulumi.Input<string>;
    asyncSsl?: pulumi.Input<string>;
    asyncSslThreads?: pulumi.Input<string>;
    autoRebalance?: pulumi.Input<string>;
    autoRebalanceCapacityPerSes?: pulumi.Input<pulumi.Input<number>[]>;
    autoRebalanceCriterias?: pulumi.Input<pulumi.Input<string>[]>;
    autoRebalanceInterval?: pulumi.Input<string>;
    autoRedistributeActiveStandbyLoad?: pulumi.Input<string>;
    availabilityZoneRefs?: pulumi.Input<pulumi.Input<string>[]>;
    baremetalDispatcherHandlesFlows?: pulumi.Input<string>;
    bgpPeerMonitorFailoverEnabled?: pulumi.Input<string>;
    bgpStateUpdateInterval?: pulumi.Input<string>;
    bufferSe?: pulumi.Input<string>;
    cloudRef?: pulumi.Input<string>;
    compressIpRulesForEachNsSubnet?: pulumi.Input<string>;
    configDebugsOnAllCores?: pulumi.Input<string>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupConfigpbAttribute>[]>;
    connectionMemoryPercentage?: pulumi.Input<string>;
    coreShmAppCache?: pulumi.Input<string>;
    coreShmAppLearning?: pulumi.Input<string>;
    cpuReserve?: pulumi.Input<string>;
    cpuSocketAffinity?: pulumi.Input<string>;
    customSecuritygroupsDatas?: pulumi.Input<pulumi.Input<string>[]>;
    customSecuritygroupsMgmts?: pulumi.Input<pulumi.Input<string>[]>;
    customTags?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupCustomTag>[]>;
    dataNetworkId?: pulumi.Input<string>;
    datascriptTimeout?: pulumi.Input<string>;
    deactivateIpv6Discovery?: pulumi.Input<string>;
    deactivateKniFilteringAtDispatcher?: pulumi.Input<string>;
    dedicatedDispatcherCore?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    disableAviSecuritygroups?: pulumi.Input<string>;
    disableCsumOffloads?: pulumi.Input<string>;
    disableFlowProbes?: pulumi.Input<string>;
    disableGro?: pulumi.Input<string>;
    disableSeMemoryCheck?: pulumi.Input<string>;
    disableTso?: pulumi.Input<string>;
    diskPerSe?: pulumi.Input<string>;
    distributeLoadActiveStandby?: pulumi.Input<string>;
    distributeQueues?: pulumi.Input<string>;
    distributeVnics?: pulumi.Input<string>;
    downstreamSendTimeout?: pulumi.Input<string>;
    dpAggressiveDeqIntervalMsec?: pulumi.Input<string>;
    dpAggressiveEnqIntervalMsec?: pulumi.Input<string>;
    dpAggressiveHbFrequency?: pulumi.Input<string>;
    dpAggressiveHbTimeoutCount?: pulumi.Input<string>;
    dpDeqIntervalMsec?: pulumi.Input<string>;
    dpEnqIntervalMsec?: pulumi.Input<string>;
    dpHbFrequency?: pulumi.Input<string>;
    dpHbTimeoutCount?: pulumi.Input<string>;
    dpdkGroTimeoutInterval?: pulumi.Input<string>;
    enableGratarpPermanent?: pulumi.Input<string>;
    enableHsmLog?: pulumi.Input<string>;
    enableHsmPriming?: pulumi.Input<string>;
    enableMultiLb?: pulumi.Input<string>;
    enablePcapTxRing?: pulumi.Input<string>;
    ephemeralPortrangeEnd?: pulumi.Input<string>;
    ephemeralPortrangeStart?: pulumi.Input<string>;
    extraConfigMultiplier?: pulumi.Input<string>;
    extraSharedConfigMemory?: pulumi.Input<string>;
    flowTableNewSynMaxEntries?: pulumi.Input<string>;
    freeListSize?: pulumi.Input<string>;
    gcpConfigs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupGcpConfig>[]>;
    gratarpPermanentPeriodicity?: pulumi.Input<string>;
    grpcChannelConnectTimeout?: pulumi.Input<string>;
    haMode?: pulumi.Input<string>;
    handlePerPktAttack?: pulumi.Input<string>;
    hardwaresecuritymodulegroupRef?: pulumi.Input<string>;
    heapMinimumConfigMemory?: pulumi.Input<string>;
    hmOnStandby?: pulumi.Input<string>;
    hostAttributeKey?: pulumi.Input<string>;
    hostAttributeValue?: pulumi.Input<string>;
    hostGatewayMonitor?: pulumi.Input<string>;
    httpRumConsoleLog?: pulumi.Input<string>;
    httpRumMinContentLength?: pulumi.Input<string>;
    hybridRssMode?: pulumi.Input<string>;
    hypervisor?: pulumi.Input<string>;
    ignoreDockerMacChange?: pulumi.Input<string>;
    ignoreRttThreshold?: pulumi.Input<string>;
    ingressAccessData?: pulumi.Input<string>;
    ingressAccessMgmt?: pulumi.Input<string>;
    instanceFlavor?: pulumi.Input<string>;
    instanceFlavorInfos?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupInstanceFlavorInfo>[]>;
    iptables?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupIptable>[]>;
    kniAllowedServerPorts?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupKniAllowedServerPort>[]>;
    l7ConnsPerCore?: pulumi.Input<string>;
    l7ResvdListenConnsPerCore?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupLabel>[]>;
    lbactionNumRequestsToDispatch?: pulumi.Input<string>;
    lbactionRqPerRequestMaxRetries?: pulumi.Input<string>;
    leastLoadCoreSelection?: pulumi.Input<string>;
    licenseTier?: pulumi.Input<string>;
    licenseType?: pulumi.Input<string>;
    logAgentCompressLogs?: pulumi.Input<string>;
    logAgentDebugEnabled?: pulumi.Input<string>;
    logAgentFileSzAppl?: pulumi.Input<string>;
    logAgentFileSzConn?: pulumi.Input<string>;
    logAgentFileSzDebug?: pulumi.Input<string>;
    logAgentFileSzEvent?: pulumi.Input<string>;
    logAgentLogStorageMinSz?: pulumi.Input<string>;
    logAgentMaxConcurrentRsync?: pulumi.Input<string>;
    logAgentMaxStorageExcessPercent?: pulumi.Input<string>;
    logAgentMaxStorageIgnorePercent?: pulumi.Input<string>;
    logAgentMinStoragePerVs?: pulumi.Input<string>;
    logAgentSleepInterval?: pulumi.Input<string>;
    logAgentTraceEnabled?: pulumi.Input<string>;
    logAgentUnknownVsTimer?: pulumi.Input<string>;
    logDisksz?: pulumi.Input<string>;
    logMallocFailure?: pulumi.Input<string>;
    logMessageMaxFileListSize?: pulumi.Input<string>;
    markers?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupMarker>[]>;
    maxConcurrentExternalHm?: pulumi.Input<string>;
    maxCpuUsage?: pulumi.Input<string>;
    maxMemoryPerMempool?: pulumi.Input<string>;
    maxNumHttpSessionsToStore?: pulumi.Input<string>;
    maxNumSeDps?: pulumi.Input<string>;
    maxPublicIpsPerLb?: pulumi.Input<string>;
    maxQueuesPerVnic?: pulumi.Input<string>;
    maxRulesPerLb?: pulumi.Input<string>;
    maxScaleoutPerVs?: pulumi.Input<string>;
    maxSe?: pulumi.Input<string>;
    maxSkbFrags?: pulumi.Input<string>;
    maxVsPerSe?: pulumi.Input<string>;
    memReserve?: pulumi.Input<string>;
    memoryForConfigUpdate?: pulumi.Input<string>;
    memoryPerSe?: pulumi.Input<string>;
    metricsCollectionMode?: pulumi.Input<string>;
    mgmtNetworkRef?: pulumi.Input<string>;
    mgmtSubnets?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupMgmtSubnet>[]>;
    minCpuUsage?: pulumi.Input<string>;
    minScaleoutPerVs?: pulumi.Input<string>;
    minSe?: pulumi.Input<string>;
    minimumConnectionMemory?: pulumi.Input<string>;
    multicastEnable?: pulumi.Input<string>;
    nLogStreamingThreads?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netlinkPollerThreads?: pulumi.Input<string>;
    netlinkSockBufSize?: pulumi.Input<string>;
    ngxFreeConnectionStack?: pulumi.Input<string>;
    nonSignificantLogThrottle?: pulumi.Input<string>;
    nsHelperDeqIntervalMsec?: pulumi.Input<string>;
    ntpSyncFailEvent?: pulumi.Input<string>;
    ntpSyncStatusInterval?: pulumi.Input<string>;
    numDispatcherCores?: pulumi.Input<string>;
    numDispatcherQueues?: pulumi.Input<string>;
    numFlowCoresSumChangesToIgnore?: pulumi.Input<string>;
    objsyncConfigs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupObjsyncConfig>[]>;
    objsyncPort?: pulumi.Input<string>;
    openstackAvailabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    openstackMgmtNetworkName?: pulumi.Input<string>;
    openstackMgmtNetworkUuid?: pulumi.Input<string>;
    osReservedMemory?: pulumi.Input<string>;
    pathMtuDiscoveryV4?: pulumi.Input<string>;
    pathMtuDiscoveryV6?: pulumi.Input<string>;
    pcapTxMode?: pulumi.Input<string>;
    pcapTxRingRdBalancingFactor?: pulumi.Input<string>;
    perApp?: pulumi.Input<string>;
    perVsAdmissionControl?: pulumi.Input<string>;
    placementMode?: pulumi.Input<string>;
    realtimeSeMetrics?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupRealtimeSeMetric>[]>;
    rebootOnPanic?: pulumi.Input<string>;
    replayVrfRoutesInterval?: pulumi.Input<string>;
    resyncTimeInterval?: pulumi.Input<string>;
    sdbFlushInterval?: pulumi.Input<string>;
    sdbPipelineSize?: pulumi.Input<string>;
    sdbScanCount?: pulumi.Input<string>;
    seBandwidthType?: pulumi.Input<string>;
    seDebugTraceSz?: pulumi.Input<string>;
    seDelayedFlowDelete?: pulumi.Input<string>;
    seDeprovisionDelay?: pulumi.Input<string>;
    seDosProfiles?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeDosProfile>[]>;
    seDpHmDrops?: pulumi.Input<string>;
    seDpIfStatePollInterval?: pulumi.Input<string>;
    seDpIsolation?: pulumi.Input<string>;
    seDpIsolationNumNonDpCpus?: pulumi.Input<string>;
    seDpLogNfEnqueuePercent?: pulumi.Input<string>;
    seDpLogUdfEnqueuePercent?: pulumi.Input<string>;
    seDpMaxHbVersion?: pulumi.Input<string>;
    seDpVnicQueueStallEventSleep?: pulumi.Input<string>;
    seDpVnicQueueStallThreshold?: pulumi.Input<string>;
    seDpVnicQueueStallTimeout?: pulumi.Input<string>;
    seDpVnicRestartOnQueueStallCount?: pulumi.Input<string>;
    seDpVnicStallSeRestartWindow?: pulumi.Input<string>;
    seDpdkPmd?: pulumi.Input<string>;
    seDumpCoreOnAssert?: pulumi.Input<string>;
    seEmulatedCores?: pulumi.Input<string>;
    seFlowProbeRetries?: pulumi.Input<string>;
    seFlowProbeRetryTimer?: pulumi.Input<string>;
    seGroupAnalyticsPolicies?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeGroupAnalyticsPolicy>[]>;
    seHyperthreadedMode?: pulumi.Input<string>;
    seIpEncapIpc?: pulumi.Input<string>;
    seKniBurstFactor?: pulumi.Input<string>;
    seL3EncapIpc?: pulumi.Input<string>;
    seLogBufferAppBlockingDequeue?: pulumi.Input<string>;
    seLogBufferConnBlockingDequeue?: pulumi.Input<string>;
    seLogBufferEventsBlockingDequeue?: pulumi.Input<string>;
    seLro?: pulumi.Input<string>;
    seMpRingRetryCount?: pulumi.Input<string>;
    seMtu?: pulumi.Input<string>;
    seNamePrefix?: pulumi.Input<string>;
    sePacketBufferMax?: pulumi.Input<string>;
    sePcapLookahead?: pulumi.Input<string>;
    sePcapPktCount?: pulumi.Input<string>;
    sePcapPktSz?: pulumi.Input<string>;
    sePcapQdiscBypass?: pulumi.Input<string>;
    sePcapReinitFrequency?: pulumi.Input<string>;
    sePcapReinitThreshold?: pulumi.Input<string>;
    seProbePort?: pulumi.Input<string>;
    seRlProps?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeRlProp>[]>;
    seRumSamplingNavInterval?: pulumi.Input<string>;
    seRumSamplingNavPercent?: pulumi.Input<string>;
    seRumSamplingResInterval?: pulumi.Input<string>;
    seRumSamplingResPercent?: pulumi.Input<string>;
    seSbDedicatedCore?: pulumi.Input<string>;
    seSbThreads?: pulumi.Input<string>;
    seThreadMultiplier?: pulumi.Input<string>;
    seTimeTrackerProps?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeTimeTrackerProp>[]>;
    seTracertPortRanges?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupSeTracertPortRange>[]>;
    seTunnelMode?: pulumi.Input<string>;
    seTunnelUdpPort?: pulumi.Input<string>;
    seTxBatchSize?: pulumi.Input<string>;
    seTxqThreshold?: pulumi.Input<string>;
    seUdpEncapIpc?: pulumi.Input<string>;
    seUseDpdk?: pulumi.Input<string>;
    seVnicTxSwQueueFlushFrequency?: pulumi.Input<string>;
    seVnicTxSwQueueSize?: pulumi.Input<string>;
    seVsHbMaxPktsInBatch?: pulumi.Input<string>;
    seVsHbMaxVsInPkt?: pulumi.Input<string>;
    selfSeElection?: pulumi.Input<string>;
    sendSeReadyTimeout?: pulumi.Input<string>;
    serviceIp6Subnets?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupServiceIp6Subnet>[]>;
    serviceIpSubnets?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupServiceIpSubnet>[]>;
    shmMinimumConfigMemory?: pulumi.Input<string>;
    significantLogThrottle?: pulumi.Input<string>;
    sslPreprocessSniHostname?: pulumi.Input<string>;
    sslSessCachePerVs?: pulumi.Input<string>;
    tenantRef?: pulumi.Input<string>;
    transientSharedMemoryMax?: pulumi.Input<string>;
    udfLogThrottle?: pulumi.Input<string>;
    upstreamConnectTimeout?: pulumi.Input<string>;
    upstreamConnpoolEnable?: pulumi.Input<string>;
    upstreamReadTimeout?: pulumi.Input<string>;
    upstreamSendTimeout?: pulumi.Input<string>;
    useDpUtilForScaleout?: pulumi.Input<string>;
    useHyperthreadedCores?: pulumi.Input<string>;
    useLegacyNetlink?: pulumi.Input<string>;
    useObjsync?: pulumi.Input<string>;
    useStandardAlb?: pulumi.Input<string>;
    userAgentCacheConfigs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupUserAgentCacheConfig>[]>;
    userDefinedMetricAge?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    vcenterClusters?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenterCluster>[]>;
    vcenterDatastoreMode?: pulumi.Input<string>;
    vcenterDatastores?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenterDatastore>[]>;
    vcenterDatastoresInclude?: pulumi.Input<string>;
    vcenterFolder?: pulumi.Input<string>;
    vcenterHosts?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenterHost>[]>;
    vcenterParkingVnicPg?: pulumi.Input<string>;
    vcenters?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVcenter>[]>;
    vcpusPerSe?: pulumi.Input<string>;
    vipAsgs?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVipAsg>[]>;
    vnicDhcpIpCheckInterval?: pulumi.Input<string>;
    vnicDhcpIpMaxRetries?: pulumi.Input<string>;
    vnicIpDeleteInterval?: pulumi.Input<string>;
    vnicProbeInterval?: pulumi.Input<string>;
    vnicRpcRetryInterval?: pulumi.Input<string>;
    vnicdbCmdHistorySize?: pulumi.Input<string>;
    vsHostRedundancy?: pulumi.Input<string>;
    vsScaleinTimeout?: pulumi.Input<string>;
    vsScaleinTimeoutForUpgrade?: pulumi.Input<string>;
    vsScaleoutTimeout?: pulumi.Input<string>;
    vsSePrimarySwitchoverAdditionalWaitTime?: pulumi.Input<string>;
    vsSeScaleinAdditionalWaitTime?: pulumi.Input<string>;
    vsSeScaleoutAdditionalWaitTime?: pulumi.Input<string>;
    vsSeScaleoutReadyTimeout?: pulumi.Input<string>;
    vsSwitchoverTimeout?: pulumi.Input<string>;
    vssPlacementEnabled?: pulumi.Input<string>;
    vssPlacements?: pulumi.Input<pulumi.Input<inputs.ServiceenginegroupVssPlacement>[]>;
    wafMempool?: pulumi.Input<string>;
    wafMempoolSize?: pulumi.Input<string>;
}
