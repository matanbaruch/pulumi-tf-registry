// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ipamdnsproviderprofile extends pulumi.CustomResource {
    /**
     * Get an existing Ipamdnsproviderprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpamdnsproviderprofileState, opts?: pulumi.CustomResourceOptions): Ipamdnsproviderprofile {
        return new Ipamdnsproviderprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'avi:index/ipamdnsproviderprofile:Ipamdnsproviderprofile';

    /**
     * Returns true if the given object is an instance of Ipamdnsproviderprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipamdnsproviderprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipamdnsproviderprofile.__pulumiType;
    }

    public readonly allocateIpInVrf!: pulumi.Output<string | undefined>;
    public readonly awsProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileAwsProfile[] | undefined>;
    public readonly azureProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileAzureProfile[] | undefined>;
    public readonly configpbAttributes!: pulumi.Output<outputs.IpamdnsproviderprofileConfigpbAttribute[] | undefined>;
    public readonly customProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileCustomProfile[] | undefined>;
    public readonly gcpProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileGcpProfile[] | undefined>;
    public readonly infobloxProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileInfobloxProfile[] | undefined>;
    public readonly internalProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileInternalProfile[] | undefined>;
    public readonly markers!: pulumi.Output<outputs.IpamdnsproviderprofileMarker[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly ociProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileOciProfile[] | undefined>;
    public readonly openstackProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileOpenstackProfile[] | undefined>;
    public readonly proxyConfigurations!: pulumi.Output<outputs.IpamdnsproviderprofileProxyConfiguration[] | undefined>;
    public readonly tenantRef!: pulumi.Output<string>;
    public readonly tencentProfiles!: pulumi.Output<outputs.IpamdnsproviderprofileTencentProfile[] | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Ipamdnsproviderprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpamdnsproviderprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpamdnsproviderprofileArgs | IpamdnsproviderprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpamdnsproviderprofileState | undefined;
            resourceInputs["allocateIpInVrf"] = state ? state.allocateIpInVrf : undefined;
            resourceInputs["awsProfiles"] = state ? state.awsProfiles : undefined;
            resourceInputs["azureProfiles"] = state ? state.azureProfiles : undefined;
            resourceInputs["configpbAttributes"] = state ? state.configpbAttributes : undefined;
            resourceInputs["customProfiles"] = state ? state.customProfiles : undefined;
            resourceInputs["gcpProfiles"] = state ? state.gcpProfiles : undefined;
            resourceInputs["infobloxProfiles"] = state ? state.infobloxProfiles : undefined;
            resourceInputs["internalProfiles"] = state ? state.internalProfiles : undefined;
            resourceInputs["markers"] = state ? state.markers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ociProfiles"] = state ? state.ociProfiles : undefined;
            resourceInputs["openstackProfiles"] = state ? state.openstackProfiles : undefined;
            resourceInputs["proxyConfigurations"] = state ? state.proxyConfigurations : undefined;
            resourceInputs["tenantRef"] = state ? state.tenantRef : undefined;
            resourceInputs["tencentProfiles"] = state ? state.tencentProfiles : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as IpamdnsproviderprofileArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["allocateIpInVrf"] = args ? args.allocateIpInVrf : undefined;
            resourceInputs["awsProfiles"] = args ? args.awsProfiles : undefined;
            resourceInputs["azureProfiles"] = args ? args.azureProfiles : undefined;
            resourceInputs["configpbAttributes"] = args ? args.configpbAttributes : undefined;
            resourceInputs["customProfiles"] = args ? args.customProfiles : undefined;
            resourceInputs["gcpProfiles"] = args ? args.gcpProfiles : undefined;
            resourceInputs["infobloxProfiles"] = args ? args.infobloxProfiles : undefined;
            resourceInputs["internalProfiles"] = args ? args.internalProfiles : undefined;
            resourceInputs["markers"] = args ? args.markers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ociProfiles"] = args ? args.ociProfiles : undefined;
            resourceInputs["openstackProfiles"] = args ? args.openstackProfiles : undefined;
            resourceInputs["proxyConfigurations"] = args ? args.proxyConfigurations : undefined;
            resourceInputs["tenantRef"] = args ? args.tenantRef : undefined;
            resourceInputs["tencentProfiles"] = args ? args.tencentProfiles : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipamdnsproviderprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipamdnsproviderprofile resources.
 */
export interface IpamdnsproviderprofileState {
    allocateIpInVrf?: pulumi.Input<string>;
    awsProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileAwsProfile>[]>;
    azureProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileAzureProfile>[]>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileConfigpbAttribute>[]>;
    customProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileCustomProfile>[]>;
    gcpProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileGcpProfile>[]>;
    infobloxProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileInfobloxProfile>[]>;
    internalProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileInternalProfile>[]>;
    markers?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileMarker>[]>;
    name?: pulumi.Input<string>;
    ociProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileOciProfile>[]>;
    openstackProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileOpenstackProfile>[]>;
    proxyConfigurations?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileProxyConfiguration>[]>;
    tenantRef?: pulumi.Input<string>;
    tencentProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileTencentProfile>[]>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipamdnsproviderprofile resource.
 */
export interface IpamdnsproviderprofileArgs {
    allocateIpInVrf?: pulumi.Input<string>;
    awsProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileAwsProfile>[]>;
    azureProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileAzureProfile>[]>;
    configpbAttributes?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileConfigpbAttribute>[]>;
    customProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileCustomProfile>[]>;
    gcpProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileGcpProfile>[]>;
    infobloxProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileInfobloxProfile>[]>;
    internalProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileInternalProfile>[]>;
    markers?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileMarker>[]>;
    name?: pulumi.Input<string>;
    ociProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileOciProfile>[]>;
    openstackProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileOpenstackProfile>[]>;
    proxyConfigurations?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileProxyConfiguration>[]>;
    tenantRef?: pulumi.Input<string>;
    tencentProfiles?: pulumi.Input<pulumi.Input<inputs.IpamdnsproviderprofileTencentProfile>[]>;
    type: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
