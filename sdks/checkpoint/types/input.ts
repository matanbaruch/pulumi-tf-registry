// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetManagementAccessRulebaseOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementAccessRulebaseOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementAdministratorPermissionsProfile {
    domain: string;
    profile: string;
}

export interface GetManagementAdministratorPermissionsProfileArgs {
    domain: pulumi.Input<string>;
    profile: pulumi.Input<string>;
}

export interface GetManagementAzureAdContentOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementAzureAdContentOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementDataCenterContentOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementDataCenterContentOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementHttpsRulebaseOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementHttpsRulebaseOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementLsmClusterInterface {
    /**
     * IP address override. Net mask is defined by the attached LSM profile.
     */
    clusterIpAddressOverride?: string;
    /**
     * IP address override. Net mask is defined by the attached LSM profile.
     */
    ipAddressOverride?: string;
    /**
     * Member network override. Net mask is defined by the attached LSM profile.
     */
    memberNetworkOverride?: string;
    /**
     * Interface name.
     */
    name?: string;
    /**
     * New name. Overrides the interface name on profile.
     */
    newName?: string;
}

export interface GetManagementLsmClusterInterfaceArgs {
    /**
     * IP address override. Net mask is defined by the attached LSM profile.
     */
    clusterIpAddressOverride?: pulumi.Input<string>;
    /**
     * IP address override. Net mask is defined by the attached LSM profile.
     */
    ipAddressOverride?: pulumi.Input<string>;
    /**
     * Member network override. Net mask is defined by the attached LSM profile.
     */
    memberNetworkOverride?: pulumi.Input<string>;
    /**
     * Interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * New name. Overrides the interface name on profile.
     */
    newName?: pulumi.Input<string>;
}

export interface GetManagementNatRulebaseOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementNatRulebaseOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementObjectsOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementObjectsOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementShowObjectsOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementShowObjectsOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementShowUpdatableObjectsRepositoryContentOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementShowUpdatableObjectsRepositoryContentOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface GetManagementThreatRulebaseOrder {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: string;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: string;
}

export interface GetManagementThreatRulebaseOrderArgs {
    /**
     * Sorts results by the given field in ascending order.
     */
    asc?: pulumi.Input<string>;
    /**
     * Sorts results by the given field in descending order.
     */
    desc?: pulumi.Input<string>;
}

export interface ManagementAccessRoleMachine {
    /**
     * When source is "Active Directory" use "base-dn" to refine the query in AD database.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * Name or UID of an object selected from source.
     */
    selections?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Active Directory name or UID or Identity Tag.
     */
    source?: pulumi.Input<string>;
}

export interface ManagementAccessRoleTimeouts {
    create?: pulumi.Input<string>;
}

export interface ManagementAccessRoleUser {
    /**
     * When source is "Active Directory" use "base-dn" to refine the query in AD database.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * Name or UID of an object selected from source.
     */
    selections?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Active Directory name or UID or Identity Tag  or Internal User Groups or LDAP groups or Guests.
     */
    source?: pulumi.Input<string>;
}

export interface ManagementAccessRuleUserCheck {
    /**
     * N/A
     */
    confirm?: pulumi.Input<string>;
    /**
     * N/A
     */
    customFrequency?: pulumi.Input<inputs.ManagementAccessRuleUserCheckCustomFrequency>;
    /**
     * N/A
     */
    frequency?: pulumi.Input<string>;
    /**
     * N/A
     */
    interaction?: pulumi.Input<string>;
}

export interface ManagementAccessRuleUserCheckCustomFrequency {
    /**
     * N/A
     */
    every?: pulumi.Input<number>;
    /**
     * N/A
     */
    unit?: pulumi.Input<string>;
}

export interface ManagementAdministratorPermissionsProfile {
    domain: pulumi.Input<string>;
    profile: pulumi.Input<string>;
}

export interface ManagementCheckpointHostInterface {
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * IPv4 network mask length.
     */
    maskLength4?: pulumi.Input<number>;
    /**
     * IPv6 network mask length.
     */
    maskLength6?: pulumi.Input<number>;
    /**
     * Interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * IPv4 network address.
     */
    subnet4?: pulumi.Input<string>;
    /**
     * IPv6 network address.
     */
    subnet6?: pulumi.Input<string>;
    /**
     * IPv4 network mask.
     */
    subnetMask?: pulumi.Input<string>;
}

export interface ManagementCmeAccountsAwsSubAccount {
    /**
     * AWS access key.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The credentials file.
     */
    credentialsFile?: pulumi.Input<string>;
    /**
     * Unique account name for identification.
     */
    name: pulumi.Input<string>;
    /**
     * AWS secret key.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * AWS sts external id, must exist with sts role.
     */
    stsExternalId?: pulumi.Input<string>;
    /**
     * AWS sts role.
     */
    stsRole?: pulumi.Input<string>;
}

export interface ManagementCmeGwConfigurationsAwsBlades {
    /**
     * Anti-Bot blade
     */
    antiBot: pulumi.Input<boolean>;
    /**
     * Anti-Virus blade
     */
    antiVirus: pulumi.Input<boolean>;
    /**
     * Application Control blade
     */
    applicationControl: pulumi.Input<boolean>;
    /**
     * Autonomous Threat Prevention blade.
     */
    autonomousThreatPrevention: pulumi.Input<boolean>;
    /**
     * Content Awareness blade
     */
    contentAwareness: pulumi.Input<boolean>;
    /**
     * HTTPS Inspection blade
     */
    httpsInspection: pulumi.Input<boolean>;
    /**
     * Identity Awareness blade
     */
    identityAwareness: pulumi.Input<boolean>;
    /**
     * IPS blade
     */
    ips: pulumi.Input<boolean>;
    /**
     * IPsec VPN blade
     */
    ipsecVpn: pulumi.Input<boolean>;
    /**
     * Threat Emulation blade
     */
    threatEmulation: pulumi.Input<boolean>;
    /**
     * URL Filtering blade
     */
    urlFiltering: pulumi.Input<boolean>;
    /**
     * VPN blade
     */
    vpn: pulumi.Input<boolean>;
}

export interface ManagementCmeGwConfigurationsAwsRepositoryGatewayScript {
    /**
     * Script name
     */
    name: pulumi.Input<string>;
    /**
     * Script parameters (separated by space)
     */
    parameters?: pulumi.Input<string>;
    /**
     * Script uid
     */
    uid?: pulumi.Input<string>;
}

export interface ManagementCmeGwConfigurationsAzureBlades {
    /**
     * Anti-Bot blade
     */
    antiBot: pulumi.Input<boolean>;
    /**
     * Anti-Virus blade
     */
    antiVirus: pulumi.Input<boolean>;
    /**
     * Application Control blade
     */
    applicationControl: pulumi.Input<boolean>;
    /**
     * Autonomous Threat Prevention blade.
     */
    autonomousThreatPrevention: pulumi.Input<boolean>;
    /**
     * Content Awareness blade
     */
    contentAwareness: pulumi.Input<boolean>;
    /**
     * HTTPS Inspection blade
     */
    httpsInspection: pulumi.Input<boolean>;
    /**
     * Identity Awareness blade
     */
    identityAwareness: pulumi.Input<boolean>;
    /**
     * IPS blade
     */
    ips: pulumi.Input<boolean>;
    /**
     * IPsec VPN blade
     */
    ipsecVpn: pulumi.Input<boolean>;
    /**
     * Threat Emulation blade
     */
    threatEmulation: pulumi.Input<boolean>;
    /**
     * URL Filtering blade
     */
    urlFiltering: pulumi.Input<boolean>;
    /**
     * VPN blade
     */
    vpn: pulumi.Input<boolean>;
}

export interface ManagementCmeGwConfigurationsAzureRepositoryGatewayScript {
    /**
     * Script name
     */
    name: pulumi.Input<string>;
    /**
     * Script parameters (separated by space)
     */
    parameters?: pulumi.Input<string>;
    /**
     * Script uid
     */
    uid?: pulumi.Input<string>;
}

export interface ManagementCmeGwConfigurationsGcpBlades {
    /**
     * Anti-Bot blade
     */
    antiBot: pulumi.Input<boolean>;
    /**
     * Anti-Virus blade
     */
    antiVirus: pulumi.Input<boolean>;
    /**
     * Application Control blade
     */
    applicationControl: pulumi.Input<boolean>;
    /**
     * Autonomous Threat Prevention blade.
     */
    autonomousThreatPrevention: pulumi.Input<boolean>;
    /**
     * Content Awareness blade
     */
    contentAwareness: pulumi.Input<boolean>;
    /**
     * HTTPS Inspection blade
     */
    httpsInspection: pulumi.Input<boolean>;
    /**
     * Identity Awareness blade
     */
    identityAwareness: pulumi.Input<boolean>;
    /**
     * IPS blade
     */
    ips: pulumi.Input<boolean>;
    /**
     * IPsec VPN blade
     */
    ipsecVpn: pulumi.Input<boolean>;
    /**
     * Threat Emulation blade
     */
    threatEmulation: pulumi.Input<boolean>;
    /**
     * URL Filtering blade
     */
    urlFiltering: pulumi.Input<boolean>;
    /**
     * VPN blade
     */
    vpn: pulumi.Input<boolean>;
}

export interface ManagementCmeGwConfigurationsGcpRepositoryGatewayScript {
    /**
     * Script name
     */
    name: pulumi.Input<string>;
    /**
     * Script parameters (separated by space)
     */
    parameters?: pulumi.Input<string>;
    /**
     * Script uid
     */
    uid?: pulumi.Input<string>;
}

export interface ManagementCommandSetGlobalPropertiesNonUniqueIpAddressRange {
    /**
     * The type of the IP Address.
     */
    addressType?: pulumi.Input<string>;
    /**
     * The first IPV4 Address in the range.
     */
    firstIpv4Address?: pulumi.Input<string>;
    /**
     * The first IPV6 Address in the range.
     */
    firstIpv6Address?: pulumi.Input<string>;
    /**
     * The last IPV4 Address in the range.
     */
    lastIpv4Address?: pulumi.Input<string>;
    /**
     * The last IPV6 Address in the range.
     */
    lastIpv6Address?: pulumi.Input<string>;
}

export interface ManagementCommandSetThreatAdvancedSettingsResourceClassification {
    /**
     * On Custom mode, custom resources classification per service.
     */
    customSettings?: pulumi.Input<inputs.ManagementCommandSetThreatAdvancedSettingsResourceClassificationCustomSettings>;
    /**
     * Set all services to the same mode or choose a custom mode.
     */
    mode?: pulumi.Input<string>;
    /**
     * Block connections when the web service is unavailable.
     */
    webServiceFailMode?: pulumi.Input<string>;
}

export interface ManagementCommandSetThreatAdvancedSettingsResourceClassificationCustomSettings {
    /**
     * Custom Settings for Anti Bot Blade.
     */
    antiBot?: pulumi.Input<string>;
    /**
     * Custom Settings for Anti Virus Blade.
     */
    antiVirus?: pulumi.Input<string>;
    /**
     * Custom Settings for Zero Phishing Blade.
     */
    zeroPhishing?: pulumi.Input<string>;
}

export interface ManagementDataCenterObjectAdditionalProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ManagementDataCenterObjectDataCenter {
    automaticRefresh: pulumi.Input<boolean>;
    dataCenterType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    properties: pulumi.Input<pulumi.Input<inputs.ManagementDataCenterObjectDataCenterProperty>[]>;
    uid: pulumi.Input<string>;
}

export interface ManagementDataCenterObjectDataCenterProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ManagementDataCenterQueryQueryRule {
    /**
     * Defines in which Data Center property to query.<br>For key-type "predefined", use these keys: type-in-data-center, name-in-data-center, and ip-address.<br>For key-type "tag", use the Data Center tag key to query.<br>Keys are case-insensitive.
     */
    key?: pulumi.Input<string>;
    /**
     * The type of the "key" parameter.<br>Use "predefined" for these keys: type-in-data-center, name-in-data-center, and ip-address.<br>Use "tag" to query the Data Center tag�s property.
     */
    keyType?: pulumi.Input<string>;
    /**
     * The value(s) of the Data Center property to match the Query Rule.<br>Values are case-insensitive.<br>There is an 'OR' operation between multiple values.<br>For key-type "predefined" and key 'ip-address', the values must be an IPv4 or IPv6 address.<br>For key-type "tag", the values must be the Data Center tag values.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ManagementDomainPermissionsProfileAccessControl {
    /**
     * Allow editing of the following objet types: VPN Community, Access Role, Custom application group,Custom application, Custom category, Limit, Application - Match Settings, Application Category - Match Settings,Override Categorization, Application and URL filtering blade - Advanced Settings, Content Awareness blade - Advanced Settings.
     */
    accessControlObjectsAndSettings?: pulumi.Input<string>;
    /**
     * Install Application and URL Filtering updates.
     */
    appControlAndUrlFilteringUpdate?: pulumi.Input<boolean>;
    /**
     * Configure DLP rules and Policies.
     */
    dlpPolicy?: pulumi.Input<string>;
    /**
     * Work with Access Control rules that control traffic to and from specified countries.
     */
    geoControlPolicy?: pulumi.Input<string>;
    /**
     * Install Access Control Policies.
     */
    installPolicy?: pulumi.Input<boolean>;
    /**
     * Work with NAT in Access Control rules.
     */
    natPolicy?: pulumi.Input<string>;
    /**
     * Layer editing permissions.<br>Available only if show-policy is set to true.
     */
    policyLayers?: pulumi.Input<inputs.ManagementDomainPermissionsProfileAccessControlPolicyLayers>;
    /**
     * Work with QoS Policies and rules.
     */
    qosPolicy?: pulumi.Input<string>;
    /**
     * Select to let administrators work with Access Control rules and NAT rules. If not selected, administrators cannot see these rules.
     */
    showPolicy?: pulumi.Input<boolean>;
}

export interface ManagementDomainPermissionsProfileAccessControlPolicyLayers {
    /**
     * Use Application and URL Filtering in Access Control rules.<br>Available only if edit-layers is set to "By Software Blades".
     */
    appControlAndUrlFiltering?: pulumi.Input<boolean>;
    /**
     * Use specified data types in Access Control rules.<br>Available only if edit-layers is set to "By Software Blades".
     */
    contentAwareness?: pulumi.Input<boolean>;
    /**
     * "By Software Blades" - Edit Access Control layers that contain the blades enabled in the Permissions Profile.<br>"By Selected Profile In A Layer Editor" - Administrators can only edit the layer if the Access Control layer editor gives editing permission to their profiles.
     */
    editLayers?: pulumi.Input<string>;
    /**
     * Work with Access Control and other Software Blades that do not have their own Policies.<br>Available only if edit-layers is set to "By Software Blades".
     */
    firewall?: pulumi.Input<boolean>;
    /**
     * Work with Mobile Access rules.<br>Available only if edit-layers is set to "By Software Blades".
     */
    mobileAccess?: pulumi.Input<boolean>;
}

export interface ManagementDomainServer {
    /**
     * Activate domain server. Only one domain server is allowed to be active.
     */
    active?: pulumi.Input<boolean>;
    /**
     * IPv4 address.
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Multi Domain server name or UID.
     */
    multiDomainServer: pulumi.Input<string>;
    /**
     * Object name. Must be unique in the domain.
     */
    name: pulumi.Input<string>;
    /**
     * Set this value to be true to prevent starting the new created domain.
     */
    skipStartDomainServer?: pulumi.Input<boolean>;
    /**
     * Domain server type.
     */
    type?: pulumi.Input<string>;
}

export interface ManagementExceptionGroupAppliedThreatRule {
    /**
     * The layer of the threat rule to which the group is to be attached.
     */
    layer?: pulumi.Input<string>;
    /**
     * The name of the threat rule to which the group is to be attached.
     */
    name?: pulumi.Input<string>;
    /**
     * Position in the rulebase.
     */
    position: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ManagementGaiaBestPracticeRegulation {
    regulationName: pulumi.Input<string>;
    requirementDescription: pulumi.Input<string>;
    requirementId: pulumi.Input<string>;
    requirementStatus: pulumi.Input<string>;
}

export interface ManagementGaiaBestPracticeRelevantObject {
    enabled: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    status: pulumi.Input<string>;
    uid: pulumi.Input<string>;
}

export interface ManagementHostHostServers {
    /**
     * Gets True if this server is a DNS Server.
     */
    dnsServer?: pulumi.Input<boolean>;
    /**
     * Gets True if this server is a Mail Server.
     */
    mailServer?: pulumi.Input<boolean>;
    /**
     * Gets True if this server is a Web Server.
     */
    webServer?: pulumi.Input<boolean>;
    /**
     * Web Server configuration.
     */
    webServerConfig?: pulumi.Input<inputs.ManagementHostHostServersWebServerConfig>;
}

export interface ManagementHostHostServersWebServerConfig {
    /**
     * Server additional ports.
     */
    additionalPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Application engines of this web server.
     */
    applicationEngines?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether server listens to standard port.
     */
    listenStandardPort?: pulumi.Input<boolean>;
    /**
     * Operating System.
     */
    operatingSystem?: pulumi.Input<string>;
    /**
     * Network object which protects this server identified by the name or UID.
     */
    protectedBy?: pulumi.Input<string>;
}

export interface ManagementHostInterface {
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * IPv4 network mask length.
     */
    maskLength4?: pulumi.Input<number>;
    /**
     * IPv6 network mask length.
     */
    maskLength6?: pulumi.Input<number>;
    /**
     * Object name. Should be unique in the domain.
     */
    name?: pulumi.Input<string>;
    /**
     * IPv4 network address.
     */
    subnet4?: pulumi.Input<string>;
    /**
     * IPv6 network address.
     */
    subnet6?: pulumi.Input<string>;
}

export interface ManagementIdpAdministratorGroupPermissionsProfile {
    /**
     * N/A
     */
    domain?: pulumi.Input<string>;
    /**
     * Permission profile.
     */
    profile?: pulumi.Input<string>;
}

export interface ManagementInteroperableDeviceGroup {
    color: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    uid: pulumi.Input<string>;
}

export interface ManagementInteroperableDeviceInterface {
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.
     */
    domainsToProcesses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * IPv4 address.
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * IPv4 network mask length.
     */
    ipv4MaskLength?: pulumi.Input<string>;
    /**
     * IPv4 network address.
     */
    ipv4NetworkMask?: pulumi.Input<string>;
    /**
     * IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * IPv6 network mask length.
     */
    ipv6MaskLength?: pulumi.Input<string>;
    /**
     * IPv6 network address.
     */
    ipv6NetworkMask?: pulumi.Input<string>;
    /**
     * Object name. Must be unique in the domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Topology configuration.
     */
    topology?: pulumi.Input<string>;
    /**
     * Internal topology settings.
     */
    topologySettings?: pulumi.Input<inputs.ManagementInteroperableDeviceInterfaceTopologySettings>;
}

export interface ManagementInteroperableDeviceInterfaceTopologySettings {
    /**
     * Whether this interface leads to demilitarized zone (perimeter network).
     */
    interfaceLeadsToDmz?: pulumi.Input<boolean>;
    /**
     * Network settings behind this interface.
     */
    ipAddressBehindThisInterface?: pulumi.Input<string>;
    /**
     * Network behind this interface.
     */
    specificNetwork?: pulumi.Input<string>;
}

export interface ManagementLsmClusterDynamicObject {
    /**
     * Comments.
     */
    comments?: pulumi.Input<string>;
    /**
     * Object name. Must be unique in the domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Single IP-address or a range of addresses.
     */
    resolvedIpAddresses?: pulumi.Input<pulumi.Input<inputs.ManagementLsmClusterDynamicObjectResolvedIpAddress>[]>;
    /**
     * UID
     */
    uid?: pulumi.Input<string>;
}

export interface ManagementLsmClusterDynamicObjectResolvedIpAddress {
    /**
     * IPv4 Address.
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * IPv4 Address range.
     */
    ipv4AddressRange?: pulumi.Input<inputs.ManagementLsmClusterDynamicObjectResolvedIpAddressIpv4AddressRange>;
}

export interface ManagementLsmClusterDynamicObjectResolvedIpAddressIpv4AddressRange {
    /**
     * First IPv4 address of the IP address range.
     */
    fromIpv4Address?: pulumi.Input<string>;
    /**
     * Last IPv4 address of the IP address range.
     */
    toIpv4Address?: pulumi.Input<string>;
}

export interface ManagementLsmClusterInterface {
    /**
     * IP address override. Net mask is defined by the attached LSM profile.
     */
    ipAddressOverride?: pulumi.Input<string>;
    /**
     * Member network override. Net mask is defined by the attached LSM profile.
     */
    memberNetworkOverride?: pulumi.Input<string>;
    /**
     * Interface name.
     */
    name?: pulumi.Input<string>;
    /**
     * New name. Overrides the interface name on profile.
     */
    newName?: pulumi.Input<string>;
}

export interface ManagementLsmClusterMember {
    /**
     * Device ID.
     */
    deviceId?: pulumi.Input<string>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Interfaces
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ManagementLsmClusterMemberInterface>[]>;
    /**
     * Main ip address
     */
    mainIpAddress?: pulumi.Input<string>;
    /**
     * Member UID
     */
    memberUid?: pulumi.Input<string>;
    /**
     * Member Name. Consists of the member name in the LSM profile and the name or prefix or suffix of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning settings. This field is relevant just for SMB clusters.
     */
    provisioningSettings?: pulumi.Input<inputs.ManagementLsmClusterMemberProvisioningSettings>;
    /**
     * Provisioning state. This field is relevant just for SMB clusters. By default the state is 'manual'- enable provisioning but not attach to profile.If 'using-profile' state is provided a provisioning profile must be provided in provisioning-settings.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * Secure Internal Communication.
     */
    sic?: pulumi.Input<inputs.ManagementLsmClusterMemberSic>;
    /**
     * Secure Internal Communication name
     */
    sicName?: pulumi.Input<string>;
    /**
     * Secure Internal Communication state
     */
    sicState?: pulumi.Input<string>;
}

export interface ManagementLsmClusterMemberInterface {
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ManagementLsmClusterMemberProvisioningSettings {
    /**
     * Provisioning profile.
     */
    provisioningProfile?: pulumi.Input<string>;
}

export interface ManagementLsmClusterMemberSic {
    /**
     * IP address. When IP address is provided- initiate trusted communication immediately using this IP address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * One-time password. When one-time password is provided without ip-address- trusted communication is automatically initiated  when the gateway connects to the Security Management server for the first time.
     */
    oneTimePassword?: pulumi.Input<string>;
}

export interface ManagementLsmClusterTopology {
    /**
     * A list of IP-addresses ranges, defined the VPN community network.This field is relevant only when manual option of vpn-domain is checked.
     */
    manualVpnDomains?: pulumi.Input<pulumi.Input<inputs.ManagementLsmClusterTopologyManualVpnDomain>[]>;
    /**
     * VPN Domain type.  'external-interfaces-only' is relevnt only for Gaia devices. 'hide-behind-gateway-external-ip-address' is relevant only for SMB devices.
     */
    vpnDomain?: pulumi.Input<string>;
}

export interface ManagementLsmClusterTopologyManualVpnDomain {
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * First IPv4 address of the IP address range.
     */
    fromIpv4Address?: pulumi.Input<string>;
    /**
     * Last IPv4 address of the IP address range.
     */
    toIpv4Address?: pulumi.Input<string>;
}

export interface ManagementLsmGatewayDynamicObject {
    /**
     * Comments.
     */
    comments?: pulumi.Input<string>;
    /**
     * Object name. Must be unique in the domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Single IP-address or a range of addresses.
     */
    resolvedIpAddresses?: pulumi.Input<pulumi.Input<inputs.ManagementLsmGatewayDynamicObjectResolvedIpAddress>[]>;
    /**
     * UID.
     */
    uid?: pulumi.Input<string>;
}

export interface ManagementLsmGatewayDynamicObjectResolvedIpAddress {
    /**
     * IPv4 Address.
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * IPv4 Address range.
     */
    ipv4AddressRange?: pulumi.Input<inputs.ManagementLsmGatewayDynamicObjectResolvedIpAddressIpv4AddressRange>;
}

export interface ManagementLsmGatewayDynamicObjectResolvedIpAddressIpv4AddressRange {
    /**
     * First IPv4 address of the IP address range.
     */
    fromIpv4Address?: pulumi.Input<string>;
    /**
     * Last IPv4 address of the IP address range.
     */
    toIpv4Address?: pulumi.Input<string>;
}

export interface ManagementLsmGatewayTopology {
    /**
     * A list of IP-addresses ranges, defined the VPN community network.This field is relevant only when 'manual' option of vpn-domain is checked.
     */
    manualVpnDomains?: pulumi.Input<pulumi.Input<inputs.ManagementLsmGatewayTopologyManualVpnDomain>[]>;
    /**
     * VPN Domain type.  'external-interfaces-only' is relevnt only for Gaia devices. 'hide-behind-gateway-external-ip-address' is relevant only for SMB devices.
     */
    vpnDomain?: pulumi.Input<string>;
}

export interface ManagementLsmGatewayTopologyManualVpnDomain {
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * First IPv4 address of the IP address range.
     */
    fromIpv4Address?: pulumi.Input<string>;
    /**
     * Last IPv4 address of the IP address range.
     */
    toIpv4Address?: pulumi.Input<string>;
}

export interface ManagementNetworkFeedCustomHeader {
    /**
     * The name of the HTTP header we wish to add.
     */
    headerName?: pulumi.Input<string>;
    /**
     * The name of the HTTP value we wish to add.
     */
    headerValue?: pulumi.Input<string>;
}

export interface ManagementServiceGtpRadioAccessTechnology {
    /**
     * (6).
     */
    eutran?: pulumi.Input<boolean>;
    /**
     * (4).
     */
    gan?: pulumi.Input<boolean>;
    /**
     * (2).
     */
    geran?: pulumi.Input<boolean>;
    /**
     * (5).
     */
    hspaEvolution?: pulumi.Input<boolean>;
    /**
     * (8).
     */
    nbIot?: pulumi.Input<boolean>;
    /**
     * (9-255).
     */
    otherTypesRange?: pulumi.Input<inputs.ManagementServiceGtpRadioAccessTechnologyOtherTypesRange>;
    /**
     * (1).
     */
    utran?: pulumi.Input<boolean>;
    /**
     * (7).
     */
    virtual?: pulumi.Input<boolean>;
    /**
     * (3).
     */
    wlan?: pulumi.Input<boolean>;
}

export interface ManagementServiceGtpRadioAccessTechnologyOtherTypesRange {
    enable?: pulumi.Input<boolean>;
    /**
     * Other RAT Types. To specify other RAT ranges, add a hyphen between the lowest and the highest numbers, for example: 11-15. Multiple Ranges can be chosen when separated with comma.
     */
    types?: pulumi.Input<string>;
}

export interface ManagementServiceGtpSelectionMode {
    enable?: pulumi.Input<boolean>;
    /**
     * The mode as integer. [0 - Verified, 1 - MS - Not verified, 2 - Network - Not verified].
     */
    mode?: pulumi.Input<number>;
}

export interface ManagementSetThreatProtectionOverride {
    /**
     * Protection action.
     */
    action?: pulumi.Input<string>;
    /**
     * Capture packets.
     */
    capturePackets?: pulumi.Input<boolean>;
    /**
     * Profile name.
     */
    profile?: pulumi.Input<string>;
    /**
     * Tracking method for protection.
     */
    track?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterAdvancedSettings {
    /**
     * Handling established connections when installing a new policy.
     */
    connectionPersistence?: pulumi.Input<string>;
    /**
     * SAM.
     */
    sam?: pulumi.Input<inputs.ManagementSimpleClusterAdvancedSettingsSam>;
}

export interface ManagementSimpleClusterAdvancedSettingsSam {
    /**
     * Forward SAM clients' requests to other SAM servers.
     */
    forwardToOtherSamServers?: pulumi.Input<boolean>;
    /**
     * Purge SAM File.
     */
    purgeSamFile?: pulumi.Input<inputs.ManagementSimpleClusterAdvancedSettingsSamPurgeSamFile>;
    /**
     * Use early versions compatibility mode.
     */
    useEarlyVersions?: pulumi.Input<inputs.ManagementSimpleClusterAdvancedSettingsSamUseEarlyVersions>;
}

export interface ManagementSimpleClusterAdvancedSettingsSamPurgeSamFile {
    /**
     * Purge SAM File.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Purge SAM File When it Reaches to.
     */
    purgeWhenSizeReachesTo?: pulumi.Input<number>;
}

export interface ManagementSimpleClusterAdvancedSettingsSamUseEarlyVersions {
    /**
     * Early versions compatibility mode.
     */
    compatibilityMode?: pulumi.Input<string>;
    /**
     * Use early versions compatibility mode.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterHttpsInspection {
    /**
     * Set to be true in order to bypass all requests (Fail-open) in case of internal system error.
     */
    bypassOnFailure?: pulumi.Input<inputs.ManagementSimpleClusterHttpsInspectionBypassOnFailure>;
    /**
     * Set to be true in order to drop traffic from servers with expired server certificate.
     */
    denyExpiredServerCert?: pulumi.Input<inputs.ManagementSimpleClusterHttpsInspectionDenyExpiredServerCert>;
    /**
     * Set to be true in order to drop traffic from servers with revoked server certificate (validate CRL).
     */
    denyRevokedServerCert?: pulumi.Input<inputs.ManagementSimpleClusterHttpsInspectionDenyRevokedServerCert>;
    /**
     * Set to be true in order to drop traffic from servers with untrusted server certificate.
     */
    denyUntrustedServerCert?: pulumi.Input<inputs.ManagementSimpleClusterHttpsInspectionDenyUntrustedServerCert>;
    /**
     * Set to 'background' in order to allowed requests until categorization is complete.
     */
    siteCategorizationAllowMode?: pulumi.Input<inputs.ManagementSimpleClusterHttpsInspectionSiteCategorizationAllowMode>;
}

export interface ManagementSimpleClusterHttpsInspectionBypassOnFailure {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterHttpsInspectionDenyExpiredServerCert {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterHttpsInspectionDenyRevokedServerCert {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterHttpsInspectionDenyUntrustedServerCert {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterHttpsInspectionSiteCategorizationAllowMode {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettings {
    /**
     * Enable Browser Based Authentication source.
     */
    browserBasedAuthentication?: pulumi.Input<boolean>;
    /**
     * Browser Based Authentication settings.
     */
    browserBasedAuthenticationSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettings>;
    /**
     * Enable Identity Agent source.
     */
    identityAgent?: pulumi.Input<boolean>;
    /**
     * Identity Agent settings.
     */
    identityAgentSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettings>;
    /**
     * Enable Identity Collector source.
     */
    identityCollector?: pulumi.Input<boolean>;
    /**
     * Identity Collector settings.
     */
    identityCollectorSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettings>;
    /**
     * Identity sharing settings.
     */
    identitySharingSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentitySharingSettings>;
    /**
     * Identity-Awareness Proxy settings.
     */
    proxySettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsProxySettings>;
    /**
     * Enable Remote Access Identity source.
     */
    remoteAccess?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettings {
    /**
     * Authentication Settings for Browser Based Authentication.
     */
    authenticationSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettings>;
    /**
     * Browser Based Authentication portal settings.
     */
    browserBasedAuthenticationPortalSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettings>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettings {
    /**
     * Authentication method.
     */
    authenticationMethod?: pulumi.Input<string>;
    /**
     * Identity provider object identified by the name or UID. Must be set when "authentication-method" was selected to be "identity provider".
     */
    identityProviders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Radius server object identified by the name or UID. Must be set when "authentication-method" was selected to be "radius".
     */
    radius?: pulumi.Input<string>;
    /**
     * Users directories.
     */
    usersDirectories?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettingsUsersDirectories>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettingsUsersDirectories {
    /**
     * External user profile.
     */
    externalUserProfile?: pulumi.Input<boolean>;
    /**
     * Internal users.
     */
    internalUsers?: pulumi.Input<boolean>;
    /**
     * LDAP AU objects identified by the name or UID. Must be set when "users-from-external-directories" was selected to be "specific".
     */
    specifics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Users from external directories.
     */
    usersFromExternalDirectories?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibility>;
    /**
     * Configuration of the portal certificate settings.
     */
    certificateSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsCertificateSettings>;
    /**
     * Configuration of the portal web settings.
     */
    portalWebSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsPortalWebSettings>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsCertificateSettings {
    /**
     * The certificate file encoded in Base64 with padding.  This file must be in the *.p12 format.
     */
    base64Certificate?: pulumi.Input<string>;
    /**
     * Password (encoded in Base64 with padding) for the certificate file.
     */
    base64Password?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsPortalWebSettings {
    /**
     * List of URL aliases that are redirected to the main portal URL.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The main URL for the web portal.
     */
    mainUrl?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettings {
    /**
     * Agents send keepalive period (minutes).
     */
    agentsIntervalKeepalive?: pulumi.Input<number>;
    /**
     * Authentication Settings for Identity Agent.
     */
    authenticationSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettings>;
    /**
     * Identity Agent accessibility settings.
     */
    identityAgentPortalSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettings>;
    /**
     * Agent reauthenticate time interval (minutes).
     */
    userReauthenticateInterval?: pulumi.Input<number>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettings {
    /**
     * Authentication method.
     */
    authenticationMethod?: pulumi.Input<string>;
    /**
     * Radius server object identified by the name or UID. Must be set when "authentication-method" was selected to be "radius".
     */
    radius?: pulumi.Input<string>;
    /**
     * Users directories.
     */
    usersDirectories?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettingsUsersDirectories>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettingsUsersDirectories {
    /**
     * External user profile.
     */
    externalUserProfile?: pulumi.Input<boolean>;
    /**
     * Internal users.
     */
    internalUsers?: pulumi.Input<boolean>;
    /**
     * LDAP AU objects identified by the name or UID. Must be set when "users-from-external-directories" was selected to be "specific".
     */
    specifics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Users from external directories.
     */
    usersFromExternalDirectories?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibility>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettings {
    /**
     * Authentication Settings for Identity Collector.
     */
    authenticationSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettings>;
    /**
     * Authorized Clients.
     */
    authorizedClients: pulumi.Input<pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsAuthorizedClient>[]>;
    /**
     * Identity Collector accessibility settings.
     */
    clientAccessPermissions?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissions>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettings {
    /**
     * Users directories.
     */
    usersDirectories?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettingsUsersDirectories>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettingsUsersDirectories {
    /**
     * External user profile.
     */
    externalUserProfile?: pulumi.Input<boolean>;
    /**
     * Internal users.
     */
    internalUsers?: pulumi.Input<boolean>;
    /**
     * LDAP AU objects identified by the name or UID. Must be set when "users-from-external-directories" was selected to be "specific".
     */
    specifics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Users from external directories.
     */
    usersFromExternalDirectories?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsAuthorizedClient {
    /**
     * Host / Network Group Name or UID.
     */
    client?: pulumi.Input<string>;
    /**
     * Client Secret.
     */
    clientSecret?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissions {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibility>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsIdentitySharingSettings {
    /**
     * Enable receiving identity from other gateways.
     */
    receiveFromOtherGateways?: pulumi.Input<boolean>;
    /**
     * Gateway(s) to receive identity from.
     */
    receiveFroms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable identity sharing with other gateways.
     */
    shareWithOtherGateways?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterIdentityAwarenessSettingsProxySettings {
    /**
     * Whether to use X-Forward-For HTTP header, which is added by the proxy server to keep track of the original source IP.
     */
    detectUsingXForwardFor?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterInterface {
    /**
     * Anti spoofing.
     */
    antiSpoofing?: pulumi.Input<boolean>;
    /**
     * Anti spoofing settings
     */
    antiSpoofingSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Cluster interface type.
     */
    interfaceType: pulumi.Input<string>;
    /**
     * IPv4 address.
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * IPv4 network mask length.
     */
    ipv4MaskLength?: pulumi.Input<string>;
    /**
     * IPv4 network address.
     */
    ipv4NetworkMask?: pulumi.Input<string>;
    /**
     * IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * IPv6 network mask length.
     */
    ipv6MaskLength?: pulumi.Input<string>;
    /**
     * IPv6 network address.
     */
    ipv6NetworkMask?: pulumi.Input<string>;
    /**
     * Multicast IP Address.
     */
    multicastAddress?: pulumi.Input<string>;
    /**
     * Multicast Address Type.
     */
    multicastAddressType?: pulumi.Input<string>;
    /**
     * Object name. Should be unique in the domain.
     */
    name: pulumi.Input<string>;
    /**
     * Security zone.
     */
    securityZone?: pulumi.Input<boolean>;
    /**
     * Security zone settings.
     */
    securityZoneSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Topology.
     */
    topology?: pulumi.Input<string>;
    /**
     * Shows the automatic topology calculation.
     */
    topologyAutomaticCalculation?: pulumi.Input<string>;
    /**
     * Topology settings.
     */
    topologySettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ManagementSimpleClusterMember {
    /**
     * Network interfaces.
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.ManagementSimpleClusterMemberInterface>[]>;
    /**
     * IPv4 or IPv6 address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Object name. Should be unique in the domain.
     */
    name: pulumi.Input<string>;
    /**
     * SIC one time password.
     */
    oneTimePassword?: pulumi.Input<string>;
    /**
     * The member priority on the cluster.
     */
    priority?: pulumi.Input<number>;
    /**
     * Secure Internal Communication state.
     */
    sicMessage?: pulumi.Input<string>;
    /**
     * Secure Internal Communication name.
     */
    sicState?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterMemberInterface {
    /**
     * IPv4 address.
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * IPv4 network mask length.
     */
    ipv4MaskLength?: pulumi.Input<string>;
    /**
     * IPv4 network address.
     */
    ipv4NetworkMask?: pulumi.Input<string>;
    /**
     * IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * IPv6 network mask length.
     */
    ipv6MaskLength?: pulumi.Input<string>;
    /**
     * IPv6 network address.
     */
    ipv6NetworkMask?: pulumi.Input<string>;
    /**
     * Object name. Should be unique in the domain.
     */
    name: pulumi.Input<string>;
}

export interface ManagementSimpleClusterPlatformPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleClusterPlatformPortalSettingsAccessibility>;
    /**
     * Configuration of the portal certificate settings.
     */
    certificateSettings?: pulumi.Input<inputs.ManagementSimpleClusterPlatformPortalSettingsCertificateSettings>;
    /**
     * Configuration of the portal web settings.
     */
    portalWebSettings?: pulumi.Input<inputs.ManagementSimpleClusterPlatformPortalSettingsPortalWebSettings>;
}

export interface ManagementSimpleClusterPlatformPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleClusterPlatformPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleClusterPlatformPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterPlatformPortalSettingsCertificateSettings {
    /**
     * The certificate file encoded in Base64 with padding.  This file must be in the *.p12 format.
     */
    base64Certificate?: pulumi.Input<string>;
    /**
     * Password (encoded in Base64 with padding) for the certificate file.
     */
    base64Password?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterPlatformPortalSettingsPortalWebSettings {
    /**
     * List of URL aliases that are redirected to the main portal URL.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The main URL for the web portal.
     */
    mainUrl?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterUsercheckPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleClusterUsercheckPortalSettingsAccessibility>;
    /**
     * Configuration of the portal certificate settings.
     */
    certificateSettings?: pulumi.Input<inputs.ManagementSimpleClusterUsercheckPortalSettingsCertificateSettings>;
    /**
     * State of the web portal (enabled or disabled). The supported blades are: {'Application Control', 'URL Filtering', 'Data Loss Prevention', 'Anti Virus', 'Anti Bot', 'Threat Emulation', 'Threat Extraction', 'Data Awareness'}.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Configuration of the portal web settings.
     */
    portalWebSettings?: pulumi.Input<inputs.ManagementSimpleClusterUsercheckPortalSettingsPortalWebSettings>;
}

export interface ManagementSimpleClusterUsercheckPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleClusterUsercheckPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleClusterUsercheckPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleClusterUsercheckPortalSettingsCertificateSettings {
    /**
     * The certificate file encoded in Base64 with padding.  This file must be in the *.p12 format.
     */
    base64Certificate?: pulumi.Input<string>;
    /**
     * Password (encoded in Base64 with padding) for the certificate file.
     */
    base64Password?: pulumi.Input<string>;
}

export interface ManagementSimpleClusterUsercheckPortalSettingsPortalWebSettings {
    /**
     * List of URL aliases that are redirected to the main portal URL.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The main URL for the web portal.
     */
    mainUrl?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayAdvancedSettings {
    /**
     * Handling established connections when installing a new policy.
     */
    connectionPersistence?: pulumi.Input<string>;
    /**
     * SAM.
     */
    sam?: pulumi.Input<inputs.ManagementSimpleGatewayAdvancedSettingsSam>;
}

export interface ManagementSimpleGatewayAdvancedSettingsSam {
    /**
     * Forward SAM clients' requests to other SAM servers.
     */
    forwardToOtherSamServers?: pulumi.Input<boolean>;
    /**
     * Purge SAM File.
     */
    purgeSamFile?: pulumi.Input<inputs.ManagementSimpleGatewayAdvancedSettingsSamPurgeSamFile>;
    /**
     * Use early versions compatibility mode.
     */
    useEarlyVersions?: pulumi.Input<inputs.ManagementSimpleGatewayAdvancedSettingsSamUseEarlyVersions>;
}

export interface ManagementSimpleGatewayAdvancedSettingsSamPurgeSamFile {
    /**
     * Purge SAM File.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Purge SAM File When it Reaches to.
     */
    purgeWhenSizeReachesTo?: pulumi.Input<number>;
}

export interface ManagementSimpleGatewayAdvancedSettingsSamUseEarlyVersions {
    /**
     * Early versions compatibility mode.
     */
    compatibilityMode?: pulumi.Input<string>;
    /**
     * Use early versions compatibility mode.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayApplicationControlAndUrlFilteringSettings {
    /**
     * Whether to override global settings or not.
     */
    globalSettingsMode?: pulumi.Input<string>;
    /**
     * override global settings object.
     */
    overrideGlobalSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ManagementSimpleGatewayHttpsInspection {
    /**
     * Set to be true in order to bypass all requests (Fail-open) in case of internal system error.
     */
    bypassOnFailure?: pulumi.Input<inputs.ManagementSimpleGatewayHttpsInspectionBypassOnFailure>;
    /**
     * Set to be true in order to drop traffic from servers with expired server certificate.
     */
    denyExpiredServerCert?: pulumi.Input<inputs.ManagementSimpleGatewayHttpsInspectionDenyExpiredServerCert>;
    /**
     * Set to be true in order to drop traffic from servers with revoked server certificate (validate CRL).
     */
    denyRevokedServerCert?: pulumi.Input<inputs.ManagementSimpleGatewayHttpsInspectionDenyRevokedServerCert>;
    /**
     * Set to be true in order to drop traffic from servers with untrusted server certificate.
     */
    denyUntrustedServerCert?: pulumi.Input<inputs.ManagementSimpleGatewayHttpsInspectionDenyUntrustedServerCert>;
    /**
     * Set to 'background' in order to allowed requests until categorization is complete.
     */
    siteCategorizationAllowMode?: pulumi.Input<inputs.ManagementSimpleGatewayHttpsInspectionSiteCategorizationAllowMode>;
}

export interface ManagementSimpleGatewayHttpsInspectionBypassOnFailure {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayHttpsInspectionDenyExpiredServerCert {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayHttpsInspectionDenyRevokedServerCert {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayHttpsInspectionDenyUntrustedServerCert {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayHttpsInspectionSiteCategorizationAllowMode {
    /**
     * Override profile of global configuration.
     */
    overrideProfile?: pulumi.Input<boolean>;
    /**
     * Override value.<br><font color="red">Required only for</font> 'override-profile' is True.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettings {
    /**
     * Enable Browser Based Authentication source.
     */
    browserBasedAuthentication?: pulumi.Input<boolean>;
    /**
     * Browser Based Authentication settings.
     */
    browserBasedAuthenticationSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettings>;
    /**
     * Enable Identity Agent source.
     */
    identityAgent?: pulumi.Input<boolean>;
    /**
     * Identity Agent settings.
     */
    identityAgentSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettings>;
    /**
     * Enable Identity Collector source.
     */
    identityCollector?: pulumi.Input<boolean>;
    /**
     * Identity Collector settings.
     */
    identityCollectorSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettings>;
    /**
     * Identity sharing settings.
     */
    identitySharingSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentitySharingSettings>;
    /**
     * Identity-Awareness Proxy settings.
     */
    proxySettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsProxySettings>;
    /**
     * Enable Remote Access Identity source.
     */
    remoteAccess?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettings {
    /**
     * Authentication Settings for Browser Based Authentication.
     */
    authenticationSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettings>;
    /**
     * Browser Based Authentication portal settings.
     */
    browserBasedAuthenticationPortalSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettings>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettings {
    /**
     * Authentication method.
     */
    authenticationMethod?: pulumi.Input<string>;
    /**
     * Identity provider object identified by the name or UID. Must be set when "authentication-method" was selected to be "identity provider".
     */
    identityProviders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Radius server object identified by the name or UID. Must be set when "authentication-method" was selected to be "radius".
     */
    radius?: pulumi.Input<string>;
    /**
     * Users directories.
     */
    usersDirectories?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettingsUsersDirectories>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsAuthenticationSettingsUsersDirectories {
    /**
     * External user profile.
     */
    externalUserProfile?: pulumi.Input<boolean>;
    /**
     * Internal users.
     */
    internalUsers?: pulumi.Input<boolean>;
    /**
     * LDAP AU objects identified by the name or UID. Must be set when "users-from-external-directories" was selected to be "specific".
     */
    specifics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Users from external directories.
     */
    usersFromExternalDirectories?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibility>;
    /**
     * Configuration of the portal certificate settings.
     */
    certificateSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsCertificateSettings>;
    /**
     * Configuration of the portal web settings.
     */
    portalWebSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsPortalWebSettings>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsCertificateSettings {
    /**
     * The certificate file encoded in Base64 with padding.  This file must be in the *.p12 format.
     */
    base64Certificate?: pulumi.Input<string>;
    /**
     * Password (encoded in Base64 with padding) for the certificate file.
     */
    base64Password?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsBrowserBasedAuthenticationSettingsBrowserBasedAuthenticationPortalSettingsPortalWebSettings {
    /**
     * List of URL aliases that are redirected to the main portal URL.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The main URL for the web portal.
     */
    mainUrl?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettings {
    /**
     * Agents send keepalive period (minutes).
     */
    agentsIntervalKeepalive?: pulumi.Input<number>;
    /**
     * Authentication Settings for Identity Agent.
     */
    authenticationSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettings>;
    /**
     * Identity Agent accessibility settings.
     */
    identityAgentPortalSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettings>;
    /**
     * Agent reauthenticate time interval (minutes).
     */
    userReauthenticateInterval?: pulumi.Input<number>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettings {
    /**
     * Authentication method.
     */
    authenticationMethod?: pulumi.Input<string>;
    /**
     * Radius server object identified by the name or UID. Must be set when "authentication-method" was selected to be "radius".
     */
    radius?: pulumi.Input<string>;
    /**
     * Users directories.
     */
    usersDirectories?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettingsUsersDirectories>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsAuthenticationSettingsUsersDirectories {
    /**
     * External user profile.
     */
    externalUserProfile?: pulumi.Input<boolean>;
    /**
     * Internal users.
     */
    internalUsers?: pulumi.Input<boolean>;
    /**
     * LDAP AU objects identified by the name or UID. Must be set when "users-from-external-directories" was selected to be "specific".
     */
    specifics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Users from external directories.
     */
    usersFromExternalDirectories?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibility>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityAgentSettingsIdentityAgentPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettings {
    /**
     * Authentication Settings for Identity Collector.
     */
    authenticationSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettings>;
    /**
     * Authorized Clients.
     */
    authorizedClients: pulumi.Input<pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsAuthorizedClient>[]>;
    /**
     * Identity Collector accessibility settings.
     */
    clientAccessPermissions?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissions>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettings {
    /**
     * Users directories.
     */
    usersDirectories?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettingsUsersDirectories>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsAuthenticationSettingsUsersDirectories {
    /**
     * External user profile.
     */
    externalUserProfile?: pulumi.Input<boolean>;
    /**
     * Internal users.
     */
    internalUsers?: pulumi.Input<boolean>;
    /**
     * LDAP AU objects identified by the name or UID. Must be set when "users-from-external-directories" was selected to be "specific".
     */
    specifics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Users from external directories.
     */
    usersFromExternalDirectories?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsAuthorizedClient {
    /**
     * Host / Network Group Name or UID.
     */
    client?: pulumi.Input<string>;
    /**
     * Client Secret.
     */
    clientSecret?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissions {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibility>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentityCollectorSettingsClientAccessPermissionsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsIdentitySharingSettings {
    /**
     * Enable receiving identity from other gateways.
     */
    receiveFromOtherGateways?: pulumi.Input<boolean>;
    /**
     * Gateway(s) to receive identity from.
     */
    receiveFroms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable identity sharing with other gateways.
     */
    shareWithOtherGateways?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayIdentityAwarenessSettingsProxySettings {
    /**
     * Whether to use X-Forward-For HTTP header, which is added by the proxy server to keep track of the original source IP.
     */
    detectUsingXForwardFor?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayInterface {
    /**
     * Anti spoofing.
     */
    antiSpoofing?: pulumi.Input<boolean>;
    /**
     * Anti spoofing settings
     */
    antiSpoofingSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * IPv4 address.
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * IPv4 network mask length.
     */
    ipv4MaskLength?: pulumi.Input<string>;
    /**
     * IPv4 network address.
     */
    ipv4NetworkMask?: pulumi.Input<string>;
    /**
     * IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * IPv6 network mask length.
     */
    ipv6MaskLength?: pulumi.Input<string>;
    /**
     * IPv6 network address.
     */
    ipv6NetworkMask?: pulumi.Input<string>;
    /**
     * Object name. Should be unique in the domain.
     */
    name: pulumi.Input<string>;
    /**
     * Security zone.
     */
    securityZone?: pulumi.Input<boolean>;
    /**
     * Security zone settings.
     */
    securityZoneSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Topology.
     */
    topology?: pulumi.Input<string>;
    /**
     * Shows the automatic topology calculation.
     */
    topologyAutomaticCalculation?: pulumi.Input<string>;
    /**
     * Topology settings.
     */
    topologySettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ManagementSimpleGatewayPlatformPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleGatewayPlatformPortalSettingsAccessibility>;
    /**
     * Configuration of the portal certificate settings.
     */
    certificateSettings?: pulumi.Input<inputs.ManagementSimpleGatewayPlatformPortalSettingsCertificateSettings>;
    /**
     * Configuration of the portal web settings.
     */
    portalWebSettings?: pulumi.Input<inputs.ManagementSimpleGatewayPlatformPortalSettingsPortalWebSettings>;
}

export interface ManagementSimpleGatewayPlatformPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleGatewayPlatformPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleGatewayPlatformPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayPlatformPortalSettingsCertificateSettings {
    /**
     * The certificate file encoded in Base64 with padding.  This file must be in the *.p12 format.
     */
    base64Certificate?: pulumi.Input<string>;
    /**
     * Password (encoded in Base64 with padding) for the certificate file.
     */
    base64Password?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayPlatformPortalSettingsPortalWebSettings {
    /**
     * List of URL aliases that are redirected to the main portal URL.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The main URL for the web portal.
     */
    mainUrl?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayUsercheckPortalSettings {
    /**
     * Configuration of the portal access settings.
     */
    accessibility?: pulumi.Input<inputs.ManagementSimpleGatewayUsercheckPortalSettingsAccessibility>;
    /**
     * Configuration of the portal certificate settings.
     */
    certificateSettings?: pulumi.Input<inputs.ManagementSimpleGatewayUsercheckPortalSettingsCertificateSettings>;
    /**
     * State of the web portal (enabled or disabled). The supported blades are: {'Application Control', 'URL Filtering', 'Data Loss Prevention', 'Anti Virus', 'Anti Bot', 'Threat Emulation', 'Threat Extraction', 'Data Awareness'}.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Configuration of the portal web settings.
     */
    portalWebSettings?: pulumi.Input<inputs.ManagementSimpleGatewayUsercheckPortalSettingsPortalWebSettings>;
}

export interface ManagementSimpleGatewayUsercheckPortalSettingsAccessibility {
    /**
     * Allowed access to the web portal (based on interfaces, or security policy).
     */
    allowAccessFrom?: pulumi.Input<string>;
    /**
     * Configuration of the additional portal access settings for internal interfaces only.
     */
    internalAccessSettings?: pulumi.Input<inputs.ManagementSimpleGatewayUsercheckPortalSettingsAccessibilityInternalAccessSettings>;
}

export interface ManagementSimpleGatewayUsercheckPortalSettingsAccessibilityInternalAccessSettings {
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'DMZ'.
     */
    dmz?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for internal interfaces, whose topology is set to 'Undefined'.
     */
    undefined?: pulumi.Input<boolean>;
    /**
     * Controls portal access settings for interfaces that are part of a VPN Encryption Domain.
     */
    vpn?: pulumi.Input<boolean>;
}

export interface ManagementSimpleGatewayUsercheckPortalSettingsCertificateSettings {
    /**
     * The certificate file encoded in Base64 with padding.  This file must be in the *.p12 format.
     */
    base64Certificate?: pulumi.Input<string>;
    /**
     * Password (encoded in Base64 with padding) for the certificate file.
     */
    base64Password?: pulumi.Input<string>;
}

export interface ManagementSimpleGatewayUsercheckPortalSettingsPortalWebSettings {
    /**
     * List of URL aliases that are redirected to the main portal URL.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The main URL for the web portal.
     */
    mainUrl?: pulumi.Input<string>;
}

export interface ManagementSmartTaskAction {
    /**
     * When the trigger is fired, runs the configured Repository Script on the defined targets.<br>The trigger data is then passed to the script as the first parameter. The parameter is JSON encoded in Base64 format.
     */
    runScript?: pulumi.Input<inputs.ManagementSmartTaskActionRunScript>;
    /**
     * When the trigger is fired, sends the configured email to the defined recipients.
     */
    sendMail?: pulumi.Input<inputs.ManagementSmartTaskActionSendMail>;
    /**
     * When the trigger is fired, sends an HTTPS POST web request to the configured URL.<br>The trigger data will be passed along with the SmartTask's custom data in the request's payload.
     */
    sendWebRequest?: pulumi.Input<inputs.ManagementSmartTaskActionSendWebRequest>;
}

export interface ManagementSmartTaskActionRunScript {
    /**
     * Repository script that is executed when the trigger is fired.,  identified by the name or UID.
     */
    repositoryScript?: pulumi.Input<string>;
    /**
     * Targets to execute the script on.
     */
    targets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Script execution time-out in seconds.
     */
    timeOut?: pulumi.Input<number>;
}

export interface ManagementSmartTaskActionSendMail {
    /**
     * The required settings to send the mail by.
     */
    mailSettings: pulumi.Input<inputs.ManagementSmartTaskActionSendMailMailSettings>;
    /**
     * The UID or the name a preconfigured SMTP server object.
     */
    smtpServer?: pulumi.Input<inputs.ManagementSmartTaskActionSendMailSmtpServer>;
}

export interface ManagementSmartTaskActionSendMailMailSettings {
    /**
     * What file should be attached to the mail.
     */
    attachment?: pulumi.Input<string>;
    /**
     * A comma separated list of bcc recipient mail addresses.
     */
    bccRecipients?: pulumi.Input<string>;
    /**
     * The email body.
     */
    body?: pulumi.Input<string>;
    /**
     * A comma separated list of cc recipient mail addresses.
     */
    ccRecipients?: pulumi.Input<string>;
    /**
     * A comma separated list of recipient mail addresses.
     */
    recipients?: pulumi.Input<string>;
    /**
     * An email address to send the mail from.
     */
    senderEmail?: pulumi.Input<string>;
    /**
     * The email subject.
     */
    subject?: pulumi.Input<string>;
}

export interface ManagementSmartTaskActionSendMailSmtpServer {
    /**
     * Does the mail server requires authentication.
     */
    authentication?: pulumi.Input<string>;
    /**
     * Encryption type.
     */
    encryption?: pulumi.Input<string>;
    /**
     * Object name. Must be unique in the domain
     */
    name?: pulumi.Input<string>;
    /**
     * The SMTP port to use.
     */
    port?: pulumi.Input<string>;
    /**
     * The SMTP server address.
     */
    server?: pulumi.Input<string>;
    /**
     * A username for the SMTP server.
     */
    username?: pulumi.Input<string>;
}

export interface ManagementSmartTaskActionSendWebRequest {
    /**
     * The SHA1 fingerprint of the URL's SSL certificate. Used to trust servers with self-signed SSL certificates.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Option to send to the web request via a proxy other than the Management's Server proxy (if defined).
     */
    overrideProxy?: pulumi.Input<boolean>;
    /**
     * URL of the proxy used to send the request.
     */
    proxyUrl?: pulumi.Input<string>;
    /**
     * Shared secret that can be used by the target server to identify the Management Server.<br>The value will be sent as part of the request in the "X-chkp-shared-secret" header.
     */
    sharedSecret?: pulumi.Input<string>;
    /**
     * Web Request time-out in seconds.
     */
    timeOut?: pulumi.Input<number>;
    /**
     * URL used for the web request.
     */
    url?: pulumi.Input<string>;
}

export interface ManagementThreatIndicatorObservable {
    /**
     * The confidence level the indicator has that a real threat has been uncovered.
     */
    confidence?: pulumi.Input<string>;
    /**
     * The name of a domain.
     */
    domain?: pulumi.Input<string>;
    /**
     * A valid IP-Address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * A valid IP-Address, the beginning of the range. If you configure this parameter with a value, you must also configure the value of the 'ip-address-last' parameter
     */
    ipAddressFirst?: pulumi.Input<string>;
    /**
     * A valid IP-Address, the end of the range. If you configure this parameter with a value, you must also configure the value of the 'ip-address-first' parameter.
     */
    ipAddressLast?: pulumi.Input<string>;
    /**
     * A valid E-Mail address, cc field.
     */
    mailCc?: pulumi.Input<string>;
    /**
     * A valid E-Mail address, sender field.
     */
    mailFrom?: pulumi.Input<string>;
    /**
     * A valid E-Mail address, reply-to field.
     */
    mailReplyTo?: pulumi.Input<string>;
    /**
     * Subject of E-Mail.
     */
    mailSubject?: pulumi.Input<string>;
    /**
     * A valid E-Mail address, recipient filed.
     */
    mailTo?: pulumi.Input<string>;
    /**
     * A valid MD5 sequence.
     */
    md5?: pulumi.Input<string>;
    /**
     * Object name. Should be unique in the domain.
     */
    name: pulumi.Input<string>;
    /**
     * The software blade that processes the observable: AV - AntiVirus, AB - AntiBot.
     */
    product?: pulumi.Input<string>;
    /**
     * The severity level of the threat.
     */
    severity?: pulumi.Input<string>;
    /**
     * A valid URL.
     */
    url?: pulumi.Input<string>;
}

export interface ManagementThreatIndicatorProfileOverride {
    /**
     * The indicator's action in this profile.
     */
    action?: pulumi.Input<string>;
    /**
     * The profile in which to override the indicator's action.
     */
    profile?: pulumi.Input<string>;
}

export interface ManagementThreatIocFeedCustomHeader {
    /**
     * The name of the HTTP header we wish to add.
     */
    headerName?: pulumi.Input<string>;
    /**
     * The name of the HTTP value we wish to add.
     */
    headerValue?: pulumi.Input<string>;
}

export interface ManagementThreatProfileActivateProtectionsByExtendedAttribute {
    category: pulumi.Input<string>;
    name: pulumi.Input<string>;
    uid: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileActivateProtectionsByExtendedAttributeValue>[]>;
}

export interface ManagementThreatProfileActivateProtectionsByExtendedAttributeValue {
    name: pulumi.Input<string>;
    uid: pulumi.Input<string>;
}

export interface ManagementThreatProfileDeactivateProtectionsByExtendedAttribute {
    /**
     * IPS tag category name.
     */
    category?: pulumi.Input<string>;
    /**
     * IPS tag name.
     */
    name?: pulumi.Input<string>;
    /**
     * IPS tag unique identifier.
     */
    uid?: pulumi.Input<string>;
    /**
     * IPS protection extended attribute values
     */
    values?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileDeactivateProtectionsByExtendedAttributeValue>[]>;
}

export interface ManagementThreatProfileDeactivateProtectionsByExtendedAttributeValue {
    name: pulumi.Input<string>;
    uid: pulumi.Input<string>;
}

export interface ManagementThreatProfileIndicatorOverride {
    /**
     * The indicator's action in this profile.
     */
    action?: pulumi.Input<string>;
    /**
     * The indicator whose action is to be overriden.
     */
    indicator?: pulumi.Input<string>;
}

export interface ManagementThreatProfileOverride {
    /**
     * Protection action.
     */
    action: pulumi.Input<string>;
    /**
     * Capture packets.
     */
    capturePackets?: pulumi.Input<boolean>;
    /**
     * Default settings.
     */
    default?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Final settings.
     */
    final?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * IPS protection identified by name.
     */
    protection: pulumi.Input<string>;
    /**
     * Collection of industry reference (CVE).
     */
    protectionExternalInfos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IPS protection unique identifier.
     */
    protectionUid?: pulumi.Input<string>;
    /**
     * Tracking method for protection.
     */
    track?: pulumi.Input<string>;
}

export interface ManagementTimeHoursRange {
    /**
     * Is hour range enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Time in format HH:MM.
     */
    from?: pulumi.Input<string>;
    /**
     * Hour range index.
     */
    index?: pulumi.Input<number>;
    /**
     * Time in format HH:MM.
     */
    to?: pulumi.Input<string>;
}

export interface ManagementTimeRecurrence {
    /**
     * Valid on specific days. Multiple options, support range of days in months. Example:["1","3","9-20"].
     */
    days?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Valid on month. Example: "1", "2","12","Any".
     */
    month?: pulumi.Input<string>;
    /**
     * Valid on "Interval", "Daily", "Weekly", "Monthly" base.
     */
    pattern?: pulumi.Input<string>;
    /**
     * Valid on weekdays. Example: "Sun", "Mon"..."Sat".
     */
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ManagementVpnCommunityMeshedGranularEncryption {
    /**
     * The encryption method to be used.
     */
    encryptionMethod?: pulumi.Input<string>;
    /**
     * The encryption suite to be used.
     */
    encryptionSuite?: pulumi.Input<string>;
    /**
     * Externally managed or 3rd party gateway identified by name or UID.
     */
    externalGateway: pulumi.Input<string>;
    /**
     * Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].
     */
    ikePhase1?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].
     */
    ikePhase2?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Internally managed Check Point gateway identified by name or UID, or 'Any' for all internal-gateways participants in this community.
     */
    internalGateway: pulumi.Input<string>;
}

export interface ManagementVpnCommunityMeshedOverrideVpnDomain {
    /**
     * Participant gateway in override VPN domain identified by the name or UID.
     */
    gateway?: pulumi.Input<string>;
    /**
     * VPN domain network identified by the name or UID.
     */
    vpnDomain?: pulumi.Input<string>;
}

export interface ManagementVpnCommunityMeshedSharedSecret {
    /**
     * External gateway identified by the name or UID.
     */
    externalGateway?: pulumi.Input<string>;
    /**
     * Shared secret.
     */
    sharedSecret?: pulumi.Input<string>;
}

export interface ManagementVpnCommunityStarGranularEncryption {
    /**
     * The encryption method to be used.
     */
    encryptionMethod?: pulumi.Input<string>;
    /**
     * The encryption suite to be used.
     */
    encryptionSuite?: pulumi.Input<string>;
    /**
     * Externally managed or 3rd party gateway identified by name or UID.
     */
    externalGateway: pulumi.Input<string>;
    /**
     * Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].
     */
    ikePhase1?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].
     */
    ikePhase2?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Internally managed Check Point gateway identified by name or UID, or 'Any' for all internal-gateways participants in this community.
     */
    internalGateway: pulumi.Input<string>;
}

export interface ManagementVpnCommunityStarOverrideVpnDomain {
    /**
     * Participant gateway in override VPN domain identified by the name or UID.
     */
    gateway?: pulumi.Input<string>;
    /**
     * VPN domain network identified by the name or UID.
     */
    vpnDomain?: pulumi.Input<string>;
}

export interface ManagementVpnCommunityStarSharedSecret {
    /**
     * External gateway identified by the name or UID.
     */
    externalGateway?: pulumi.Input<string>;
    /**
     * Shared secret.
     */
    sharedSecret?: pulumi.Input<string>;
}
