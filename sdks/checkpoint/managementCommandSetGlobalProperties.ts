// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagementCommandSetGlobalProperties extends pulumi.CustomResource {
    /**
     * Get an existing ManagementCommandSetGlobalProperties resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementCommandSetGlobalPropertiesState, opts?: pulumi.CustomResourceOptions): ManagementCommandSetGlobalProperties {
        return new ManagementCommandSetGlobalProperties(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementCommandSetGlobalProperties:ManagementCommandSetGlobalProperties';

    /**
     * Returns true if the given object is an instance of ManagementCommandSetGlobalProperties.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementCommandSetGlobalProperties {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementCommandSetGlobalProperties.__pulumiType;
    }

    /**
     * Configure advanced global attributes. It's highly recommended to consult with Check Point's Technical Support before
     * modifying these values.
     */
    public readonly advancedConf!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * After installing an OPSEC application, the remote administration (RA) utility enables an OPSEC product to finish
     * registering itself without having to access the SmartConsole. If set to true, any host including the application host
     * can run the utility. Otherwise, the RA utility can only be run from the Security Management host.
     */
    public readonly allowRemoteRegistrationOfOpsecProducts!: pulumi.Output<boolean | undefined>;
    /**
     * Define Authentication properties that are common to all users and to the various ways that the Check Point Security
     * Gateway asks for passwords (User, Client and Session Authentication).
     */
    public readonly authentication!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specify system-wide properties. Select GTP intra tunnel inspection options, including anti-spoofing; tracking and
     * logging options, and integrity tests.
     */
    public readonly carrierSecurity!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configure settings that relate to ConnectControl server load balancing.
     */
    public readonly connectControl!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configure automatic downloads from Check Point and anonymously share product data. Options selected here apply to all
     * Security Gateways, Clusters and VSX devices managed by this management server.
     */
    public readonly dataAccessControl!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the
     * System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.
     */
    public readonly domainsToProcesses!: pulumi.Output<string[] | undefined>;
    /**
     * Add implied rules to or remove them from the Firewall Rule Base. Determine the position of the implied rules in the Rule
     * Base, and whether or not to log them.
     */
    public readonly firewall!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Enable the Hit Count feature that tracks the number of connections that each rule matches.
     */
    public readonly hitCount!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    public readonly ignoreErrors!: pulumi.Output<boolean | undefined>;
    /**
     * Apply changes ignoring warnings.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * Define system-wide logging and alerting parameters.
     */
    public readonly logAndAlert!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configure settings that apply to all NAT connections.
     */
    public readonly nat!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specify Non Unique IP Address Ranges.
     */
    public readonly nonUniqueIpAddressRanges!: pulumi.Output<outputs.ManagementCommandSetGlobalPropertiesNonUniqueIpAddressRange[] | undefined>;
    /**
     * Indicates how many incorrectly signed packets will be tolerated before assuming that there is an attack on the packet
     * tagging and revoking the client's key.
     */
    public readonly numSpoofingErrsThatTriggerBruteForce!: pulumi.Output<number | undefined>;
    /**
     * Select whether a proxy server is used when servers, gateways, or clients need to access the internet for certain Check
     * Point features and set the default proxy server that will be used.
     */
    public readonly proxy!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Define the general parameters of Quality of Service (QoS) and apply them to QoS rules.
     */
    public readonly qos!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configure Remote Access properties.
     */
    public readonly remoteAccess!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Adjust Stateful Inspection parameters.
     */
    public readonly statefulInspection!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Set the expiration for a user account and configure "about to expire" warnings.
     */
    public readonly userAccounts!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Decide whether to display and access the WebAccess rule base. This policy defines which users (that is, which Windows
     * Domains) have access to the internal sites of the organization.
     */
    public readonly userAuthority!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Set a language for the UserCheck message if the language setting in the user's browser cannot be determined.
     */
    public readonly userCheck!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * User can enable LDAP User Directory as well as specify global parameters for LDAP. If LDAP User Directory is enabled,
     * this means that users are managed on an external LDAP server and not on the internal Check Point Security Gateway users
     * databases.
     */
    public readonly userDirectory!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configure settings relevant to VPN.
     */
    public readonly vpn!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ManagementCommandSetGlobalProperties resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementCommandSetGlobalPropertiesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementCommandSetGlobalPropertiesArgs | ManagementCommandSetGlobalPropertiesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementCommandSetGlobalPropertiesState | undefined;
            resourceInputs["advancedConf"] = state ? state.advancedConf : undefined;
            resourceInputs["allowRemoteRegistrationOfOpsecProducts"] = state ? state.allowRemoteRegistrationOfOpsecProducts : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["carrierSecurity"] = state ? state.carrierSecurity : undefined;
            resourceInputs["connectControl"] = state ? state.connectControl : undefined;
            resourceInputs["dataAccessControl"] = state ? state.dataAccessControl : undefined;
            resourceInputs["domainsToProcesses"] = state ? state.domainsToProcesses : undefined;
            resourceInputs["firewall"] = state ? state.firewall : undefined;
            resourceInputs["hitCount"] = state ? state.hitCount : undefined;
            resourceInputs["ignoreErrors"] = state ? state.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["logAndAlert"] = state ? state.logAndAlert : undefined;
            resourceInputs["nat"] = state ? state.nat : undefined;
            resourceInputs["nonUniqueIpAddressRanges"] = state ? state.nonUniqueIpAddressRanges : undefined;
            resourceInputs["numSpoofingErrsThatTriggerBruteForce"] = state ? state.numSpoofingErrsThatTriggerBruteForce : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["qos"] = state ? state.qos : undefined;
            resourceInputs["remoteAccess"] = state ? state.remoteAccess : undefined;
            resourceInputs["statefulInspection"] = state ? state.statefulInspection : undefined;
            resourceInputs["userAccounts"] = state ? state.userAccounts : undefined;
            resourceInputs["userAuthority"] = state ? state.userAuthority : undefined;
            resourceInputs["userCheck"] = state ? state.userCheck : undefined;
            resourceInputs["userDirectory"] = state ? state.userDirectory : undefined;
            resourceInputs["vpn"] = state ? state.vpn : undefined;
        } else {
            const args = argsOrState as ManagementCommandSetGlobalPropertiesArgs | undefined;
            resourceInputs["advancedConf"] = args ? args.advancedConf : undefined;
            resourceInputs["allowRemoteRegistrationOfOpsecProducts"] = args ? args.allowRemoteRegistrationOfOpsecProducts : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["carrierSecurity"] = args ? args.carrierSecurity : undefined;
            resourceInputs["connectControl"] = args ? args.connectControl : undefined;
            resourceInputs["dataAccessControl"] = args ? args.dataAccessControl : undefined;
            resourceInputs["domainsToProcesses"] = args ? args.domainsToProcesses : undefined;
            resourceInputs["firewall"] = args ? args.firewall : undefined;
            resourceInputs["hitCount"] = args ? args.hitCount : undefined;
            resourceInputs["ignoreErrors"] = args ? args.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["logAndAlert"] = args ? args.logAndAlert : undefined;
            resourceInputs["nat"] = args ? args.nat : undefined;
            resourceInputs["nonUniqueIpAddressRanges"] = args ? args.nonUniqueIpAddressRanges : undefined;
            resourceInputs["numSpoofingErrsThatTriggerBruteForce"] = args ? args.numSpoofingErrsThatTriggerBruteForce : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["qos"] = args ? args.qos : undefined;
            resourceInputs["remoteAccess"] = args ? args.remoteAccess : undefined;
            resourceInputs["statefulInspection"] = args ? args.statefulInspection : undefined;
            resourceInputs["userAccounts"] = args ? args.userAccounts : undefined;
            resourceInputs["userAuthority"] = args ? args.userAuthority : undefined;
            resourceInputs["userCheck"] = args ? args.userCheck : undefined;
            resourceInputs["userDirectory"] = args ? args.userDirectory : undefined;
            resourceInputs["vpn"] = args ? args.vpn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementCommandSetGlobalProperties.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementCommandSetGlobalProperties resources.
 */
export interface ManagementCommandSetGlobalPropertiesState {
    /**
     * Configure advanced global attributes. It's highly recommended to consult with Check Point's Technical Support before
     * modifying these values.
     */
    advancedConf?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * After installing an OPSEC application, the remote administration (RA) utility enables an OPSEC product to finish
     * registering itself without having to access the SmartConsole. If set to true, any host including the application host
     * can run the utility. Otherwise, the RA utility can only be run from the Security Management host.
     */
    allowRemoteRegistrationOfOpsecProducts?: pulumi.Input<boolean>;
    /**
     * Define Authentication properties that are common to all users and to the various ways that the Check Point Security
     * Gateway asks for passwords (User, Client and Session Authentication).
     */
    authentication?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify system-wide properties. Select GTP intra tunnel inspection options, including anti-spoofing; tracking and
     * logging options, and integrity tests.
     */
    carrierSecurity?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure settings that relate to ConnectControl server load balancing.
     */
    connectControl?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure automatic downloads from Check Point and anonymously share product data. Options selected here apply to all
     * Security Gateways, Clusters and VSX devices managed by this management server.
     */
    dataAccessControl?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the
     * System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.
     */
    domainsToProcesses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Add implied rules to or remove them from the Firewall Rule Base. Determine the position of the implied rules in the Rule
     * Base, and whether or not to log them.
     */
    firewall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Enable the Hit Count feature that tracks the number of connections that each rule matches.
     */
    hitCount?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Define system-wide logging and alerting parameters.
     */
    logAndAlert?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure settings that apply to all NAT connections.
     */
    nat?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify Non Unique IP Address Ranges.
     */
    nonUniqueIpAddressRanges?: pulumi.Input<pulumi.Input<inputs.ManagementCommandSetGlobalPropertiesNonUniqueIpAddressRange>[]>;
    /**
     * Indicates how many incorrectly signed packets will be tolerated before assuming that there is an attack on the packet
     * tagging and revoking the client's key.
     */
    numSpoofingErrsThatTriggerBruteForce?: pulumi.Input<number>;
    /**
     * Select whether a proxy server is used when servers, gateways, or clients need to access the internet for certain Check
     * Point features and set the default proxy server that will be used.
     */
    proxy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Define the general parameters of Quality of Service (QoS) and apply them to QoS rules.
     */
    qos?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure Remote Access properties.
     */
    remoteAccess?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Adjust Stateful Inspection parameters.
     */
    statefulInspection?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set the expiration for a user account and configure "about to expire" warnings.
     */
    userAccounts?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Decide whether to display and access the WebAccess rule base. This policy defines which users (that is, which Windows
     * Domains) have access to the internal sites of the organization.
     */
    userAuthority?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set a language for the UserCheck message if the language setting in the user's browser cannot be determined.
     */
    userCheck?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User can enable LDAP User Directory as well as specify global parameters for LDAP. If LDAP User Directory is enabled,
     * this means that users are managed on an external LDAP server and not on the internal Check Point Security Gateway users
     * databases.
     */
    userDirectory?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure settings relevant to VPN.
     */
    vpn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ManagementCommandSetGlobalProperties resource.
 */
export interface ManagementCommandSetGlobalPropertiesArgs {
    /**
     * Configure advanced global attributes. It's highly recommended to consult with Check Point's Technical Support before
     * modifying these values.
     */
    advancedConf?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * After installing an OPSEC application, the remote administration (RA) utility enables an OPSEC product to finish
     * registering itself without having to access the SmartConsole. If set to true, any host including the application host
     * can run the utility. Otherwise, the RA utility can only be run from the Security Management host.
     */
    allowRemoteRegistrationOfOpsecProducts?: pulumi.Input<boolean>;
    /**
     * Define Authentication properties that are common to all users and to the various ways that the Check Point Security
     * Gateway asks for passwords (User, Client and Session Authentication).
     */
    authentication?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify system-wide properties. Select GTP intra tunnel inspection options, including anti-spoofing; tracking and
     * logging options, and integrity tests.
     */
    carrierSecurity?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure settings that relate to ConnectControl server load balancing.
     */
    connectControl?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure automatic downloads from Check Point and anonymously share product data. Options selected here apply to all
     * Security Gateways, Clusters and VSX devices managed by this management server.
     */
    dataAccessControl?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the
     * System Domain only and with ignore-warnings true. Valid values are: CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.
     */
    domainsToProcesses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Add implied rules to or remove them from the Firewall Rule Base. Determine the position of the implied rules in the Rule
     * Base, and whether or not to log them.
     */
    firewall?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Enable the Hit Count feature that tracks the number of connections that each rule matches.
     */
    hitCount?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Define system-wide logging and alerting parameters.
     */
    logAndAlert?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure settings that apply to all NAT connections.
     */
    nat?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify Non Unique IP Address Ranges.
     */
    nonUniqueIpAddressRanges?: pulumi.Input<pulumi.Input<inputs.ManagementCommandSetGlobalPropertiesNonUniqueIpAddressRange>[]>;
    /**
     * Indicates how many incorrectly signed packets will be tolerated before assuming that there is an attack on the packet
     * tagging and revoking the client's key.
     */
    numSpoofingErrsThatTriggerBruteForce?: pulumi.Input<number>;
    /**
     * Select whether a proxy server is used when servers, gateways, or clients need to access the internet for certain Check
     * Point features and set the default proxy server that will be used.
     */
    proxy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Define the general parameters of Quality of Service (QoS) and apply them to QoS rules.
     */
    qos?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure Remote Access properties.
     */
    remoteAccess?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Adjust Stateful Inspection parameters.
     */
    statefulInspection?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set the expiration for a user account and configure "about to expire" warnings.
     */
    userAccounts?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Decide whether to display and access the WebAccess rule base. This policy defines which users (that is, which Windows
     * Domains) have access to the internal sites of the organization.
     */
    userAuthority?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set a language for the UserCheck message if the language setting in the user's browser cannot be determined.
     */
    userCheck?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User can enable LDAP User Directory as well as specify global parameters for LDAP. If LDAP User Directory is enabled,
     * this means that users are managed on an external LDAP server and not on the internal Check Point Security Gateway users
     * databases.
     */
    userDirectory?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configure settings relevant to VPN.
     */
    vpn?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
