// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementTask(args: GetManagementTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementTask:getManagementTask", {
        "id": args.id,
        "taskIds": args.taskIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementTask.
 */
export interface GetManagementTaskArgs {
    id?: string;
    taskIds: string[];
}

/**
 * A collection of values returned by getManagementTask.
 */
export interface GetManagementTaskResult {
    readonly id: string;
    readonly taskIds: string[];
    readonly tasks: outputs.GetManagementTaskTask[];
}
export function getManagementTaskOutput(args: GetManagementTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementTaskResult> {
    return pulumi.output(args).apply((a: any) => getManagementTask(a, opts))
}

/**
 * A collection of arguments for invoking getManagementTask.
 */
export interface GetManagementTaskOutputArgs {
    id?: pulumi.Input<string>;
    taskIds: pulumi.Input<pulumi.Input<string>[]>;
}
