// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagementThreatProfile extends pulumi.CustomResource {
    /**
     * Get an existing ManagementThreatProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementThreatProfileState, opts?: pulumi.CustomResourceOptions): ManagementThreatProfile {
        return new ManagementThreatProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementThreatProfile:ManagementThreatProfile';

    /**
     * Returns true if the given object is an instance of ManagementThreatProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementThreatProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementThreatProfile.__pulumiType;
    }

    /**
     * Activate protections by these extended attributes.
     */
    public /*out*/ readonly activateProtectionsByExtendedAttributes!: pulumi.Output<outputs.ManagementThreatProfileActivateProtectionsByExtendedAttribute[]>;
    /**
     * Protections with this performance impact only will be activated in the profile.
     */
    public readonly activeProtectionsPerformanceImpact!: pulumi.Output<string | undefined>;
    /**
     * Protections with this severity only will be activated in the profile.
     */
    public readonly activeProtectionsSeverity!: pulumi.Output<string | undefined>;
    /**
     * Is Anti-Bot blade activated.
     */
    public readonly antiBot!: pulumi.Output<boolean | undefined>;
    /**
     * Is Anti-Virus blade activated.
     */
    public readonly antiVirus!: pulumi.Output<boolean | undefined>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    public readonly color!: pulumi.Output<string | undefined>;
    /**
     * Comments string.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Action for protections with high confidence level.
     */
    public readonly confidenceLevelHigh!: pulumi.Output<string | undefined>;
    /**
     * Action for protections with low confidence level.
     */
    public readonly confidenceLevelLow!: pulumi.Output<string | undefined>;
    /**
     * Action for protections with medium confidence level.
     */
    public readonly confidenceLevelMedium!: pulumi.Output<string | undefined>;
    /**
     * Deactivate protections by these extended attributes.
     */
    public readonly deactivateProtectionsByExtendedAttributes!: pulumi.Output<outputs.ManagementThreatProfileDeactivateProtectionsByExtendedAttribute[] | undefined>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    public readonly ignoreErrors!: pulumi.Output<boolean | undefined>;
    /**
     * Apply changes ignoring warnings.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * Indicators whose action will be overridden in this profile.
     */
    public readonly indicatorOverrides!: pulumi.Output<outputs.ManagementThreatProfileIndicatorOverride[] | undefined>;
    /**
     * Is IPS blade activated.
     */
    public readonly ips!: pulumi.Output<boolean | undefined>;
    /**
     * IPS blade settings.
     */
    public readonly ipsSettings!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Malicious Mail Policy for MTA Gateways.
     */
    public readonly maliciousMailPolicySettings!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Object name. Should be unique in the domain.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Overrides per profile for this protection.
     */
    public readonly overrides!: pulumi.Output<outputs.ManagementThreatProfileOverride[] | undefined>;
    /**
     * Scans malicious links (URLs) inside email messages.
     */
    public readonly scanMaliciousLinks!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Collection of tag identifiers.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Is Threat Emulation blade activated.
     */
    public readonly threatEmulation!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to activate/deactivate IPS protections according to the extended attributes.
     */
    public readonly useExtendedAttributes!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether the profile should make use of indicators.
     */
    public readonly useIndicators!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ManagementThreatProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementThreatProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementThreatProfileArgs | ManagementThreatProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementThreatProfileState | undefined;
            resourceInputs["activateProtectionsByExtendedAttributes"] = state ? state.activateProtectionsByExtendedAttributes : undefined;
            resourceInputs["activeProtectionsPerformanceImpact"] = state ? state.activeProtectionsPerformanceImpact : undefined;
            resourceInputs["activeProtectionsSeverity"] = state ? state.activeProtectionsSeverity : undefined;
            resourceInputs["antiBot"] = state ? state.antiBot : undefined;
            resourceInputs["antiVirus"] = state ? state.antiVirus : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["confidenceLevelHigh"] = state ? state.confidenceLevelHigh : undefined;
            resourceInputs["confidenceLevelLow"] = state ? state.confidenceLevelLow : undefined;
            resourceInputs["confidenceLevelMedium"] = state ? state.confidenceLevelMedium : undefined;
            resourceInputs["deactivateProtectionsByExtendedAttributes"] = state ? state.deactivateProtectionsByExtendedAttributes : undefined;
            resourceInputs["ignoreErrors"] = state ? state.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["indicatorOverrides"] = state ? state.indicatorOverrides : undefined;
            resourceInputs["ips"] = state ? state.ips : undefined;
            resourceInputs["ipsSettings"] = state ? state.ipsSettings : undefined;
            resourceInputs["maliciousMailPolicySettings"] = state ? state.maliciousMailPolicySettings : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrides"] = state ? state.overrides : undefined;
            resourceInputs["scanMaliciousLinks"] = state ? state.scanMaliciousLinks : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["threatEmulation"] = state ? state.threatEmulation : undefined;
            resourceInputs["useExtendedAttributes"] = state ? state.useExtendedAttributes : undefined;
            resourceInputs["useIndicators"] = state ? state.useIndicators : undefined;
        } else {
            const args = argsOrState as ManagementThreatProfileArgs | undefined;
            resourceInputs["activeProtectionsPerformanceImpact"] = args ? args.activeProtectionsPerformanceImpact : undefined;
            resourceInputs["activeProtectionsSeverity"] = args ? args.activeProtectionsSeverity : undefined;
            resourceInputs["antiBot"] = args ? args.antiBot : undefined;
            resourceInputs["antiVirus"] = args ? args.antiVirus : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["confidenceLevelHigh"] = args ? args.confidenceLevelHigh : undefined;
            resourceInputs["confidenceLevelLow"] = args ? args.confidenceLevelLow : undefined;
            resourceInputs["confidenceLevelMedium"] = args ? args.confidenceLevelMedium : undefined;
            resourceInputs["deactivateProtectionsByExtendedAttributes"] = args ? args.deactivateProtectionsByExtendedAttributes : undefined;
            resourceInputs["ignoreErrors"] = args ? args.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["indicatorOverrides"] = args ? args.indicatorOverrides : undefined;
            resourceInputs["ips"] = args ? args.ips : undefined;
            resourceInputs["ipsSettings"] = args ? args.ipsSettings : undefined;
            resourceInputs["maliciousMailPolicySettings"] = args ? args.maliciousMailPolicySettings : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrides"] = args ? args.overrides : undefined;
            resourceInputs["scanMaliciousLinks"] = args ? args.scanMaliciousLinks : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["threatEmulation"] = args ? args.threatEmulation : undefined;
            resourceInputs["useExtendedAttributes"] = args ? args.useExtendedAttributes : undefined;
            resourceInputs["useIndicators"] = args ? args.useIndicators : undefined;
            resourceInputs["activateProtectionsByExtendedAttributes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementThreatProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementThreatProfile resources.
 */
export interface ManagementThreatProfileState {
    /**
     * Activate protections by these extended attributes.
     */
    activateProtectionsByExtendedAttributes?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileActivateProtectionsByExtendedAttribute>[]>;
    /**
     * Protections with this performance impact only will be activated in the profile.
     */
    activeProtectionsPerformanceImpact?: pulumi.Input<string>;
    /**
     * Protections with this severity only will be activated in the profile.
     */
    activeProtectionsSeverity?: pulumi.Input<string>;
    /**
     * Is Anti-Bot blade activated.
     */
    antiBot?: pulumi.Input<boolean>;
    /**
     * Is Anti-Virus blade activated.
     */
    antiVirus?: pulumi.Input<boolean>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Action for protections with high confidence level.
     */
    confidenceLevelHigh?: pulumi.Input<string>;
    /**
     * Action for protections with low confidence level.
     */
    confidenceLevelLow?: pulumi.Input<string>;
    /**
     * Action for protections with medium confidence level.
     */
    confidenceLevelMedium?: pulumi.Input<string>;
    /**
     * Deactivate protections by these extended attributes.
     */
    deactivateProtectionsByExtendedAttributes?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileDeactivateProtectionsByExtendedAttribute>[]>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Indicators whose action will be overridden in this profile.
     */
    indicatorOverrides?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileIndicatorOverride>[]>;
    /**
     * Is IPS blade activated.
     */
    ips?: pulumi.Input<boolean>;
    /**
     * IPS blade settings.
     */
    ipsSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Malicious Mail Policy for MTA Gateways.
     */
    maliciousMailPolicySettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Object name. Should be unique in the domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Overrides per profile for this protection.
     */
    overrides?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileOverride>[]>;
    /**
     * Scans malicious links (URLs) inside email messages.
     */
    scanMaliciousLinks?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is Threat Emulation blade activated.
     */
    threatEmulation?: pulumi.Input<boolean>;
    /**
     * Whether to activate/deactivate IPS protections according to the extended attributes.
     */
    useExtendedAttributes?: pulumi.Input<boolean>;
    /**
     * Indicates whether the profile should make use of indicators.
     */
    useIndicators?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ManagementThreatProfile resource.
 */
export interface ManagementThreatProfileArgs {
    /**
     * Protections with this performance impact only will be activated in the profile.
     */
    activeProtectionsPerformanceImpact?: pulumi.Input<string>;
    /**
     * Protections with this severity only will be activated in the profile.
     */
    activeProtectionsSeverity?: pulumi.Input<string>;
    /**
     * Is Anti-Bot blade activated.
     */
    antiBot?: pulumi.Input<boolean>;
    /**
     * Is Anti-Virus blade activated.
     */
    antiVirus?: pulumi.Input<boolean>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Action for protections with high confidence level.
     */
    confidenceLevelHigh?: pulumi.Input<string>;
    /**
     * Action for protections with low confidence level.
     */
    confidenceLevelLow?: pulumi.Input<string>;
    /**
     * Action for protections with medium confidence level.
     */
    confidenceLevelMedium?: pulumi.Input<string>;
    /**
     * Deactivate protections by these extended attributes.
     */
    deactivateProtectionsByExtendedAttributes?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileDeactivateProtectionsByExtendedAttribute>[]>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Indicators whose action will be overridden in this profile.
     */
    indicatorOverrides?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileIndicatorOverride>[]>;
    /**
     * Is IPS blade activated.
     */
    ips?: pulumi.Input<boolean>;
    /**
     * IPS blade settings.
     */
    ipsSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Malicious Mail Policy for MTA Gateways.
     */
    maliciousMailPolicySettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Object name. Should be unique in the domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Overrides per profile for this protection.
     */
    overrides?: pulumi.Input<pulumi.Input<inputs.ManagementThreatProfileOverride>[]>;
    /**
     * Scans malicious links (URLs) inside email messages.
     */
    scanMaliciousLinks?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is Threat Emulation blade activated.
     */
    threatEmulation?: pulumi.Input<boolean>;
    /**
     * Whether to activate/deactivate IPS protections according to the extended attributes.
     */
    useExtendedAttributes?: pulumi.Input<boolean>;
    /**
     * Indicates whether the profile should make use of indicators.
     */
    useIndicators?: pulumi.Input<boolean>;
}
