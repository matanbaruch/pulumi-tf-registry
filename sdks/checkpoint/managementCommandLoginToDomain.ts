// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementCommandLoginToDomain extends pulumi.CustomResource {
    /**
     * Get an existing ManagementCommandLoginToDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementCommandLoginToDomainState, opts?: pulumi.CustomResourceOptions): ManagementCommandLoginToDomain {
        return new ManagementCommandLoginToDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementCommandLoginToDomain:ManagementCommandLoginToDomain';

    /**
     * Returns true if the given object is an instance of ManagementCommandLoginToDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementCommandLoginToDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementCommandLoginToDomain.__pulumiType;
    }

    /**
     * API Server version.
     */
    public /*out*/ readonly apiServerVersion!: pulumi.Output<string>;
    /**
     * When 'continue-last-session' is set to 'True', the new session would continue where the last session was stopped. This
     * option is available when the administrator has only one session that can be continued. If there is more than one
     * session, see 'switch-session' API.
     */
    public readonly continueLastSession!: pulumi.Output<boolean | undefined>;
    /**
     * Information about the available disk space on the management server.
     */
    public /*out*/ readonly diskSpaceMessage!: pulumi.Output<string>;
    /**
     * Domain identified by the name or UID.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Timestamp when administrator last accessed the management server.
     */
    public /*out*/ readonly lastLoginWasAt!: pulumi.Output<{[key: string]: string}>;
    /**
     * Login message.
     */
    public /*out*/ readonly loginMessage!: pulumi.Output<{[key: string]: string}>;
    /**
     * Login with Read Only permissions. This parameter is not considered in case continue-last-session is true.
     */
    public readonly readOnly!: pulumi.Output<boolean | undefined>;
    /**
     * Session expiration timeout in seconds.
     */
    public /*out*/ readonly sessionTimeout!: pulumi.Output<number>;
    /**
     * Session unique identifier. Enter this session unique identifier in the 'X-chkp-sid' header of each request.
     */
    public /*out*/ readonly sid!: pulumi.Output<string>;
    /**
     * True if this management server is in the standby mode.
     */
    public /*out*/ readonly standby!: pulumi.Output<boolean>;
    /**
     * Session object unique identifier. This identifier may be used in the discard API to discard changes that were made in
     * this session, when administrator is working from another session, or in the 'switch-session' API.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * URL that was used to reach the API server.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a ManagementCommandLoginToDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementCommandLoginToDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementCommandLoginToDomainArgs | ManagementCommandLoginToDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementCommandLoginToDomainState | undefined;
            resourceInputs["apiServerVersion"] = state ? state.apiServerVersion : undefined;
            resourceInputs["continueLastSession"] = state ? state.continueLastSession : undefined;
            resourceInputs["diskSpaceMessage"] = state ? state.diskSpaceMessage : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["lastLoginWasAt"] = state ? state.lastLoginWasAt : undefined;
            resourceInputs["loginMessage"] = state ? state.loginMessage : undefined;
            resourceInputs["readOnly"] = state ? state.readOnly : undefined;
            resourceInputs["sessionTimeout"] = state ? state.sessionTimeout : undefined;
            resourceInputs["sid"] = state ? state.sid : undefined;
            resourceInputs["standby"] = state ? state.standby : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as ManagementCommandLoginToDomainArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["continueLastSession"] = args ? args.continueLastSession : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["readOnly"] = args ? args.readOnly : undefined;
            resourceInputs["apiServerVersion"] = undefined /*out*/;
            resourceInputs["diskSpaceMessage"] = undefined /*out*/;
            resourceInputs["lastLoginWasAt"] = undefined /*out*/;
            resourceInputs["loginMessage"] = undefined /*out*/;
            resourceInputs["sessionTimeout"] = undefined /*out*/;
            resourceInputs["sid"] = undefined /*out*/;
            resourceInputs["standby"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementCommandLoginToDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementCommandLoginToDomain resources.
 */
export interface ManagementCommandLoginToDomainState {
    /**
     * API Server version.
     */
    apiServerVersion?: pulumi.Input<string>;
    /**
     * When 'continue-last-session' is set to 'True', the new session would continue where the last session was stopped. This
     * option is available when the administrator has only one session that can be continued. If there is more than one
     * session, see 'switch-session' API.
     */
    continueLastSession?: pulumi.Input<boolean>;
    /**
     * Information about the available disk space on the management server.
     */
    diskSpaceMessage?: pulumi.Input<string>;
    /**
     * Domain identified by the name or UID.
     */
    domain?: pulumi.Input<string>;
    /**
     * Timestamp when administrator last accessed the management server.
     */
    lastLoginWasAt?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Login message.
     */
    loginMessage?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Login with Read Only permissions. This parameter is not considered in case continue-last-session is true.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Session expiration timeout in seconds.
     */
    sessionTimeout?: pulumi.Input<number>;
    /**
     * Session unique identifier. Enter this session unique identifier in the 'X-chkp-sid' header of each request.
     */
    sid?: pulumi.Input<string>;
    /**
     * True if this management server is in the standby mode.
     */
    standby?: pulumi.Input<boolean>;
    /**
     * Session object unique identifier. This identifier may be used in the discard API to discard changes that were made in
     * this session, when administrator is working from another session, or in the 'switch-session' API.
     */
    uid?: pulumi.Input<string>;
    /**
     * URL that was used to reach the API server.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementCommandLoginToDomain resource.
 */
export interface ManagementCommandLoginToDomainArgs {
    /**
     * When 'continue-last-session' is set to 'True', the new session would continue where the last session was stopped. This
     * option is available when the administrator has only one session that can be continued. If there is more than one
     * session, see 'switch-session' API.
     */
    continueLastSession?: pulumi.Input<boolean>;
    /**
     * Domain identified by the name or UID.
     */
    domain: pulumi.Input<string>;
    /**
     * Login with Read Only permissions. This parameter is not considered in case continue-last-session is true.
     */
    readOnly?: pulumi.Input<boolean>;
}
