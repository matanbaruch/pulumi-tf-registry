// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementDataAccessRule(args: GetManagementDataAccessRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementDataAccessRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementDataAccessRule:getManagementDataAccessRule", {
        "fieldsWithUidIdentifiers": args.fieldsWithUidIdentifiers,
        "id": args.id,
        "layer": args.layer,
        "name": args.name,
        "uid": args.uid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementDataAccessRule.
 */
export interface GetManagementDataAccessRuleArgs {
    fieldsWithUidIdentifiers?: string[];
    id?: string;
    layer: string;
    name?: string;
    uid?: string;
}

/**
 * A collection of values returned by getManagementDataAccessRule.
 */
export interface GetManagementDataAccessRuleResult {
    readonly action: string;
    readonly actionSettings: {[key: string]: string};
    readonly comments: string;
    readonly contentDirection: string;
    readonly contentNegate: boolean;
    readonly contents: string[];
    readonly customFields: {[key: string]: string};
    readonly destinationNegate: boolean;
    readonly destinations: string[];
    readonly enabled: boolean;
    readonly fieldsWithUidIdentifiers?: string[];
    readonly id: string;
    readonly inlineLayer: string;
    readonly installOns: string[];
    readonly layer: string;
    readonly name?: string;
    readonly serviceNegate: boolean;
    readonly services: string[];
    readonly sourceNegate: boolean;
    readonly sources: string[];
    readonly times: string[];
    readonly track: {[key: string]: string};
    readonly uid?: string;
    readonly userChecks: outputs.GetManagementDataAccessRuleUserCheck[];
    readonly vpn: string;
}
export function getManagementDataAccessRuleOutput(args: GetManagementDataAccessRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementDataAccessRuleResult> {
    return pulumi.output(args).apply((a: any) => getManagementDataAccessRule(a, opts))
}

/**
 * A collection of arguments for invoking getManagementDataAccessRule.
 */
export interface GetManagementDataAccessRuleOutputArgs {
    fieldsWithUidIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    layer: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
}
