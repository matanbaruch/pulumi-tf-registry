// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementInstallDatabase extends pulumi.CustomResource {
    /**
     * Get an existing ManagementInstallDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementInstallDatabaseState, opts?: pulumi.CustomResourceOptions): ManagementInstallDatabase {
        return new ManagementInstallDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementInstallDatabase:ManagementInstallDatabase';

    /**
     * Returns true if the given object is an instance of ManagementInstallDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementInstallDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementInstallDatabase.__pulumiType;
    }

    /**
     * Check Point host(s) with one or more Management Software Blades enabled. The targets can be identified by their name or
     * unique identifier.
     */
    public readonly targets!: pulumi.Output<string[]>;
    /**
     * Command asynchronous task unique identifiers
     */
    public /*out*/ readonly tasks!: pulumi.Output<string[]>;

    /**
     * Create a ManagementInstallDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementInstallDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementInstallDatabaseArgs | ManagementInstallDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementInstallDatabaseState | undefined;
            resourceInputs["targets"] = state ? state.targets : undefined;
            resourceInputs["tasks"] = state ? state.tasks : undefined;
        } else {
            const args = argsOrState as ManagementInstallDatabaseArgs | undefined;
            if ((!args || args.targets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targets'");
            }
            resourceInputs["targets"] = args ? args.targets : undefined;
            resourceInputs["tasks"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementInstallDatabase.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementInstallDatabase resources.
 */
export interface ManagementInstallDatabaseState {
    /**
     * Check Point host(s) with one or more Management Software Blades enabled. The targets can be identified by their name or
     * unique identifier.
     */
    targets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Command asynchronous task unique identifiers
     */
    tasks?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ManagementInstallDatabase resource.
 */
export interface ManagementInstallDatabaseArgs {
    /**
     * Check Point host(s) with one or more Management Software Blades enabled. The targets can be identified by their name or
     * unique identifier.
     */
    targets: pulumi.Input<pulumi.Input<string>[]>;
}
