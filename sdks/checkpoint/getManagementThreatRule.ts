// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getManagementThreatRule(args: GetManagementThreatRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementThreatRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementThreatRule:getManagementThreatRule", {
        "id": args.id,
        "layer": args.layer,
        "name": args.name,
        "uid": args.uid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementThreatRule.
 */
export interface GetManagementThreatRuleArgs {
    id?: string;
    layer: string;
    name?: string;
    uid?: string;
}

/**
 * A collection of values returned by getManagementThreatRule.
 */
export interface GetManagementThreatRuleResult {
    readonly action: string;
    readonly comments: string;
    readonly destinationNegate: boolean;
    readonly destinations: string[];
    readonly enabled: boolean;
    readonly exceptions: string[];
    readonly id: string;
    readonly installOns: string[];
    readonly layer: string;
    readonly name?: string;
    readonly protectedScopeNegate: boolean;
    readonly protectedScopes: string[];
    readonly serviceNegate: boolean;
    readonly services: string[];
    readonly sourceNegate: boolean;
    readonly sources: string[];
    readonly track: string;
    readonly trackSettings: {[key: string]: string};
    readonly uid?: string;
}
export function getManagementThreatRuleOutput(args: GetManagementThreatRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementThreatRuleResult> {
    return pulumi.output(args).apply((a: any) => getManagementThreatRule(a, opts))
}

/**
 * A collection of arguments for invoking getManagementThreatRule.
 */
export interface GetManagementThreatRuleOutputArgs {
    id?: pulumi.Input<string>;
    layer: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
}
