// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getManagementCmeApiVersions(args?: GetManagementCmeApiVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementCmeApiVersionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementCmeApiVersions:getManagementCmeApiVersions", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementCmeApiVersions.
 */
export interface GetManagementCmeApiVersionsArgs {
    id?: string;
}

/**
 * A collection of values returned by getManagementCmeApiVersions.
 */
export interface GetManagementCmeApiVersionsResult {
    readonly currentVersion: string;
    readonly id: string;
    readonly supportedVersions: string[];
}
export function getManagementCmeApiVersionsOutput(args?: GetManagementCmeApiVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementCmeApiVersionsResult> {
    return pulumi.output(args).apply((a: any) => getManagementCmeApiVersions(a, opts))
}

/**
 * A collection of arguments for invoking getManagementCmeApiVersions.
 */
export interface GetManagementCmeApiVersionsOutputArgs {
    id?: pulumi.Input<string>;
}
