// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagementLsmGateway extends pulumi.CustomResource {
    /**
     * Get an existing ManagementLsmGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementLsmGatewayState, opts?: pulumi.CustomResourceOptions): ManagementLsmGateway {
        return new ManagementLsmGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementLsmGateway:ManagementLsmGateway';

    /**
     * Returns true if the given object is an instance of ManagementLsmGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementLsmGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementLsmGateway.__pulumiType;
    }

    /**
     * Color of the object. Should be one of existing colors.
     */
    public readonly color!: pulumi.Output<string | undefined>;
    /**
     * Comments string.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Device ID.
     */
    public readonly deviceId!: pulumi.Output<string | undefined>;
    /**
     * Dynamic Objects.
     */
    public readonly dynamicObjects!: pulumi.Output<outputs.ManagementLsmGatewayDynamicObject[] | undefined>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    public readonly ignoreErrors!: pulumi.Output<boolean | undefined>;
    /**
     * Apply changes ignoring warnings.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * IP address
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * Object name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Device platform operating system.
     */
    public /*out*/ readonly osName!: pulumi.Output<string>;
    /**
     * Provisioning settings.
     */
    public readonly provisioningSettings!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Provisioning state. By default the state is 'manual'- enable provisioning but not attach to profile. If 'using-profile'
     * state is provided a provisioning profile must be provided in provisioning-settings.
     */
    public readonly provisioningState!: pulumi.Output<string | undefined>;
    /**
     * LSM profile.
     */
    public readonly securityProfile!: pulumi.Output<string>;
    /**
     * Secure Internal Communication.
     */
    public readonly sic!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Secure Internal Communication name.
     */
    public /*out*/ readonly sicName!: pulumi.Output<string>;
    /**
     * Secure Internal Communication state.
     */
    public /*out*/ readonly sicState!: pulumi.Output<string>;
    /**
     * Collection of tag identifiers.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Topology.
     */
    public readonly topology!: pulumi.Output<outputs.ManagementLsmGatewayTopology | undefined>;
    /**
     * Device platform version.
     */
    public readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a ManagementLsmGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementLsmGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementLsmGatewayArgs | ManagementLsmGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementLsmGatewayState | undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["dynamicObjects"] = state ? state.dynamicObjects : undefined;
            resourceInputs["ignoreErrors"] = state ? state.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["osName"] = state ? state.osName : undefined;
            resourceInputs["provisioningSettings"] = state ? state.provisioningSettings : undefined;
            resourceInputs["provisioningState"] = state ? state.provisioningState : undefined;
            resourceInputs["securityProfile"] = state ? state.securityProfile : undefined;
            resourceInputs["sic"] = state ? state.sic : undefined;
            resourceInputs["sicName"] = state ? state.sicName : undefined;
            resourceInputs["sicState"] = state ? state.sicState : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["topology"] = state ? state.topology : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ManagementLsmGatewayArgs | undefined;
            if ((!args || args.securityProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityProfile'");
            }
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["dynamicObjects"] = args ? args.dynamicObjects : undefined;
            resourceInputs["ignoreErrors"] = args ? args.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["provisioningSettings"] = args ? args.provisioningSettings : undefined;
            resourceInputs["provisioningState"] = args ? args.provisioningState : undefined;
            resourceInputs["securityProfile"] = args ? args.securityProfile : undefined;
            resourceInputs["sic"] = args ? args.sic : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["topology"] = args ? args.topology : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["osName"] = undefined /*out*/;
            resourceInputs["sicName"] = undefined /*out*/;
            resourceInputs["sicState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementLsmGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementLsmGateway resources.
 */
export interface ManagementLsmGatewayState {
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Device ID.
     */
    deviceId?: pulumi.Input<string>;
    /**
     * Dynamic Objects.
     */
    dynamicObjects?: pulumi.Input<pulumi.Input<inputs.ManagementLsmGatewayDynamicObject>[]>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * IP address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Object name.
     */
    name?: pulumi.Input<string>;
    /**
     * Device platform operating system.
     */
    osName?: pulumi.Input<string>;
    /**
     * Provisioning settings.
     */
    provisioningSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Provisioning state. By default the state is 'manual'- enable provisioning but not attach to profile. If 'using-profile'
     * state is provided a provisioning profile must be provided in provisioning-settings.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * LSM profile.
     */
    securityProfile?: pulumi.Input<string>;
    /**
     * Secure Internal Communication.
     */
    sic?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Secure Internal Communication name.
     */
    sicName?: pulumi.Input<string>;
    /**
     * Secure Internal Communication state.
     */
    sicState?: pulumi.Input<string>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Topology.
     */
    topology?: pulumi.Input<inputs.ManagementLsmGatewayTopology>;
    /**
     * Device platform version.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementLsmGateway resource.
 */
export interface ManagementLsmGatewayArgs {
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Device ID.
     */
    deviceId?: pulumi.Input<string>;
    /**
     * Dynamic Objects.
     */
    dynamicObjects?: pulumi.Input<pulumi.Input<inputs.ManagementLsmGatewayDynamicObject>[]>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Object name.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning settings.
     */
    provisioningSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Provisioning state. By default the state is 'manual'- enable provisioning but not attach to profile. If 'using-profile'
     * state is provided a provisioning profile must be provided in provisioning-settings.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * LSM profile.
     */
    securityProfile: pulumi.Input<string>;
    /**
     * Secure Internal Communication.
     */
    sic?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Topology.
     */
    topology?: pulumi.Input<inputs.ManagementLsmGatewayTopology>;
    /**
     * Device platform version.
     */
    version?: pulumi.Input<string>;
}
