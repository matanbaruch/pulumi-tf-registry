// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementThreatRulebase(args?: GetManagementThreatRulebaseArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementThreatRulebaseResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementThreatRulebase:getManagementThreatRulebase", {
        "dereferenceGroupMembers": args.dereferenceGroupMembers,
        "filter": args.filter,
        "filterSettings": args.filterSettings,
        "hitsSettings": args.hitsSettings,
        "id": args.id,
        "limit": args.limit,
        "name": args.name,
        "offset": args.offset,
        "orders": args.orders,
        "package": args.package,
        "showAsRanges": args.showAsRanges,
        "showHits": args.showHits,
        "showMembership": args.showMembership,
        "uid": args.uid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementThreatRulebase.
 */
export interface GetManagementThreatRulebaseArgs {
    dereferenceGroupMembers?: boolean;
    filter?: string;
    filterSettings?: {[key: string]: string};
    hitsSettings?: {[key: string]: string};
    id?: string;
    limit?: number;
    name?: string;
    offset?: number;
    orders?: inputs.GetManagementThreatRulebaseOrder[];
    package?: string;
    showAsRanges?: boolean;
    showHits?: boolean;
    showMembership?: boolean;
    uid?: string;
}

/**
 * A collection of values returned by getManagementThreatRulebase.
 */
export interface GetManagementThreatRulebaseResult {
    readonly dereferenceGroupMembers?: boolean;
    readonly filter?: string;
    readonly filterSettings?: {[key: string]: string};
    readonly hitsSettings?: {[key: string]: string};
    readonly id: string;
    readonly limit?: number;
    readonly name?: string;
    readonly offset?: number;
    readonly orders?: outputs.GetManagementThreatRulebaseOrder[];
    readonly package?: string;
    readonly rulebases: outputs.GetManagementThreatRulebaseRulebase[];
    readonly showAsRanges?: boolean;
    readonly showHits?: boolean;
    readonly showMembership?: boolean;
    readonly uid?: string;
}
export function getManagementThreatRulebaseOutput(args?: GetManagementThreatRulebaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementThreatRulebaseResult> {
    return pulumi.output(args).apply((a: any) => getManagementThreatRulebase(a, opts))
}

/**
 * A collection of arguments for invoking getManagementThreatRulebase.
 */
export interface GetManagementThreatRulebaseOutputArgs {
    dereferenceGroupMembers?: pulumi.Input<boolean>;
    filter?: pulumi.Input<string>;
    filterSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    hitsSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    limit?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    offset?: pulumi.Input<number>;
    orders?: pulumi.Input<pulumi.Input<inputs.GetManagementThreatRulebaseOrderArgs>[]>;
    package?: pulumi.Input<string>;
    showAsRanges?: pulumi.Input<boolean>;
    showHits?: pulumi.Input<boolean>;
    showMembership?: pulumi.Input<boolean>;
    uid?: pulumi.Input<string>;
}
