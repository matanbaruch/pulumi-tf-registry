// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementCmeAccountsAzure extends pulumi.CustomResource {
    /**
     * Get an existing ManagementCmeAccountsAzure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementCmeAccountsAzureState, opts?: pulumi.CustomResourceOptions): ManagementCmeAccountsAzure {
        return new ManagementCmeAccountsAzure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementCmeAccountsAzure:ManagementCmeAccountsAzure';

    /**
     * Returns true if the given object is an instance of ManagementCmeAccountsAzure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementCmeAccountsAzure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementCmeAccountsAzure.__pulumiType;
    }

    /**
     * The application ID with which the service principal is associated.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * The service principal's client secret.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * The number of CME cycles to wait when the cloud provider does not return a GW until its deletion.
     */
    public readonly deletionTolerance!: pulumi.Output<number | undefined>;
    /**
     * Azure Active Directory tenant ID.
     */
    public readonly directoryId!: pulumi.Output<string>;
    /**
     * The account's domain name in MDS environment.
     */
    public readonly domain!: pulumi.Output<string | undefined>;
    /**
     * A list of GW configurations attached to the account
     */
    public /*out*/ readonly gwConfigurations!: pulumi.Output<string[]>;
    /**
     * Unique account name for identification.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The platform of the account.
     */
    public /*out*/ readonly platform!: pulumi.Output<string>;
    /**
     * Azure subscription ID.
     */
    public readonly subscription!: pulumi.Output<string>;

    /**
     * Create a ManagementCmeAccountsAzure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementCmeAccountsAzureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementCmeAccountsAzureArgs | ManagementCmeAccountsAzureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementCmeAccountsAzureState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["deletionTolerance"] = state ? state.deletionTolerance : undefined;
            resourceInputs["directoryId"] = state ? state.directoryId : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["gwConfigurations"] = state ? state.gwConfigurations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["subscription"] = state ? state.subscription : undefined;
        } else {
            const args = argsOrState as ManagementCmeAccountsAzureArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if ((!args || args.directoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'directoryId'");
            }
            if ((!args || args.subscription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscription'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["deletionTolerance"] = args ? args.deletionTolerance : undefined;
            resourceInputs["directoryId"] = args ? args.directoryId : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["subscription"] = args ? args.subscription : undefined;
            resourceInputs["gwConfigurations"] = undefined /*out*/;
            resourceInputs["platform"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ManagementCmeAccountsAzure.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementCmeAccountsAzure resources.
 */
export interface ManagementCmeAccountsAzureState {
    /**
     * The application ID with which the service principal is associated.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * The service principal's client secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The number of CME cycles to wait when the cloud provider does not return a GW until its deletion.
     */
    deletionTolerance?: pulumi.Input<number>;
    /**
     * Azure Active Directory tenant ID.
     */
    directoryId?: pulumi.Input<string>;
    /**
     * The account's domain name in MDS environment.
     */
    domain?: pulumi.Input<string>;
    /**
     * A list of GW configurations attached to the account
     */
    gwConfigurations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique account name for identification.
     */
    name?: pulumi.Input<string>;
    /**
     * The platform of the account.
     */
    platform?: pulumi.Input<string>;
    /**
     * Azure subscription ID.
     */
    subscription?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementCmeAccountsAzure resource.
 */
export interface ManagementCmeAccountsAzureArgs {
    /**
     * The application ID with which the service principal is associated.
     */
    applicationId: pulumi.Input<string>;
    /**
     * The service principal's client secret.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * The number of CME cycles to wait when the cloud provider does not return a GW until its deletion.
     */
    deletionTolerance?: pulumi.Input<number>;
    /**
     * Azure Active Directory tenant ID.
     */
    directoryId: pulumi.Input<string>;
    /**
     * The account's domain name in MDS environment.
     */
    domain?: pulumi.Input<string>;
    /**
     * Unique account name for identification.
     */
    name?: pulumi.Input<string>;
    /**
     * Azure subscription ID.
     */
    subscription: pulumi.Input<string>;
}
