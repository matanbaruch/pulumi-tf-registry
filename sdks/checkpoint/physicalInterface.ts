// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PhysicalInterface extends pulumi.CustomResource {
    /**
     * Get an existing PhysicalInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PhysicalInterfaceState, opts?: pulumi.CustomResourceOptions): PhysicalInterface {
        return new PhysicalInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/physicalInterface:PhysicalInterface';

    /**
     * Returns true if the given object is an instance of PhysicalInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PhysicalInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PhysicalInterface.__pulumiType;
    }

    /**
     * Activating auto_negotiation will skip the speed and duplex configuration
     */
    public readonly autoNegotiation!: pulumi.Output<string | undefined>;
    /**
     * comments
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Duplex is not relevant when 'auto_negotiation' is enabled.
     */
    public readonly duplex!: pulumi.Output<string | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    public readonly ipv4MaskLength!: pulumi.Output<number | undefined>;
    public readonly ipv6Address!: pulumi.Output<string | undefined>;
    public readonly ipv6Autoconfig!: pulumi.Output<string | undefined>;
    public readonly ipv6MaskLength!: pulumi.Output<number | undefined>;
    public readonly macAddr!: pulumi.Output<string | undefined>;
    public readonly monitorMode!: pulumi.Output<string | undefined>;
    public readonly mtu!: pulumi.Output<number | undefined>;
    /**
     * interface name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly rxRingsize!: pulumi.Output<string | undefined>;
    /**
     * Speed is not relevant when 'auto_negotiation' is enabled
     */
    public readonly speed!: pulumi.Output<string | undefined>;
    public readonly txRingsize!: pulumi.Output<string | undefined>;

    /**
     * Create a PhysicalInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PhysicalInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PhysicalInterfaceArgs | PhysicalInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PhysicalInterfaceState | undefined;
            resourceInputs["autoNegotiation"] = state ? state.autoNegotiation : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["duplex"] = state ? state.duplex : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4MaskLength"] = state ? state.ipv4MaskLength : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["ipv6Autoconfig"] = state ? state.ipv6Autoconfig : undefined;
            resourceInputs["ipv6MaskLength"] = state ? state.ipv6MaskLength : undefined;
            resourceInputs["macAddr"] = state ? state.macAddr : undefined;
            resourceInputs["monitorMode"] = state ? state.monitorMode : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rxRingsize"] = state ? state.rxRingsize : undefined;
            resourceInputs["speed"] = state ? state.speed : undefined;
            resourceInputs["txRingsize"] = state ? state.txRingsize : undefined;
        } else {
            const args = argsOrState as PhysicalInterfaceArgs | undefined;
            resourceInputs["autoNegotiation"] = args ? args.autoNegotiation : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["duplex"] = args ? args.duplex : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4MaskLength"] = args ? args.ipv4MaskLength : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["ipv6Autoconfig"] = args ? args.ipv6Autoconfig : undefined;
            resourceInputs["ipv6MaskLength"] = args ? args.ipv6MaskLength : undefined;
            resourceInputs["macAddr"] = args ? args.macAddr : undefined;
            resourceInputs["monitorMode"] = args ? args.monitorMode : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rxRingsize"] = args ? args.rxRingsize : undefined;
            resourceInputs["speed"] = args ? args.speed : undefined;
            resourceInputs["txRingsize"] = args ? args.txRingsize : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PhysicalInterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PhysicalInterface resources.
 */
export interface PhysicalInterfaceState {
    /**
     * Activating auto_negotiation will skip the speed and duplex configuration
     */
    autoNegotiation?: pulumi.Input<string>;
    /**
     * comments
     */
    comments?: pulumi.Input<string>;
    /**
     * Duplex is not relevant when 'auto_negotiation' is enabled.
     */
    duplex?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    ipv4Address?: pulumi.Input<string>;
    ipv4MaskLength?: pulumi.Input<number>;
    ipv6Address?: pulumi.Input<string>;
    ipv6Autoconfig?: pulumi.Input<string>;
    ipv6MaskLength?: pulumi.Input<number>;
    macAddr?: pulumi.Input<string>;
    monitorMode?: pulumi.Input<string>;
    mtu?: pulumi.Input<number>;
    /**
     * interface name
     */
    name?: pulumi.Input<string>;
    rxRingsize?: pulumi.Input<string>;
    /**
     * Speed is not relevant when 'auto_negotiation' is enabled
     */
    speed?: pulumi.Input<string>;
    txRingsize?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PhysicalInterface resource.
 */
export interface PhysicalInterfaceArgs {
    /**
     * Activating auto_negotiation will skip the speed and duplex configuration
     */
    autoNegotiation?: pulumi.Input<string>;
    /**
     * comments
     */
    comments?: pulumi.Input<string>;
    /**
     * Duplex is not relevant when 'auto_negotiation' is enabled.
     */
    duplex?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    ipv4Address?: pulumi.Input<string>;
    ipv4MaskLength?: pulumi.Input<number>;
    ipv6Address?: pulumi.Input<string>;
    ipv6Autoconfig?: pulumi.Input<string>;
    ipv6MaskLength?: pulumi.Input<number>;
    macAddr?: pulumi.Input<string>;
    monitorMode?: pulumi.Input<string>;
    mtu?: pulumi.Input<number>;
    /**
     * interface name
     */
    name?: pulumi.Input<string>;
    rxRingsize?: pulumi.Input<string>;
    /**
     * Speed is not relevant when 'auto_negotiation' is enabled
     */
    speed?: pulumi.Input<string>;
    txRingsize?: pulumi.Input<string>;
}
