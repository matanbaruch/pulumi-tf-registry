// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementConnectCloudServices extends pulumi.CustomResource {
    /**
     * Get an existing ManagementConnectCloudServices resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementConnectCloudServicesState, opts?: pulumi.CustomResourceOptions): ManagementConnectCloudServices {
        return new ManagementConnectCloudServices(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementConnectCloudServices:ManagementConnectCloudServices';

    /**
     * Returns true if the given object is an instance of ManagementConnectCloudServices.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementConnectCloudServices {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementConnectCloudServices.__pulumiType;
    }

    /**
     * Copy the authentication token from the Smart-1 cloud service hosted in the Infinity Portal.
     */
    public readonly authToken!: pulumi.Output<string>;
    /**
     * The time of the connection between the Management Server and the Infinity Portal.
     */
    public /*out*/ readonly connectedAt!: pulumi.Output<{[key: string]: string}>;
    /**
     * The Management Server's public URL.
     */
    public /*out*/ readonly managementUrl!: pulumi.Output<string>;
    /**
     * Status of the connection to the Infinity Portal.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ManagementConnectCloudServices resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementConnectCloudServicesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementConnectCloudServicesArgs | ManagementConnectCloudServicesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementConnectCloudServicesState | undefined;
            resourceInputs["authToken"] = state ? state.authToken : undefined;
            resourceInputs["connectedAt"] = state ? state.connectedAt : undefined;
            resourceInputs["managementUrl"] = state ? state.managementUrl : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ManagementConnectCloudServicesArgs | undefined;
            if ((!args || args.authToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authToken'");
            }
            resourceInputs["authToken"] = args ? args.authToken : undefined;
            resourceInputs["connectedAt"] = undefined /*out*/;
            resourceInputs["managementUrl"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementConnectCloudServices.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementConnectCloudServices resources.
 */
export interface ManagementConnectCloudServicesState {
    /**
     * Copy the authentication token from the Smart-1 cloud service hosted in the Infinity Portal.
     */
    authToken?: pulumi.Input<string>;
    /**
     * The time of the connection between the Management Server and the Infinity Portal.
     */
    connectedAt?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Management Server's public URL.
     */
    managementUrl?: pulumi.Input<string>;
    /**
     * Status of the connection to the Infinity Portal.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementConnectCloudServices resource.
 */
export interface ManagementConnectCloudServicesArgs {
    /**
     * Copy the authentication token from the Smart-1 cloud service hosted in the Infinity Portal.
     */
    authToken: pulumi.Input<string>;
}
