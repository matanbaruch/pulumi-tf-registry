// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getManagementGlobalAssignment(args?: GetManagementGlobalAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementGlobalAssignmentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementGlobalAssignment:getManagementGlobalAssignment", {
        "dependentDomain": args.dependentDomain,
        "globalDomain": args.globalDomain,
        "id": args.id,
        "uid": args.uid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementGlobalAssignment.
 */
export interface GetManagementGlobalAssignmentArgs {
    dependentDomain?: string;
    globalDomain?: string;
    id?: string;
    uid?: string;
}

/**
 * A collection of values returned by getManagementGlobalAssignment.
 */
export interface GetManagementGlobalAssignmentResult {
    readonly assignmentStatus: string;
    readonly assignmentUpToDate: {[key: string]: string};
    readonly color: string;
    readonly comments: string;
    readonly dependentDomain?: string;
    readonly globalAccessPolicy: string;
    readonly globalDomain?: string;
    readonly globalThreatPreventionPolicy: string;
    readonly id: string;
    readonly manageProtectionActions: boolean;
    readonly name: string;
    readonly tags: string[];
    readonly uid?: string;
}
export function getManagementGlobalAssignmentOutput(args?: GetManagementGlobalAssignmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementGlobalAssignmentResult> {
    return pulumi.output(args).apply((a: any) => getManagementGlobalAssignment(a, opts))
}

/**
 * A collection of arguments for invoking getManagementGlobalAssignment.
 */
export interface GetManagementGlobalAssignmentOutputArgs {
    dependentDomain?: pulumi.Input<string>;
    globalDomain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
}
