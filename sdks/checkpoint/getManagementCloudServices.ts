// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementCloudServices(args?: GetManagementCloudServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementCloudServicesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementCloudServices:getManagementCloudServices", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementCloudServices.
 */
export interface GetManagementCloudServicesArgs {
    id?: string;
}

/**
 * A collection of values returned by getManagementCloudServices.
 */
export interface GetManagementCloudServicesResult {
    readonly connectedAt: {[key: string]: string};
    readonly gatewaysOnboardingSettings: outputs.GetManagementCloudServicesGatewaysOnboardingSetting[];
    readonly id: string;
    readonly managementUrl: string;
    readonly status: string;
    readonly tenantId: string;
}
export function getManagementCloudServicesOutput(args?: GetManagementCloudServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementCloudServicesResult> {
    return pulumi.output(args).apply((a: any) => getManagementCloudServices(a, opts))
}

/**
 * A collection of arguments for invoking getManagementCloudServices.
 */
export interface GetManagementCloudServicesOutputArgs {
    id?: pulumi.Input<string>;
}
