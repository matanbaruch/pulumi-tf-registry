// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagementDomainPermissionsProfile extends pulumi.CustomResource {
    /**
     * Get an existing ManagementDomainPermissionsProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementDomainPermissionsProfileState, opts?: pulumi.CustomResourceOptions): ManagementDomainPermissionsProfile {
        return new ManagementDomainPermissionsProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementDomainPermissionsProfile:ManagementDomainPermissionsProfile';

    /**
     * Returns true if the given object is an instance of ManagementDomainPermissionsProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementDomainPermissionsProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementDomainPermissionsProfile.__pulumiType;
    }

    /**
     * Access Control permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    public readonly accessControl!: pulumi.Output<outputs.ManagementDomainPermissionsProfileAccessControl | undefined>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    public readonly color!: pulumi.Output<string | undefined>;
    /**
     * Comments string.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Define and manage objects in the Check Point database: Network Objects, Services, Custom Application Site, VPN
     * Community, Users, Servers, Resources, Time, UserCheck, and Limit.<br>Only a 'Customized' permission-type profile can
     * edit this permission.
     */
    public readonly editCommonObjects!: pulumi.Output<boolean | undefined>;
    /**
     * Endpoint permissions. Not supported for Multi-Domain Servers.<br>Only a 'Customized' permission-type profile can edit
     * these permissions.
     */
    public readonly endpoint!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Events and Reports permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    public readonly eventsAndReports!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Gateways permissions. <br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    public readonly gateways!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    public readonly ignoreErrors!: pulumi.Output<boolean | undefined>;
    /**
     * Apply changes ignoring warnings.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * Management permissions.
     */
    public readonly management!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Monitoring and Logging permissions.<br>'Customized' permission-type profile can edit all these permissions. "Read Write
     * All" permission-type can edit only dlp-logs-including-confidential-fields and manage-dlp-messages permissions.
     */
    public readonly monitoringAndLogging!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Object name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Additional permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    public readonly others!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the Permissions Profile.
     */
    public readonly permissionType!: pulumi.Output<string | undefined>;
    /**
     * Collection of tag identifiers.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Threat Prevention permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    public readonly threatPrevention!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ManagementDomainPermissionsProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementDomainPermissionsProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementDomainPermissionsProfileArgs | ManagementDomainPermissionsProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementDomainPermissionsProfileState | undefined;
            resourceInputs["accessControl"] = state ? state.accessControl : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["editCommonObjects"] = state ? state.editCommonObjects : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["eventsAndReports"] = state ? state.eventsAndReports : undefined;
            resourceInputs["gateways"] = state ? state.gateways : undefined;
            resourceInputs["ignoreErrors"] = state ? state.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["management"] = state ? state.management : undefined;
            resourceInputs["monitoringAndLogging"] = state ? state.monitoringAndLogging : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["others"] = state ? state.others : undefined;
            resourceInputs["permissionType"] = state ? state.permissionType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["threatPrevention"] = state ? state.threatPrevention : undefined;
        } else {
            const args = argsOrState as ManagementDomainPermissionsProfileArgs | undefined;
            resourceInputs["accessControl"] = args ? args.accessControl : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["editCommonObjects"] = args ? args.editCommonObjects : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["eventsAndReports"] = args ? args.eventsAndReports : undefined;
            resourceInputs["gateways"] = args ? args.gateways : undefined;
            resourceInputs["ignoreErrors"] = args ? args.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["management"] = args ? args.management : undefined;
            resourceInputs["monitoringAndLogging"] = args ? args.monitoringAndLogging : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["others"] = args ? args.others : undefined;
            resourceInputs["permissionType"] = args ? args.permissionType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["threatPrevention"] = args ? args.threatPrevention : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementDomainPermissionsProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementDomainPermissionsProfile resources.
 */
export interface ManagementDomainPermissionsProfileState {
    /**
     * Access Control permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    accessControl?: pulumi.Input<inputs.ManagementDomainPermissionsProfileAccessControl>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Define and manage objects in the Check Point database: Network Objects, Services, Custom Application Site, VPN
     * Community, Users, Servers, Resources, Time, UserCheck, and Limit.<br>Only a 'Customized' permission-type profile can
     * edit this permission.
     */
    editCommonObjects?: pulumi.Input<boolean>;
    /**
     * Endpoint permissions. Not supported for Multi-Domain Servers.<br>Only a 'Customized' permission-type profile can edit
     * these permissions.
     */
    endpoint?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Events and Reports permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    eventsAndReports?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Gateways permissions. <br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    gateways?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Management permissions.
     */
    management?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Monitoring and Logging permissions.<br>'Customized' permission-type profile can edit all these permissions. "Read Write
     * All" permission-type can edit only dlp-logs-including-confidential-fields and manage-dlp-messages permissions.
     */
    monitoringAndLogging?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Object name.
     */
    name?: pulumi.Input<string>;
    /**
     * Additional permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    others?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of the Permissions Profile.
     */
    permissionType?: pulumi.Input<string>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Threat Prevention permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    threatPrevention?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ManagementDomainPermissionsProfile resource.
 */
export interface ManagementDomainPermissionsProfileArgs {
    /**
     * Access Control permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    accessControl?: pulumi.Input<inputs.ManagementDomainPermissionsProfileAccessControl>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Define and manage objects in the Check Point database: Network Objects, Services, Custom Application Site, VPN
     * Community, Users, Servers, Resources, Time, UserCheck, and Limit.<br>Only a 'Customized' permission-type profile can
     * edit this permission.
     */
    editCommonObjects?: pulumi.Input<boolean>;
    /**
     * Endpoint permissions. Not supported for Multi-Domain Servers.<br>Only a 'Customized' permission-type profile can edit
     * these permissions.
     */
    endpoint?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Events and Reports permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    eventsAndReports?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Gateways permissions. <br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    gateways?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Management permissions.
     */
    management?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Monitoring and Logging permissions.<br>'Customized' permission-type profile can edit all these permissions. "Read Write
     * All" permission-type can edit only dlp-logs-including-confidential-fields and manage-dlp-messages permissions.
     */
    monitoringAndLogging?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Object name.
     */
    name?: pulumi.Input<string>;
    /**
     * Additional permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    others?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of the Permissions Profile.
     */
    permissionType?: pulumi.Input<string>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Threat Prevention permissions.<br>Only a 'Customized' permission-type profile can edit these permissions.
     */
    threatPrevention?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
