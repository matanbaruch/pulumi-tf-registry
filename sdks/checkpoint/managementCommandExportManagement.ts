// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementCommandExportManagement extends pulumi.CustomResource {
    /**
     * Get an existing ManagementCommandExportManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementCommandExportManagementState, opts?: pulumi.CustomResourceOptions): ManagementCommandExportManagement {
        return new ManagementCommandExportManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementCommandExportManagement:ManagementCommandExportManagement';

    /**
     * Returns true if the given object is an instance of ManagementCommandExportManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementCommandExportManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementCommandExportManagement.__pulumiType;
    }

    /**
     * Domain name to be exported.<br><font color="red">Required only for</font> exporting a Domain from the Multi-Domain
     * Server or backing up Domain.
     */
    public readonly domainName!: pulumi.Output<string | undefined>;
    /**
     * Path in which the exported database file is saved.<br><font color="red">Required only</font> when not using
     * pre-export-verification-only flag.
     */
    public readonly filePath!: pulumi.Output<string | undefined>;
    /**
     * Ignoring the verification warnings. By Setting this parameter to 'true' export will not be blocked by warnings.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * Include export of the Endpoint Security Management configuration files.
     */
    public readonly includeEndpointConfiguration!: pulumi.Output<boolean | undefined>;
    /**
     * Include export of the Endpoint Security Management database.
     */
    public readonly includeEndpointDatabase!: pulumi.Output<boolean | undefined>;
    /**
     * Export logs without log indexes.
     */
    public readonly includeLogs!: pulumi.Output<boolean | undefined>;
    /**
     * Export logs with log indexes.
     */
    public readonly includeLogsIndexes!: pulumi.Output<boolean | undefined>;
    /**
     * If true, the exported Domain will be suitable for import on the same Multi-Domain Server only.
     */
    public readonly isDomainBackup!: pulumi.Output<boolean | undefined>;
    /**
     * If true, the exported Security Management Server will be suitable for import on the Multi-Domain Server only.
     */
    public readonly isSmcToMds!: pulumi.Output<boolean | undefined>;
    /**
     * If true, only runs the pre-export verifications instead of the full export.
     */
    public readonly preExportVerificationOnly!: pulumi.Output<boolean | undefined>;
    /**
     * Asynchronous task unique identifier.
     */
    public /*out*/ readonly taskId!: pulumi.Output<string>;
    /**
     * Target version.
     */
    public readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a ManagementCommandExportManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementCommandExportManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementCommandExportManagementArgs | ManagementCommandExportManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementCommandExportManagementState | undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["filePath"] = state ? state.filePath : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["includeEndpointConfiguration"] = state ? state.includeEndpointConfiguration : undefined;
            resourceInputs["includeEndpointDatabase"] = state ? state.includeEndpointDatabase : undefined;
            resourceInputs["includeLogs"] = state ? state.includeLogs : undefined;
            resourceInputs["includeLogsIndexes"] = state ? state.includeLogsIndexes : undefined;
            resourceInputs["isDomainBackup"] = state ? state.isDomainBackup : undefined;
            resourceInputs["isSmcToMds"] = state ? state.isSmcToMds : undefined;
            resourceInputs["preExportVerificationOnly"] = state ? state.preExportVerificationOnly : undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ManagementCommandExportManagementArgs | undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["filePath"] = args ? args.filePath : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["includeEndpointConfiguration"] = args ? args.includeEndpointConfiguration : undefined;
            resourceInputs["includeEndpointDatabase"] = args ? args.includeEndpointDatabase : undefined;
            resourceInputs["includeLogs"] = args ? args.includeLogs : undefined;
            resourceInputs["includeLogsIndexes"] = args ? args.includeLogsIndexes : undefined;
            resourceInputs["isDomainBackup"] = args ? args.isDomainBackup : undefined;
            resourceInputs["isSmcToMds"] = args ? args.isSmcToMds : undefined;
            resourceInputs["preExportVerificationOnly"] = args ? args.preExportVerificationOnly : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["taskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementCommandExportManagement.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementCommandExportManagement resources.
 */
export interface ManagementCommandExportManagementState {
    /**
     * Domain name to be exported.<br><font color="red">Required only for</font> exporting a Domain from the Multi-Domain
     * Server or backing up Domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Path in which the exported database file is saved.<br><font color="red">Required only</font> when not using
     * pre-export-verification-only flag.
     */
    filePath?: pulumi.Input<string>;
    /**
     * Ignoring the verification warnings. By Setting this parameter to 'true' export will not be blocked by warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Include export of the Endpoint Security Management configuration files.
     */
    includeEndpointConfiguration?: pulumi.Input<boolean>;
    /**
     * Include export of the Endpoint Security Management database.
     */
    includeEndpointDatabase?: pulumi.Input<boolean>;
    /**
     * Export logs without log indexes.
     */
    includeLogs?: pulumi.Input<boolean>;
    /**
     * Export logs with log indexes.
     */
    includeLogsIndexes?: pulumi.Input<boolean>;
    /**
     * If true, the exported Domain will be suitable for import on the same Multi-Domain Server only.
     */
    isDomainBackup?: pulumi.Input<boolean>;
    /**
     * If true, the exported Security Management Server will be suitable for import on the Multi-Domain Server only.
     */
    isSmcToMds?: pulumi.Input<boolean>;
    /**
     * If true, only runs the pre-export verifications instead of the full export.
     */
    preExportVerificationOnly?: pulumi.Input<boolean>;
    /**
     * Asynchronous task unique identifier.
     */
    taskId?: pulumi.Input<string>;
    /**
     * Target version.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementCommandExportManagement resource.
 */
export interface ManagementCommandExportManagementArgs {
    /**
     * Domain name to be exported.<br><font color="red">Required only for</font> exporting a Domain from the Multi-Domain
     * Server or backing up Domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Path in which the exported database file is saved.<br><font color="red">Required only</font> when not using
     * pre-export-verification-only flag.
     */
    filePath?: pulumi.Input<string>;
    /**
     * Ignoring the verification warnings. By Setting this parameter to 'true' export will not be blocked by warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Include export of the Endpoint Security Management configuration files.
     */
    includeEndpointConfiguration?: pulumi.Input<boolean>;
    /**
     * Include export of the Endpoint Security Management database.
     */
    includeEndpointDatabase?: pulumi.Input<boolean>;
    /**
     * Export logs without log indexes.
     */
    includeLogs?: pulumi.Input<boolean>;
    /**
     * Export logs with log indexes.
     */
    includeLogsIndexes?: pulumi.Input<boolean>;
    /**
     * If true, the exported Domain will be suitable for import on the same Multi-Domain Server only.
     */
    isDomainBackup?: pulumi.Input<boolean>;
    /**
     * If true, the exported Security Management Server will be suitable for import on the Multi-Domain Server only.
     */
    isSmcToMds?: pulumi.Input<boolean>;
    /**
     * If true, only runs the pre-export verifications instead of the full export.
     */
    preExportVerificationOnly?: pulumi.Input<boolean>;
    /**
     * Target version.
     */
    version?: pulumi.Input<string>;
}
