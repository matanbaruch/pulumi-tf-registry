// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementUpdateProvisionedSatellites extends pulumi.CustomResource {
    /**
     * Get an existing ManagementUpdateProvisionedSatellites resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementUpdateProvisionedSatellitesState, opts?: pulumi.CustomResourceOptions): ManagementUpdateProvisionedSatellites {
        return new ManagementUpdateProvisionedSatellites(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementUpdateProvisionedSatellites:ManagementUpdateProvisionedSatellites';

    /**
     * Returns true if the given object is an instance of ManagementUpdateProvisionedSatellites.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementUpdateProvisionedSatellites {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementUpdateProvisionedSatellites.__pulumiType;
    }

    /**
     * Command asynchronous task unique identifier.
     */
    public /*out*/ readonly taskId!: pulumi.Output<string>;
    /**
     * On what targets to execute this command. Targets may be identified by their name, or object unique identifier. The
     * targets should be a corporate gateways.
     */
    public readonly vpnCenterGateways!: pulumi.Output<string[]>;

    /**
     * Create a ManagementUpdateProvisionedSatellites resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementUpdateProvisionedSatellitesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementUpdateProvisionedSatellitesArgs | ManagementUpdateProvisionedSatellitesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementUpdateProvisionedSatellitesState | undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
            resourceInputs["vpnCenterGateways"] = state ? state.vpnCenterGateways : undefined;
        } else {
            const args = argsOrState as ManagementUpdateProvisionedSatellitesArgs | undefined;
            if ((!args || args.vpnCenterGateways === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnCenterGateways'");
            }
            resourceInputs["vpnCenterGateways"] = args ? args.vpnCenterGateways : undefined;
            resourceInputs["taskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementUpdateProvisionedSatellites.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementUpdateProvisionedSatellites resources.
 */
export interface ManagementUpdateProvisionedSatellitesState {
    /**
     * Command asynchronous task unique identifier.
     */
    taskId?: pulumi.Input<string>;
    /**
     * On what targets to execute this command. Targets may be identified by their name, or object unique identifier. The
     * targets should be a corporate gateways.
     */
    vpnCenterGateways?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ManagementUpdateProvisionedSatellites resource.
 */
export interface ManagementUpdateProvisionedSatellitesArgs {
    /**
     * On what targets to execute this command. Targets may be identified by their name, or object unique identifier. The
     * targets should be a corporate gateways.
     */
    vpnCenterGateways: pulumi.Input<pulumi.Input<string>[]>;
}
