// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementSetIpsUpdateSchedule extends pulumi.CustomResource {
    /**
     * Get an existing ManagementSetIpsUpdateSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementSetIpsUpdateScheduleState, opts?: pulumi.CustomResourceOptions): ManagementSetIpsUpdateSchedule {
        return new ManagementSetIpsUpdateSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementSetIpsUpdateSchedule:ManagementSetIpsUpdateSchedule';

    /**
     * Returns true if the given object is an instance of ManagementSetIpsUpdateSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementSetIpsUpdateSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementSetIpsUpdateSchedule.__pulumiType;
    }

    /**
     * Enable/Disable IPS Update Schedule.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Days recurrence.
     */
    public readonly recurrence!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Time in format HH:mm.
     */
    public readonly time!: pulumi.Output<string | undefined>;

    /**
     * Create a ManagementSetIpsUpdateSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementSetIpsUpdateScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementSetIpsUpdateScheduleArgs | ManagementSetIpsUpdateScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementSetIpsUpdateScheduleState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["recurrence"] = state ? state.recurrence : undefined;
            resourceInputs["time"] = state ? state.time : undefined;
        } else {
            const args = argsOrState as ManagementSetIpsUpdateScheduleArgs | undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["recurrence"] = args ? args.recurrence : undefined;
            resourceInputs["time"] = args ? args.time : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementSetIpsUpdateSchedule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementSetIpsUpdateSchedule resources.
 */
export interface ManagementSetIpsUpdateScheduleState {
    /**
     * Enable/Disable IPS Update Schedule.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Days recurrence.
     */
    recurrence?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Time in format HH:mm.
     */
    time?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementSetIpsUpdateSchedule resource.
 */
export interface ManagementSetIpsUpdateScheduleArgs {
    /**
     * Enable/Disable IPS Update Schedule.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Days recurrence.
     */
    recurrence?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Time in format HH:mm.
     */
    time?: pulumi.Input<string>;
}
