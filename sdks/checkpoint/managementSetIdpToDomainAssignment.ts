// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ManagementSetIdpToDomainAssignment extends pulumi.CustomResource {
    /**
     * Get an existing ManagementSetIdpToDomainAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementSetIdpToDomainAssignmentState, opts?: pulumi.CustomResourceOptions): ManagementSetIdpToDomainAssignment {
        return new ManagementSetIdpToDomainAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementSetIdpToDomainAssignment:ManagementSetIdpToDomainAssignment';

    /**
     * Returns true if the given object is an instance of ManagementSetIdpToDomainAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementSetIdpToDomainAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementSetIdpToDomainAssignment.__pulumiType;
    }

    /**
     * Represents the Domain assigned by 'idp-to-domain-assignment', need to be domain name or UID.
     */
    public readonly assignedDomain!: pulumi.Output<string>;
    /**
     * Represents the Identity Provider to be used for Login by this assignment. Must be set when "using-default" was set to be
     * false.
     */
    public readonly identityProvider!: pulumi.Output<string | undefined>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    public readonly ignoreErrors!: pulumi.Output<boolean | undefined>;
    /**
     * Apply changes ignoring warnings.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * Command asynchronous task unique identifier.
     */
    public /*out*/ readonly taskId!: pulumi.Output<string>;
    /**
     * Is this assignment override by 'idp-default-assignment'.
     */
    public readonly usingDefault!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ManagementSetIdpToDomainAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementSetIdpToDomainAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementSetIdpToDomainAssignmentArgs | ManagementSetIdpToDomainAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementSetIdpToDomainAssignmentState | undefined;
            resourceInputs["assignedDomain"] = state ? state.assignedDomain : undefined;
            resourceInputs["identityProvider"] = state ? state.identityProvider : undefined;
            resourceInputs["ignoreErrors"] = state ? state.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
            resourceInputs["usingDefault"] = state ? state.usingDefault : undefined;
        } else {
            const args = argsOrState as ManagementSetIdpToDomainAssignmentArgs | undefined;
            if ((!args || args.assignedDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assignedDomain'");
            }
            resourceInputs["assignedDomain"] = args ? args.assignedDomain : undefined;
            resourceInputs["identityProvider"] = args ? args.identityProvider : undefined;
            resourceInputs["ignoreErrors"] = args ? args.ignoreErrors : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["usingDefault"] = args ? args.usingDefault : undefined;
            resourceInputs["taskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementSetIdpToDomainAssignment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementSetIdpToDomainAssignment resources.
 */
export interface ManagementSetIdpToDomainAssignmentState {
    /**
     * Represents the Domain assigned by 'idp-to-domain-assignment', need to be domain name or UID.
     */
    assignedDomain?: pulumi.Input<string>;
    /**
     * Represents the Identity Provider to be used for Login by this assignment. Must be set when "using-default" was set to be
     * false.
     */
    identityProvider?: pulumi.Input<string>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Command asynchronous task unique identifier.
     */
    taskId?: pulumi.Input<string>;
    /**
     * Is this assignment override by 'idp-default-assignment'.
     */
    usingDefault?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ManagementSetIdpToDomainAssignment resource.
 */
export interface ManagementSetIdpToDomainAssignmentArgs {
    /**
     * Represents the Domain assigned by 'idp-to-domain-assignment', need to be domain name or UID.
     */
    assignedDomain: pulumi.Input<string>;
    /**
     * Represents the Identity Provider to be used for Login by this assignment. Must be set when "using-default" was set to be
     * false.
     */
    identityProvider?: pulumi.Input<string>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Is this assignment override by 'idp-default-assignment'.
     */
    usingDefault?: pulumi.Input<boolean>;
}
