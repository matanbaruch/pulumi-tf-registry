// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagementThreatIocFeed extends pulumi.CustomResource {
    /**
     * Get an existing ManagementThreatIocFeed resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementThreatIocFeedState, opts?: pulumi.CustomResourceOptions): ManagementThreatIocFeed {
        return new ManagementThreatIocFeed(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkpoint:index/managementThreatIocFeed:ManagementThreatIocFeed';

    /**
     * Returns true if the given object is an instance of ManagementThreatIocFeed.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementThreatIocFeed {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementThreatIocFeed.__pulumiType;
    }

    /**
     * The feed indicator's action.
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * Certificate SHA-1 fingerprint to access the feed.
     */
    public readonly certificateId!: pulumi.Output<string | undefined>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    public readonly color!: pulumi.Output<string | undefined>;
    /**
     * Comments string.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * Custom IOC feed - the column number of comment.
     */
    public readonly customComment!: pulumi.Output<number | undefined>;
    /**
     * Custom IOC feed - the column number of confidence.
     */
    public readonly customConfidence!: pulumi.Output<number | undefined>;
    /**
     * Custom HTTP headers.
     */
    public readonly customHeaders!: pulumi.Output<outputs.ManagementThreatIocFeedCustomHeader[] | undefined>;
    /**
     * Custom IOC feed - the column number of name.
     */
    public readonly customName!: pulumi.Output<number | undefined>;
    /**
     * Custom IOC feed - the column number of severity.
     */
    public readonly customSeverity!: pulumi.Output<number | undefined>;
    /**
     * Custom IOC feed - the column number of type in case a specific type is not chosen.
     */
    public readonly customType!: pulumi.Output<number | undefined>;
    /**
     * Custom IOC feed - the column number of value in case a specific type is chosen.
     */
    public readonly customValue!: pulumi.Output<number | undefined>;
    /**
     * Sets whether this indicator feed is enabled.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Feed type to be enforced.
     */
    public readonly feedType!: pulumi.Output<string | undefined>;
    /**
     * URL of the feed. URL should be written as http or https.
     */
    public readonly feedUrl!: pulumi.Output<string | undefined>;
    /**
     * The delimiter that separates between the columns in the feed.
     */
    public readonly fieldsDelimiter!: pulumi.Output<string | undefined>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    public readonly ignoreErrors!: pulumi.Output<boolean | undefined>;
    /**
     * A prefix that will determine which lines to ignore.
     */
    public readonly ignoreLinesThatStartWith!: pulumi.Output<string | undefined>;
    /**
     * Apply changes ignoring warnings.
     */
    public readonly ignoreWarnings!: pulumi.Output<boolean | undefined>;
    /**
     * Object name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * password for authenticating with the URL.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Collection of tag identifiers.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Set in order to configure a custom indicator feed.
     */
    public readonly useCustomFeedSettings!: pulumi.Output<boolean | undefined>;
    /**
     * Use the gateway's proxy for retrieving the feed.
     */
    public readonly useGatewayProxy!: pulumi.Output<boolean | undefined>;
    /**
     * username for authenticating with the URL.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a ManagementThreatIocFeed resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementThreatIocFeedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementThreatIocFeedArgs | ManagementThreatIocFeedState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementThreatIocFeedState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["customComment"] = state ? state.customComment : undefined;
            resourceInputs["customConfidence"] = state ? state.customConfidence : undefined;
            resourceInputs["customHeaders"] = state ? state.customHeaders : undefined;
            resourceInputs["customName"] = state ? state.customName : undefined;
            resourceInputs["customSeverity"] = state ? state.customSeverity : undefined;
            resourceInputs["customType"] = state ? state.customType : undefined;
            resourceInputs["customValue"] = state ? state.customValue : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["feedType"] = state ? state.feedType : undefined;
            resourceInputs["feedUrl"] = state ? state.feedUrl : undefined;
            resourceInputs["fieldsDelimiter"] = state ? state.fieldsDelimiter : undefined;
            resourceInputs["ignoreErrors"] = state ? state.ignoreErrors : undefined;
            resourceInputs["ignoreLinesThatStartWith"] = state ? state.ignoreLinesThatStartWith : undefined;
            resourceInputs["ignoreWarnings"] = state ? state.ignoreWarnings : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["useCustomFeedSettings"] = state ? state.useCustomFeedSettings : undefined;
            resourceInputs["useGatewayProxy"] = state ? state.useGatewayProxy : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as ManagementThreatIocFeedArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["customComment"] = args ? args.customComment : undefined;
            resourceInputs["customConfidence"] = args ? args.customConfidence : undefined;
            resourceInputs["customHeaders"] = args ? args.customHeaders : undefined;
            resourceInputs["customName"] = args ? args.customName : undefined;
            resourceInputs["customSeverity"] = args ? args.customSeverity : undefined;
            resourceInputs["customType"] = args ? args.customType : undefined;
            resourceInputs["customValue"] = args ? args.customValue : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["feedType"] = args ? args.feedType : undefined;
            resourceInputs["feedUrl"] = args ? args.feedUrl : undefined;
            resourceInputs["fieldsDelimiter"] = args ? args.fieldsDelimiter : undefined;
            resourceInputs["ignoreErrors"] = args ? args.ignoreErrors : undefined;
            resourceInputs["ignoreLinesThatStartWith"] = args ? args.ignoreLinesThatStartWith : undefined;
            resourceInputs["ignoreWarnings"] = args ? args.ignoreWarnings : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["useCustomFeedSettings"] = args ? args.useCustomFeedSettings : undefined;
            resourceInputs["useGatewayProxy"] = args ? args.useGatewayProxy : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementThreatIocFeed.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagementThreatIocFeed resources.
 */
export interface ManagementThreatIocFeedState {
    /**
     * The feed indicator's action.
     */
    action?: pulumi.Input<string>;
    /**
     * Certificate SHA-1 fingerprint to access the feed.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Custom IOC feed - the column number of comment.
     */
    customComment?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of confidence.
     */
    customConfidence?: pulumi.Input<number>;
    /**
     * Custom HTTP headers.
     */
    customHeaders?: pulumi.Input<pulumi.Input<inputs.ManagementThreatIocFeedCustomHeader>[]>;
    /**
     * Custom IOC feed - the column number of name.
     */
    customName?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of severity.
     */
    customSeverity?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of type in case a specific type is not chosen.
     */
    customType?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of value in case a specific type is chosen.
     */
    customValue?: pulumi.Input<number>;
    /**
     * Sets whether this indicator feed is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Feed type to be enforced.
     */
    feedType?: pulumi.Input<string>;
    /**
     * URL of the feed. URL should be written as http or https.
     */
    feedUrl?: pulumi.Input<string>;
    /**
     * The delimiter that separates between the columns in the feed.
     */
    fieldsDelimiter?: pulumi.Input<string>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * A prefix that will determine which lines to ignore.
     */
    ignoreLinesThatStartWith?: pulumi.Input<string>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Object name.
     */
    name?: pulumi.Input<string>;
    /**
     * password for authenticating with the URL.
     */
    password?: pulumi.Input<string>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set in order to configure a custom indicator feed.
     */
    useCustomFeedSettings?: pulumi.Input<boolean>;
    /**
     * Use the gateway's proxy for retrieving the feed.
     */
    useGatewayProxy?: pulumi.Input<boolean>;
    /**
     * username for authenticating with the URL.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementThreatIocFeed resource.
 */
export interface ManagementThreatIocFeedArgs {
    /**
     * The feed indicator's action.
     */
    action?: pulumi.Input<string>;
    /**
     * Certificate SHA-1 fingerprint to access the feed.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * Color of the object. Should be one of existing colors.
     */
    color?: pulumi.Input<string>;
    /**
     * Comments string.
     */
    comments?: pulumi.Input<string>;
    /**
     * Custom IOC feed - the column number of comment.
     */
    customComment?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of confidence.
     */
    customConfidence?: pulumi.Input<number>;
    /**
     * Custom HTTP headers.
     */
    customHeaders?: pulumi.Input<pulumi.Input<inputs.ManagementThreatIocFeedCustomHeader>[]>;
    /**
     * Custom IOC feed - the column number of name.
     */
    customName?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of severity.
     */
    customSeverity?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of type in case a specific type is not chosen.
     */
    customType?: pulumi.Input<number>;
    /**
     * Custom IOC feed - the column number of value in case a specific type is chosen.
     */
    customValue?: pulumi.Input<number>;
    /**
     * Sets whether this indicator feed is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Feed type to be enforced.
     */
    feedType?: pulumi.Input<string>;
    /**
     * URL of the feed. URL should be written as http or https.
     */
    feedUrl?: pulumi.Input<string>;
    /**
     * The delimiter that separates between the columns in the feed.
     */
    fieldsDelimiter?: pulumi.Input<string>;
    /**
     * Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted -
     * warnings will also be ignored.
     */
    ignoreErrors?: pulumi.Input<boolean>;
    /**
     * A prefix that will determine which lines to ignore.
     */
    ignoreLinesThatStartWith?: pulumi.Input<string>;
    /**
     * Apply changes ignoring warnings.
     */
    ignoreWarnings?: pulumi.Input<boolean>;
    /**
     * Object name.
     */
    name?: pulumi.Input<string>;
    /**
     * password for authenticating with the URL.
     */
    password?: pulumi.Input<string>;
    /**
     * Collection of tag identifiers.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set in order to configure a custom indicator feed.
     */
    useCustomFeedSettings?: pulumi.Input<boolean>;
    /**
     * Use the gateway's proxy for retrieving the feed.
     */
    useGatewayProxy?: pulumi.Input<boolean>;
    /**
     * username for authenticating with the URL.
     */
    username?: pulumi.Input<string>;
}
