// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementDomain(args?: GetManagementDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementDomainResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementDomain:getManagementDomain", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementDomain.
 */
export interface GetManagementDomainArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getManagementDomain.
 */
export interface GetManagementDomainResult {
    readonly color: string;
    readonly comments: string;
    readonly id: string;
    readonly name?: string;
    readonly servers: outputs.GetManagementDomainServer[];
    readonly uid: string;
}
export function getManagementDomainOutput(args?: GetManagementDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementDomainResult> {
    return pulumi.output(args).apply((a: any) => getManagementDomain(a, opts))
}

/**
 * A collection of arguments for invoking getManagementDomain.
 */
export interface GetManagementDomainOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
