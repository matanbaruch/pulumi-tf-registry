// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementThreatRuleExceptionRulebase(args?: GetManagementThreatRuleExceptionRulebaseArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementThreatRuleExceptionRulebaseResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("checkpoint:index/getManagementThreatRuleExceptionRulebase:getManagementThreatRuleExceptionRulebase", {
        "filter": args.filter,
        "filterSettings": args.filterSettings,
        "id": args.id,
        "limit": args.limit,
        "name": args.name,
        "offset": args.offset,
        "order": args.order,
        "package": args.package,
        "ruleName": args.ruleName,
        "ruleNumber": args.ruleNumber,
        "ruleUid": args.ruleUid,
        "uid": args.uid,
        "useObjectDictionary": args.useObjectDictionary,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementThreatRuleExceptionRulebase.
 */
export interface GetManagementThreatRuleExceptionRulebaseArgs {
    filter?: string;
    filterSettings?: {[key: string]: string};
    id?: string;
    limit?: number;
    name?: string;
    offset?: number;
    order?: {[key: string]: string};
    package?: string;
    ruleName?: string;
    ruleNumber?: string;
    ruleUid?: string;
    uid?: string;
    useObjectDictionary?: boolean;
}

/**
 * A collection of values returned by getManagementThreatRuleExceptionRulebase.
 */
export interface GetManagementThreatRuleExceptionRulebaseResult {
    readonly filter?: string;
    readonly filterSettings?: {[key: string]: string};
    readonly from: number;
    readonly id: string;
    readonly limit?: number;
    readonly name?: string;
    readonly objectsDictionaries: outputs.GetManagementThreatRuleExceptionRulebaseObjectsDictionary[];
    readonly offset?: number;
    readonly order?: {[key: string]: string};
    readonly package?: string;
    readonly ruleName?: string;
    readonly ruleNumber?: string;
    readonly ruleUid?: string;
    readonly rulebases: outputs.GetManagementThreatRuleExceptionRulebaseRulebase[];
    readonly to: number;
    readonly total: number;
    readonly uid?: string;
    readonly useObjectDictionary?: boolean;
}
export function getManagementThreatRuleExceptionRulebaseOutput(args?: GetManagementThreatRuleExceptionRulebaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementThreatRuleExceptionRulebaseResult> {
    return pulumi.output(args).apply((a: any) => getManagementThreatRuleExceptionRulebase(a, opts))
}

/**
 * A collection of arguments for invoking getManagementThreatRuleExceptionRulebase.
 */
export interface GetManagementThreatRuleExceptionRulebaseOutputArgs {
    filter?: pulumi.Input<string>;
    filterSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    limit?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    offset?: pulumi.Input<number>;
    order?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    package?: pulumi.Input<string>;
    ruleName?: pulumi.Input<string>;
    ruleNumber?: pulumi.Input<string>;
    ruleUid?: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
    useObjectDictionary?: pulumi.Input<boolean>;
}
