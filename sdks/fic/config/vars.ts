// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("fic");

/**
 * The Identity authentication URL.
 */
export declare const authUrl: string | undefined;
Object.defineProperty(exports, "authUrl", {
    get() {
        return __config.get("authUrl");
    },
    enumerable: true,
});

/**
 * A Custom CA certificate.
 */
export declare const cacertFile: string | undefined;
Object.defineProperty(exports, "cacertFile", {
    get() {
        return __config.get("cacertFile");
    },
    enumerable: true,
});

/**
 * A client certificate to authenticate with.
 */
export declare const cert: string | undefined;
Object.defineProperty(exports, "cert", {
    get() {
        return __config.get("cert");
    },
    enumerable: true,
});

/**
 * An entry in a `clouds.yaml` file to use.
 */
export declare const cloud: string | undefined;
Object.defineProperty(exports, "cloud", {
    get() {
        return __config.get("cloud");
    },
    enumerable: true,
});

/**
 * The name of the Domain ID to scope to if no other domain is specified. Defaults to `default` (Identity v3).
 */
export declare const defaultDomain: string | undefined;
Object.defineProperty(exports, "defaultDomain", {
    get() {
        return __config.get("defaultDomain");
    },
    enumerable: true,
});

/**
 * The ID of the Domain to scope to (Identity v3).
 */
export declare const domainId: string | undefined;
Object.defineProperty(exports, "domainId", {
    get() {
        return __config.get("domainId");
    },
    enumerable: true,
});

/**
 * The name of the Domain to scope to (Identity v3).
 */
export declare const domainName: string | undefined;
Object.defineProperty(exports, "domainName", {
    get() {
        return __config.get("domainName");
    },
    enumerable: true,
});

export declare const endpointType: string | undefined;
Object.defineProperty(exports, "endpointType", {
    get() {
        return __config.get("endpointType");
    },
    enumerable: true,
});

export declare const forceSssEndpoint: string | undefined;
Object.defineProperty(exports, "forceSssEndpoint", {
    get() {
        return __config.get("forceSssEndpoint");
    },
    enumerable: true,
});

/**
 * Trust self-signed certificates.
 */
export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

/**
 * A client private key to authenticate with.
 */
export declare const key: string | undefined;
Object.defineProperty(exports, "key", {
    get() {
        return __config.get("key");
    },
    enumerable: true,
});

/**
 * Password to login with.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * The ID of the domain where the project resides (Identity v3).
 */
export declare const projectDomainId: string | undefined;
Object.defineProperty(exports, "projectDomainId", {
    get() {
        return __config.get("projectDomainId");
    },
    enumerable: true,
});

/**
 * The name of the domain where the project resides (Identity v3).
 */
export declare const projectDomainName: string | undefined;
Object.defineProperty(exports, "projectDomainName", {
    get() {
        return __config.get("projectDomainName");
    },
    enumerable: true,
});

/**
 * The Flexible InterConnect region to connect to.
 */
export declare const region: string | undefined;
Object.defineProperty(exports, "region", {
    get() {
        return __config.get("region");
    },
    enumerable: true,
});

/**
 * The ID of the Tenant (Identity v2) or Project (Identity v3) to login with.
 */
export declare const tenantId: string | undefined;
Object.defineProperty(exports, "tenantId", {
    get() {
        return __config.get("tenantId");
    },
    enumerable: true,
});

/**
 * The name of the Tenant (Identity v2) or Project (Identity v3) to login with.
 */
export declare const tenantName: string | undefined;
Object.defineProperty(exports, "tenantName", {
    get() {
        return __config.get("tenantName");
    },
    enumerable: true,
});

/**
 * Authentication token to use as an alternative to username/password.
 */
export declare const token: string | undefined;
Object.defineProperty(exports, "token", {
    get() {
        return __config.get("token");
    },
    enumerable: true,
});

/**
 * The ID of the domain where the user resides (Identity v3).
 */
export declare const userDomainId: string | undefined;
Object.defineProperty(exports, "userDomainId", {
    get() {
        return __config.get("userDomainId");
    },
    enumerable: true,
});

/**
 * The name of the domain where the user resides (Identity v3).
 */
export declare const userDomainName: string | undefined;
Object.defineProperty(exports, "userDomainName", {
    get() {
        return __config.get("userDomainName");
    },
    enumerable: true,
});

/**
 * Username to login with.
 */
export declare const userId: string | undefined;
Object.defineProperty(exports, "userId", {
    get() {
        return __config.get("userId");
    },
    enumerable: true,
});

/**
 * Username to login with.
 */
export declare const userName: string | undefined;
Object.defineProperty(exports, "userName", {
    get() {
        return __config.get("userName");
    },
    enumerable: true,
});

