// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEriSwitchV1(args: GetEriSwitchV1Args, opts?: pulumi.InvokeOptions): Promise<GetEriSwitchV1Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fic:index/getEriSwitchV1:getEriSwitchV1", {
        "area": args.area,
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "portType": args.portType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEriSwitchV1.
 */
export interface GetEriSwitchV1Args {
    area?: string;
    id?: string;
    location?: string;
    name?: string;
    portType: string;
}

/**
 * A collection of values returned by getEriSwitchV1.
 */
export interface GetEriSwitchV1Result {
    readonly area: string;
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly numberOfAvailableVlans: number;
    readonly portType: string;
    readonly vlanRanges: outputs.GetEriSwitchV1VlanRange[];
}
export function getEriSwitchV1Output(args: GetEriSwitchV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEriSwitchV1Result> {
    return pulumi.output(args).apply((a: any) => getEriSwitchV1(a, opts))
}

/**
 * A collection of arguments for invoking getEriSwitchV1.
 */
export interface GetEriSwitchV1OutputArgs {
    area?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    portType: pulumi.Input<string>;
}
