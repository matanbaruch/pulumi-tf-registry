// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface EriFirewallComponentV1ApplicationSet {
    applications: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface EriFirewallComponentV1CustomApplication {
    destinationPort: pulumi.Input<string>;
    name: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface EriFirewallComponentV1RoutingGroupSetting {
    addressSets: pulumi.Input<pulumi.Input<inputs.EriFirewallComponentV1RoutingGroupSettingAddressSet>[]>;
    groupName: pulumi.Input<string>;
}

export interface EriFirewallComponentV1RoutingGroupSettingAddressSet {
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface EriFirewallComponentV1Rule {
    entries: pulumi.Input<pulumi.Input<inputs.EriFirewallComponentV1RuleEntry>[]>;
    from: pulumi.Input<string>;
    to: pulumi.Input<string>;
}

export interface EriFirewallComponentV1RuleEntry {
    action: pulumi.Input<string>;
    matchApplication: pulumi.Input<string>;
    matchDestinationAddressSets: pulumi.Input<pulumi.Input<string>[]>;
    matchSourceAddressSets: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface EriFirewallComponentV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriNatComponentV1DestinationNatRule {
    entries: pulumi.Input<pulumi.Input<inputs.EriNatComponentV1DestinationNatRuleEntry>[]>;
    from?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface EriNatComponentV1DestinationNatRuleEntry {
    matchDestinationAddress?: pulumi.Input<string>;
    then?: pulumi.Input<string>;
}

export interface EriNatComponentV1GlobalIpAddressSet {
    name: pulumi.Input<string>;
    numberOfAddresses: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface EriNatComponentV1SourceNaptRule {
    entries?: pulumi.Input<pulumi.Input<inputs.EriNatComponentV1SourceNaptRuleEntry>[]>;
    froms: pulumi.Input<pulumi.Input<string>[]>;
    to?: pulumi.Input<string>;
}

export interface EriNatComponentV1SourceNaptRuleEntry {
    thens: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EriNatComponentV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriNatGlobalIpAddressSetV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriPortToAzureMicrosoftConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriPortToAzurePrivateConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriPortToPortConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriPortV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriPortV1Vlan {
    status: pulumi.Input<string>;
    vid: pulumi.Input<number>;
}

export interface EriPortV1VlanRange {
    end: pulumi.Input<number>;
    start: pulumi.Input<number>;
}

export interface EriRouterPairedToGcpConnectionV1Destination {
    primary: pulumi.Input<inputs.EriRouterPairedToGcpConnectionV1DestinationPrimary>;
    qosType?: pulumi.Input<string>;
    secondary: pulumi.Input<inputs.EriRouterPairedToGcpConnectionV1DestinationSecondary>;
}

export interface EriRouterPairedToGcpConnectionV1DestinationPrimary {
    interconnect: pulumi.Input<string>;
    pairingKey: pulumi.Input<string>;
}

export interface EriRouterPairedToGcpConnectionV1DestinationSecondary {
    interconnect: pulumi.Input<string>;
    pairingKey: pulumi.Input<string>;
}

export interface EriRouterPairedToGcpConnectionV1Source {
    groupName: pulumi.Input<string>;
    primaryMedOut: pulumi.Input<number>;
    routeFilter: pulumi.Input<inputs.EriRouterPairedToGcpConnectionV1SourceRouteFilter>;
    routerId: pulumi.Input<string>;
    secondaryMedOut?: pulumi.Input<number>;
}

export interface EriRouterPairedToGcpConnectionV1SourceRouteFilter {
    in: pulumi.Input<string>;
    out: pulumi.Input<string>;
}

export interface EriRouterPairedToGcpConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EriRouterPairedToPortConnectionV1DestinationInformation {
    asn: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    portId: pulumi.Input<string>;
    vlan: pulumi.Input<number>;
}

export interface EriRouterPairedToPortConnectionV1SourceInformation {
    asPathPrependIn?: pulumi.Input<string>;
    asPathPrependOut?: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
}

export interface EriRouterPairedToPortConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriRouterSingleToPortConnectionV1DestinationInformation {
    asn: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    portId: pulumi.Input<string>;
    vlan: pulumi.Input<number>;
}

export interface EriRouterSingleToPortConnectionV1SourceInformation {
    asPathPrependIn?: pulumi.Input<string>;
    asPathPrependOut?: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
}

export interface EriRouterSingleToPortConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriRouterToAzureMicrosoftConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriRouterToAzurePrivateConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriRouterToEclConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriRouterToUnoConnectionV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface EriRouterV1Firewall {
    id: pulumi.Input<string>;
    isActivated: pulumi.Input<boolean>;
}

export interface EriRouterV1Nat {
    id: pulumi.Input<string>;
    isActivated: pulumi.Input<boolean>;
}

export interface EriRouterV1RoutingGroup {
    name: pulumi.Input<string>;
}

export interface EriRouterV1Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

