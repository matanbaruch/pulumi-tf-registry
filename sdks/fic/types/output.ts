// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface EriFirewallComponentV1ApplicationSet {
    applications: string[];
    name: string;
}

export interface EriFirewallComponentV1CustomApplication {
    destinationPort: string;
    name: string;
    protocol: string;
}

export interface EriFirewallComponentV1RoutingGroupSetting {
    addressSets: outputs.EriFirewallComponentV1RoutingGroupSettingAddressSet[];
    groupName: string;
}

export interface EriFirewallComponentV1RoutingGroupSettingAddressSet {
    addresses: string[];
    name: string;
}

export interface EriFirewallComponentV1Rule {
    entries: outputs.EriFirewallComponentV1RuleEntry[];
    from: string;
    to: string;
}

export interface EriFirewallComponentV1RuleEntry {
    action: string;
    matchApplication: string;
    matchDestinationAddressSets: string[];
    matchSourceAddressSets: string[];
    name: string;
}

export interface EriFirewallComponentV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriNatComponentV1DestinationNatRule {
    entries: outputs.EriNatComponentV1DestinationNatRuleEntry[];
    from: string;
    to: string;
}

export interface EriNatComponentV1DestinationNatRuleEntry {
    matchDestinationAddress: string;
    then: string;
}

export interface EriNatComponentV1GlobalIpAddressSet {
    name: string;
    numberOfAddresses: number;
    type: string;
}

export interface EriNatComponentV1SourceNaptRule {
    entries?: outputs.EriNatComponentV1SourceNaptRuleEntry[];
    froms: string[];
    to: string;
}

export interface EriNatComponentV1SourceNaptRuleEntry {
    thens: string[];
}

export interface EriNatComponentV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriNatGlobalIpAddressSetV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriPortToAzureMicrosoftConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriPortToAzurePrivateConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriPortToPortConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriPortV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriPortV1Vlan {
    status: string;
    vid: number;
}

export interface EriPortV1VlanRange {
    end: number;
    start: number;
}

export interface EriRouterPairedToGcpConnectionV1Destination {
    primary: outputs.EriRouterPairedToGcpConnectionV1DestinationPrimary;
    qosType: string;
    secondary: outputs.EriRouterPairedToGcpConnectionV1DestinationSecondary;
}

export interface EriRouterPairedToGcpConnectionV1DestinationPrimary {
    interconnect: string;
    pairingKey: string;
}

export interface EriRouterPairedToGcpConnectionV1DestinationSecondary {
    interconnect: string;
    pairingKey: string;
}

export interface EriRouterPairedToGcpConnectionV1Source {
    groupName: string;
    primaryMedOut: number;
    routeFilter: outputs.EriRouterPairedToGcpConnectionV1SourceRouteFilter;
    routerId: string;
    secondaryMedOut: number;
}

export interface EriRouterPairedToGcpConnectionV1SourceRouteFilter {
    in: string;
    out: string;
}

export interface EriRouterPairedToGcpConnectionV1Timeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface EriRouterPairedToPortConnectionV1DestinationInformation {
    asn: string;
    ipAddress: string;
    portId: string;
    vlan: number;
}

export interface EriRouterPairedToPortConnectionV1SourceInformation {
    asPathPrependIn?: string;
    asPathPrependOut?: string;
    ipAddress: string;
}

export interface EriRouterPairedToPortConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriRouterSingleToPortConnectionV1DestinationInformation {
    asn: string;
    ipAddress: string;
    portId: string;
    vlan: number;
}

export interface EriRouterSingleToPortConnectionV1SourceInformation {
    asPathPrependIn?: string;
    asPathPrependOut?: string;
    ipAddress: string;
}

export interface EriRouterSingleToPortConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriRouterToAzureMicrosoftConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriRouterToAzurePrivateConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriRouterToEclConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriRouterToUnoConnectionV1Timeouts {
    create?: string;
    delete?: string;
}

export interface EriRouterV1Firewall {
    id: string;
    isActivated: boolean;
}

export interface EriRouterV1Nat {
    id: string;
    isActivated: boolean;
}

export interface EriRouterV1RoutingGroup {
    name: string;
}

export interface EriRouterV1Timeouts {
    create?: string;
    delete?: string;
}

export interface GetEriSwitchV1VlanRange {
    end: number;
    start: number;
}

