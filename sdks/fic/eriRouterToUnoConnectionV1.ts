// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EriRouterToUnoConnectionV1 extends pulumi.CustomResource {
    /**
     * Get an existing EriRouterToUnoConnectionV1 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EriRouterToUnoConnectionV1State, opts?: pulumi.CustomResourceOptions): EriRouterToUnoConnectionV1 {
        return new EriRouterToUnoConnectionV1(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fic:index/eriRouterToUnoConnectionV1:EriRouterToUnoConnectionV1';

    /**
     * Returns true if the given object is an instance of EriRouterToUnoConnectionV1.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EriRouterToUnoConnectionV1 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EriRouterToUnoConnectionV1.__pulumiType;
    }

    public /*out*/ readonly area!: pulumi.Output<string>;
    public readonly bandwidth!: pulumi.Output<string>;
    public readonly connectedNetworkAddress!: pulumi.Output<string>;
    public readonly destinationCNumber!: pulumi.Output<string | undefined>;
    public /*out*/ readonly destinationContractNumber!: pulumi.Output<string>;
    public readonly destinationInterconnect!: pulumi.Output<string>;
    public readonly destinationParentContractNumber!: pulumi.Output<string>;
    public readonly destinationQosType!: pulumi.Output<string>;
    public readonly destinationRouteFilterOut!: pulumi.Output<string>;
    public readonly destinationVpnNumber!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly redundant!: pulumi.Output<boolean>;
    public readonly sourceGroupName!: pulumi.Output<string>;
    public readonly sourceRouteFilterIn!: pulumi.Output<string>;
    public readonly sourceRouteFilterOut!: pulumi.Output<string>;
    public readonly sourceRouterId!: pulumi.Output<string>;
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.EriRouterToUnoConnectionV1Timeouts | undefined>;

    /**
     * Create a EriRouterToUnoConnectionV1 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EriRouterToUnoConnectionV1Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EriRouterToUnoConnectionV1Args | EriRouterToUnoConnectionV1State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EriRouterToUnoConnectionV1State | undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["connectedNetworkAddress"] = state ? state.connectedNetworkAddress : undefined;
            resourceInputs["destinationCNumber"] = state ? state.destinationCNumber : undefined;
            resourceInputs["destinationContractNumber"] = state ? state.destinationContractNumber : undefined;
            resourceInputs["destinationInterconnect"] = state ? state.destinationInterconnect : undefined;
            resourceInputs["destinationParentContractNumber"] = state ? state.destinationParentContractNumber : undefined;
            resourceInputs["destinationQosType"] = state ? state.destinationQosType : undefined;
            resourceInputs["destinationRouteFilterOut"] = state ? state.destinationRouteFilterOut : undefined;
            resourceInputs["destinationVpnNumber"] = state ? state.destinationVpnNumber : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["redundant"] = state ? state.redundant : undefined;
            resourceInputs["sourceGroupName"] = state ? state.sourceGroupName : undefined;
            resourceInputs["sourceRouteFilterIn"] = state ? state.sourceRouteFilterIn : undefined;
            resourceInputs["sourceRouteFilterOut"] = state ? state.sourceRouteFilterOut : undefined;
            resourceInputs["sourceRouterId"] = state ? state.sourceRouterId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as EriRouterToUnoConnectionV1Args | undefined;
            if ((!args || args.bandwidth === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidth'");
            }
            if ((!args || args.connectedNetworkAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectedNetworkAddress'");
            }
            if ((!args || args.destinationInterconnect === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationInterconnect'");
            }
            if ((!args || args.destinationParentContractNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationParentContractNumber'");
            }
            if ((!args || args.destinationQosType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationQosType'");
            }
            if ((!args || args.destinationRouteFilterOut === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationRouteFilterOut'");
            }
            if ((!args || args.destinationVpnNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationVpnNumber'");
            }
            if ((!args || args.sourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceGroupName'");
            }
            if ((!args || args.sourceRouteFilterIn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRouteFilterIn'");
            }
            if ((!args || args.sourceRouteFilterOut === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRouteFilterOut'");
            }
            if ((!args || args.sourceRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRouterId'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["connectedNetworkAddress"] = args ? args.connectedNetworkAddress : undefined;
            resourceInputs["destinationCNumber"] = args ? args.destinationCNumber : undefined;
            resourceInputs["destinationInterconnect"] = args ? args.destinationInterconnect : undefined;
            resourceInputs["destinationParentContractNumber"] = args ? args.destinationParentContractNumber : undefined;
            resourceInputs["destinationQosType"] = args ? args.destinationQosType : undefined;
            resourceInputs["destinationRouteFilterOut"] = args ? args.destinationRouteFilterOut : undefined;
            resourceInputs["destinationVpnNumber"] = args ? args.destinationVpnNumber : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sourceGroupName"] = args ? args.sourceGroupName : undefined;
            resourceInputs["sourceRouteFilterIn"] = args ? args.sourceRouteFilterIn : undefined;
            resourceInputs["sourceRouteFilterOut"] = args ? args.sourceRouteFilterOut : undefined;
            resourceInputs["sourceRouterId"] = args ? args.sourceRouterId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["area"] = undefined /*out*/;
            resourceInputs["destinationContractNumber"] = undefined /*out*/;
            resourceInputs["redundant"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EriRouterToUnoConnectionV1.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EriRouterToUnoConnectionV1 resources.
 */
export interface EriRouterToUnoConnectionV1State {
    area?: pulumi.Input<string>;
    bandwidth?: pulumi.Input<string>;
    connectedNetworkAddress?: pulumi.Input<string>;
    destinationCNumber?: pulumi.Input<string>;
    destinationContractNumber?: pulumi.Input<string>;
    destinationInterconnect?: pulumi.Input<string>;
    destinationParentContractNumber?: pulumi.Input<string>;
    destinationQosType?: pulumi.Input<string>;
    destinationRouteFilterOut?: pulumi.Input<string>;
    destinationVpnNumber?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    redundant?: pulumi.Input<boolean>;
    sourceGroupName?: pulumi.Input<string>;
    sourceRouteFilterIn?: pulumi.Input<string>;
    sourceRouteFilterOut?: pulumi.Input<string>;
    sourceRouterId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EriRouterToUnoConnectionV1Timeouts>;
}

/**
 * The set of arguments for constructing a EriRouterToUnoConnectionV1 resource.
 */
export interface EriRouterToUnoConnectionV1Args {
    bandwidth: pulumi.Input<string>;
    connectedNetworkAddress: pulumi.Input<string>;
    destinationCNumber?: pulumi.Input<string>;
    destinationInterconnect: pulumi.Input<string>;
    destinationParentContractNumber: pulumi.Input<string>;
    destinationQosType: pulumi.Input<string>;
    destinationRouteFilterOut: pulumi.Input<string>;
    destinationVpnNumber: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sourceGroupName: pulumi.Input<string>;
    sourceRouteFilterIn: pulumi.Input<string>;
    sourceRouteFilterOut: pulumi.Input<string>;
    sourceRouterId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EriRouterToUnoConnectionV1Timeouts>;
}
