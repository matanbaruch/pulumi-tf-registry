// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicy(args?: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("clumio:index/getPolicy:getPolicy", {
        "activationStatus": args.activationStatus,
        "name": args.name,
        "operationTypes": args.operationTypes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyArgs {
    activationStatus?: string;
    name?: string;
    operationTypes?: string[];
}

/**
 * A collection of values returned by getPolicy.
 */
export interface GetPolicyResult {
    readonly activationStatus?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly operationTypes?: string[];
    readonly policies: outputs.GetPolicyPolicy[];
}
export function getPolicyOutput(args?: GetPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyOutputArgs {
    activationStatus?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    operationTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
