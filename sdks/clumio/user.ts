// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'clumio:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * Identifiers of the organizational units, along with the identifier of the role, to be assigned to the user.
     */
    public readonly accessControlConfigurations!: pulumi.Output<outputs.UserAccessControlConfiguration[]>;
    /**
     * Identifier of the role to assign to the user.
     *
     * @deprecated Deprecated
     */
    public readonly assignedRole!: pulumi.Output<string>;
    /**
     * The email address of the user to be added to Clumio.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * The full name of the user to be added to Clumio. For example, enter the user's first name and last name. The name
     * appears in the User Management screen and in the body of the email invitation.
     */
    public readonly fullName!: pulumi.Output<string>;
    /**
     * Identifier of the user who sent the email invitation.
     */
    public /*out*/ readonly inviter!: pulumi.Output<string>;
    /**
     * Determines whether the user has activated their Clumio account. If true, the user has activated the account.
     */
    public /*out*/ readonly isConfirmed!: pulumi.Output<boolean>;
    /**
     * Determines whether the user is enabled (in Activated or Invited status) in Clumio. If true, the user is in Activated or
     * Invited status in Clumio. Users inActivated status can log in to Clumio. Users in Invited status have been invited to
     * login to Clumio via an email invitation and the invitation is pending acceptance from the user. If false, the user has
     * been manually suspended and cannot log in to Clumio untilanother Clumio user reactivates the account.
     */
    public /*out*/ readonly isEnabled!: pulumi.Output<boolean>;
    /**
     * The timestamp of when when the user was last active in the Clumio system. Represented in RFC-3339 format.
     */
    public /*out*/ readonly lastActivityTimestamp!: pulumi.Output<string>;
    /**
     * The number of organizational units accessible to the user.
     */
    public /*out*/ readonly organizationalUnitCount!: pulumi.Output<number>;
    /**
     * Identifiers of the organizational units to be assigned to the user. The Global Organizational Unit ID is
     * "00000000-0000-0000-0000-000000000000"
     *
     * @deprecated Deprecated
     */
    public readonly organizationalUnitIds!: pulumi.Output<string[]>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["accessControlConfigurations"] = state ? state.accessControlConfigurations : undefined;
            resourceInputs["assignedRole"] = state ? state.assignedRole : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["fullName"] = state ? state.fullName : undefined;
            resourceInputs["inviter"] = state ? state.inviter : undefined;
            resourceInputs["isConfirmed"] = state ? state.isConfirmed : undefined;
            resourceInputs["isEnabled"] = state ? state.isEnabled : undefined;
            resourceInputs["lastActivityTimestamp"] = state ? state.lastActivityTimestamp : undefined;
            resourceInputs["organizationalUnitCount"] = state ? state.organizationalUnitCount : undefined;
            resourceInputs["organizationalUnitIds"] = state ? state.organizationalUnitIds : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.fullName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fullName'");
            }
            resourceInputs["accessControlConfigurations"] = args ? args.accessControlConfigurations : undefined;
            resourceInputs["assignedRole"] = args ? args.assignedRole : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["fullName"] = args ? args.fullName : undefined;
            resourceInputs["organizationalUnitIds"] = args ? args.organizationalUnitIds : undefined;
            resourceInputs["inviter"] = undefined /*out*/;
            resourceInputs["isConfirmed"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["lastActivityTimestamp"] = undefined /*out*/;
            resourceInputs["organizationalUnitCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * Identifiers of the organizational units, along with the identifier of the role, to be assigned to the user.
     */
    accessControlConfigurations?: pulumi.Input<pulumi.Input<inputs.UserAccessControlConfiguration>[]>;
    /**
     * Identifier of the role to assign to the user.
     *
     * @deprecated Deprecated
     */
    assignedRole?: pulumi.Input<string>;
    /**
     * The email address of the user to be added to Clumio.
     */
    email?: pulumi.Input<string>;
    /**
     * The full name of the user to be added to Clumio. For example, enter the user's first name and last name. The name
     * appears in the User Management screen and in the body of the email invitation.
     */
    fullName?: pulumi.Input<string>;
    /**
     * Identifier of the user who sent the email invitation.
     */
    inviter?: pulumi.Input<string>;
    /**
     * Determines whether the user has activated their Clumio account. If true, the user has activated the account.
     */
    isConfirmed?: pulumi.Input<boolean>;
    /**
     * Determines whether the user is enabled (in Activated or Invited status) in Clumio. If true, the user is in Activated or
     * Invited status in Clumio. Users inActivated status can log in to Clumio. Users in Invited status have been invited to
     * login to Clumio via an email invitation and the invitation is pending acceptance from the user. If false, the user has
     * been manually suspended and cannot log in to Clumio untilanother Clumio user reactivates the account.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The timestamp of when when the user was last active in the Clumio system. Represented in RFC-3339 format.
     */
    lastActivityTimestamp?: pulumi.Input<string>;
    /**
     * The number of organizational units accessible to the user.
     */
    organizationalUnitCount?: pulumi.Input<number>;
    /**
     * Identifiers of the organizational units to be assigned to the user. The Global Organizational Unit ID is
     * "00000000-0000-0000-0000-000000000000"
     *
     * @deprecated Deprecated
     */
    organizationalUnitIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * Identifiers of the organizational units, along with the identifier of the role, to be assigned to the user.
     */
    accessControlConfigurations?: pulumi.Input<pulumi.Input<inputs.UserAccessControlConfiguration>[]>;
    /**
     * Identifier of the role to assign to the user.
     *
     * @deprecated Deprecated
     */
    assignedRole?: pulumi.Input<string>;
    /**
     * The email address of the user to be added to Clumio.
     */
    email: pulumi.Input<string>;
    /**
     * The full name of the user to be added to Clumio. For example, enter the user's first name and last name. The name
     * appears in the User Management screen and in the body of the email invitation.
     */
    fullName: pulumi.Input<string>;
    /**
     * Identifiers of the organizational units to be assigned to the user. The Global Organizational Unit ID is
     * "00000000-0000-0000-0000-000000000000"
     *
     * @deprecated Deprecated
     */
    organizationalUnitIds?: pulumi.Input<pulumi.Input<string>[]>;
}
