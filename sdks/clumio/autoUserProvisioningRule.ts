// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AutoUserProvisioningRule extends pulumi.CustomResource {
    /**
     * Get an existing AutoUserProvisioningRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutoUserProvisioningRuleState, opts?: pulumi.CustomResourceOptions): AutoUserProvisioningRule {
        return new AutoUserProvisioningRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'clumio:index/autoUserProvisioningRule:AutoUserProvisioningRule';

    /**
     * Returns true if the given object is an instance of AutoUserProvisioningRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoUserProvisioningRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoUserProvisioningRule.__pulumiType;
    }

    /**
     * The condition of the auto user provisioning rule. Possible conditions include: 1) `This group` - User must belong to the
     * specified group 2) `ANY of these groups` - User must belong to at least one of the specified groups 3) `ALL of these
     * groups` - User must belong to all the specified groups 4) `Group CONTAINS this keyword` - User's group must contain the
     * specified keyword 5) `Group CONTAINS ANY of these keywords` - User's group must contain at least one of the specified
     * keywords 6) `Group CONTAINS ALL of these keywords` - User's group must contain all the specified keywords
     */
    public readonly condition!: pulumi.Output<string>;
    /**
     * The name of the auto user provisioning rule.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of Clumio organizational unit identifiers to be assigned to the user.
     */
    public readonly organizationalUnitIds!: pulumi.Output<string[]>;
    /**
     * Identifier of the Clumio role to be assigned to the user.
     */
    public readonly roleId!: pulumi.Output<string>;

    /**
     * Create a AutoUserProvisioningRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoUserProvisioningRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutoUserProvisioningRuleArgs | AutoUserProvisioningRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutoUserProvisioningRuleState | undefined;
            resourceInputs["condition"] = state ? state.condition : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationalUnitIds"] = state ? state.organizationalUnitIds : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
        } else {
            const args = argsOrState as AutoUserProvisioningRuleArgs | undefined;
            if ((!args || args.condition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'condition'");
            }
            if ((!args || args.organizationalUnitIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationalUnitIds'");
            }
            if ((!args || args.roleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleId'");
            }
            resourceInputs["condition"] = args ? args.condition : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationalUnitIds"] = args ? args.organizationalUnitIds : undefined;
            resourceInputs["roleId"] = args ? args.roleId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutoUserProvisioningRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutoUserProvisioningRule resources.
 */
export interface AutoUserProvisioningRuleState {
    /**
     * The condition of the auto user provisioning rule. Possible conditions include: 1) `This group` - User must belong to the
     * specified group 2) `ANY of these groups` - User must belong to at least one of the specified groups 3) `ALL of these
     * groups` - User must belong to all the specified groups 4) `Group CONTAINS this keyword` - User's group must contain the
     * specified keyword 5) `Group CONTAINS ANY of these keywords` - User's group must contain at least one of the specified
     * keywords 6) `Group CONTAINS ALL of these keywords` - User's group must contain all the specified keywords
     */
    condition?: pulumi.Input<string>;
    /**
     * The name of the auto user provisioning rule.
     */
    name?: pulumi.Input<string>;
    /**
     * List of Clumio organizational unit identifiers to be assigned to the user.
     */
    organizationalUnitIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the Clumio role to be assigned to the user.
     */
    roleId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutoUserProvisioningRule resource.
 */
export interface AutoUserProvisioningRuleArgs {
    /**
     * The condition of the auto user provisioning rule. Possible conditions include: 1) `This group` - User must belong to the
     * specified group 2) `ANY of these groups` - User must belong to at least one of the specified groups 3) `ALL of these
     * groups` - User must belong to all the specified groups 4) `Group CONTAINS this keyword` - User's group must contain the
     * specified keyword 5) `Group CONTAINS ANY of these keywords` - User's group must contain at least one of the specified
     * keywords 6) `Group CONTAINS ALL of these keywords` - User's group must contain all the specified keywords
     */
    condition: pulumi.Input<string>;
    /**
     * The name of the auto user provisioning rule.
     */
    name?: pulumi.Input<string>;
    /**
     * List of Clumio organizational unit identifiers to be assigned to the user.
     */
    organizationalUnitIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the Clumio role to be assigned to the user.
     */
    roleId: pulumi.Input<string>;
}
