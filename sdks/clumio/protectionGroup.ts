// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProtectionGroup extends pulumi.CustomResource {
    /**
     * Get an existing ProtectionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtectionGroupState, opts?: pulumi.CustomResourceOptions): ProtectionGroup {
        return new ProtectionGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'clumio:index/protectionGroup:ProtectionGroup';

    /**
     * Returns true if the given object is an instance of ProtectionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProtectionGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtectionGroup.__pulumiType;
    }

    /**
     * Describes the possible conditions for a bucket to be automatically added to a protection group. For example:
     * {"aws_tag":{"$eq":{"key":"Environment", "value":"Prod"}}}
     */
    public readonly bucketRule!: pulumi.Output<string | undefined>;
    /**
     * Brief description to denote details of the protection group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The user-assigned name of the protection group. Must be globally-unique.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly objectFilters!: pulumi.Output<outputs.ProtectionGroupObjectFilter[] | undefined>;
    /**
     * Identifier of the Clumio organizational unit associated with the protection group. If not provided, the protection group
     * will be associated with the default organizational unit associated with the credentials used to create the protection
     * group.
     *
     * @deprecated Deprecated
     */
    public readonly organizationalUnitId!: pulumi.Output<string>;
    /**
     * The protection policy applied to this resource.
     */
    public /*out*/ readonly protectionInfos!: pulumi.Output<outputs.ProtectionGroupProtectionInfo[]>;
    /**
     * The protection status of the protection group. Possible values include"protected", "unprotected", and "unsupported". If
     * the protection group does notsupport backups, then this field has a value of unsupported.
     */
    public /*out*/ readonly protectionStatus!: pulumi.Output<string>;

    /**
     * Create a ProtectionGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProtectionGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtectionGroupArgs | ProtectionGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtectionGroupState | undefined;
            resourceInputs["bucketRule"] = state ? state.bucketRule : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectFilters"] = state ? state.objectFilters : undefined;
            resourceInputs["organizationalUnitId"] = state ? state.organizationalUnitId : undefined;
            resourceInputs["protectionInfos"] = state ? state.protectionInfos : undefined;
            resourceInputs["protectionStatus"] = state ? state.protectionStatus : undefined;
        } else {
            const args = argsOrState as ProtectionGroupArgs | undefined;
            resourceInputs["bucketRule"] = args ? args.bucketRule : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectFilters"] = args ? args.objectFilters : undefined;
            resourceInputs["organizationalUnitId"] = args ? args.organizationalUnitId : undefined;
            resourceInputs["protectionInfos"] = undefined /*out*/;
            resourceInputs["protectionStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProtectionGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProtectionGroup resources.
 */
export interface ProtectionGroupState {
    /**
     * Describes the possible conditions for a bucket to be automatically added to a protection group. For example:
     * {"aws_tag":{"$eq":{"key":"Environment", "value":"Prod"}}}
     */
    bucketRule?: pulumi.Input<string>;
    /**
     * Brief description to denote details of the protection group.
     */
    description?: pulumi.Input<string>;
    /**
     * The user-assigned name of the protection group. Must be globally-unique.
     */
    name?: pulumi.Input<string>;
    objectFilters?: pulumi.Input<pulumi.Input<inputs.ProtectionGroupObjectFilter>[]>;
    /**
     * Identifier of the Clumio organizational unit associated with the protection group. If not provided, the protection group
     * will be associated with the default organizational unit associated with the credentials used to create the protection
     * group.
     *
     * @deprecated Deprecated
     */
    organizationalUnitId?: pulumi.Input<string>;
    /**
     * The protection policy applied to this resource.
     */
    protectionInfos?: pulumi.Input<pulumi.Input<inputs.ProtectionGroupProtectionInfo>[]>;
    /**
     * The protection status of the protection group. Possible values include"protected", "unprotected", and "unsupported". If
     * the protection group does notsupport backups, then this field has a value of unsupported.
     */
    protectionStatus?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProtectionGroup resource.
 */
export interface ProtectionGroupArgs {
    /**
     * Describes the possible conditions for a bucket to be automatically added to a protection group. For example:
     * {"aws_tag":{"$eq":{"key":"Environment", "value":"Prod"}}}
     */
    bucketRule?: pulumi.Input<string>;
    /**
     * Brief description to denote details of the protection group.
     */
    description?: pulumi.Input<string>;
    /**
     * The user-assigned name of the protection group. Must be globally-unique.
     */
    name?: pulumi.Input<string>;
    objectFilters?: pulumi.Input<pulumi.Input<inputs.ProtectionGroupObjectFilter>[]>;
    /**
     * Identifier of the Clumio organizational unit associated with the protection group. If not provided, the protection group
     * will be associated with the default organizational unit associated with the credentials used to create the protection
     * group.
     *
     * @deprecated Deprecated
     */
    organizationalUnitId?: pulumi.Input<string>;
}
