// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("clumio");

/**
 * The base URL for Clumio APIs. The following are the valid values for clumio_api_base_url. Use the appropriate value
 * depending on the region for which your credentials were created. Below are the URLs to access the Clumio portal for each
 * region and the corresponding API Base URLs: Portal: https://west.portal.clumio.com/ API Base URL:
 * https://us-west-2.api.clumio.com Portal: https://east.portal.clumio.com/ API Base URL: https://us-east-1.api.clumio.com
 * Portal: https://canada.portal.clumio.com/ API Base URL: https://ca-central-1.ca.api.clumio.com Portal:
 * https://eu1.portal.clumio.com/ API Base URL: https://eu-central-1.de.api.clumio.com
 */
export declare const clumioApiBaseUrl: string | undefined;
Object.defineProperty(exports, "clumioApiBaseUrl", {
    get() {
        return __config.get("clumioApiBaseUrl");
    },
    enumerable: true,
});

/**
 * The API token required to invoke Clumio APIs. Informations for generating this token are available here:
 * https://help.clumio.com/docs/api-tokens#managing-tokens
 */
export declare const clumioApiToken: string | undefined;
Object.defineProperty(exports, "clumioApiToken", {
    get() {
        return __config.get("clumioApiToken");
    },
    enumerable: true,
});

/**
 * Organizational Unit context in which to create the clumio resources. If not set, the resources will be created in the
 * context of the Global Organizational Unit. The value should be the id of the Organizational Unit and not the name.
 */
export declare const clumioOrganizationalUnitContext: string | undefined;
Object.defineProperty(exports, "clumioOrganizationalUnitContext", {
    get() {
        return __config.get("clumioOrganizationalUnitContext");
    },
    enumerable: true,
});

