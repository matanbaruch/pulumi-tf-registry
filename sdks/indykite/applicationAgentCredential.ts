// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationAgentCredential extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationAgentCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationAgentCredentialState, opts?: pulumi.CustomResourceOptions): ApplicationAgentCredential {
        return new ApplicationAgentCredential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'indykite:index/applicationAgentCredential:ApplicationAgentCredential';

    /**
     * Returns true if the given object is an instance of ApplicationAgentCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationAgentCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationAgentCredential.__pulumiType;
    }

    public /*out*/ readonly agentConfig!: pulumi.Output<string>;
    /**
     * identifier of Application Agent
     */
    public readonly appAgentId!: pulumi.Output<string>;
    /**
     * identifier of Application Space
     */
    public /*out*/ readonly appSpaceId!: pulumi.Output<string>;
    /**
     * identifier of Application
     */
    public /*out*/ readonly applicationId!: pulumi.Output<string>;
    /**
     * Timestamp when the Resource was created. Assigned by the server. A timestamp in RFC3339 UTC "Zulu" format, accurate to
     * nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * identifier of Customer
     */
    public /*out*/ readonly customerId!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Optional date-time when credentials are going to expire
     */
    public readonly expireTime!: pulumi.Output<string | undefined>;
    public /*out*/ readonly kid!: pulumi.Output<string>;
    /**
     * Provide your onw Public key in JWK format, otherwise new pair is generated
     */
    public readonly publicKeyJwk!: pulumi.Output<string | undefined>;
    /**
     * Provide your onw Public key in PEM format, otherwise new pair is generated
     */
    public readonly publicKeyPem!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ApplicationAgentCredentialTimeouts | undefined>;

    /**
     * Create a ApplicationAgentCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationAgentCredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationAgentCredentialArgs | ApplicationAgentCredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationAgentCredentialState | undefined;
            resourceInputs["agentConfig"] = state ? state.agentConfig : undefined;
            resourceInputs["appAgentId"] = state ? state.appAgentId : undefined;
            resourceInputs["appSpaceId"] = state ? state.appSpaceId : undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customerId"] = state ? state.customerId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["kid"] = state ? state.kid : undefined;
            resourceInputs["publicKeyJwk"] = state ? state.publicKeyJwk : undefined;
            resourceInputs["publicKeyPem"] = state ? state.publicKeyPem : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ApplicationAgentCredentialArgs | undefined;
            if ((!args || args.appAgentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appAgentId'");
            }
            resourceInputs["appAgentId"] = args ? args.appAgentId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["expireTime"] = args ? args.expireTime : undefined;
            resourceInputs["publicKeyJwk"] = args ? args.publicKeyJwk : undefined;
            resourceInputs["publicKeyPem"] = args ? args.publicKeyPem : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["agentConfig"] = undefined /*out*/;
            resourceInputs["appSpaceId"] = undefined /*out*/;
            resourceInputs["applicationId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["customerId"] = undefined /*out*/;
            resourceInputs["kid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["agentConfig"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ApplicationAgentCredential.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationAgentCredential resources.
 */
export interface ApplicationAgentCredentialState {
    agentConfig?: pulumi.Input<string>;
    /**
     * identifier of Application Agent
     */
    appAgentId?: pulumi.Input<string>;
    /**
     * identifier of Application Space
     */
    appSpaceId?: pulumi.Input<string>;
    /**
     * identifier of Application
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Timestamp when the Resource was created. Assigned by the server. A timestamp in RFC3339 UTC "Zulu" format, accurate to
     * nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * identifier of Customer
     */
    customerId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    /**
     * Optional date-time when credentials are going to expire
     */
    expireTime?: pulumi.Input<string>;
    kid?: pulumi.Input<string>;
    /**
     * Provide your onw Public key in JWK format, otherwise new pair is generated
     */
    publicKeyJwk?: pulumi.Input<string>;
    /**
     * Provide your onw Public key in PEM format, otherwise new pair is generated
     */
    publicKeyPem?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApplicationAgentCredentialTimeouts>;
}

/**
 * The set of arguments for constructing a ApplicationAgentCredential resource.
 */
export interface ApplicationAgentCredentialArgs {
    /**
     * identifier of Application Agent
     */
    appAgentId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    /**
     * Optional date-time when credentials are going to expire
     */
    expireTime?: pulumi.Input<string>;
    /**
     * Provide your onw Public key in JWK format, otherwise new pair is generated
     */
    publicKeyJwk?: pulumi.Input<string>;
    /**
     * Provide your onw Public key in PEM format, otherwise new pair is generated
     */
    publicKeyPem?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApplicationAgentCredentialTimeouts>;
}
