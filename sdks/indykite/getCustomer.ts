// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCustomer(args?: GetCustomerArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("indykite:index/getCustomer:getCustomer", {
        "customerId": args.customerId,
        "description": args.description,
        "displayName": args.displayName,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomer.
 */
export interface GetCustomerArgs {
    customerId?: string;
    description?: string;
    displayName?: string;
    id?: string;
    name?: string;
    timeouts?: inputs.GetCustomerTimeouts;
}

/**
 * A collection of values returned by getCustomer.
 */
export interface GetCustomerResult {
    readonly createTime: string;
    readonly customerId?: string;
    readonly description?: string;
    readonly displayName?: string;
    readonly id: string;
    readonly name?: string;
    readonly timeouts?: outputs.GetCustomerTimeouts;
    readonly updateTime: string;
}
export function getCustomerOutput(args?: GetCustomerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomerResult> {
    return pulumi.output(args).apply((a: any) => getCustomer(a, opts))
}

/**
 * A collection of arguments for invoking getCustomer.
 */
export interface GetCustomerOutputArgs {
    customerId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetCustomerTimeoutsArgs>;
}
