// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplicationAgents(args: GetApplicationAgentsArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationAgentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("indykite:index/getApplicationAgents:getApplicationAgents", {
        "appSpaceId": args.appSpaceId,
        "filters": args.filters,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationAgents.
 */
export interface GetApplicationAgentsArgs {
    appSpaceId: string;
    filters: string[];
    id?: string;
    timeouts?: inputs.GetApplicationAgentsTimeouts;
}

/**
 * A collection of values returned by getApplicationAgents.
 */
export interface GetApplicationAgentsResult {
    readonly appAgents: outputs.GetApplicationAgentsAppAgent[];
    readonly appSpaceId: string;
    readonly filters: string[];
    readonly id: string;
    readonly timeouts?: outputs.GetApplicationAgentsTimeouts;
}
export function getApplicationAgentsOutput(args: GetApplicationAgentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationAgentsResult> {
    return pulumi.output(args).apply((a: any) => getApplicationAgents(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationAgents.
 */
export interface GetApplicationAgentsOutputArgs {
    appSpaceId: pulumi.Input<string>;
    filters: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetApplicationAgentsTimeoutsArgs>;
}
