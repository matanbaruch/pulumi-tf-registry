// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplication(args?: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("indykite:index/getApplication:getApplication", {
        "appSpaceId": args.appSpaceId,
        "applicationId": args.applicationId,
        "description": args.description,
        "displayName": args.displayName,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    appSpaceId?: string;
    applicationId?: string;
    description?: string;
    displayName?: string;
    id?: string;
    name?: string;
    timeouts?: inputs.GetApplicationTimeouts;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    readonly appSpaceId?: string;
    readonly applicationId?: string;
    readonly createTime: string;
    readonly customerId: string;
    readonly description?: string;
    readonly displayName?: string;
    readonly id: string;
    readonly name?: string;
    readonly timeouts?: outputs.GetApplicationTimeouts;
    readonly updateTime: string;
}
export function getApplicationOutput(args?: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    return pulumi.output(args).apply((a: any) => getApplication(a, opts))
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    appSpaceId?: pulumi.Input<string>;
    applicationId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetApplicationTimeoutsArgs>;
}
