// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplicationSpaces(args: GetApplicationSpacesArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationSpacesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("indykite:index/getApplicationSpaces:getApplicationSpaces", {
        "customerId": args.customerId,
        "filters": args.filters,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationSpaces.
 */
export interface GetApplicationSpacesArgs {
    customerId: string;
    filters: string[];
    id?: string;
    timeouts?: inputs.GetApplicationSpacesTimeouts;
}

/**
 * A collection of values returned by getApplicationSpaces.
 */
export interface GetApplicationSpacesResult {
    readonly appSpaces: outputs.GetApplicationSpacesAppSpace[];
    readonly customerId: string;
    readonly filters: string[];
    readonly id: string;
    readonly timeouts?: outputs.GetApplicationSpacesTimeouts;
}
export function getApplicationSpacesOutput(args: GetApplicationSpacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationSpacesResult> {
    return pulumi.output(args).apply((a: any) => getApplicationSpaces(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationSpaces.
 */
export interface GetApplicationSpacesOutputArgs {
    customerId: pulumi.Input<string>;
    filters: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetApplicationSpacesTimeoutsArgs>;
}
