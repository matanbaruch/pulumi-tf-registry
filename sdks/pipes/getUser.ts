// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pipes:index/getUser:getUser", {
        "avatarUrl": args.avatarUrl,
        "createdAt": args.createdAt,
        "displayName": args.displayName,
        "handle": args.handle,
        "id": args.id,
        "previewAccessMode": args.previewAccessMode,
        "status": args.status,
        "updatedAt": args.updatedAt,
        "url": args.url,
        "userId": args.userId,
        "versionId": args.versionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    avatarUrl?: string;
    createdAt?: string;
    displayName?: string;
    handle?: string;
    id?: string;
    previewAccessMode?: string;
    status?: string;
    updatedAt?: string;
    url?: string;
    userId?: string;
    versionId?: number;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly avatarUrl?: string;
    readonly createdAt?: string;
    readonly displayName?: string;
    readonly handle?: string;
    readonly id: string;
    readonly previewAccessMode?: string;
    readonly status?: string;
    readonly updatedAt?: string;
    readonly url?: string;
    readonly userId?: string;
    readonly versionId?: number;
}
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    avatarUrl?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    handle?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    previewAccessMode?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    versionId?: pulumi.Input<number>;
}
