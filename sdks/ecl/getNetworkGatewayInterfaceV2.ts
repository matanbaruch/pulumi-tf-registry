// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkGatewayInterfaceV2(args?: GetNetworkGatewayInterfaceV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkGatewayInterfaceV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getNetworkGatewayInterfaceV2:getNetworkGatewayInterfaceV2", {
        "awsGwId": args.awsGwId,
        "azureGwId": args.azureGwId,
        "description": args.description,
        "gatewayInterfaceId": args.gatewayInterfaceId,
        "gcpGwId": args.gcpGwId,
        "gwVipv4": args.gwVipv4,
        "gwVipv6": args.gwVipv6,
        "id": args.id,
        "interdcGwId": args.interdcGwId,
        "internetGwId": args.internetGwId,
        "name": args.name,
        "netmask": args.netmask,
        "networkId": args.networkId,
        "primaryIpv4": args.primaryIpv4,
        "primaryIpv6": args.primaryIpv6,
        "region": args.region,
        "secondaryIpv4": args.secondaryIpv4,
        "secondaryIpv6": args.secondaryIpv6,
        "serviceType": args.serviceType,
        "status": args.status,
        "tenantId": args.tenantId,
        "vpnGwId": args.vpnGwId,
        "vrid": args.vrid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkGatewayInterfaceV2.
 */
export interface GetNetworkGatewayInterfaceV2Args {
    awsGwId?: string;
    azureGwId?: string;
    description?: string;
    gatewayInterfaceId?: string;
    gcpGwId?: string;
    gwVipv4?: string;
    gwVipv6?: string;
    id?: string;
    interdcGwId?: string;
    internetGwId?: string;
    name?: string;
    netmask?: number;
    networkId?: string;
    primaryIpv4?: string;
    primaryIpv6?: string;
    region?: string;
    secondaryIpv4?: string;
    secondaryIpv6?: string;
    serviceType?: string;
    status?: string;
    tenantId?: string;
    vpnGwId?: string;
    vrid?: number;
}

/**
 * A collection of values returned by getNetworkGatewayInterfaceV2.
 */
export interface GetNetworkGatewayInterfaceV2Result {
    readonly awsGwId: string;
    readonly azureGwId: string;
    readonly description: string;
    readonly gatewayInterfaceId: string;
    readonly gcpGwId: string;
    readonly gwVipv4: string;
    readonly gwVipv6: string;
    readonly id: string;
    readonly interdcGwId: string;
    readonly internetGwId: string;
    readonly name: string;
    readonly netmask: number;
    readonly networkId: string;
    readonly primaryIpv4: string;
    readonly primaryIpv6: string;
    readonly region: string;
    readonly secondaryIpv4: string;
    readonly secondaryIpv6: string;
    readonly serviceType: string;
    readonly status?: string;
    readonly tenantId: string;
    readonly vpnGwId: string;
    readonly vrid: number;
}
export function getNetworkGatewayInterfaceV2Output(args?: GetNetworkGatewayInterfaceV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkGatewayInterfaceV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkGatewayInterfaceV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkGatewayInterfaceV2.
 */
export interface GetNetworkGatewayInterfaceV2OutputArgs {
    awsGwId?: pulumi.Input<string>;
    azureGwId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    gatewayInterfaceId?: pulumi.Input<string>;
    gcpGwId?: pulumi.Input<string>;
    gwVipv4?: pulumi.Input<string>;
    gwVipv6?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interdcGwId?: pulumi.Input<string>;
    internetGwId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netmask?: pulumi.Input<number>;
    networkId?: pulumi.Input<string>;
    primaryIpv4?: pulumi.Input<string>;
    primaryIpv6?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    secondaryIpv4?: pulumi.Input<string>;
    secondaryIpv6?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    vpnGwId?: pulumi.Input<string>;
    vrid?: pulumi.Input<number>;
}
