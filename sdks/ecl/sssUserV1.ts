// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SssUserV1 extends pulumi.CustomResource {
    /**
     * Get an existing SssUserV1 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SssUserV1State, opts?: pulumi.CustomResourceOptions): SssUserV1 {
        return new SssUserV1(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ecl:index/sssUserV1:SssUserV1';

    /**
     * Returns true if the given object is an instance of SssUserV1.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SssUserV1 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SssUserV1.__pulumiType;
    }

    public /*out*/ readonly brandId!: pulumi.Output<string>;
    public /*out*/ readonly contractId!: pulumi.Output<string>;
    public /*out*/ readonly contractOwner!: pulumi.Output<boolean>;
    public /*out*/ readonly externalReferenceId!: pulumi.Output<string>;
    public /*out*/ readonly keystoneEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly keystoneName!: pulumi.Output<string>;
    public /*out*/ readonly keystonePassword!: pulumi.Output<string>;
    public readonly loginId!: pulumi.Output<string>;
    public /*out*/ readonly loginIntegration!: pulumi.Output<string>;
    public readonly mailAddress!: pulumi.Output<string>;
    public readonly notifyPassword!: pulumi.Output<string | undefined>;
    public readonly password!: pulumi.Output<string | undefined>;
    public /*out*/ readonly sssEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly startTime!: pulumi.Output<string>;
    public /*out*/ readonly userId!: pulumi.Output<string>;

    /**
     * Create a SssUserV1 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SssUserV1Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SssUserV1Args | SssUserV1State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SssUserV1State | undefined;
            resourceInputs["brandId"] = state ? state.brandId : undefined;
            resourceInputs["contractId"] = state ? state.contractId : undefined;
            resourceInputs["contractOwner"] = state ? state.contractOwner : undefined;
            resourceInputs["externalReferenceId"] = state ? state.externalReferenceId : undefined;
            resourceInputs["keystoneEndpoint"] = state ? state.keystoneEndpoint : undefined;
            resourceInputs["keystoneName"] = state ? state.keystoneName : undefined;
            resourceInputs["keystonePassword"] = state ? state.keystonePassword : undefined;
            resourceInputs["loginId"] = state ? state.loginId : undefined;
            resourceInputs["loginIntegration"] = state ? state.loginIntegration : undefined;
            resourceInputs["mailAddress"] = state ? state.mailAddress : undefined;
            resourceInputs["notifyPassword"] = state ? state.notifyPassword : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["sssEndpoint"] = state ? state.sssEndpoint : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as SssUserV1Args | undefined;
            if ((!args || args.loginId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loginId'");
            }
            if ((!args || args.mailAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mailAddress'");
            }
            resourceInputs["loginId"] = args ? args.loginId : undefined;
            resourceInputs["mailAddress"] = args ? args.mailAddress : undefined;
            resourceInputs["notifyPassword"] = args ? args.notifyPassword : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["brandId"] = undefined /*out*/;
            resourceInputs["contractId"] = undefined /*out*/;
            resourceInputs["contractOwner"] = undefined /*out*/;
            resourceInputs["externalReferenceId"] = undefined /*out*/;
            resourceInputs["keystoneEndpoint"] = undefined /*out*/;
            resourceInputs["keystoneName"] = undefined /*out*/;
            resourceInputs["keystonePassword"] = undefined /*out*/;
            resourceInputs["loginIntegration"] = undefined /*out*/;
            resourceInputs["sssEndpoint"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SssUserV1.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SssUserV1 resources.
 */
export interface SssUserV1State {
    brandId?: pulumi.Input<string>;
    contractId?: pulumi.Input<string>;
    contractOwner?: pulumi.Input<boolean>;
    externalReferenceId?: pulumi.Input<string>;
    keystoneEndpoint?: pulumi.Input<string>;
    keystoneName?: pulumi.Input<string>;
    keystonePassword?: pulumi.Input<string>;
    loginId?: pulumi.Input<string>;
    loginIntegration?: pulumi.Input<string>;
    mailAddress?: pulumi.Input<string>;
    notifyPassword?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    sssEndpoint?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SssUserV1 resource.
 */
export interface SssUserV1Args {
    loginId: pulumi.Input<string>;
    mailAddress: pulumi.Input<string>;
    notifyPassword?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
}
