// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkQosOptionsV2(args?: GetNetworkQosOptionsV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkQosOptionsV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getNetworkQosOptionsV2:getNetworkQosOptionsV2", {
        "awsServiceId": args.awsServiceId,
        "azureServiceId": args.azureServiceId,
        "bandwidth": args.bandwidth,
        "description": args.description,
        "ficServiceId": args.ficServiceId,
        "gcpServiceId": args.gcpServiceId,
        "id": args.id,
        "interdcServiceId": args.interdcServiceId,
        "internetServiceId": args.internetServiceId,
        "name": args.name,
        "qosOptionId": args.qosOptionId,
        "qosType": args.qosType,
        "serviceType": args.serviceType,
        "status": args.status,
        "vpnServiceId": args.vpnServiceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkQosOptionsV2.
 */
export interface GetNetworkQosOptionsV2Args {
    awsServiceId?: string;
    azureServiceId?: string;
    bandwidth?: string;
    description?: string;
    ficServiceId?: string;
    gcpServiceId?: string;
    id?: string;
    interdcServiceId?: string;
    internetServiceId?: string;
    name?: string;
    qosOptionId?: string;
    qosType?: string;
    serviceType?: string;
    status?: string;
    vpnServiceId?: string;
}

/**
 * A collection of values returned by getNetworkQosOptionsV2.
 */
export interface GetNetworkQosOptionsV2Result {
    readonly awsServiceId: string;
    readonly azureServiceId: string;
    readonly bandwidth: string;
    readonly description: string;
    readonly ficServiceId: string;
    readonly gcpServiceId: string;
    readonly id: string;
    readonly interdcServiceId: string;
    readonly internetServiceId: string;
    readonly name: string;
    readonly qosOptionId: string;
    readonly qosType: string;
    readonly serviceType: string;
    readonly status: string;
    readonly vpnServiceId: string;
}
export function getNetworkQosOptionsV2Output(args?: GetNetworkQosOptionsV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkQosOptionsV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkQosOptionsV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkQosOptionsV2.
 */
export interface GetNetworkQosOptionsV2OutputArgs {
    awsServiceId?: pulumi.Input<string>;
    azureServiceId?: pulumi.Input<string>;
    bandwidth?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    ficServiceId?: pulumi.Input<string>;
    gcpServiceId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interdcServiceId?: pulumi.Input<string>;
    internetServiceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    qosOptionId?: pulumi.Input<string>;
    qosType?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    vpnServiceId?: pulumi.Input<string>;
}
