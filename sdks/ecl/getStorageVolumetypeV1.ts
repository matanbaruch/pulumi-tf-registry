// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageVolumetypeV1(args?: GetStorageVolumetypeV1Args, opts?: pulumi.InvokeOptions): Promise<GetStorageVolumetypeV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getStorageVolumetypeV1:getStorageVolumetypeV1", {
        "id": args.id,
        "name": args.name,
        "volumeTypeId": args.volumeTypeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageVolumetypeV1.
 */
export interface GetStorageVolumetypeV1Args {
    id?: string;
    name?: string;
    volumeTypeId?: string;
}

/**
 * A collection of values returned by getStorageVolumetypeV1.
 */
export interface GetStorageVolumetypeV1Result {
    readonly extraSpecs: {[key: string]: string};
    readonly id: string;
    readonly name?: string;
    readonly volumeTypeId?: string;
}
export function getStorageVolumetypeV1Output(args?: GetStorageVolumetypeV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageVolumetypeV1Result> {
    return pulumi.output(args).apply((a: any) => getStorageVolumetypeV1(a, opts))
}

/**
 * A collection of arguments for invoking getStorageVolumetypeV1.
 */
export interface GetStorageVolumetypeV1OutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    volumeTypeId?: pulumi.Input<string>;
}
