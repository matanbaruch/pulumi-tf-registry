// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSssTenantV1(args: GetSssTenantV1Args, opts?: pulumi.InvokeOptions): Promise<GetSssTenantV1Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getSssTenantV1:getSssTenantV1", {
        "id": args.id,
        "tenantName": args.tenantName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSssTenantV1.
 */
export interface GetSssTenantV1Args {
    id?: string;
    tenantName: string;
}

/**
 * A collection of values returned by getSssTenantV1.
 */
export interface GetSssTenantV1Result {
    readonly contractId: string;
    readonly description: string;
    readonly id: string;
    readonly region: string;
    readonly startTime: string;
    readonly tenantId: string;
    readonly tenantName: string;
}
export function getSssTenantV1Output(args: GetSssTenantV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSssTenantV1Result> {
    return pulumi.output(args).apply((a: any) => getSssTenantV1(a, opts))
}

/**
 * A collection of arguments for invoking getSssTenantV1.
 */
export interface GetSssTenantV1OutputArgs {
    id?: pulumi.Input<string>;
    tenantName: pulumi.Input<string>;
}
