// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkStaticRouteV2(args?: GetNetworkStaticRouteV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkStaticRouteV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getNetworkStaticRouteV2:getNetworkStaticRouteV2", {
        "awsGwId": args.awsGwId,
        "azureGwId": args.azureGwId,
        "description": args.description,
        "destination": args.destination,
        "gcpGwId": args.gcpGwId,
        "id": args.id,
        "interdcGwId": args.interdcGwId,
        "internetGwId": args.internetGwId,
        "name": args.name,
        "nexthop": args.nexthop,
        "region": args.region,
        "serviceType": args.serviceType,
        "staticRouteId": args.staticRouteId,
        "status": args.status,
        "tenantId": args.tenantId,
        "vpnGwId": args.vpnGwId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkStaticRouteV2.
 */
export interface GetNetworkStaticRouteV2Args {
    awsGwId?: string;
    azureGwId?: string;
    description?: string;
    destination?: string;
    gcpGwId?: string;
    id?: string;
    interdcGwId?: string;
    internetGwId?: string;
    name?: string;
    nexthop?: string;
    region?: string;
    serviceType?: string;
    staticRouteId?: string;
    status?: string;
    tenantId?: string;
    vpnGwId?: string;
}

/**
 * A collection of values returned by getNetworkStaticRouteV2.
 */
export interface GetNetworkStaticRouteV2Result {
    readonly awsGwId: string;
    readonly azureGwId: string;
    readonly description: string;
    readonly destination: string;
    readonly gcpGwId: string;
    readonly id: string;
    readonly interdcGwId: string;
    readonly internetGwId: string;
    readonly name: string;
    readonly nexthop: string;
    readonly region: string;
    readonly serviceType: string;
    readonly staticRouteId: string;
    readonly status: string;
    readonly tenantId: string;
    readonly vpnGwId: string;
}
export function getNetworkStaticRouteV2Output(args?: GetNetworkStaticRouteV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkStaticRouteV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkStaticRouteV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkStaticRouteV2.
 */
export interface GetNetworkStaticRouteV2OutputArgs {
    awsGwId?: pulumi.Input<string>;
    azureGwId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    destination?: pulumi.Input<string>;
    gcpGwId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interdcGwId?: pulumi.Input<string>;
    internetGwId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nexthop?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    staticRouteId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    vpnGwId?: pulumi.Input<string>;
}
