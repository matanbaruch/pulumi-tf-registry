// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecurityHostBasedV3 extends pulumi.CustomResource {
    /**
     * Get an existing SecurityHostBasedV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityHostBasedV3State, opts?: pulumi.CustomResourceOptions): SecurityHostBasedV3 {
        return new SecurityHostBasedV3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ecl:index/securityHostBasedV3:SecurityHostBasedV3';

    /**
     * Returns true if the given object is an instance of SecurityHostBasedV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityHostBasedV3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityHostBasedV3.__pulumiType;
    }

    public readonly dsmLang!: pulumi.Output<string>;
    public readonly locale!: pulumi.Output<string | undefined>;
    public readonly mailAddress!: pulumi.Output<string>;
    public readonly maxAgentValue!: pulumi.Output<number>;
    public readonly serviceOrderService!: pulumi.Output<string>;
    public readonly tenantId!: pulumi.Output<string>;
    public readonly timeZone!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SecurityHostBasedV3Timeouts | undefined>;

    /**
     * Create a SecurityHostBasedV3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityHostBasedV3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityHostBasedV3Args | SecurityHostBasedV3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityHostBasedV3State | undefined;
            resourceInputs["dsmLang"] = state ? state.dsmLang : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["mailAddress"] = state ? state.mailAddress : undefined;
            resourceInputs["maxAgentValue"] = state ? state.maxAgentValue : undefined;
            resourceInputs["serviceOrderService"] = state ? state.serviceOrderService : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SecurityHostBasedV3Args | undefined;
            if ((!args || args.dsmLang === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dsmLang'");
            }
            if ((!args || args.mailAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mailAddress'");
            }
            if ((!args || args.maxAgentValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxAgentValue'");
            }
            if ((!args || args.serviceOrderService === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceOrderService'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.timeZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZone'");
            }
            resourceInputs["dsmLang"] = args ? args.dsmLang : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["mailAddress"] = args ? args.mailAddress : undefined;
            resourceInputs["maxAgentValue"] = args ? args.maxAgentValue : undefined;
            resourceInputs["serviceOrderService"] = args ? args.serviceOrderService : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityHostBasedV3.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecurityHostBasedV3 resources.
 */
export interface SecurityHostBasedV3State {
    dsmLang?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    mailAddress?: pulumi.Input<string>;
    maxAgentValue?: pulumi.Input<number>;
    serviceOrderService?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SecurityHostBasedV3Timeouts>;
}

/**
 * The set of arguments for constructing a SecurityHostBasedV3 resource.
 */
export interface SecurityHostBasedV3Args {
    dsmLang: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    mailAddress: pulumi.Input<string>;
    maxAgentValue: pulumi.Input<number>;
    serviceOrderService: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    timeZone: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SecurityHostBasedV3Timeouts>;
}
