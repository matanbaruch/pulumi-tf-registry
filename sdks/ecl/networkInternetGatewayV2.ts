// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkInternetGatewayV2 extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInternetGatewayV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkInternetGatewayV2State, opts?: pulumi.CustomResourceOptions): NetworkInternetGatewayV2 {
        return new NetworkInternetGatewayV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ecl:index/networkInternetGatewayV2:NetworkInternetGatewayV2';

    /**
     * Returns true if the given object is an instance of NetworkInternetGatewayV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInternetGatewayV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInternetGatewayV2.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly internetServiceId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly qosOptionId!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly tenantId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.NetworkInternetGatewayV2Timeouts | undefined>;

    /**
     * Create a NetworkInternetGatewayV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInternetGatewayV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkInternetGatewayV2Args | NetworkInternetGatewayV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkInternetGatewayV2State | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["internetServiceId"] = state ? state.internetServiceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["qosOptionId"] = state ? state.qosOptionId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as NetworkInternetGatewayV2Args | undefined;
            if ((!args || args.internetServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internetServiceId'");
            }
            if ((!args || args.qosOptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'qosOptionId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["internetServiceId"] = args ? args.internetServiceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["qosOptionId"] = args ? args.qosOptionId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkInternetGatewayV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkInternetGatewayV2 resources.
 */
export interface NetworkInternetGatewayV2State {
    description?: pulumi.Input<string>;
    internetServiceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    qosOptionId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.NetworkInternetGatewayV2Timeouts>;
}

/**
 * The set of arguments for constructing a NetworkInternetGatewayV2 resource.
 */
export interface NetworkInternetGatewayV2Args {
    description?: pulumi.Input<string>;
    internetServiceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    qosOptionId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.NetworkInternetGatewayV2Timeouts>;
}
