// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMlbHealthMonitorV1(args?: GetMlbHealthMonitorV1Args, opts?: pulumi.InvokeOptions): Promise<GetMlbHealthMonitorV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getMlbHealthMonitorV1:getMlbHealthMonitorV1", {
        "configurationStatus": args.configurationStatus,
        "description": args.description,
        "httpStatusCode": args.httpStatusCode,
        "id": args.id,
        "interval": args.interval,
        "loadBalancerId": args.loadBalancerId,
        "name": args.name,
        "operationStatus": args.operationStatus,
        "path": args.path,
        "port": args.port,
        "protocol": args.protocol,
        "retry": args.retry,
        "tags": args.tags,
        "tenantId": args.tenantId,
        "timeout": args.timeout,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMlbHealthMonitorV1.
 */
export interface GetMlbHealthMonitorV1Args {
    configurationStatus?: string;
    description?: string;
    httpStatusCode?: string;
    id?: string;
    interval?: number;
    loadBalancerId?: string;
    name?: string;
    operationStatus?: string;
    path?: string;
    port?: number;
    protocol?: string;
    retry?: number;
    tags?: {[key: string]: string};
    tenantId?: string;
    timeout?: number;
}

/**
 * A collection of values returned by getMlbHealthMonitorV1.
 */
export interface GetMlbHealthMonitorV1Result {
    readonly configurationStatus: string;
    readonly description: string;
    readonly httpStatusCode: string;
    readonly id: string;
    readonly interval: number;
    readonly loadBalancerId: string;
    readonly name: string;
    readonly operationStatus: string;
    readonly path: string;
    readonly port: number;
    readonly protocol: string;
    readonly retry: number;
    readonly tags: {[key: string]: string};
    readonly tenantId: string;
    readonly timeout: number;
}
export function getMlbHealthMonitorV1Output(args?: GetMlbHealthMonitorV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMlbHealthMonitorV1Result> {
    return pulumi.output(args).apply((a: any) => getMlbHealthMonitorV1(a, opts))
}

/**
 * A collection of arguments for invoking getMlbHealthMonitorV1.
 */
export interface GetMlbHealthMonitorV1OutputArgs {
    configurationStatus?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    httpStatusCode?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    loadBalancerId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    operationStatus?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    retry?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
}
