// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageVirtualstorageV1(args?: GetStorageVirtualstorageV1Args, opts?: pulumi.InvokeOptions): Promise<GetStorageVirtualstorageV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getStorageVirtualstorageV1:getStorageVirtualstorageV1", {
        "id": args.id,
        "name": args.name,
        "virtualStorageId": args.virtualStorageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageVirtualstorageV1.
 */
export interface GetStorageVirtualstorageV1Args {
    id?: string;
    name?: string;
    virtualStorageId?: string;
}

/**
 * A collection of values returned by getStorageVirtualstorageV1.
 */
export interface GetStorageVirtualstorageV1Result {
    readonly description: string;
    readonly hostRoutes: outputs.GetStorageVirtualstorageV1HostRoute[];
    readonly id: string;
    readonly ipAddrPool: {[key: string]: string};
    readonly name?: string;
    readonly networkId: string;
    readonly subnetId: string;
    readonly virtualStorageId?: string;
    readonly volumeTypeId: string;
}
export function getStorageVirtualstorageV1Output(args?: GetStorageVirtualstorageV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageVirtualstorageV1Result> {
    return pulumi.output(args).apply((a: any) => getStorageVirtualstorageV1(a, opts))
}

/**
 * A collection of arguments for invoking getStorageVirtualstorageV1.
 */
export interface GetStorageVirtualstorageV1OutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    virtualStorageId?: pulumi.Input<string>;
}
