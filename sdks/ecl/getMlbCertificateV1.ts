// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMlbCertificateV1(args?: GetMlbCertificateV1Args, opts?: pulumi.InvokeOptions): Promise<GetMlbCertificateV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getMlbCertificateV1:getMlbCertificateV1", {
        "caCert": args.caCert,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "sslCert": args.sslCert,
        "sslKey": args.sslKey,
        "tags": args.tags,
        "tenantId": args.tenantId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMlbCertificateV1.
 */
export interface GetMlbCertificateV1Args {
    caCert?: {[key: string]: string};
    description?: string;
    id?: string;
    name?: string;
    sslCert?: {[key: string]: string};
    sslKey?: {[key: string]: string};
    tags?: {[key: string]: string};
    tenantId?: string;
}

/**
 * A collection of values returned by getMlbCertificateV1.
 */
export interface GetMlbCertificateV1Result {
    readonly caCert: {[key: string]: string};
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly sslCert: {[key: string]: string};
    readonly sslKey: {[key: string]: string};
    readonly tags: {[key: string]: string};
    readonly tenantId: string;
}
export function getMlbCertificateV1Output(args?: GetMlbCertificateV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMlbCertificateV1Result> {
    return pulumi.output(args).apply((a: any) => getMlbCertificateV1(a, opts))
}

/**
 * A collection of arguments for invoking getMlbCertificateV1.
 */
export interface GetMlbCertificateV1OutputArgs {
    caCert?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sslCert?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sslKey?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId?: pulumi.Input<string>;
}
