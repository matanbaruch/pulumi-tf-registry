// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDnsZoneV2(args?: GetDnsZoneV2Args, opts?: pulumi.InvokeOptions): Promise<GetDnsZoneV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getDnsZoneV2:getDnsZoneV2", {
        "attributes": args.attributes,
        "createdAt": args.createdAt,
        "description": args.description,
        "domainName": args.domainName,
        "email": args.email,
        "id": args.id,
        "masters": args.masters,
        "name": args.name,
        "poolId": args.poolId,
        "projectId": args.projectId,
        "region": args.region,
        "serial": args.serial,
        "status": args.status,
        "transferredAt": args.transferredAt,
        "ttl": args.ttl,
        "type": args.type,
        "updatedAt": args.updatedAt,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsZoneV2.
 */
export interface GetDnsZoneV2Args {
    attributes?: {[key: string]: string};
    createdAt?: string;
    description?: string;
    domainName?: string;
    email?: string;
    id?: string;
    masters?: string[];
    name?: string;
    poolId?: string;
    projectId?: string;
    region?: string;
    serial?: number;
    status?: string;
    transferredAt?: string;
    ttl?: number;
    type?: string;
    updatedAt?: string;
    version?: number;
}

/**
 * A collection of values returned by getDnsZoneV2.
 */
export interface GetDnsZoneV2Result {
    readonly attributes: {[key: string]: string};
    readonly createdAt: string;
    readonly description: string;
    readonly domainName: string;
    readonly email: string;
    readonly id: string;
    readonly masters: string[];
    readonly name: string;
    readonly poolId: string;
    readonly projectId: string;
    readonly region: string;
    readonly serial: number;
    readonly status: string;
    readonly transferredAt: string;
    readonly ttl: number;
    readonly type: string;
    readonly updatedAt: string;
    readonly version: number;
}
export function getDnsZoneV2Output(args?: GetDnsZoneV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsZoneV2Result> {
    return pulumi.output(args).apply((a: any) => getDnsZoneV2(a, opts))
}

/**
 * A collection of arguments for invoking getDnsZoneV2.
 */
export interface GetDnsZoneV2OutputArgs {
    attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    masters?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    poolId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serial?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    transferredAt?: pulumi.Input<string>;
    ttl?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
