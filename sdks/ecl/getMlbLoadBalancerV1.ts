// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMlbLoadBalancerV1(args?: GetMlbLoadBalancerV1Args, opts?: pulumi.InvokeOptions): Promise<GetMlbLoadBalancerV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getMlbLoadBalancerV1:getMlbLoadBalancerV1", {
        "activeAvailabilityZone": args.activeAvailabilityZone,
        "configurationStatus": args.configurationStatus,
        "description": args.description,
        "id": args.id,
        "interfaces": args.interfaces,
        "monitoringStatus": args.monitoringStatus,
        "name": args.name,
        "operationStatus": args.operationStatus,
        "planId": args.planId,
        "planName": args.planName,
        "primaryAvailabilityZone": args.primaryAvailabilityZone,
        "revision": args.revision,
        "secondaryAvailabilityZone": args.secondaryAvailabilityZone,
        "syslogServers": args.syslogServers,
        "tags": args.tags,
        "tenantId": args.tenantId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMlbLoadBalancerV1.
 */
export interface GetMlbLoadBalancerV1Args {
    activeAvailabilityZone?: string;
    configurationStatus?: string;
    description?: string;
    id?: string;
    interfaces?: inputs.GetMlbLoadBalancerV1Interface[];
    monitoringStatus?: string;
    name?: string;
    operationStatus?: string;
    planId?: string;
    planName?: string;
    primaryAvailabilityZone?: string;
    revision?: number;
    secondaryAvailabilityZone?: string;
    syslogServers?: inputs.GetMlbLoadBalancerV1SyslogServer[];
    tags?: {[key: string]: string};
    tenantId?: string;
}

/**
 * A collection of values returned by getMlbLoadBalancerV1.
 */
export interface GetMlbLoadBalancerV1Result {
    readonly activeAvailabilityZone: string;
    readonly configurationStatus: string;
    readonly description: string;
    readonly id: string;
    readonly interfaces?: outputs.GetMlbLoadBalancerV1Interface[];
    readonly monitoringStatus: string;
    readonly name: string;
    readonly operationStatus: string;
    readonly planId: string;
    readonly planName: string;
    readonly primaryAvailabilityZone: string;
    readonly revision: number;
    readonly secondaryAvailabilityZone: string;
    readonly syslogServers?: outputs.GetMlbLoadBalancerV1SyslogServer[];
    readonly tags: {[key: string]: string};
    readonly tenantId: string;
}
export function getMlbLoadBalancerV1Output(args?: GetMlbLoadBalancerV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMlbLoadBalancerV1Result> {
    return pulumi.output(args).apply((a: any) => getMlbLoadBalancerV1(a, opts))
}

/**
 * A collection of arguments for invoking getMlbLoadBalancerV1.
 */
export interface GetMlbLoadBalancerV1OutputArgs {
    activeAvailabilityZone?: pulumi.Input<string>;
    configurationStatus?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetMlbLoadBalancerV1InterfaceArgs>[]>;
    monitoringStatus?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    operationStatus?: pulumi.Input<string>;
    planId?: pulumi.Input<string>;
    planName?: pulumi.Input<string>;
    primaryAvailabilityZone?: pulumi.Input<string>;
    revision?: pulumi.Input<number>;
    secondaryAvailabilityZone?: pulumi.Input<string>;
    syslogServers?: pulumi.Input<pulumi.Input<inputs.GetMlbLoadBalancerV1SyslogServerArgs>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId?: pulumi.Input<string>;
}
