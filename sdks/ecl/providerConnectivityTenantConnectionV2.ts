// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProviderConnectivityTenantConnectionV2 extends pulumi.CustomResource {
    /**
     * Get an existing ProviderConnectivityTenantConnectionV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProviderConnectivityTenantConnectionV2State, opts?: pulumi.CustomResourceOptions): ProviderConnectivityTenantConnectionV2 {
        return new ProviderConnectivityTenantConnectionV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ecl:index/providerConnectivityTenantConnectionV2:ProviderConnectivityTenantConnectionV2';

    /**
     * Returns true if the given object is an instance of ProviderConnectivityTenantConnectionV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProviderConnectivityTenantConnectionV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProviderConnectivityTenantConnectionV2.__pulumiType;
    }

    public readonly attachmentOptsBaremetal!: pulumi.Output<outputs.ProviderConnectivityTenantConnectionV2AttachmentOptsBaremetal | undefined>;
    public readonly attachmentOptsCompute!: pulumi.Output<outputs.ProviderConnectivityTenantConnectionV2AttachmentOptsCompute | undefined>;
    public readonly attachmentOptsVna!: pulumi.Output<outputs.ProviderConnectivityTenantConnectionV2AttachmentOptsVna | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly deviceId!: pulumi.Output<string>;
    public readonly deviceInterfaceId!: pulumi.Output<string | undefined>;
    public readonly deviceType!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly networkId!: pulumi.Output<string>;
    public /*out*/ readonly portId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tenantConnectionRequestId!: pulumi.Output<string>;
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    public /*out*/ readonly tenantIdOther!: pulumi.Output<string>;

    /**
     * Create a ProviderConnectivityTenantConnectionV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderConnectivityTenantConnectionV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProviderConnectivityTenantConnectionV2Args | ProviderConnectivityTenantConnectionV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProviderConnectivityTenantConnectionV2State | undefined;
            resourceInputs["attachmentOptsBaremetal"] = state ? state.attachmentOptsBaremetal : undefined;
            resourceInputs["attachmentOptsCompute"] = state ? state.attachmentOptsCompute : undefined;
            resourceInputs["attachmentOptsVna"] = state ? state.attachmentOptsVna : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["deviceInterfaceId"] = state ? state.deviceInterfaceId : undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["portId"] = state ? state.portId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantConnectionRequestId"] = state ? state.tenantConnectionRequestId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["tenantIdOther"] = state ? state.tenantIdOther : undefined;
        } else {
            const args = argsOrState as ProviderConnectivityTenantConnectionV2Args | undefined;
            if ((!args || args.deviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceId'");
            }
            if ((!args || args.deviceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceType'");
            }
            if ((!args || args.tenantConnectionRequestId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantConnectionRequestId'");
            }
            resourceInputs["attachmentOptsBaremetal"] = args ? args.attachmentOptsBaremetal : undefined;
            resourceInputs["attachmentOptsCompute"] = args ? args.attachmentOptsCompute : undefined;
            resourceInputs["attachmentOptsVna"] = args ? args.attachmentOptsVna : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["deviceInterfaceId"] = args ? args.deviceInterfaceId : undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantConnectionRequestId"] = args ? args.tenantConnectionRequestId : undefined;
            resourceInputs["networkId"] = undefined /*out*/;
            resourceInputs["portId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["tenantIdOther"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProviderConnectivityTenantConnectionV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProviderConnectivityTenantConnectionV2 resources.
 */
export interface ProviderConnectivityTenantConnectionV2State {
    attachmentOptsBaremetal?: pulumi.Input<inputs.ProviderConnectivityTenantConnectionV2AttachmentOptsBaremetal>;
    attachmentOptsCompute?: pulumi.Input<inputs.ProviderConnectivityTenantConnectionV2AttachmentOptsCompute>;
    attachmentOptsVna?: pulumi.Input<inputs.ProviderConnectivityTenantConnectionV2AttachmentOptsVna>;
    description?: pulumi.Input<string>;
    deviceId?: pulumi.Input<string>;
    deviceInterfaceId?: pulumi.Input<string>;
    deviceType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    portId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantConnectionRequestId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    tenantIdOther?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProviderConnectivityTenantConnectionV2 resource.
 */
export interface ProviderConnectivityTenantConnectionV2Args {
    attachmentOptsBaremetal?: pulumi.Input<inputs.ProviderConnectivityTenantConnectionV2AttachmentOptsBaremetal>;
    attachmentOptsCompute?: pulumi.Input<inputs.ProviderConnectivityTenantConnectionV2AttachmentOptsCompute>;
    attachmentOptsVna?: pulumi.Input<inputs.ProviderConnectivityTenantConnectionV2AttachmentOptsVna>;
    description?: pulumi.Input<string>;
    deviceId: pulumi.Input<string>;
    deviceInterfaceId?: pulumi.Input<string>;
    deviceType: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantConnectionRequestId: pulumi.Input<string>;
}
