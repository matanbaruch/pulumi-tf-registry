// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageVolumeV1(args?: GetStorageVolumeV1Args, opts?: pulumi.InvokeOptions): Promise<GetStorageVolumeV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getStorageVolumeV1:getStorageVolumeV1", {
        "id": args.id,
        "name": args.name,
        "volumeId": args.volumeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageVolumeV1.
 */
export interface GetStorageVolumeV1Args {
    id?: string;
    name?: string;
    volumeId?: string;
}

/**
 * A collection of values returned by getStorageVolumeV1.
 */
export interface GetStorageVolumeV1Result {
    readonly availabilityZone: string;
    readonly description: string;
    readonly id: string;
    readonly initiatorIqns: string[];
    readonly iopsPerGb: string;
    readonly name?: string;
    readonly size: number;
    readonly throughput: string;
    readonly virtualStorageId: string;
    readonly volumeId?: string;
}
export function getStorageVolumeV1Output(args?: GetStorageVolumeV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageVolumeV1Result> {
    return pulumi.output(args).apply((a: any) => getStorageVolumeV1(a, opts))
}

/**
 * A collection of arguments for invoking getStorageVolumeV1.
 */
export interface GetStorageVolumeV1OutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    volumeId?: pulumi.Input<string>;
}
