// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMlbPlanV1(args?: GetMlbPlanV1Args, opts?: pulumi.InvokeOptions): Promise<GetMlbPlanV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ecl:index/getMlbPlanV1:getMlbPlanV1", {
        "bandwidth": args.bandwidth,
        "description": args.description,
        "enabled": args.enabled,
        "id": args.id,
        "maxNumberOfConditions": args.maxNumberOfConditions,
        "maxNumberOfHealthMonitors": args.maxNumberOfHealthMonitors,
        "maxNumberOfInterfaces": args.maxNumberOfInterfaces,
        "maxNumberOfListeners": args.maxNumberOfListeners,
        "maxNumberOfMembers": args.maxNumberOfMembers,
        "maxNumberOfPolicies": args.maxNumberOfPolicies,
        "maxNumberOfRoutes": args.maxNumberOfRoutes,
        "maxNumberOfRules": args.maxNumberOfRules,
        "maxNumberOfTargetGroups": args.maxNumberOfTargetGroups,
        "name": args.name,
        "redundancy": args.redundancy,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMlbPlanV1.
 */
export interface GetMlbPlanV1Args {
    bandwidth?: string;
    description?: string;
    enabled?: boolean;
    id?: string;
    maxNumberOfConditions?: number;
    maxNumberOfHealthMonitors?: number;
    maxNumberOfInterfaces?: number;
    maxNumberOfListeners?: number;
    maxNumberOfMembers?: number;
    maxNumberOfPolicies?: number;
    maxNumberOfRoutes?: number;
    maxNumberOfRules?: number;
    maxNumberOfTargetGroups?: number;
    name?: string;
    redundancy?: string;
}

/**
 * A collection of values returned by getMlbPlanV1.
 */
export interface GetMlbPlanV1Result {
    readonly bandwidth: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly maxNumberOfConditions: number;
    readonly maxNumberOfHealthMonitors: number;
    readonly maxNumberOfInterfaces: number;
    readonly maxNumberOfListeners: number;
    readonly maxNumberOfMembers: number;
    readonly maxNumberOfPolicies: number;
    readonly maxNumberOfRoutes: number;
    readonly maxNumberOfRules: number;
    readonly maxNumberOfTargetGroups: number;
    readonly name: string;
    readonly redundancy: string;
}
export function getMlbPlanV1Output(args?: GetMlbPlanV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMlbPlanV1Result> {
    return pulumi.output(args).apply((a: any) => getMlbPlanV1(a, opts))
}

/**
 * A collection of arguments for invoking getMlbPlanV1.
 */
export interface GetMlbPlanV1OutputArgs {
    bandwidth?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    maxNumberOfConditions?: pulumi.Input<number>;
    maxNumberOfHealthMonitors?: pulumi.Input<number>;
    maxNumberOfInterfaces?: pulumi.Input<number>;
    maxNumberOfListeners?: pulumi.Input<number>;
    maxNumberOfMembers?: pulumi.Input<number>;
    maxNumberOfPolicies?: pulumi.Input<number>;
    maxNumberOfRoutes?: pulumi.Input<number>;
    maxNumberOfRules?: pulumi.Input<number>;
    maxNumberOfTargetGroups?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    redundancy?: pulumi.Input<string>;
}
