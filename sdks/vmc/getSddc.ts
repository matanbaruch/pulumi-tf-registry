// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSddc(args: GetSddcArgs, opts?: pulumi.InvokeOptions): Promise<GetSddcResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vmc:index/getSddc:getSddc", {
        "id": args.id,
        "sddcId": args.sddcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSddc.
 */
export interface GetSddcArgs {
    id?: string;
    sddcId: string;
}

/**
 * A collection of values returned by getSddc.
 */
export interface GetSddcResult {
    readonly accountLinkState: string;
    readonly availabilityZones: string[];
    readonly cloudUsername: string;
    readonly created: string;
    readonly deploymentType: string;
    readonly id: string;
    readonly nsxtCloudadmin: string;
    readonly nsxtCloudadminPassword: string;
    readonly nsxtCloudaudit: string;
    readonly nsxtCloudauditPassword: string;
    readonly nsxtPrivateIp: string;
    readonly nsxtPrivateUrl: string;
    readonly nsxtReverseProxyUrl: string;
    readonly nsxtUi: boolean;
    readonly numHost: number;
    readonly orgId: string;
    readonly providerType: string;
    readonly region: string;
    readonly sddcAccessState: string;
    readonly sddcId: string;
    readonly sddcName: string;
    readonly sddcState: string;
    readonly sddcType: string;
    readonly skipCreatingVxlan: boolean;
    readonly ssoDomain: string;
    readonly updated: string;
    readonly updatedByUserId: string;
    readonly updatedByUserName: string;
    readonly userId: string;
    readonly userName: string;
    readonly vcUrl: string;
    readonly version: number;
}
export function getSddcOutput(args: GetSddcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSddcResult> {
    return pulumi.output(args).apply((a: any) => getSddc(a, opts))
}

/**
 * A collection of arguments for invoking getSddc.
 */
export interface GetSddcOutputArgs {
    id?: pulumi.Input<string>;
    sddcId: pulumi.Input<string>;
}
