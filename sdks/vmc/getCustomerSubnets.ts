// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCustomerSubnets(args: GetCustomerSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomerSubnetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vmc:index/getCustomerSubnets:getCustomerSubnets", {
        "connectedAccountId": args.connectedAccountId,
        "forceRefresh": args.forceRefresh,
        "id": args.id,
        "instanceType": args.instanceType,
        "numHosts": args.numHosts,
        "region": args.region,
        "sddcId": args.sddcId,
        "sddcType": args.sddcType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomerSubnets.
 */
export interface GetCustomerSubnetsArgs {
    connectedAccountId?: string;
    forceRefresh?: boolean;
    id?: string;
    instanceType?: string;
    numHosts?: number;
    region: string;
    sddcId?: string;
    sddcType?: string;
}

/**
 * A collection of values returned by getCustomerSubnets.
 */
export interface GetCustomerSubnetsResult {
    readonly connectedAccountId?: string;
    readonly customerAvailableZones: string[];
    readonly forceRefresh?: boolean;
    readonly id: string;
    readonly ids: string[];
    readonly instanceType?: string;
    readonly numHosts?: number;
    readonly region: string;
    readonly sddcId?: string;
    readonly sddcType?: string;
    readonly vpcMap: {[key: string]: string};
}
export function getCustomerSubnetsOutput(args: GetCustomerSubnetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomerSubnetsResult> {
    return pulumi.output(args).apply((a: any) => getCustomerSubnets(a, opts))
}

/**
 * A collection of arguments for invoking getCustomerSubnets.
 */
export interface GetCustomerSubnetsOutputArgs {
    connectedAccountId?: pulumi.Input<string>;
    forceRefresh?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    numHosts?: pulumi.Input<number>;
    region: pulumi.Input<string>;
    sddcId?: pulumi.Input<string>;
    sddcType?: pulumi.Input<string>;
}
