// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SddcGroup extends pulumi.CustomResource {
    /**
     * Get an existing SddcGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SddcGroupState, opts?: pulumi.CustomResourceOptions): SddcGroup {
        return new SddcGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vmc:index/sddcGroup:SddcGroup';

    /**
     * Returns true if the given object is an instance of SddcGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SddcGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SddcGroup.__pulumiType;
    }

    public /*out*/ readonly creator!: pulumi.Output<string>;
    public /*out*/ readonly deleted!: pulumi.Output<boolean>;
    /**
     * Short description of the SDDC Group
     */
    public readonly description!: pulumi.Output<string>;
    public readonly dxgwAllowedPrefixes!: pulumi.Output<string>;
    public readonly dxgwId!: pulumi.Output<string>;
    public readonly dxgwOwner!: pulumi.Output<string>;
    public readonly dxgwStatus!: pulumi.Output<string>;
    public readonly externalTgwConfiguredPrefixes!: pulumi.Output<string>;
    public readonly externalTgwId!: pulumi.Output<string>;
    public readonly externalTgwOwner!: pulumi.Output<string>;
    public readonly externalTgwRegion!: pulumi.Output<string>;
    /**
     * The name of the SDDC group
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * A set of the IDs of SDDC members of the SDDC Group
     */
    public readonly sddcMemberIds!: pulumi.Output<string[]>;
    public readonly tgwId!: pulumi.Output<string>;
    public readonly tgwRegion!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SddcGroupTimeouts | undefined>;
    public /*out*/ readonly timestamp!: pulumi.Output<string>;
    public readonly vpcAttachmentStatus!: pulumi.Output<string>;
    public readonly vpcAttachments!: pulumi.Output<outputs.SddcGroupVpcAttachment[] | undefined>;
    public readonly vpcAwsAccount!: pulumi.Output<string>;
    public readonly vpcRamShareId!: pulumi.Output<string>;

    /**
     * Create a SddcGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SddcGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SddcGroupArgs | SddcGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SddcGroupState | undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["deleted"] = state ? state.deleted : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dxgwAllowedPrefixes"] = state ? state.dxgwAllowedPrefixes : undefined;
            resourceInputs["dxgwId"] = state ? state.dxgwId : undefined;
            resourceInputs["dxgwOwner"] = state ? state.dxgwOwner : undefined;
            resourceInputs["dxgwStatus"] = state ? state.dxgwStatus : undefined;
            resourceInputs["externalTgwConfiguredPrefixes"] = state ? state.externalTgwConfiguredPrefixes : undefined;
            resourceInputs["externalTgwId"] = state ? state.externalTgwId : undefined;
            resourceInputs["externalTgwOwner"] = state ? state.externalTgwOwner : undefined;
            resourceInputs["externalTgwRegion"] = state ? state.externalTgwRegion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["sddcMemberIds"] = state ? state.sddcMemberIds : undefined;
            resourceInputs["tgwId"] = state ? state.tgwId : undefined;
            resourceInputs["tgwRegion"] = state ? state.tgwRegion : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["timestamp"] = state ? state.timestamp : undefined;
            resourceInputs["vpcAttachmentStatus"] = state ? state.vpcAttachmentStatus : undefined;
            resourceInputs["vpcAttachments"] = state ? state.vpcAttachments : undefined;
            resourceInputs["vpcAwsAccount"] = state ? state.vpcAwsAccount : undefined;
            resourceInputs["vpcRamShareId"] = state ? state.vpcRamShareId : undefined;
        } else {
            const args = argsOrState as SddcGroupArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.sddcMemberIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sddcMemberIds'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dxgwAllowedPrefixes"] = args ? args.dxgwAllowedPrefixes : undefined;
            resourceInputs["dxgwId"] = args ? args.dxgwId : undefined;
            resourceInputs["dxgwOwner"] = args ? args.dxgwOwner : undefined;
            resourceInputs["dxgwStatus"] = args ? args.dxgwStatus : undefined;
            resourceInputs["externalTgwConfiguredPrefixes"] = args ? args.externalTgwConfiguredPrefixes : undefined;
            resourceInputs["externalTgwId"] = args ? args.externalTgwId : undefined;
            resourceInputs["externalTgwOwner"] = args ? args.externalTgwOwner : undefined;
            resourceInputs["externalTgwRegion"] = args ? args.externalTgwRegion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sddcMemberIds"] = args ? args.sddcMemberIds : undefined;
            resourceInputs["tgwId"] = args ? args.tgwId : undefined;
            resourceInputs["tgwRegion"] = args ? args.tgwRegion : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vpcAttachmentStatus"] = args ? args.vpcAttachmentStatus : undefined;
            resourceInputs["vpcAttachments"] = args ? args.vpcAttachments : undefined;
            resourceInputs["vpcAwsAccount"] = args ? args.vpcAwsAccount : undefined;
            resourceInputs["vpcRamShareId"] = args ? args.vpcRamShareId : undefined;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["deleted"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["timestamp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SddcGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SddcGroup resources.
 */
export interface SddcGroupState {
    creator?: pulumi.Input<string>;
    deleted?: pulumi.Input<boolean>;
    /**
     * Short description of the SDDC Group
     */
    description?: pulumi.Input<string>;
    dxgwAllowedPrefixes?: pulumi.Input<string>;
    dxgwId?: pulumi.Input<string>;
    dxgwOwner?: pulumi.Input<string>;
    dxgwStatus?: pulumi.Input<string>;
    externalTgwConfiguredPrefixes?: pulumi.Input<string>;
    externalTgwId?: pulumi.Input<string>;
    externalTgwOwner?: pulumi.Input<string>;
    externalTgwRegion?: pulumi.Input<string>;
    /**
     * The name of the SDDC group
     */
    name?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    /**
     * A set of the IDs of SDDC members of the SDDC Group
     */
    sddcMemberIds?: pulumi.Input<pulumi.Input<string>[]>;
    tgwId?: pulumi.Input<string>;
    tgwRegion?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SddcGroupTimeouts>;
    timestamp?: pulumi.Input<string>;
    vpcAttachmentStatus?: pulumi.Input<string>;
    vpcAttachments?: pulumi.Input<pulumi.Input<inputs.SddcGroupVpcAttachment>[]>;
    vpcAwsAccount?: pulumi.Input<string>;
    vpcRamShareId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SddcGroup resource.
 */
export interface SddcGroupArgs {
    /**
     * Short description of the SDDC Group
     */
    description: pulumi.Input<string>;
    dxgwAllowedPrefixes?: pulumi.Input<string>;
    dxgwId?: pulumi.Input<string>;
    dxgwOwner?: pulumi.Input<string>;
    dxgwStatus?: pulumi.Input<string>;
    externalTgwConfiguredPrefixes?: pulumi.Input<string>;
    externalTgwId?: pulumi.Input<string>;
    externalTgwOwner?: pulumi.Input<string>;
    externalTgwRegion?: pulumi.Input<string>;
    /**
     * The name of the SDDC group
     */
    name?: pulumi.Input<string>;
    /**
     * A set of the IDs of SDDC members of the SDDC Group
     */
    sddcMemberIds: pulumi.Input<pulumi.Input<string>[]>;
    tgwId?: pulumi.Input<string>;
    tgwRegion?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SddcGroupTimeouts>;
    vpcAttachmentStatus?: pulumi.Input<string>;
    vpcAttachments?: pulumi.Input<pulumi.Input<inputs.SddcGroupVpcAttachment>[]>;
    vpcAwsAccount?: pulumi.Input<string>;
    vpcRamShareId?: pulumi.Input<string>;
}
