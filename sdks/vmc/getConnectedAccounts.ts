// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConnectedAccounts(args: GetConnectedAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectedAccountsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vmc:index/getConnectedAccounts:getConnectedAccounts", {
        "accountNumber": args.accountNumber,
        "providerType": args.providerType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectedAccounts.
 */
export interface GetConnectedAccountsArgs {
    accountNumber: string;
    providerType?: string;
}

/**
 * A collection of values returned by getConnectedAccounts.
 */
export interface GetConnectedAccountsResult {
    readonly accountNumber: string;
    readonly id: string;
    readonly providerType?: string;
}
export function getConnectedAccountsOutput(args: GetConnectedAccountsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectedAccountsResult> {
    return pulumi.output(args).apply((a: any) => getConnectedAccounts(a, opts))
}

/**
 * A collection of arguments for invoking getConnectedAccounts.
 */
export interface GetConnectedAccountsOutputArgs {
    accountNumber: pulumi.Input<string>;
    providerType?: pulumi.Input<string>;
}
