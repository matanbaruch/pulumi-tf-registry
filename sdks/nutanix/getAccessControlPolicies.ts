// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccessControlPolicies(args?: GetAccessControlPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessControlPoliciesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getAccessControlPolicies:getAccessControlPolicies", {
        "id": args.id,
        "metadatas": args.metadatas,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessControlPolicies.
 */
export interface GetAccessControlPoliciesArgs {
    id?: string;
    metadatas?: inputs.GetAccessControlPoliciesMetadata[];
}

/**
 * A collection of values returned by getAccessControlPolicies.
 */
export interface GetAccessControlPoliciesResult {
    readonly apiVersion: string;
    readonly entities: outputs.GetAccessControlPoliciesEntity[];
    readonly id: string;
    readonly metadatas?: outputs.GetAccessControlPoliciesMetadata[];
}
export function getAccessControlPoliciesOutput(args?: GetAccessControlPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessControlPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getAccessControlPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getAccessControlPolicies.
 */
export interface GetAccessControlPoliciesOutputArgs {
    id?: pulumi.Input<string>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.GetAccessControlPoliciesMetadataArgs>[]>;
}
