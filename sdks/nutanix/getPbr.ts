// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPbr(args: GetPbrArgs, opts?: pulumi.InvokeOptions): Promise<GetPbrResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getPbr:getPbr", {
        "id": args.id,
        "pbrUuid": args.pbrUuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPbr.
 */
export interface GetPbrArgs {
    id?: string;
    pbrUuid: string;
}

/**
 * A collection of values returned by getPbr.
 */
export interface GetPbrResult {
    readonly apiVersion: string;
    readonly id: string;
    readonly metadata: {[key: string]: string};
    readonly pbrUuid: string;
    readonly specs: outputs.GetPbrSpec[];
    readonly statuses: outputs.GetPbrStatus[];
}
export function getPbrOutput(args: GetPbrOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPbrResult> {
    return pulumi.output(args).apply((a: any) => getPbr(a, opts))
}

/**
 * A collection of arguments for invoking getPbr.
 */
export interface GetPbrOutputArgs {
    id?: pulumi.Input<string>;
    pbrUuid: pulumi.Input<string>;
}
