// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFoundationCentralImagedNodesList(args?: GetFoundationCentralImagedNodesListArgs, opts?: pulumi.InvokeOptions): Promise<GetFoundationCentralImagedNodesListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getFoundationCentralImagedNodesList:getFoundationCentralImagedNodesList", {
        "filters": args.filters,
        "id": args.id,
        "length": args.length,
        "offset": args.offset,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedNodesList.
 */
export interface GetFoundationCentralImagedNodesListArgs {
    filters?: inputs.GetFoundationCentralImagedNodesListFilters;
    id?: string;
    length?: number;
    offset?: number;
}

/**
 * A collection of values returned by getFoundationCentralImagedNodesList.
 */
export interface GetFoundationCentralImagedNodesListResult {
    readonly filters?: outputs.GetFoundationCentralImagedNodesListFilters;
    readonly id: string;
    readonly imagedNodes: outputs.GetFoundationCentralImagedNodesListImagedNode[];
    readonly length?: number;
    readonly metadatas: outputs.GetFoundationCentralImagedNodesListMetadata[];
    readonly offset?: number;
}
export function getFoundationCentralImagedNodesListOutput(args?: GetFoundationCentralImagedNodesListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFoundationCentralImagedNodesListResult> {
    return pulumi.output(args).apply((a: any) => getFoundationCentralImagedNodesList(a, opts))
}

/**
 * A collection of arguments for invoking getFoundationCentralImagedNodesList.
 */
export interface GetFoundationCentralImagedNodesListOutputArgs {
    filters?: pulumi.Input<inputs.GetFoundationCentralImagedNodesListFiltersArgs>;
    id?: pulumi.Input<string>;
    length?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
}
