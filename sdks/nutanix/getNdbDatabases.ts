// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNdbDatabases(args?: GetNdbDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbDatabasesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbDatabases:getNdbDatabases", {
        "databaseType": args.databaseType,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNdbDatabases.
 */
export interface GetNdbDatabasesArgs {
    databaseType?: string;
    id?: string;
}

/**
 * A collection of values returned by getNdbDatabases.
 */
export interface GetNdbDatabasesResult {
    readonly databaseInstances: outputs.GetNdbDatabasesDatabaseInstance[];
    readonly databaseType?: string;
    readonly id: string;
}
export function getNdbDatabasesOutput(args?: GetNdbDatabasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNdbDatabasesResult> {
    return pulumi.output(args).apply((a: any) => getNdbDatabases(a, opts))
}

/**
 * A collection of arguments for invoking getNdbDatabases.
 */
export interface GetNdbDatabasesOutputArgs {
    databaseType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
