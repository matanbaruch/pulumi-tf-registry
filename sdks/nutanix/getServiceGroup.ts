// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceGroup(args: GetServiceGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getServiceGroup:getServiceGroup", {
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceGroup.
 */
export interface GetServiceGroupArgs {
    id?: string;
    uuid: string;
}

/**
 * A collection of values returned by getServiceGroup.
 */
export interface GetServiceGroupResult {
    readonly description: string;
    readonly id: string;
    readonly isSystemDefined: boolean;
    readonly name: string;
    readonly serviceLists: outputs.GetServiceGroupServiceList[];
    readonly uuid: string;
}
export function getServiceGroupOutput(args: GetServiceGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceGroupResult> {
    return pulumi.output(args).apply((a: any) => getServiceGroup(a, opts))
}

/**
 * A collection of arguments for invoking getServiceGroup.
 */
export interface GetServiceGroupOutputArgs {
    id?: pulumi.Input<string>;
    uuid: pulumi.Input<string>;
}
