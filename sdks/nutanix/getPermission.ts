// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPermission(args?: GetPermissionArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getPermission:getPermission", {
        "categories": args.categories,
        "id": args.id,
        "permissionId": args.permissionId,
        "permissionName": args.permissionName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPermission.
 */
export interface GetPermissionArgs {
    categories?: inputs.GetPermissionCategory[];
    id?: string;
    permissionId?: string;
    permissionName?: string;
}

/**
 * A collection of values returned by getPermission.
 */
export interface GetPermissionResult {
    readonly apiVersion: string;
    readonly categories?: outputs.GetPermissionCategory[];
    readonly description: string;
    readonly fields: outputs.GetPermissionField[];
    readonly id: string;
    readonly kind: string;
    readonly metadata: {[key: string]: string};
    readonly name: string;
    readonly operation: string;
    readonly ownerReference: {[key: string]: string};
    readonly permissionId?: string;
    readonly permissionName?: string;
    readonly projectReference: {[key: string]: string};
    readonly state: string;
}
export function getPermissionOutput(args?: GetPermissionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPermissionResult> {
    return pulumi.output(args).apply((a: any) => getPermission(a, opts))
}

/**
 * A collection of arguments for invoking getPermission.
 */
export interface GetPermissionOutputArgs {
    categories?: pulumi.Input<pulumi.Input<inputs.GetPermissionCategoryArgs>[]>;
    id?: pulumi.Input<string>;
    permissionId?: pulumi.Input<string>;
    permissionName?: pulumi.Input<string>;
}
