// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNdbProfile(args?: GetNdbProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbProfile:getNdbProfile", {
        "engine": args.engine,
        "profileId": args.profileId,
        "profileName": args.profileName,
        "profileType": args.profileType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNdbProfile.
 */
export interface GetNdbProfileArgs {
    engine?: string;
    profileId?: string;
    profileName?: string;
    profileType?: string;
}

/**
 * A collection of values returned by getNdbProfile.
 */
export interface GetNdbProfileResult {
    readonly assocDatabases: string[];
    readonly assocDbServers: string[];
    readonly clusterAvailabilities: outputs.GetNdbProfileClusterAvailability[];
    readonly dbVersion: string;
    readonly description: string;
    readonly engine?: string;
    readonly engineType: string;
    readonly id: string;
    readonly latestVersion: string;
    readonly latestVersionId: string;
    readonly name: string;
    readonly nxClusterId: string;
    readonly owner: string;
    readonly profileId?: string;
    readonly profileName?: string;
    readonly profileType?: string;
    readonly status: string;
    readonly systemProfile: boolean;
    readonly topology: string;
    readonly type: string;
    readonly versions: outputs.GetNdbProfileVersion[];
}
export function getNdbProfileOutput(args?: GetNdbProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNdbProfileResult> {
    return pulumi.output(args).apply((a: any) => getNdbProfile(a, opts))
}

/**
 * A collection of arguments for invoking getNdbProfile.
 */
export interface GetNdbProfileOutputArgs {
    engine?: pulumi.Input<string>;
    profileId?: pulumi.Input<string>;
    profileName?: pulumi.Input<string>;
    profileType?: pulumi.Input<string>;
}
