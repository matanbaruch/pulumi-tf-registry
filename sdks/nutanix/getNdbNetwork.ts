// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNdbNetwork(args?: GetNdbNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbNetwork:getNdbNetwork", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNdbNetwork.
 */
export interface GetNdbNetworkArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getNdbNetwork.
 */
export interface GetNdbNetworkResult {
    readonly clusterId: string;
    readonly id: string;
    readonly ipAddresses: outputs.GetNdbNetworkIpAddress[];
    readonly ipPools: outputs.GetNdbNetworkIpPool[];
    readonly managed: boolean;
    readonly name: string;
    readonly properties: outputs.GetNdbNetworkProperty[];
    readonly propertiesMaps: outputs.GetNdbNetworkPropertiesMap[];
    readonly stretchedVlanId: string;
    readonly type: string;
}
export function getNdbNetworkOutput(args?: GetNdbNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNdbNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNdbNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNdbNetwork.
 */
export interface GetNdbNetworkOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
