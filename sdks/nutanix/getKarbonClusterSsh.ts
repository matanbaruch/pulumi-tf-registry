// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKarbonClusterSsh(args?: GetKarbonClusterSshArgs, opts?: pulumi.InvokeOptions): Promise<GetKarbonClusterSshResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getKarbonClusterSsh:getKarbonClusterSsh", {
        "id": args.id,
        "karbonClusterId": args.karbonClusterId,
        "karbonClusterName": args.karbonClusterName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKarbonClusterSsh.
 */
export interface GetKarbonClusterSshArgs {
    id?: string;
    karbonClusterId?: string;
    karbonClusterName?: string;
}

/**
 * A collection of values returned by getKarbonClusterSsh.
 */
export interface GetKarbonClusterSshResult {
    readonly certificate: string;
    readonly expiryTime: string;
    readonly id: string;
    readonly karbonClusterId?: string;
    readonly karbonClusterName?: string;
    readonly privateKey: string;
    readonly username: string;
}
export function getKarbonClusterSshOutput(args?: GetKarbonClusterSshOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKarbonClusterSshResult> {
    return pulumi.output(args).apply((a: any) => getKarbonClusterSsh(a, opts))
}

/**
 * A collection of arguments for invoking getKarbonClusterSsh.
 */
export interface GetKarbonClusterSshOutputArgs {
    id?: pulumi.Input<string>;
    karbonClusterId?: pulumi.Input<string>;
    karbonClusterName?: pulumi.Input<string>;
}
