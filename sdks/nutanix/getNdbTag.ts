// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNdbTag(args?: GetNdbTagArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbTagResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbTag:getNdbTag", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNdbTag.
 */
export interface GetNdbTagArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getNdbTag.
 */
export interface GetNdbTagResult {
    readonly dateCreated: string;
    readonly dateModified: string;
    readonly description: string;
    readonly entityType: string;
    readonly id: string;
    readonly name: string;
    readonly owner: string;
    readonly required: boolean;
    readonly status: string;
    readonly values: number;
}
export function getNdbTagOutput(args?: GetNdbTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNdbTagResult> {
    return pulumi.output(args).apply((a: any) => getNdbTag(a, opts))
}

/**
 * A collection of arguments for invoking getNdbTag.
 */
export interface GetNdbTagOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
