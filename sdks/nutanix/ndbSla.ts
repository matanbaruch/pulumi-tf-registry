// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NdbSla extends pulumi.CustomResource {
    /**
     * Get an existing NdbSla resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NdbSlaState, opts?: pulumi.CustomResourceOptions): NdbSla {
        return new NdbSla(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanix:index/ndbSla:NdbSla';

    /**
     * Returns true if the given object is an instance of NdbSla.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NdbSla {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NdbSla.__pulumiType;
    }

    public readonly continuousRetention!: pulumi.Output<number | undefined>;
    public /*out*/ readonly currentActiveFrequency!: pulumi.Output<string>;
    public readonly dailyRetention!: pulumi.Output<number | undefined>;
    public /*out*/ readonly dateCreated!: pulumi.Output<string>;
    public /*out*/ readonly dateModified!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly monthlyRetention!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    public /*out*/ readonly pitrEnabled!: pulumi.Output<boolean>;
    public readonly quarterlyRetention!: pulumi.Output<number | undefined>;
    public /*out*/ readonly referenceCount!: pulumi.Output<number>;
    public /*out*/ readonly systemSla!: pulumi.Output<boolean>;
    public /*out*/ readonly uniqueName!: pulumi.Output<string>;
    public readonly weeklyRetention!: pulumi.Output<number | undefined>;
    public readonly yearlyRetention!: pulumi.Output<number>;

    /**
     * Create a NdbSla resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NdbSlaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NdbSlaArgs | NdbSlaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NdbSlaState | undefined;
            resourceInputs["continuousRetention"] = state ? state.continuousRetention : undefined;
            resourceInputs["currentActiveFrequency"] = state ? state.currentActiveFrequency : undefined;
            resourceInputs["dailyRetention"] = state ? state.dailyRetention : undefined;
            resourceInputs["dateCreated"] = state ? state.dateCreated : undefined;
            resourceInputs["dateModified"] = state ? state.dateModified : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["monthlyRetention"] = state ? state.monthlyRetention : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["pitrEnabled"] = state ? state.pitrEnabled : undefined;
            resourceInputs["quarterlyRetention"] = state ? state.quarterlyRetention : undefined;
            resourceInputs["referenceCount"] = state ? state.referenceCount : undefined;
            resourceInputs["systemSla"] = state ? state.systemSla : undefined;
            resourceInputs["uniqueName"] = state ? state.uniqueName : undefined;
            resourceInputs["weeklyRetention"] = state ? state.weeklyRetention : undefined;
            resourceInputs["yearlyRetention"] = state ? state.yearlyRetention : undefined;
        } else {
            const args = argsOrState as NdbSlaArgs | undefined;
            resourceInputs["continuousRetention"] = args ? args.continuousRetention : undefined;
            resourceInputs["dailyRetention"] = args ? args.dailyRetention : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["monthlyRetention"] = args ? args.monthlyRetention : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["quarterlyRetention"] = args ? args.quarterlyRetention : undefined;
            resourceInputs["weeklyRetention"] = args ? args.weeklyRetention : undefined;
            resourceInputs["yearlyRetention"] = args ? args.yearlyRetention : undefined;
            resourceInputs["currentActiveFrequency"] = undefined /*out*/;
            resourceInputs["dateCreated"] = undefined /*out*/;
            resourceInputs["dateModified"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["pitrEnabled"] = undefined /*out*/;
            resourceInputs["referenceCount"] = undefined /*out*/;
            resourceInputs["systemSla"] = undefined /*out*/;
            resourceInputs["uniqueName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NdbSla.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NdbSla resources.
 */
export interface NdbSlaState {
    continuousRetention?: pulumi.Input<number>;
    currentActiveFrequency?: pulumi.Input<string>;
    dailyRetention?: pulumi.Input<number>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    ownerId?: pulumi.Input<string>;
    pitrEnabled?: pulumi.Input<boolean>;
    quarterlyRetention?: pulumi.Input<number>;
    referenceCount?: pulumi.Input<number>;
    systemSla?: pulumi.Input<boolean>;
    uniqueName?: pulumi.Input<string>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NdbSla resource.
 */
export interface NdbSlaArgs {
    continuousRetention?: pulumi.Input<number>;
    dailyRetention?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    monthlyRetention?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    quarterlyRetention?: pulumi.Input<number>;
    weeklyRetention?: pulumi.Input<number>;
    yearlyRetention?: pulumi.Input<number>;
}
