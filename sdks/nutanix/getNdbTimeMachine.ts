// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNdbTimeMachine(args?: GetNdbTimeMachineArgs, opts?: pulumi.InvokeOptions): Promise<GetNdbTimeMachineResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanix:index/getNdbTimeMachine:getNdbTimeMachine", {
        "tags": args.tags,
        "timeMachineId": args.timeMachineId,
        "timeMachineName": args.timeMachineName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNdbTimeMachine.
 */
export interface GetNdbTimeMachineArgs {
    tags?: inputs.GetNdbTimeMachineTag[];
    timeMachineId?: string;
    timeMachineName?: string;
}

/**
 * A collection of values returned by getNdbTimeMachine.
 */
export interface GetNdbTimeMachineResult {
    readonly accessLevel: string;
    readonly category: string;
    readonly clone: boolean;
    readonly clones: string;
    readonly clustered: boolean;
    readonly database: string;
    readonly databaseId: string;
    readonly dateCreated: string;
    readonly dateModified: string;
    readonly description: string;
    readonly eaStatus: string;
    readonly id: string;
    readonly internal: boolean;
    readonly metric: string;
    readonly name: string;
    readonly ownerId: string;
    readonly properties: outputs.GetNdbTimeMachineProperty[];
    readonly scheduleId: string;
    readonly schedules: outputs.GetNdbTimeMachineSchedule[];
    readonly scope: string;
    readonly slaId: string;
    readonly slaUpdateInProgress: boolean;
    readonly slaUpdateMetadata: string;
    readonly slas: outputs.GetNdbTimeMachineSla[];
    readonly sourceNxClusters: string[];
    readonly status: string;
    readonly tags?: outputs.GetNdbTimeMachineTag[];
    readonly timeMachineId?: string;
    readonly timeMachineName?: string;
    readonly type: string;
}
export function getNdbTimeMachineOutput(args?: GetNdbTimeMachineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNdbTimeMachineResult> {
    return pulumi.output(args).apply((a: any) => getNdbTimeMachine(a, opts))
}

/**
 * A collection of arguments for invoking getNdbTimeMachine.
 */
export interface GetNdbTimeMachineOutputArgs {
    tags?: pulumi.Input<pulumi.Input<inputs.GetNdbTimeMachineTagArgs>[]>;
    timeMachineId?: pulumi.Input<string>;
    timeMachineName?: pulumi.Input<string>;
}
