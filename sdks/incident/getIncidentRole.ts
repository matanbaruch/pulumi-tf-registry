// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIncidentRole(args: GetIncidentRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetIncidentRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("incident:index/getIncidentRole:getIncidentRole", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIncidentRole.
 */
export interface GetIncidentRoleArgs {
    id: string;
}

/**
 * A collection of values returned by getIncidentRole.
 */
export interface GetIncidentRoleResult {
    readonly description: string;
    readonly id: string;
    readonly instructions: string;
    readonly name: string;
    readonly shortform: string;
}
export function getIncidentRoleOutput(args: GetIncidentRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIncidentRoleResult> {
    return pulumi.output(args).apply((a: any) => getIncidentRole(a, opts))
}

/**
 * A collection of arguments for invoking getIncidentRole.
 */
export interface GetIncidentRoleOutputArgs {
    id: pulumi.Input<string>;
}
