// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContactLists(args: GetContactListsArgs, opts?: pulumi.InvokeOptions): Promise<GetContactListsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("constellix:index/getContactLists:getContactLists", {
        "emailAddresses": args.emailAddresses,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContactLists.
 */
export interface GetContactListsArgs {
    emailAddresses?: string[];
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getContactLists.
 */
export interface GetContactListsResult {
    readonly emailAddresses: string[];
    readonly id: string;
    readonly name: string;
}
export function getContactListsOutput(args: GetContactListsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContactListsResult> {
    return pulumi.output(args).apply((a: any) => getContactLists(a, opts))
}

/**
 * A collection of arguments for invoking getContactLists.
 */
export interface GetContactListsOutputArgs {
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
