// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGeoFilter(args: GetGeoFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetGeoFilterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("constellix:index/getGeoFilter:getGeoFilter", {
        "asns": args.asns,
        "filterruleslimit": args.filterruleslimit,
        "geoipcontinents": args.geoipcontinents,
        "geoipcountries": args.geoipcountries,
        "geoipregions": args.geoipregions,
        "id": args.id,
        "ipv4s": args.ipv4s,
        "ipv6s": args.ipv6s,
        "name": args.name,
        "regions": args.regions,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGeoFilter.
 */
export interface GetGeoFilterArgs {
    asns?: number[];
    filterruleslimit?: number;
    geoipcontinents?: string[];
    geoipcountries?: string[];
    geoipregions?: string[];
    id?: string;
    ipv4s?: string[];
    ipv6s?: string[];
    name: string;
    regions?: {[key: string]: string};
}

/**
 * A collection of values returned by getGeoFilter.
 */
export interface GetGeoFilterResult {
    readonly asns: number[];
    readonly filterruleslimit: number;
    readonly geoipcontinents: string[];
    readonly geoipcountries: string[];
    readonly geoipregions: string[];
    readonly id: string;
    readonly ipv4s: string[];
    readonly ipv6s: string[];
    readonly name: string;
    readonly regions: {[key: string]: string};
}
export function getGeoFilterOutput(args: GetGeoFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGeoFilterResult> {
    return pulumi.output(args).apply((a: any) => getGeoFilter(a, opts))
}

/**
 * A collection of arguments for invoking getGeoFilter.
 */
export interface GetGeoFilterOutputArgs {
    asns?: pulumi.Input<pulumi.Input<number>[]>;
    filterruleslimit?: pulumi.Input<number>;
    geoipcontinents?: pulumi.Input<pulumi.Input<string>[]>;
    geoipcountries?: pulumi.Input<pulumi.Input<string>[]>;
    geoipregions?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    ipv4s?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6s?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    regions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
