// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGeoProximity(args: GetGeoProximityArgs, opts?: pulumi.InvokeOptions): Promise<GetGeoProximityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("constellix:index/getGeoProximity:getGeoProximity", {
        "city": args.city,
        "country": args.country,
        "id": args.id,
        "latitude": args.latitude,
        "longitude": args.longitude,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGeoProximity.
 */
export interface GetGeoProximityArgs {
    city?: number;
    country?: string;
    id?: string;
    latitude?: number;
    longitude?: number;
    name: string;
    region?: string;
}

/**
 * A collection of values returned by getGeoProximity.
 */
export interface GetGeoProximityResult {
    readonly city: number;
    readonly country: string;
    readonly id: string;
    readonly latitude: number;
    readonly longitude: number;
    readonly name: string;
    readonly region: string;
}
export function getGeoProximityOutput(args: GetGeoProximityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGeoProximityResult> {
    return pulumi.output(args).apply((a: any) => getGeoProximity(a, opts))
}

/**
 * A collection of arguments for invoking getGeoProximity.
 */
export interface GetGeoProximityOutputArgs {
    city?: pulumi.Input<number>;
    country?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    latitude?: pulumi.Input<number>;
    longitude?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
