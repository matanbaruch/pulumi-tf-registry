// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVanityNameserver(args: GetVanityNameserverArgs, opts?: pulumi.InvokeOptions): Promise<GetVanityNameserverResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("constellix:index/getVanityNameserver:getVanityNameserver", {
        "id": args.id,
        "isDefault": args.isDefault,
        "isPublic": args.isPublic,
        "name": args.name,
        "nameserverGroup": args.nameserverGroup,
        "nameserverGroupName": args.nameserverGroupName,
        "nameserverListString": args.nameserverListString,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVanityNameserver.
 */
export interface GetVanityNameserverArgs {
    id?: string;
    isDefault?: boolean;
    isPublic?: boolean;
    name: string;
    nameserverGroup?: number;
    nameserverGroupName?: string;
    nameserverListString?: string;
}

/**
 * A collection of values returned by getVanityNameserver.
 */
export interface GetVanityNameserverResult {
    readonly id: string;
    readonly isDefault: boolean;
    readonly isPublic: boolean;
    readonly name: string;
    readonly nameserverGroup: number;
    readonly nameserverGroupName: string;
    readonly nameserverListString: string;
}
export function getVanityNameserverOutput(args: GetVanityNameserverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVanityNameserverResult> {
    return pulumi.output(args).apply((a: any) => getVanityNameserver(a, opts))
}

/**
 * A collection of arguments for invoking getVanityNameserver.
 */
export interface GetVanityNameserverOutputArgs {
    id?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    isPublic?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    nameserverGroup?: pulumi.Input<number>;
    nameserverGroupName?: pulumi.Input<string>;
    nameserverListString?: pulumi.Input<string>;
}
