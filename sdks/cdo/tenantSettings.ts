// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TenantSettings extends pulumi.CustomResource {
    /**
     * Get an existing TenantSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TenantSettingsState, opts?: pulumi.CustomResourceOptions): TenantSettings {
        return new TenantSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cdo:index/tenantSettings:TenantSettings';

    /**
     * Returns true if the given object is an instance of TenantSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TenantSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TenantSettings.__pulumiType;
    }

    /**
     * This attribute indicates whether auto accept device changes is enabled for the tenant
     */
    public readonly autoAcceptDeviceChangesEnabled!: pulumi.Output<boolean>;
    /**
     * This attribute indicates whether change request support is enabled for the tenant
     */
    public readonly autoDiscoverOnPremFmcsEnabled!: pulumi.Output<boolean>;
    /**
     * This attribute indicates whether change request support is enabled for the tenant
     */
    public readonly changeRequestSupportEnabled!: pulumi.Output<boolean>;
    /**
     * The interval used by CDO to detect conflicts on devices
     */
    public readonly conflictDetectionInterval!: pulumi.Output<string>;
    /**
     * This attribute indicates whether denying cisco support engineers access to the tenant is enabled
     */
    public readonly denyCiscoSupportAccessToTenantEnabled!: pulumi.Output<boolean>;
    /**
     * This attribute indicates whether multi cloud defense is enabled for the tenant
     */
    public readonly multiCloudDefenseEnabled!: pulumi.Output<boolean>;
    /**
     * This attribute indicates whether scheduled deployments is enabled for the tenant
     */
    public readonly scheduledDeploymentsEnabled!: pulumi.Output<boolean>;
    /**
     * This attribute indicates whether web analytics is enabled for the tenant
     */
    public readonly webAnalyticsEnabled!: pulumi.Output<boolean>;

    /**
     * Create a TenantSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TenantSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TenantSettingsArgs | TenantSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TenantSettingsState | undefined;
            resourceInputs["autoAcceptDeviceChangesEnabled"] = state ? state.autoAcceptDeviceChangesEnabled : undefined;
            resourceInputs["autoDiscoverOnPremFmcsEnabled"] = state ? state.autoDiscoverOnPremFmcsEnabled : undefined;
            resourceInputs["changeRequestSupportEnabled"] = state ? state.changeRequestSupportEnabled : undefined;
            resourceInputs["conflictDetectionInterval"] = state ? state.conflictDetectionInterval : undefined;
            resourceInputs["denyCiscoSupportAccessToTenantEnabled"] = state ? state.denyCiscoSupportAccessToTenantEnabled : undefined;
            resourceInputs["multiCloudDefenseEnabled"] = state ? state.multiCloudDefenseEnabled : undefined;
            resourceInputs["scheduledDeploymentsEnabled"] = state ? state.scheduledDeploymentsEnabled : undefined;
            resourceInputs["webAnalyticsEnabled"] = state ? state.webAnalyticsEnabled : undefined;
        } else {
            const args = argsOrState as TenantSettingsArgs | undefined;
            resourceInputs["autoAcceptDeviceChangesEnabled"] = args ? args.autoAcceptDeviceChangesEnabled : undefined;
            resourceInputs["autoDiscoverOnPremFmcsEnabled"] = args ? args.autoDiscoverOnPremFmcsEnabled : undefined;
            resourceInputs["changeRequestSupportEnabled"] = args ? args.changeRequestSupportEnabled : undefined;
            resourceInputs["conflictDetectionInterval"] = args ? args.conflictDetectionInterval : undefined;
            resourceInputs["denyCiscoSupportAccessToTenantEnabled"] = args ? args.denyCiscoSupportAccessToTenantEnabled : undefined;
            resourceInputs["multiCloudDefenseEnabled"] = args ? args.multiCloudDefenseEnabled : undefined;
            resourceInputs["scheduledDeploymentsEnabled"] = args ? args.scheduledDeploymentsEnabled : undefined;
            resourceInputs["webAnalyticsEnabled"] = args ? args.webAnalyticsEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TenantSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TenantSettings resources.
 */
export interface TenantSettingsState {
    /**
     * This attribute indicates whether auto accept device changes is enabled for the tenant
     */
    autoAcceptDeviceChangesEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether change request support is enabled for the tenant
     */
    autoDiscoverOnPremFmcsEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether change request support is enabled for the tenant
     */
    changeRequestSupportEnabled?: pulumi.Input<boolean>;
    /**
     * The interval used by CDO to detect conflicts on devices
     */
    conflictDetectionInterval?: pulumi.Input<string>;
    /**
     * This attribute indicates whether denying cisco support engineers access to the tenant is enabled
     */
    denyCiscoSupportAccessToTenantEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether multi cloud defense is enabled for the tenant
     */
    multiCloudDefenseEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether scheduled deployments is enabled for the tenant
     */
    scheduledDeploymentsEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether web analytics is enabled for the tenant
     */
    webAnalyticsEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a TenantSettings resource.
 */
export interface TenantSettingsArgs {
    /**
     * This attribute indicates whether auto accept device changes is enabled for the tenant
     */
    autoAcceptDeviceChangesEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether change request support is enabled for the tenant
     */
    autoDiscoverOnPremFmcsEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether change request support is enabled for the tenant
     */
    changeRequestSupportEnabled?: pulumi.Input<boolean>;
    /**
     * The interval used by CDO to detect conflicts on devices
     */
    conflictDetectionInterval?: pulumi.Input<string>;
    /**
     * This attribute indicates whether denying cisco support engineers access to the tenant is enabled
     */
    denyCiscoSupportAccessToTenantEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether multi cloud defense is enabled for the tenant
     */
    multiCloudDefenseEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether scheduled deployments is enabled for the tenant
     */
    scheduledDeploymentsEnabled?: pulumi.Input<boolean>;
    /**
     * This attribute indicates whether web analytics is enabled for the tenant
     */
    webAnalyticsEnabled?: pulumi.Input<boolean>;
}
