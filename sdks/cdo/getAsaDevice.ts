// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAsaDevice(args: GetAsaDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetAsaDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cdo:index/getAsaDevice:getAsaDevice", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAsaDevice.
 */
export interface GetAsaDeviceArgs {
    name: string;
}

/**
 * A collection of values returned by getAsaDevice.
 */
export interface GetAsaDeviceResult {
    readonly connectorType: string;
    readonly groupedLabels: {[key: string]: string[]};
    readonly host: string;
    readonly id: string;
    readonly ignoreCertificate: boolean;
    readonly labels: string[];
    readonly name: string;
    readonly port: number;
    readonly sdcName: string;
    readonly socketAddress: string;
}
export function getAsaDeviceOutput(args: GetAsaDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAsaDeviceResult> {
    return pulumi.output(args).apply((a: any) => getAsaDevice(a, opts))
}

/**
 * A collection of arguments for invoking getAsaDevice.
 */
export interface GetAsaDeviceOutputArgs {
    name: pulumi.Input<string>;
}
