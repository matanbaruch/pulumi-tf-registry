// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFtdDevice(args: GetFtdDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetFtdDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cdo:index/getFtdDevice:getFtdDevice", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFtdDevice.
 */
export interface GetFtdDeviceArgs {
    name: string;
}

/**
 * A collection of values returned by getFtdDevice.
 */
export interface GetFtdDeviceResult {
    readonly accessPolicyId: string;
    readonly accessPolicyName: string;
    readonly generatedCommand: string;
    readonly groupedLabels: {[key: string]: string[]};
    readonly hostname: string;
    readonly id: string;
    readonly labels: string[];
    readonly licenses: string[];
    readonly name: string;
    readonly natId: string;
    readonly performanceTier: string;
    readonly regKey: string;
    readonly virtual: boolean;
}
export function getFtdDeviceOutput(args: GetFtdDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFtdDeviceResult> {
    return pulumi.output(args).apply((a: any) => getFtdDevice(a, opts))
}

/**
 * A collection of arguments for invoking getFtdDevice.
 */
export interface GetFtdDeviceOutputArgs {
    name: pulumi.Input<string>;
}
