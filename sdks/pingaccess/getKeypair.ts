// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeypair(args: GetKeypairArgs, opts?: pulumi.InvokeOptions): Promise<GetKeypairResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingaccess:index/getKeypair:getKeypair", {
        "alias": args.alias,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeypair.
 */
export interface GetKeypairArgs {
    alias: string;
    id?: string;
}

/**
 * A collection of values returned by getKeypair.
 */
export interface GetKeypairResult {
    readonly alias: string;
    readonly chainCertificates: outputs.GetKeypairChainCertificate[];
    readonly csrPending: boolean;
    readonly expires: number;
    readonly hsmProviderId: number;
    readonly id: string;
    readonly issuerDn: string;
    readonly md5sum: string;
    readonly serialNumber: string;
    readonly sha1sum: string;
    readonly signatureAlgorithm: string;
    readonly status: string;
    readonly subjectCn: string;
    readonly subjectDn: string;
    readonly validFrom: number;
}
export function getKeypairOutput(args: GetKeypairOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeypairResult> {
    return pulumi.output(args).apply((a: any) => getKeypair(a, opts))
}

/**
 * A collection of arguments for invoking getKeypair.
 */
export interface GetKeypairOutputArgs {
    alias: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
