// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AcmeServerAcmeAccount {
    /**
     * The id of the associated resource. When both id and location are specified, id takes precedence and location is ignored.
     */
    id: string;
    /**
     * An absolute path to the associated resource.
     */
    location: string;
}

export interface ApplicationIdentityMappingIds {
    /**
     * Identity mapping ID for api application.
     */
    api?: string;
    /**
     * Identity mapping ID for web application.
     */
    web?: string;
}

export interface ApplicationPolicy {
    /**
     * List of Rule/RuleSets to be applied.
     */
    apis?: outputs.ApplicationPolicyApi[];
    /**
     * List of Rule/RuleSets to be applied.
     */
    webs?: outputs.ApplicationPolicyWeb[];
}

export interface ApplicationPolicyApi {
    /**
     * The ID of the specific rule or ruleset.
     */
    id: string;
    /**
     * If this is either a `Rule` or `RuleSet`.
     */
    type: string;
}

export interface ApplicationPolicyWeb {
    /**
     * The ID of the specific rule or ruleset.
     */
    id: string;
    /**
     * If this is either a `Rule` or `RuleSet`.
     */
    type: string;
}

export interface ApplicationResourcePathPattern {
    /**
     * The path-matching pattern, relative to the Application context root (interpreted according to the pattern 'type').
     */
    pattern: string;
    /**
     * The pattern syntax type.
     */
    type: string;
}

export interface ApplicationResourcePolicy {
    /**
     * List of Rule/RuleSets to be applied.
     */
    apis?: outputs.ApplicationResourcePolicyApi[];
    /**
     * List of Rule/RuleSets to be applied.
     */
    webs?: outputs.ApplicationResourcePolicyWeb[];
}

export interface ApplicationResourcePolicyApi {
    /**
     * The ID of the specific rule or ruleset.
     */
    id: string;
    /**
     * If this is either a `Rule` or `RuleSet`.
     */
    type: string;
}

export interface ApplicationResourcePolicyWeb {
    /**
     * The ID of the specific rule or ruleset.
     */
    id: string;
    /**
     * If this is either a `Rule` or `RuleSet`.
     */
    type: string;
}

export interface ApplicationResourceResourceTypeConfiguration {
    /**
     * The path-matching pattern, relative to the Application context root (interpreted according to the pattern 'type').
     */
    responseGenerators: outputs.ApplicationResourceResourceTypeConfigurationResponseGenerator[];
}

export interface ApplicationResourceResourceTypeConfigurationResponseGenerator {
    /**
     * The response generator's class name.
     */
    className: string;
    /**
     * The response generator's configuration data.
     */
    configuration?: string;
}

export interface GetKeypairChainCertificate {
    alias: string;
    expires: number;
    issuerDn: string;
    md5sum: string;
    serialNumber: string;
    sha1sum: string;
    signatureAlgorithm: string;
    status: string;
    subjectCn: string;
    subjectDn: string;
    validFrom: number;
}

export interface KeypairChainCertificate {
    alias: string;
    expires: number;
    issuerDn: string;
    md5sum: string;
    serialNumber: string;
    sha1sum: string;
    signatureAlgorithm: string;
    status: string;
    subjectCn: string;
    subjectDn: string;
    validFrom: number;
}

export interface OauthServerClientCredentials {
    /**
     * Specify the client ID.
     */
    clientId: string;
    /**
     * Specify the client secret.
     */
    clientSecret?: outputs.OauthServerClientCredentialsClientSecret;
    /**
     * Specify the credential type.
     */
    credentialsType?: string;
    /**
     * Specify the ID of a key pair to use for mutual TLS.
     */
    keyPairId?: number;
}

export interface OauthServerClientCredentialsClientSecret {
    /**
     * encrypted value of the field, as originally returned by the API.
     */
    encryptedValue: string;
    /**
     * The value of the field. This field takes precedence over the encryptedValue field, if both are specified.
     */
    value?: string;
}

export interface PingfederateAdminAdminPassword {
    /**
     * encrypted value of the field, as originally returned by the API.
     */
    encryptedValue: string;
    /**
     * The value of the field. This field takes precedence over the encryptedValue field, if both are specified.
     */
    value?: string;
}

export interface PingfederateOauthClientCredentials {
    /**
     * Specify the client ID.
     */
    clientId: string;
    /**
     * Specify the client secret.
     */
    clientSecret?: outputs.PingfederateOauthClientCredentialsClientSecret;
    /**
     * Specify the credential type.
     */
    credentialsType?: string;
    /**
     * Specify the ID of a key pair to use for mutual TLS.
     */
    keyPairId?: number;
}

export interface PingfederateOauthClientCredentialsClientSecret {
    /**
     * encrypted value of the field, as originally returned by the API.
     */
    encryptedValue: string;
    /**
     * The value of the field. This field takes precedence over the encryptedValue field, if both are specified.
     */
    value?: string;
}

export interface PingfederateOauthClientSecret {
    /**
     * encrypted value of the field, as originally returned by the API.
     */
    encryptedValue: string;
    /**
     * The value of the field. This field takes precedence over the encryptedValue field, if both are specified.
     */
    value?: string;
}

export interface PingfederateRuntimeApplication {
    additionalVirtualHostIds?: number[];
    caseSensitive?: boolean;
    clientCertHeaderNames?: string[];
    contextRoot?: string;
    /**
     * List of Rule/RuleSets to be applied.
     */
    policies?: outputs.PingfederateRuntimeApplicationPolicy[];
    primaryVirtualHostId: number;
}

export interface PingfederateRuntimeApplicationPolicy {
    /**
     * The ID of the specific rule or ruleset.
     */
    id: string;
    /**
     * If this is either a `Rule` or `RuleSet`.
     */
    type: string;
}

export interface WebsessionClientCredentials {
    /**
     * Specify the client ID.
     */
    clientId: string;
    /**
     * Specify the client secret.
     */
    clientSecret?: outputs.WebsessionClientCredentialsClientSecret;
    /**
     * Specify the credential type.
     */
    credentialsType?: string;
    /**
     * Specify the ID of a key pair to use for mutual TLS.
     */
    keyPairId?: number;
}

export interface WebsessionClientCredentialsClientSecret {
    /**
     * encrypted value of the field, as originally returned by the API.
     */
    encryptedValue: string;
    /**
     * The value of the field. This field takes precedence over the encryptedValue field, if both are specified.
     */
    value?: string;
}

