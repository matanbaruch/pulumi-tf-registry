// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PingfederateOauth extends pulumi.CustomResource {
    /**
     * Get an existing PingfederateOauth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PingfederateOauthState, opts?: pulumi.CustomResourceOptions): PingfederateOauth {
        return new PingfederateOauth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingaccess:index/pingfederateOauth:PingfederateOauth';

    /**
     * Returns true if the given object is an instance of PingfederateOauth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PingfederateOauth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PingfederateOauth.__pulumiType;
    }

    /**
     * The Access Validator Id. This field is read-only.
     */
    public readonly accessValidatorId!: pulumi.Output<number | undefined>;
    /**
     * Enable to retain token details for subsequent requests.
     */
    public readonly cacheTokens!: pulumi.Output<boolean | undefined>;
    /**
     * Specify the credentials for the OAuth client configured in PingFederate.
     */
    public readonly clientCredentials!: pulumi.Output<outputs.PingfederateOauthClientCredentials | undefined>;
    /**
     * The Client ID which PingAccess should use when requesting PingFederate to validate access tokens. The client must have
     * Access Token Validation grant type allowed.
     *
     * @deprecated Deprecated
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * The Client Secret for the Client ID.
     *
     * @deprecated Deprecated
     */
    public readonly clientSecret!: pulumi.Output<outputs.PingfederateOauthClientSecret | undefined>;
    /**
     * The unique Access Validator name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable to send the URI the user requested as the 'aud' OAuth parameter for PingAccess to use to select an Access Token
     * Manager.
     */
    public readonly sendAudience!: pulumi.Output<boolean | undefined>;
    /**
     * The attribute you want to use from the OAuth access token as the subject for auditing purposes.
     */
    public readonly subjectAttributeName!: pulumi.Output<string>;
    /**
     * Defines the number of seconds to cache the access token. -1 means no limit. This value should be less than the
     * PingFederate Token Lifetime.
     */
    public readonly tokenTimeToLiveSeconds!: pulumi.Output<number | undefined>;
    /**
     * Specify if token introspection is enabled.
     */
    public readonly useTokenIntrospection!: pulumi.Output<boolean | undefined>;

    /**
     * Create a PingfederateOauth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PingfederateOauthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PingfederateOauthArgs | PingfederateOauthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PingfederateOauthState | undefined;
            resourceInputs["accessValidatorId"] = state ? state.accessValidatorId : undefined;
            resourceInputs["cacheTokens"] = state ? state.cacheTokens : undefined;
            resourceInputs["clientCredentials"] = state ? state.clientCredentials : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sendAudience"] = state ? state.sendAudience : undefined;
            resourceInputs["subjectAttributeName"] = state ? state.subjectAttributeName : undefined;
            resourceInputs["tokenTimeToLiveSeconds"] = state ? state.tokenTimeToLiveSeconds : undefined;
            resourceInputs["useTokenIntrospection"] = state ? state.useTokenIntrospection : undefined;
        } else {
            const args = argsOrState as PingfederateOauthArgs | undefined;
            if ((!args || args.subjectAttributeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subjectAttributeName'");
            }
            resourceInputs["accessValidatorId"] = args ? args.accessValidatorId : undefined;
            resourceInputs["cacheTokens"] = args ? args.cacheTokens : undefined;
            resourceInputs["clientCredentials"] = args ? args.clientCredentials : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args ? args.clientSecret : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sendAudience"] = args ? args.sendAudience : undefined;
            resourceInputs["subjectAttributeName"] = args ? args.subjectAttributeName : undefined;
            resourceInputs["tokenTimeToLiveSeconds"] = args ? args.tokenTimeToLiveSeconds : undefined;
            resourceInputs["useTokenIntrospection"] = args ? args.useTokenIntrospection : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PingfederateOauth.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PingfederateOauth resources.
 */
export interface PingfederateOauthState {
    /**
     * The Access Validator Id. This field is read-only.
     */
    accessValidatorId?: pulumi.Input<number>;
    /**
     * Enable to retain token details for subsequent requests.
     */
    cacheTokens?: pulumi.Input<boolean>;
    /**
     * Specify the credentials for the OAuth client configured in PingFederate.
     */
    clientCredentials?: pulumi.Input<inputs.PingfederateOauthClientCredentials>;
    /**
     * The Client ID which PingAccess should use when requesting PingFederate to validate access tokens. The client must have
     * Access Token Validation grant type allowed.
     *
     * @deprecated Deprecated
     */
    clientId?: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID.
     *
     * @deprecated Deprecated
     */
    clientSecret?: pulumi.Input<inputs.PingfederateOauthClientSecret>;
    /**
     * The unique Access Validator name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable to send the URI the user requested as the 'aud' OAuth parameter for PingAccess to use to select an Access Token
     * Manager.
     */
    sendAudience?: pulumi.Input<boolean>;
    /**
     * The attribute you want to use from the OAuth access token as the subject for auditing purposes.
     */
    subjectAttributeName?: pulumi.Input<string>;
    /**
     * Defines the number of seconds to cache the access token. -1 means no limit. This value should be less than the
     * PingFederate Token Lifetime.
     */
    tokenTimeToLiveSeconds?: pulumi.Input<number>;
    /**
     * Specify if token introspection is enabled.
     */
    useTokenIntrospection?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a PingfederateOauth resource.
 */
export interface PingfederateOauthArgs {
    /**
     * The Access Validator Id. This field is read-only.
     */
    accessValidatorId?: pulumi.Input<number>;
    /**
     * Enable to retain token details for subsequent requests.
     */
    cacheTokens?: pulumi.Input<boolean>;
    /**
     * Specify the credentials for the OAuth client configured in PingFederate.
     */
    clientCredentials?: pulumi.Input<inputs.PingfederateOauthClientCredentials>;
    /**
     * The Client ID which PingAccess should use when requesting PingFederate to validate access tokens. The client must have
     * Access Token Validation grant type allowed.
     *
     * @deprecated Deprecated
     */
    clientId?: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID.
     *
     * @deprecated Deprecated
     */
    clientSecret?: pulumi.Input<inputs.PingfederateOauthClientSecret>;
    /**
     * The unique Access Validator name.
     */
    name?: pulumi.Input<string>;
    /**
     * Enable to send the URI the user requested as the 'aud' OAuth parameter for PingAccess to use to select an Access Token
     * Manager.
     */
    sendAudience?: pulumi.Input<boolean>;
    /**
     * The attribute you want to use from the OAuth access token as the subject for auditing purposes.
     */
    subjectAttributeName: pulumi.Input<string>;
    /**
     * Defines the number of seconds to cache the access token. -1 means no limit. This value should be less than the
     * PingFederate Token Lifetime.
     */
    tokenTimeToLiveSeconds?: pulumi.Input<number>;
    /**
     * Specify if token introspection is enabled.
     */
    useTokenIntrospection?: pulumi.Input<boolean>;
}
