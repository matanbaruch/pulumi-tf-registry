// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewalls(args?: GetFirewallsArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcloud:index/getFirewalls:getFirewalls", {
        "id": args.id,
        "mostRecent": args.mostRecent,
        "withSelector": args.withSelector,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewalls.
 */
export interface GetFirewallsArgs {
    id?: string;
    mostRecent?: boolean;
    withSelector?: string;
}

/**
 * A collection of values returned by getFirewalls.
 */
export interface GetFirewallsResult {
    readonly firewalls: outputs.GetFirewallsFirewall[];
    readonly id: string;
    readonly mostRecent?: boolean;
    readonly withSelector?: string;
}
export function getFirewallsOutput(args?: GetFirewallsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallsResult> {
    return pulumi.output(args).apply((a: any) => getFirewalls(a, opts))
}

/**
 * A collection of arguments for invoking getFirewalls.
 */
export interface GetFirewallsOutputArgs {
    id?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    withSelector?: pulumi.Input<string>;
}
