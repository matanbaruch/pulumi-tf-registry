// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PrimaryIp extends pulumi.CustomResource {
    /**
     * Get an existing PrimaryIp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrimaryIpState, opts?: pulumi.CustomResourceOptions): PrimaryIp {
        return new PrimaryIp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hcloud:index/primaryIp:PrimaryIp';

    /**
     * Returns true if the given object is an instance of PrimaryIp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrimaryIp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrimaryIp.__pulumiType;
    }

    public readonly assigneeId!: pulumi.Output<number>;
    public readonly assigneeType!: pulumi.Output<string>;
    public readonly autoDelete!: pulumi.Output<boolean>;
    public readonly datacenter!: pulumi.Output<string>;
    public readonly deleteProtection!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    public /*out*/ readonly ipNetwork!: pulumi.Output<string>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a PrimaryIp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrimaryIpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrimaryIpArgs | PrimaryIpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrimaryIpState | undefined;
            resourceInputs["assigneeId"] = state ? state.assigneeId : undefined;
            resourceInputs["assigneeType"] = state ? state.assigneeType : undefined;
            resourceInputs["autoDelete"] = state ? state.autoDelete : undefined;
            resourceInputs["datacenter"] = state ? state.datacenter : undefined;
            resourceInputs["deleteProtection"] = state ? state.deleteProtection : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipNetwork"] = state ? state.ipNetwork : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as PrimaryIpArgs | undefined;
            if ((!args || args.assigneeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assigneeType'");
            }
            if ((!args || args.autoDelete === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoDelete'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["assigneeId"] = args ? args.assigneeId : undefined;
            resourceInputs["assigneeType"] = args ? args.assigneeType : undefined;
            resourceInputs["autoDelete"] = args ? args.autoDelete : undefined;
            resourceInputs["datacenter"] = args ? args.datacenter : undefined;
            resourceInputs["deleteProtection"] = args ? args.deleteProtection : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["ipNetwork"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrimaryIp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrimaryIp resources.
 */
export interface PrimaryIpState {
    assigneeId?: pulumi.Input<number>;
    assigneeType?: pulumi.Input<string>;
    autoDelete?: pulumi.Input<boolean>;
    datacenter?: pulumi.Input<string>;
    deleteProtection?: pulumi.Input<boolean>;
    ipAddress?: pulumi.Input<string>;
    ipNetwork?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrimaryIp resource.
 */
export interface PrimaryIpArgs {
    assigneeId?: pulumi.Input<number>;
    assigneeType: pulumi.Input<string>;
    autoDelete: pulumi.Input<boolean>;
    datacenter?: pulumi.Input<string>;
    deleteProtection?: pulumi.Input<boolean>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
