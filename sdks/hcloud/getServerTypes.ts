// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServerTypes(args?: GetServerTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetServerTypesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcloud:index/getServerTypes:getServerTypes", {
        "id": args.id,
        "serverTypeIds": args.serverTypeIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerTypes.
 */
export interface GetServerTypesArgs {
    id?: string;
    /**
     * @deprecated Deprecated
     */
    serverTypeIds?: string[];
}

/**
 * A collection of values returned by getServerTypes.
 */
export interface GetServerTypesResult {
    /**
     * @deprecated Deprecated
     */
    readonly descriptions: string[];
    readonly id: string;
    /**
     * @deprecated Deprecated
     */
    readonly names: string[];
    /**
     * @deprecated Deprecated
     */
    readonly serverTypeIds?: string[];
    readonly serverTypes: outputs.GetServerTypesServerType[];
}
export function getServerTypesOutput(args?: GetServerTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerTypesResult> {
    return pulumi.output(args).apply((a: any) => getServerTypes(a, opts))
}

/**
 * A collection of arguments for invoking getServerTypes.
 */
export interface GetServerTypesOutputArgs {
    id?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    serverTypeIds?: pulumi.Input<pulumi.Input<string>[]>;
}
