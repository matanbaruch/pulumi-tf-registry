// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface FirewallApplyTo {
    labelSelector?: pulumi.Input<string>;
    server?: pulumi.Input<number>;
}

export interface FirewallRule {
    description?: pulumi.Input<string>;
    destinationIps?: pulumi.Input<pulumi.Input<string>[]>;
    direction: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    sourceIps?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFirewallApplyTo {
    labelSelector?: string;
    server?: number;
}

export interface GetFirewallApplyToArgs {
    labelSelector?: pulumi.Input<string>;
    server?: pulumi.Input<number>;
}

export interface GetFirewallRule {
    description?: string;
    destinationIps?: string[];
    direction: string;
    port?: string;
    protocol?: string;
    sourceIps?: string[];
}

export interface GetFirewallRuleArgs {
    description?: pulumi.Input<string>;
    destinationIps?: pulumi.Input<pulumi.Input<string>[]>;
    direction: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    sourceIps?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LoadBalancerAlgorithm {
    type?: pulumi.Input<string>;
}

export interface LoadBalancerServiceHealthCheck {
    http?: pulumi.Input<inputs.LoadBalancerServiceHealthCheckHttp>;
    interval: pulumi.Input<number>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    timeout: pulumi.Input<number>;
}

export interface LoadBalancerServiceHealthCheckHttp {
    domain?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    response?: pulumi.Input<string>;
    statusCodes?: pulumi.Input<pulumi.Input<string>[]>;
    tls?: pulumi.Input<boolean>;
}

export interface LoadBalancerServiceHttp {
    certificates?: pulumi.Input<pulumi.Input<number>[]>;
    cookieLifetime?: pulumi.Input<number>;
    cookieName?: pulumi.Input<string>;
    redirectHttp?: pulumi.Input<boolean>;
    stickySessions?: pulumi.Input<boolean>;
}

export interface LoadBalancerTarget {
    serverId?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    usePrivateIp?: pulumi.Input<boolean>;
}

export interface ServerNetwork {
    aliasIps?: pulumi.Input<pulumi.Input<string>[]>;
    ip?: pulumi.Input<string>;
    macAddress?: pulumi.Input<string>;
    networkId: pulumi.Input<number>;
}

export interface ServerPublicNet {
    ipv4?: pulumi.Input<number>;
    ipv4Enabled?: pulumi.Input<boolean>;
    ipv6?: pulumi.Input<number>;
    ipv6Enabled?: pulumi.Input<boolean>;
}

export interface ServerTimeouts {
    create?: pulumi.Input<string>;
}

export interface SnapshotTimeouts {
    create?: pulumi.Input<string>;
}
