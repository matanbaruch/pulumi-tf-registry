// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFloatingIp(args?: GetFloatingIpArgs, opts?: pulumi.InvokeOptions): Promise<GetFloatingIpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcloud:index/getFloatingIp:getFloatingIp", {
        "id": args.id,
        "ipAddress": args.ipAddress,
        "name": args.name,
        "selector": args.selector,
        "withSelector": args.withSelector,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFloatingIp.
 */
export interface GetFloatingIpArgs {
    id?: number;
    ipAddress?: string;
    name?: string;
    /**
     * @deprecated Deprecated
     */
    selector?: string;
    withSelector?: string;
}

/**
 * A collection of values returned by getFloatingIp.
 */
export interface GetFloatingIpResult {
    readonly deleteProtection: boolean;
    readonly description: string;
    readonly homeLocation: string;
    readonly id: number;
    readonly ipAddress: string;
    readonly ipNetwork: string;
    readonly labels: {[key: string]: string};
    readonly name?: string;
    /**
     * @deprecated Deprecated
     */
    readonly selector?: string;
    readonly serverId: number;
    readonly type: string;
    readonly withSelector?: string;
}
export function getFloatingIpOutput(args?: GetFloatingIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFloatingIpResult> {
    return pulumi.output(args).apply((a: any) => getFloatingIp(a, opts))
}

/**
 * A collection of arguments for invoking getFloatingIp.
 */
export interface GetFloatingIpOutputArgs {
    id?: pulumi.Input<number>;
    ipAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    selector?: pulumi.Input<string>;
    withSelector?: pulumi.Input<string>;
}
