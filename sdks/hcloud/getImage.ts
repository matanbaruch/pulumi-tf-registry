// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getImage(args?: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcloud:index/getImage:getImage", {
        "id": args.id,
        "includeDeprecated": args.includeDeprecated,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "selector": args.selector,
        "withArchitecture": args.withArchitecture,
        "withSelector": args.withSelector,
        "withStatuses": args.withStatuses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    id?: number;
    includeDeprecated?: boolean;
    mostRecent?: boolean;
    name?: string;
    /**
     * @deprecated Deprecated
     */
    selector?: string;
    withArchitecture?: string;
    withSelector?: string;
    withStatuses?: string[];
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    readonly architecture: string;
    readonly created: string;
    readonly deprecated: string;
    readonly description: string;
    readonly id: number;
    readonly includeDeprecated?: boolean;
    readonly labels: {[key: string]: string};
    readonly mostRecent?: boolean;
    readonly name: string;
    readonly osFlavor: string;
    readonly osVersion: string;
    readonly rapidDeploy: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly selector?: string;
    readonly type: string;
    readonly withArchitecture?: string;
    readonly withSelector?: string;
    readonly withStatuses?: string[];
}
export function getImageOutput(args?: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult> {
    return pulumi.output(args).apply((a: any) => getImage(a, opts))
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    id?: pulumi.Input<number>;
    includeDeprecated?: pulumi.Input<boolean>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    selector?: pulumi.Input<string>;
    withArchitecture?: pulumi.Input<string>;
    withSelector?: pulumi.Input<string>;
    withStatuses?: pulumi.Input<pulumi.Input<string>[]>;
}
