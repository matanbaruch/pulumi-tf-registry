// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIngestUrl(args?: GetIngestUrlArgs, opts?: pulumi.InvokeOptions): Promise<GetIngestUrlResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("firehydrant:index/getIngestUrl:getIngestUrl", {
        "escalationPolicyId": args.escalationPolicyId,
        "id": args.id,
        "onCallScheduleId": args.onCallScheduleId,
        "teamId": args.teamId,
        "transposer": args.transposer,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIngestUrl.
 */
export interface GetIngestUrlArgs {
    escalationPolicyId?: string;
    id?: string;
    onCallScheduleId?: string;
    teamId?: string;
    transposer?: string;
    userId?: string;
}

/**
 * A collection of values returned by getIngestUrl.
 */
export interface GetIngestUrlResult {
    readonly escalationPolicyId?: string;
    readonly id: string;
    readonly onCallScheduleId?: string;
    readonly teamId?: string;
    readonly transposer?: string;
    readonly url: string;
    readonly userId?: string;
}
export function getIngestUrlOutput(args?: GetIngestUrlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIngestUrlResult> {
    return pulumi.output(args).apply((a: any) => getIngestUrl(a, opts))
}

/**
 * A collection of arguments for invoking getIngestUrl.
 */
export interface GetIngestUrlOutputArgs {
    escalationPolicyId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    onCallScheduleId?: pulumi.Input<string>;
    teamId?: pulumi.Input<string>;
    transposer?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}
