// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFunctionality(args: GetFunctionalityArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionalityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("firehydrant:index/getFunctionality:getFunctionality", {
        "functionalityId": args.functionalityId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFunctionality.
 */
export interface GetFunctionalityArgs {
    functionalityId: string;
    id?: string;
}

/**
 * A collection of values returned by getFunctionality.
 */
export interface GetFunctionalityResult {
    readonly description: string;
    readonly functionalityId: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly serviceIds: string[];
}
export function getFunctionalityOutput(args: GetFunctionalityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionalityResult> {
    return pulumi.output(args).apply((a: any) => getFunctionality(a, opts))
}

/**
 * A collection of arguments for invoking getFunctionality.
 */
export interface GetFunctionalityOutputArgs {
    functionalityId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
