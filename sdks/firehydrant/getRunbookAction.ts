// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRunbookAction(args: GetRunbookActionArgs, opts?: pulumi.InvokeOptions): Promise<GetRunbookActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("firehydrant:index/getRunbookAction:getRunbookAction", {
        "integrationSlug": args.integrationSlug,
        "slug": args.slug,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRunbookAction.
 */
export interface GetRunbookActionArgs {
    integrationSlug: string;
    slug: string;
    type?: string;
}

/**
 * A collection of values returned by getRunbookAction.
 */
export interface GetRunbookActionResult {
    readonly id: string;
    readonly integrationSlug: string;
    readonly name: string;
    readonly slug: string;
    readonly type?: string;
}
export function getRunbookActionOutput(args: GetRunbookActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRunbookActionResult> {
    return pulumi.output(args).apply((a: any) => getRunbookAction(a, opts))
}

/**
 * A collection of arguments for invoking getRunbookAction.
 */
export interface GetRunbookActionOutputArgs {
    integrationSlug: pulumi.Input<string>;
    slug: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
