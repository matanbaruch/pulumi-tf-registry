// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTaskList(args: GetTaskListArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("firehydrant:index/getTaskList:getTaskList", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTaskList.
 */
export interface GetTaskListArgs {
    id: string;
}

/**
 * A collection of values returned by getTaskList.
 */
export interface GetTaskListResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly taskListItems: outputs.GetTaskListTaskListItem[];
}
export function getTaskListOutput(args: GetTaskListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTaskListResult> {
    return pulumi.output(args).apply((a: any) => getTaskList(a, opts))
}

/**
 * A collection of arguments for invoking getTaskList.
 */
export interface GetTaskListOutputArgs {
    id: pulumi.Input<string>;
}
