// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CloudServerIp {
    assignmentId: string;
    ipAddress: string;
    primary: boolean;
    reverseDns: string;
    type: string;
}

export interface GetCloudImagesFilter {
    key: string;
    values: string[];
}

export interface GetCloudImagesImage {
    architecture: string;
    distribution: string;
    id: string;
    name: string;
    slug: string;
    version: string;
}

export interface GetCloudImagesSort {
    direction?: string;
    key: string;
}

export interface GetCloudServerPlansFilter {
    key: string;
    values: string[];
}

export interface GetCloudServerPlansPlan {
    availableOnTrial: boolean;
    currency: string;
    disk: number;
    id: number;
    name: string;
    price: string;
    ram: number;
    slug: string;
    vcpu: number;
}

export interface GetCloudServerPlansSort {
    direction?: string;
    key: string;
}

export interface GetCloudServerSnapshotAndBackupsFilter {
    key: string;
    values: string[];
}

export interface GetCloudServerSnapshotAndBackupsSnapshotsAndBackup {
    cloudServerDeleted: boolean;
    cloudServerId: string;
    cloudServerName: string;
    createdAt: string;
    id: string;
    name: string;
    size: number;
    state: string;
    type: string;
}

export interface GetCloudServerSnapshotAndBackupsSort {
    direction?: string;
    key: string;
}

export interface GetCloudServersCloudServer {
    backups: boolean;
    createdAt: string;
    datacenter: string;
    disk: number;
    id: string;
    image: string;
    ips: outputs.GetCloudServersCloudServerIp[];
    name: string;
    plan: string;
    privateNetworks: outputs.GetCloudServersCloudServerPrivateNetwork[];
    product: string;
    ram: number;
    state: string;
    usePassword: boolean;
    vcpu: number;
    volumes: string[];
}

export interface GetCloudServersCloudServerIp {
    assignmentId: string;
    ipAddress: string;
    primary: boolean;
    reverseDns: string;
    type: string;
}

export interface GetCloudServersCloudServerPrivateNetwork {
    id: string;
    ip: string;
}

export interface GetCloudServersFilter {
    key: string;
    values: string[];
}

export interface GetCloudServersSort {
    direction?: string;
    key: string;
}

export interface GetDatacentersDatacenter {
    fullName: string;
    id: string;
    name: string;
    regionCountryCode: string;
    regionId: string;
    regionName: string;
    slug: string;
}

export interface GetDatacentersFilter {
    key: string;
    values: string[];
}

export interface GetDatacentersSort {
    direction?: string;
    key: string;
}

export interface GetIpsFilter {
    key: string;
    values: string[];
}

export interface GetIpsIp {
    cloudServerIds: string[];
    createdAt: string;
    datacenter: string;
    id: string;
    ipAddress: string;
    primary: boolean;
    reverseDns: string;
    type: string;
}

export interface GetIpsSort {
    direction?: string;
    key: string;
}

export interface GetPrivateNetworksFilter {
    key: string;
    values: string[];
}

export interface GetPrivateNetworksPrivateNetwork {
    cloudServers: outputs.GetPrivateNetworksPrivateNetworkCloudServer[];
    createdAt: string;
    id: string;
    ipRange: string;
    name: string;
    state: string;
}

export interface GetPrivateNetworksPrivateNetworkCloudServer {
    id: string;
    ip: string;
}

export interface GetPrivateNetworksSort {
    direction?: string;
    key: string;
}

export interface GetSshKeysFilter {
    key: string;
    values: string[];
}

export interface GetSshKeysSort {
    direction?: string;
    key: string;
}

export interface GetSshKeysSshKey {
    createdAt: string;
    fingerprint: string;
    id: string;
    name: string;
    publicKey: string;
}

export interface GetVolumePlansFilter {
    key: string;
    values: string[];
}

export interface GetVolumePlansPlan {
    currency: string;
    datacenterId: string;
    datacenterSlug: string;
    id: number;
    maxSize: number;
    minSize: number;
    name: string;
    price: string;
    slug: string;
}

export interface GetVolumePlansSort {
    direction?: string;
    key: string;
}

export interface GetVolumesFilter {
    key: string;
    values: string[];
}

export interface GetVolumesSort {
    direction?: string;
    key: string;
}

export interface GetVolumesVolume {
    cloudServerId: string;
    createdAt: string;
    fileSystem: string;
    id: string;
    name: string;
    product: string;
    size: number;
    state: string;
}

export interface K8sClusterNodePools {
    autoScale?: boolean;
    createdAt: string;
    id: string;
    labels?: {[key: string]: string};
    maxCount?: number;
    minCount?: number;
    name: string;
    nodesCount?: number;
    privateProperties?: {[key: string]: string};
    publicProperties?: {[key: string]: number};
    type: string;
}

export interface LoadBalancerBackendNode {
    cloudServerId?: string;
    id: string;
}

export interface LoadBalancerForwardingRule {
    communicationPort: number;
    communicationProtocol: string;
    id: string;
    requestPort: number;
    requestProtocol: string;
}

export interface LoadBalancerHealthCheck {
    healthyThreshold: number;
    id: string;
    interval: number;
    port: number;
    timeout: number;
    type: string;
    unhealthyThreshold: number;
    url: string;
}

export interface LoadBalancerIpAddress {
    address: string;
    id: string;
    state: string;
    type: string;
}

export interface LoadBalancerPrivateNetwork {
    id: string;
    state: string;
}

