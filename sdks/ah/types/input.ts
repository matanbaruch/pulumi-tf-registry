// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CloudServerIp {
    assignmentId: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    primary: pulumi.Input<boolean>;
    reverseDns: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetCloudImagesFilter {
    key: string;
    values: string[];
}

export interface GetCloudImagesFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudImagesSort {
    direction?: string;
    key: string;
}

export interface GetCloudImagesSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetCloudServerPlansFilter {
    key: string;
    values: string[];
}

export interface GetCloudServerPlansFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudServerPlansSort {
    direction?: string;
    key: string;
}

export interface GetCloudServerPlansSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetCloudServerSnapshotAndBackupsFilter {
    key: string;
    values: string[];
}

export interface GetCloudServerSnapshotAndBackupsFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudServerSnapshotAndBackupsSort {
    direction?: string;
    key: string;
}

export interface GetCloudServerSnapshotAndBackupsSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetCloudServersFilter {
    key: string;
    values: string[];
}

export interface GetCloudServersFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetCloudServersSort {
    direction?: string;
    key: string;
}

export interface GetCloudServersSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetDatacentersFilter {
    key: string;
    values: string[];
}

export interface GetDatacentersFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatacentersSort {
    direction?: string;
    key: string;
}

export interface GetDatacentersSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetIpsFilter {
    key: string;
    values: string[];
}

export interface GetIpsFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIpsSort {
    direction?: string;
    key: string;
}

export interface GetIpsSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetPrivateNetworksFilter {
    key: string;
    values: string[];
}

export interface GetPrivateNetworksFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPrivateNetworksSort {
    direction?: string;
    key: string;
}

export interface GetPrivateNetworksSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetSshKeysFilter {
    key: string;
    values: string[];
}

export interface GetSshKeysFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSshKeysSort {
    direction?: string;
    key: string;
}

export interface GetSshKeysSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetVolumePlansFilter {
    key: string;
    values: string[];
}

export interface GetVolumePlansFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVolumePlansSort {
    direction?: string;
    key: string;
}

export interface GetVolumePlansSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface GetVolumesFilter {
    key: string;
    values: string[];
}

export interface GetVolumesFilterArgs {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVolumesSort {
    direction?: string;
    key: string;
}

export interface GetVolumesSortArgs {
    direction?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface K8sClusterNodePools {
    autoScale?: pulumi.Input<boolean>;
    createdAt?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    maxCount?: pulumi.Input<number>;
    minCount?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nodesCount?: pulumi.Input<number>;
    privateProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    publicProperties?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    type: pulumi.Input<string>;
}

export interface LoadBalancerBackendNode {
    cloudServerId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}

export interface LoadBalancerForwardingRule {
    communicationPort: pulumi.Input<number>;
    communicationProtocol: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    requestPort: pulumi.Input<number>;
    requestProtocol: pulumi.Input<string>;
}

export interface LoadBalancerHealthCheck {
    healthyThreshold?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    port: pulumi.Input<number>;
    timeout?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    unhealthyThreshold?: pulumi.Input<number>;
    url?: pulumi.Input<string>;
}

export interface LoadBalancerIpAddress {
    address?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface LoadBalancerPrivateNetwork {
    id: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
